v8-version,9,4,146,26,-node.22,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff78e970000,0x7ff792783000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ffc90950000,0x7ffc90b48000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ffc906b0000,0x7ffc9076d000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ffc8e630000,0x7ffc8e8fe000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ffc8f200000,0x7ffc8f26b000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ffc8f0c0000,0x7ffc8f1e5000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ffc8f1f0000,0x7ffc8f1f8000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ffc8e9b0000,0x7ffc8ea5e000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ffc900a0000,0x7ffc9013e000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ffc8ff00000,0x7ffc8ff9c000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ffc90770000,0x7ffc90910000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ffc8e410000,0x7ffc8e432000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ffc8eb40000,0x7ffc8eb6a000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ffc87f50000,0x7ffc88134000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ffc8e1a0000,0x7ffc8e2ab000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ffc8e590000,0x7ffc8e62d000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ffc8e0a0000,0x7ffc8e1a0000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ffc8e2b0000,0x7ffc8e406000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ffc8e070000,0x7ffc8e097000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ffc8d490000,0x7ffc8d4cb000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ffc8df70000,0x7ffc8df9e000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ffc7cad0000,0x7ffc7caf7000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ffc8d960000,0x7ffc8d96c000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ffc8fa60000,0x7ffc8fa90000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7ffc8d5b0000,0x7ffc8d5fb000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7ffc8d470000,0x7ffc8d482000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ffc8b9b0000,0x7ffc8ba4e000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ffc90350000,0x7ffc906a4000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ffc8d7d0000,0x7ffc8d83a000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7ffc8bf30000,0x7ffc8bf42000,0
shared-library,C:\\Windows\\System32\\bcryptPrimitives.dll,0x7ffc8e440000,0x7ffc8e4c2000,0
shared-library-end
tick,0x7ffc909ecfc4,368480,0,0x0,6
profiler,begin,1000
new,CodeRange,0x17e03ac0000,0
new,MemoryChunk,0x1a71b080000,262144
new,MemoryChunk,0x204dc140000,262144
new,MemoryChunk,0x75bc340000,262144
new,MemoryChunk,0x26b7f580000,262144
new,MemoryChunk,0x2d912340000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0x39626a00000,262144
new,MemoryChunk,0x34c84740000,262144
new,MemoryChunk,0x12028f40000,262144
new,MemoryChunk,0x19bc9c40000,262144
new,MemoryChunk,0x118dcd40000,262144
new,MemoryChunk,0x18b86000000,262144
new,MemoryChunk,0x3ba3740000,262144
new,MemoryChunk,0x17e03b00000,262144
new,MemoryChunk,0x2daed0c0000,262144
tick,0x7ff78f15eb05,376462,0,0x0,6
code-creation,Builtin,2,377159,0x7ff78f4d13e4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,377196,0x7ff78f4d1944,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,377221,0x7ff78f4d1b24,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,377247,0x7ff78f4d1da4,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,377266,0x7ff78f4d1e84,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,377292,0x7ff78f4d2004,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,377312,0x7ff78f4d20a4,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,377328,0x7ff78f4d20e4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,377350,0x7ff78f4d2264,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,377373,0x7ff78f4d2424,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,377449,0x7ff78f4d25e4,104,CallBoundFunction
code-creation,Builtin,2,377475,0x7ff78f4d2664,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,377492,0x7ff78f4d26e4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,377503,0x7ff78f4d2764,120,Call_ReceiverIsAny
code-creation,Builtin,2,377513,0x7ff78f4d27e4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,377523,0x7ff78f4d2be4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,377534,0x7ff78f4d2fe4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,377546,0x7ff78f4d3424,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,377570,0x7ff78f4d3864,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,377592,0x7ff78f4d3ca4,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,377604,0x7ff78f4d40e4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,377615,0x7ff78f4d44a4,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,377625,0x7ff78f4d4864,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,377635,0x7ff78f4d4c24,736,CallProxy
code-creation,Builtin,2,377650,0x7ff78f4d4f24,148,CallVarargs
code-creation,Builtin,2,377668,0x7ff78f4d4fc4,944,CallWithSpread
code-creation,Builtin,2,377687,0x7ff78f4d5384,1956,CallWithSpread_Baseline
code-creation,Builtin,2,377699,0x7ff78f4d5b44,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,377712,0x7ff78f4d62e4,864,CallWithArrayLike
code-creation,Builtin,2,377732,0x7ff78f4d6664,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,377759,0x7ff78f4d6d84,156,CallForwardVarargs
code-creation,Builtin,2,377776,0x7ff78f4d6e24,156,CallFunctionForwardVarargs
code-creation,Builtin,2,377789,0x7ff78f4d6ec4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,377803,0x7ff78f4d6f64,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,377818,0x7ff78f4d7064,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,377834,0x7ff78f4d71a4,28,ConstructFunction
code-creation,Builtin,2,377848,0x7ff78f4d71c4,104,ConstructBoundFunction
code-creation,Builtin,2,377862,0x7ff78f4d7244,28,ConstructedNonConstructable
code-creation,Builtin,2,377876,0x7ff78f4d7264,100,Construct
code-creation,Builtin,2,377890,0x7ff78f4d72e4,148,ConstructVarargs
code-creation,Builtin,2,377905,0x7ff78f4d7384,968,ConstructWithSpread
code-creation,Builtin,2,377921,0x7ff78f4d7764,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,377938,0x7ff78f4d7e44,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,377955,0x7ff78f4d8544,924,ConstructWithArrayLike
code-creation,Builtin,2,377970,0x7ff78f4d88e4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,377988,0x7ff78f4d8f64,196,ConstructForwardVarargs
code-creation,Builtin,2,378004,0x7ff78f4d9044,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,378020,0x7ff78f4d9124,804,Construct_Baseline
code-creation,Builtin,2,378036,0x7ff78f4d9464,820,Construct_WithFeedback
code-creation,Builtin,2,378052,0x7ff78f4d97a4,476,JSConstructStubGeneric
code-creation,Builtin,2,378068,0x7ff78f4d9984,376,JSBuiltinsConstructStub
code-creation,Builtin,2,378084,0x7ff78f4d9b04,676,FastNewObject
code-creation,Builtin,2,378100,0x7ff78f4d9dc4,292,FastNewClosure
code-creation,Builtin,2,378115,0x7ff78f4d9f04,720,ConstructProxy
code-creation,Builtin,2,378131,0x7ff78f4da1e4,360,JSEntry
code-creation,Builtin,2,378146,0x7ff78f4da364,360,JSConstructEntry
code-creation,Builtin,2,378162,0x7ff78f4da4e4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,378178,0x7ff78f4da664,96,JSEntryTrampoline
code-creation,Builtin,2,378194,0x7ff78f4da6e4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,378210,0x7ff78f4da764,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,378226,0x7ff78f4da884,1116,StringCodePointAt
code-creation,Builtin,2,378242,0x7ff78f4dace4,1552,StringFromCodePointAt
code-creation,Builtin,2,378258,0x7ff78f4db304,544,StringEqual
code-creation,Builtin,2,378320,0x7ff78f4db544,276,StringGreaterThan
code-creation,Builtin,2,378345,0x7ff78f4db664,276,StringGreaterThanOrEqual
code-creation,Builtin,2,378364,0x7ff78f4db784,276,StringLessThan
code-creation,Builtin,2,378379,0x7ff78f4db8a4,276,StringLessThanOrEqual
code-creation,Builtin,2,378394,0x7ff78f4db9c4,2492,StringSubstring
code-creation,Builtin,2,378410,0x7ff78f4dc384,80,OrderedHashTableHealIndex
code-creation,Builtin,2,378426,0x7ff78f4dc3e4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,378442,0x7ff78f4dc884,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,378458,0x7ff78f4dc8e4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,378475,0x7ff78f4dc944,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,378492,0x7ff78f4dc9a4,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,378509,0x7ff78f4dca04,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,378526,0x7ff78f4dca64,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,378543,0x7ff78f4dcac4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,378560,0x7ff78f4dcb24,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,378576,0x7ff78f4dcc04,52,InterpreterOnStackReplacement
code-creation,Builtin,2,378592,0x7ff78f4dcc44,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,378609,0x7ff78f4dcea4,56,BaselineOnStackReplacement
code-creation,Builtin,2,378626,0x7ff78f4dcee4,84,BaselineLeaveFrame
code-creation,Builtin,2,378642,0x7ff78f4dcf44,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,378659,0x7ff78f4dd024,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,378675,0x7ff78f4dd124,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,378693,0x7ff78f4dd204,1004,CompileLazy
code-creation,Builtin,2,378709,0x7ff78f4dd604,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,378725,0x7ff78f4dd664,252,InstantiateAsmJs
code-creation,Builtin,2,378741,0x7ff78f4dd764,32,NotifyDeoptimized
code-creation,Builtin,2,378765,0x7ff78f4dd7a4,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,378781,0x7ff78f4ddac4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,378798,0x7ff78f4ddde4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,378814,0x7ff78f4de104,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,378830,0x7ff78f4de424,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,378846,0x7ff78f4de464,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,378863,0x7ff78f4de4a4,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,378880,0x7ff78f4de4e4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,378897,0x7ff78f4de544,288,CallApiCallback
code-creation,Builtin,2,378912,0x7ff78f4de684,268,CallApiGetter
code-creation,Builtin,2,378928,0x7ff78f4de7a4,12,HandleApiCall
code-creation,Builtin,2,378944,0x7ff78f4de7c4,12,HandleApiCallAsFunction
code-creation,Builtin,2,378960,0x7ff78f4de7e4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,378976,0x7ff78f4de804,64,AllocateInYoungGeneration
code-creation,Builtin,2,378992,0x7ff78f4de864,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,379009,0x7ff78f4de8a4,64,AllocateInOldGeneration
code-creation,Builtin,2,379026,0x7ff78f4de904,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,379042,0x7ff78f4de944,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,379057,0x7ff78f4deb04,496,GrowFastDoubleElements
code-creation,Builtin,2,379079,0x7ff78f4ded04,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,379092,0x7ff78f4deea4,388,DebugBreakTrampoline
code-creation,Builtin,2,379102,0x7ff78f4df044,180,ToNumber
code-creation,Builtin,2,379112,0x7ff78f4df104,292,ToNumber_Baseline
code-creation,Builtin,2,379122,0x7ff78f4df244,360,ToNumeric_Baseline
code-creation,Builtin,2,379131,0x7ff78f4df3c4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,379141,0x7ff78f4df444,212,ToNumberConvertBigInt
code-creation,Builtin,2,379151,0x7ff78f4df524,132,Typeof
code-creation,Builtin,2,379160,0x7ff78f4df5c4,104,BigIntToI64
code-creation,Builtin,2,379170,0x7ff78f4df644,4,BigIntToI32Pair
code-creation,Builtin,2,379220,0x7ff78f4df664,232,I64ToBigInt
code-creation,Builtin,2,379234,0x7ff78f4df764,4,I32PairToBigInt
code-creation,Builtin,2,379243,0x7ff78f4df784,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,379254,0x7ff78f4df804,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,379264,0x7ff78f4e08a4,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,379274,0x7ff78f4e46a4,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,379283,0x7ff78f4e47c4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,379293,0x7ff78f4e4804,12,LoadIC_StringLength
code-creation,Builtin,2,379303,0x7ff78f4e4824,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,379312,0x7ff78f4e4844,3056,LoadIC_NoFeedback
code-creation,Builtin,2,379322,0x7ff78f4e5444,32,StoreGlobalIC_Slow
code-creation,Builtin,2,379332,0x7ff78f4e5484,7332,StoreIC_NoFeedback
code-creation,Builtin,2,379342,0x7ff78f4e7144,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,379352,0x7ff78f4e7204,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,379362,0x7ff78f4e7264,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,379372,0x7ff78f4e7364,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,379383,0x7ff78f4e7464,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,379394,0x7ff78f4e7564,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,379404,0x7ff78f4e7664,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,379414,0x7ff78f4eae84,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,379425,0x7ff78f4ed424,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,379435,0x7ff78f4f0864,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,379446,0x7ff78f4f2044,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,379456,0x7ff78f4f4184,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,379467,0x7ff78f4f8d44,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,379477,0x7ff78f4fae84,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,379488,0x7ff78f4fd9a4,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,379498,0x7ff78f4fdcc4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,379508,0x7ff78f4fdd84,72,HasIndexedInterceptorIC
code-creation,Builtin,2,379518,0x7ff78f4fdde4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,379528,0x7ff78f4fde64,224,DynamicCheckMaps
code-creation,Builtin,2,379538,0x7ff78f4fdf64,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,379549,0x7ff78f4fdfe4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,379559,0x7ff78f4fe0a4,152,EnqueueMicrotask
code-creation,Builtin,2,379569,0x7ff78f4fe144,8,RunMicrotasksTrampoline
code-creation,Builtin,2,379579,0x7ff78f4fe164,3476,RunMicrotasks
code-creation,Builtin,2,379588,0x7ff78f4fef04,2636,HasProperty
code-creation,Builtin,2,379598,0x7ff78f4ff964,1156,DeleteProperty
code-creation,Builtin,2,379608,0x7ff78f4ffe04,1972,CopyDataProperties
code-creation,Builtin,2,379617,0x7ff78f5005c4,9184,SetDataProperties
code-creation,Builtin,2,379627,0x7ff78f5029c4,28,Abort
code-creation,Builtin,2,379636,0x7ff78f5029e4,28,AbortCSAAssert
code-creation,Builtin,2,379646,0x7ff78f502a04,12,EmptyFunction
code-creation,Builtin,2,379655,0x7ff78f502a24,12,Illegal
code-creation,Builtin,2,379664,0x7ff78f502a44,12,StrictPoisonPillThrower
code-creation,Builtin,2,379674,0x7ff78f502a64,12,UnsupportedThrower
code-creation,Builtin,2,379684,0x7ff78f502a84,64,ReturnReceiver
code-creation,Builtin,2,379693,0x7ff78f502ae4,28,ArrayConstructor
code-creation,Builtin,2,379703,0x7ff78f502b04,404,ArrayConstructorImpl
code-creation,Builtin,2,379713,0x7ff78f502ca4,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,379724,0x7ff78f502d84,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,379734,0x7ff78f502e64,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,379749,0x7ff78f502f24,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,379770,0x7ff78f502fe4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,379782,0x7ff78f5030a4,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,379793,0x7ff78f503164,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,379804,0x7ff78f503224,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,379815,0x7ff78f5032e4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,379826,0x7ff78f503504,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,379836,0x7ff78f503704,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,379848,0x7ff78f5038c4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,379859,0x7ff78f503a64,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,379870,0x7ff78f503c24,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,379881,0x7ff78f503dc4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,379892,0x7ff78f503fa4,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,379903,0x7ff78f504144,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,379913,0x7ff78f5041a4,12,ArrayConcat
code-creation,Builtin,2,379922,0x7ff78f5041c4,12,ArrayPrototypeFill
code-creation,Builtin,2,379932,0x7ff78f5041e4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,379942,0x7ff78f5045a4,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,379952,0x7ff78f504644,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,379961,0x7ff78f504724,548,ArrayIncludes
code-creation,Builtin,2,379971,0x7ff78f504964,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,379981,0x7ff78f504cc4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,379991,0x7ff78f504d44,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,380001,0x7ff78f504dc4,552,ArrayIndexOf
code-creation,Builtin,2,380010,0x7ff78f505004,12,ArrayPop
code-creation,Builtin,2,380019,0x7ff78f505024,616,ArrayPrototypePop
code-creation,Builtin,2,380029,0x7ff78f5052a4,12,ArrayPush
code-creation,Builtin,2,380038,0x7ff78f5052c4,2424,ArrayPrototypePush
code-creation,Builtin,2,380048,0x7ff78f505c44,12,ArrayShift
code-creation,Builtin,2,380057,0x7ff78f505c64,12,ArrayUnshift
code-creation,Builtin,2,380067,0x7ff78f505c84,956,CloneFastJSArray
code-creation,Builtin,2,380076,0x7ff78f506044,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,380087,0x7ff78f5068e4,976,ExtractFastJSArray
code-creation,Builtin,2,380096,0x7ff78f506cc4,260,ArrayPrototypeEntries
code-creation,Builtin,2,380106,0x7ff78f506de4,248,ArrayPrototypeKeys
code-creation,Builtin,2,380115,0x7ff78f506ee4,260,ArrayPrototypeValues
code-creation,Builtin,2,380125,0x7ff78f507004,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,380135,0x7ff78f508164,4168,FlattenIntoArray
code-creation,Builtin,2,380144,0x7ff78f5091c4,4172,FlatMapIntoArray
code-creation,Builtin,2,380154,0x7ff78f50a224,372,ArrayPrototypeFlat
code-creation,Builtin,2,380163,0x7ff78f50a3a4,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,380173,0x7ff78f50a564,12,ArrayBufferConstructor
code-creation,Builtin,2,380183,0x7ff78f50a584,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,380193,0x7ff78f50a5a4,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,380203,0x7ff78f50a5c4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,380212,0x7ff78f50a5e4,804,AsyncFunctionEnter
code-creation,Builtin,2,380222,0x7ff78f50a924,132,AsyncFunctionReject
code-creation,Builtin,2,380232,0x7ff78f50a9c4,128,AsyncFunctionResolve
code-creation,Builtin,2,380241,0x7ff78f50aa64,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,380251,0x7ff78f50aa84,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,380261,0x7ff78f50b584,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,380273,0x7ff78f50c084,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,380284,0x7ff78f50c144,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,380294,0x7ff78f50c204,12,BigIntConstructor
code-creation,Builtin,2,380304,0x7ff78f50c224,12,BigIntAsUintN
code-creation,Builtin,2,380314,0x7ff78f50c244,12,BigIntAsIntN
code-creation,Builtin,2,380323,0x7ff78f50c264,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,380333,0x7ff78f50c284,12,BigIntPrototypeToString
code-creation,Builtin,2,380342,0x7ff78f50c2a4,12,BigIntPrototypeValueOf
code-creation,Builtin,2,380352,0x7ff78f50c2c4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,380362,0x7ff78f50c2e4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,380373,0x7ff78f50c304,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,380383,0x7ff78f50c324,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,380393,0x7ff78f50c344,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,380402,0x7ff78f50c364,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,380412,0x7ff78f50c384,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,380422,0x7ff78f50c3a4,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,380432,0x7ff78f50c3c4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,380442,0x7ff78f50c3e4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,380452,0x7ff78f50c404,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,380462,0x7ff78f50c424,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,380472,0x7ff78f50c444,12,CallSitePrototypeGetThis
code-creation,Builtin,2,380481,0x7ff78f50c464,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,380491,0x7ff78f50c484,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,380501,0x7ff78f50c4a4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,380510,0x7ff78f50c4c4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,380520,0x7ff78f50c4e4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,380530,0x7ff78f50c504,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,380540,0x7ff78f50c524,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,380550,0x7ff78f50c544,12,CallSitePrototypeToString
code-creation,Builtin,2,380559,0x7ff78f50c564,12,ConsoleDebug
code-creation,Builtin,2,380569,0x7ff78f50c584,12,ConsoleError
code-creation,Builtin,2,380578,0x7ff78f50c5a4,12,ConsoleInfo
code-creation,Builtin,2,380587,0x7ff78f50c5c4,12,ConsoleLog
code-creation,Builtin,2,380597,0x7ff78f50c5e4,12,ConsoleWarn
code-creation,Builtin,2,380606,0x7ff78f50c604,12,ConsoleDir
code-creation,Builtin,2,380615,0x7ff78f50c624,12,ConsoleDirXml
code-creation,Builtin,2,380625,0x7ff78f50c644,12,ConsoleTable
code-creation,Builtin,2,380634,0x7ff78f50c664,12,ConsoleTrace
code-creation,Builtin,2,380643,0x7ff78f50c684,12,ConsoleGroup
code-creation,Builtin,2,380653,0x7ff78f50c6a4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,380663,0x7ff78f50c6c4,12,ConsoleGroupEnd
code-creation,Builtin,2,380672,0x7ff78f50c6e4,12,ConsoleClear
code-creation,Builtin,2,380682,0x7ff78f50c704,12,ConsoleCount
code-creation,Builtin,2,380691,0x7ff78f50c724,12,ConsoleCountReset
code-creation,Builtin,2,380700,0x7ff78f50c744,12,ConsoleAssert
code-creation,Builtin,2,380710,0x7ff78f50c764,12,ConsoleProfile
code-creation,Builtin,2,380719,0x7ff78f50c784,12,ConsoleProfileEnd
code-creation,Builtin,2,380729,0x7ff78f50c7a4,12,ConsoleTime
code-creation,Builtin,2,380738,0x7ff78f50c7c4,12,ConsoleTimeLog
code-creation,Builtin,2,380753,0x7ff78f50c7e4,12,ConsoleTimeEnd
code-creation,Builtin,2,380763,0x7ff78f50c804,12,ConsoleTimeStamp
code-creation,Builtin,2,380773,0x7ff78f50c824,12,ConsoleContext
code-creation,Builtin,2,380782,0x7ff78f50c844,12,DataViewConstructor
code-creation,Builtin,2,380792,0x7ff78f50c864,12,DateConstructor
code-creation,Builtin,2,380801,0x7ff78f50c884,216,DatePrototypeGetDate
code-creation,Builtin,2,380811,0x7ff78f50c964,216,DatePrototypeGetDay
code-creation,Builtin,2,380820,0x7ff78f50ca44,216,DatePrototypeGetFullYear
code-creation,Builtin,2,380831,0x7ff78f50cb24,216,DatePrototypeGetHours
code-creation,Builtin,2,380842,0x7ff78f50cc04,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,380852,0x7ff78f50cce4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,380862,0x7ff78f50cdc4,216,DatePrototypeGetMonth
code-creation,Builtin,2,380872,0x7ff78f50cea4,216,DatePrototypeGetSeconds
code-creation,Builtin,2,380881,0x7ff78f50cf84,124,DatePrototypeGetTime
code-creation,Builtin,2,380891,0x7ff78f50d004,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,380901,0x7ff78f50d0e4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,380911,0x7ff78f50d1c4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,380921,0x7ff78f50d2a4,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,380931,0x7ff78f50d384,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,380941,0x7ff78f50d464,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,380951,0x7ff78f50d544,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,380961,0x7ff78f50d624,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,380971,0x7ff78f50d704,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,380981,0x7ff78f50d7e4,124,DatePrototypeValueOf
code-creation,Builtin,2,380990,0x7ff78f50d864,352,DatePrototypeToPrimitive
code-creation,Builtin,2,381000,0x7ff78f50d9e4,12,DatePrototypeGetYear
code-creation,Builtin,2,381010,0x7ff78f50da04,12,DatePrototypeSetYear
code-creation,Builtin,2,381019,0x7ff78f50da24,12,DateNow
code-creation,Builtin,2,381029,0x7ff78f50da44,12,DateParse
code-creation,Builtin,2,381038,0x7ff78f50da64,12,DatePrototypeSetDate
code-creation,Builtin,2,381048,0x7ff78f50da84,12,DatePrototypeSetFullYear
code-creation,Builtin,2,381058,0x7ff78f50daa4,12,DatePrototypeSetHours
code-creation,Builtin,2,381067,0x7ff78f50dac4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,381077,0x7ff78f50dae4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,381087,0x7ff78f50db04,12,DatePrototypeSetMonth
code-creation,Builtin,2,381097,0x7ff78f50db24,12,DatePrototypeSetSeconds
code-creation,Builtin,2,381107,0x7ff78f50db44,12,DatePrototypeSetTime
code-creation,Builtin,2,381117,0x7ff78f50db64,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,381126,0x7ff78f50db84,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,381136,0x7ff78f50dba4,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,381146,0x7ff78f50dbc4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,381156,0x7ff78f50dbe4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,381165,0x7ff78f50dc04,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,381175,0x7ff78f50dc24,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,381185,0x7ff78f50dc44,12,DatePrototypeToDateString
code-creation,Builtin,2,381195,0x7ff78f50dc64,12,DatePrototypeToISOString
code-creation,Builtin,2,381205,0x7ff78f50dc84,12,DatePrototypeToUTCString
code-creation,Builtin,2,381215,0x7ff78f50dca4,12,DatePrototypeToString
code-creation,Builtin,2,381225,0x7ff78f50dcc4,12,DatePrototypeToTimeString
code-creation,Builtin,2,381235,0x7ff78f50dce4,12,DatePrototypeToJson
code-creation,Builtin,2,381245,0x7ff78f50dd04,12,DateUTC
code-creation,Builtin,2,381254,0x7ff78f50dd24,12,ErrorConstructor
code-creation,Builtin,2,381263,0x7ff78f50dd44,12,ErrorCaptureStackTrace
code-creation,Builtin,2,381273,0x7ff78f50dd64,12,ErrorPrototypeToString
code-creation,Builtin,2,381283,0x7ff78f50dd84,12,FunctionConstructor
code-creation,Builtin,2,381292,0x7ff78f50dda4,68,FunctionPrototypeApply
code-creation,Builtin,2,381302,0x7ff78f50de04,12,FunctionPrototypeBind
code-creation,Builtin,2,381311,0x7ff78f50de24,32,FunctionPrototypeCall
code-creation,Builtin,2,381321,0x7ff78f50de64,12,FunctionPrototypeToString
code-creation,Builtin,2,381331,0x7ff78f50de84,192,CreateIterResultObject
code-creation,Builtin,2,381341,0x7ff78f50df64,788,CreateGeneratorObject
code-creation,Builtin,2,381351,0x7ff78f50e284,12,GeneratorFunctionConstructor
code-creation,Builtin,2,381361,0x7ff78f50e2a4,412,GeneratorPrototypeNext
code-creation,Builtin,2,381370,0x7ff78f50e444,420,GeneratorPrototypeReturn
code-creation,Builtin,2,381381,0x7ff78f50e604,424,GeneratorPrototypeThrow
code-creation,Builtin,2,381392,0x7ff78f50e7c4,12,AsyncFunctionConstructor
code-creation,Builtin,2,381402,0x7ff78f50e7e4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,381412,0x7ff78f50e964,88,ResumeGeneratorBaseline
code-creation,Builtin,2,381422,0x7ff78f50e9c4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,381432,0x7ff78f50ea04,12,GlobalDecodeURI
code-creation,Builtin,2,381441,0x7ff78f50ea24,12,GlobalDecodeURIComponent
code-creation,Builtin,2,381451,0x7ff78f50ea44,12,GlobalEncodeURI
code-creation,Builtin,2,381460,0x7ff78f50ea64,12,GlobalEncodeURIComponent
code-creation,Builtin,2,381470,0x7ff78f50ea84,12,GlobalEscape
code-creation,Builtin,2,381480,0x7ff78f50eaa4,12,GlobalUnescape
code-creation,Builtin,2,381489,0x7ff78f50eac4,12,GlobalEval
code-creation,Builtin,2,381499,0x7ff78f50eae4,132,GlobalIsFinite
code-creation,Builtin,2,381508,0x7ff78f50eb84,124,GlobalIsNaN
code-creation,Builtin,2,381518,0x7ff78f50ec04,12,JsonParse
code-creation,Builtin,2,381527,0x7ff78f50ec24,12,JsonStringify
code-creation,Builtin,2,381536,0x7ff78f50ec44,4608,LoadIC
code-creation,Builtin,2,381546,0x7ff78f50fe64,4296,LoadIC_Megamorphic
code-creation,Builtin,2,381556,0x7ff78f510f44,4520,LoadIC_Noninlined
code-creation,Builtin,2,381565,0x7ff78f512104,44,LoadICTrampoline
code-creation,Builtin,2,381574,0x7ff78f512144,24,LoadICBaseline
code-creation,Builtin,2,381584,0x7ff78f512164,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,381594,0x7ff78f5121a4,7376,LoadSuperIC
code-creation,Builtin,2,381603,0x7ff78f513e84,24,LoadSuperICBaseline
code-creation,Builtin,2,381613,0x7ff78f513ea4,8148,KeyedLoadIC
code-creation,Builtin,2,381622,0x7ff78f515e84,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,381632,0x7ff78f5191c4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,381642,0x7ff78f519204,24,KeyedLoadICBaseline
code-creation,Builtin,2,381651,0x7ff78f519224,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,381661,0x7ff78f519264,5104,StoreGlobalIC
code-creation,Builtin,2,381671,0x7ff78f51a664,44,StoreGlobalICTrampoline
code-creation,Builtin,2,381680,0x7ff78f51a6a4,24,StoreGlobalICBaseline
code-creation,Builtin,2,381690,0x7ff78f51a6c4,5340,StoreIC
code-creation,Builtin,2,381699,0x7ff78f51bba4,44,StoreICTrampoline
code-creation,Builtin,2,381710,0x7ff78f51bbe4,24,StoreICBaseline
code-creation,Builtin,2,381719,0x7ff78f51bc04,5780,KeyedStoreIC
code-creation,Builtin,2,381729,0x7ff78f51d2a4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,381738,0x7ff78f51d2e4,24,KeyedStoreICBaseline
code-creation,Builtin,2,381756,0x7ff78f51d304,404,StoreInArrayLiteralIC
code-creation,Builtin,2,381769,0x7ff78f51d4a4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,381779,0x7ff78f51d4c4,140,LookupContextBaseline
code-creation,Builtin,2,381796,0x7ff78f51d564,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,381814,0x7ff78f51d604,3244,LoadGlobalIC
code-creation,Builtin,2,381830,0x7ff78f51e2c4,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,381850,0x7ff78f51ef64,44,LoadGlobalICTrampoline
code-creation,Builtin,2,381861,0x7ff78f51efa4,24,LoadGlobalICBaseline
code-creation,Builtin,2,381871,0x7ff78f51efc4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,381882,0x7ff78f51f004,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,381892,0x7ff78f51f024,140,LookupGlobalICBaseline
code-creation,Builtin,2,381901,0x7ff78f51f0c4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,381912,0x7ff78f51f164,2064,CloneObjectIC
code-creation,Builtin,2,381921,0x7ff78f51f984,24,CloneObjectICBaseline
code-creation,Builtin,2,381931,0x7ff78f51f9a4,1988,CloneObjectIC_Slow
code-creation,Builtin,2,381941,0x7ff78f520184,2756,KeyedHasIC
code-creation,Builtin,2,381950,0x7ff78f520c64,24,KeyedHasICBaseline
code-creation,Builtin,2,381960,0x7ff78f520c84,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,381970,0x7ff78f5216e4,1436,IterableToList
code-creation,Builtin,2,381980,0x7ff78f521c84,1240,IterableToFixedArray
code-creation,Builtin,2,381990,0x7ff78f522164,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,382039,0x7ff78f522464,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,382053,0x7ff78f5224a4,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,382063,0x7ff78f522524,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,382073,0x7ff78f522904,1616,StringListFromIterable
code-creation,Builtin,2,382083,0x7ff78f522f64,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,382092,0x7ff78f523444,4156,MapConstructor
code-creation,Builtin,2,382102,0x7ff78f524484,1996,MapPrototypeSet
code-creation,Builtin,2,382112,0x7ff78f524c64,1524,MapPrototypeDelete
code-creation,Builtin,2,382121,0x7ff78f525264,204,MapPrototypeGet
code-creation,Builtin,2,382131,0x7ff78f525344,164,MapPrototypeHas
code-creation,Builtin,2,382140,0x7ff78f525404,12,MapPrototypeClear
code-creation,Builtin,2,382150,0x7ff78f525424,284,MapPrototypeEntries
code-creation,Builtin,2,382159,0x7ff78f525544,144,MapPrototypeGetSize
code-creation,Builtin,2,382169,0x7ff78f5255e4,492,MapPrototypeForEach
code-creation,Builtin,2,382179,0x7ff78f5257e4,284,MapPrototypeKeys
code-creation,Builtin,2,382188,0x7ff78f525904,284,MapPrototypeValues
code-creation,Builtin,2,382198,0x7ff78f525a24,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,382208,0x7ff78f525e44,1168,MapIteratorToList
code-creation,Builtin,2,382217,0x7ff78f5262e4,12,NumberPrototypeToExponential
code-creation,Builtin,2,382227,0x7ff78f526304,12,NumberPrototypeToFixed
code-creation,Builtin,2,382237,0x7ff78f526324,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,382247,0x7ff78f526344,12,NumberPrototypeToPrecision
code-creation,Builtin,2,382257,0x7ff78f526364,328,SameValue
code-creation,Builtin,2,382266,0x7ff78f5264c4,204,SameValueNumbersOnly
code-creation,Builtin,2,382275,0x7ff78f5265a4,792,Add_Baseline
code-creation,Builtin,2,382285,0x7ff78f5268c4,828,Subtract_Baseline
code-creation,Builtin,2,382294,0x7ff78f526c04,808,Multiply_Baseline
code-creation,Builtin,2,382304,0x7ff78f526f44,832,Divide_Baseline
code-creation,Builtin,2,382314,0x7ff78f5272a4,764,Modulus_Baseline
code-creation,Builtin,2,382323,0x7ff78f5275a4,808,Exponentiate_Baseline
code-creation,Builtin,2,382333,0x7ff78f5278e4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,382343,0x7ff78f527bc4,700,BitwiseOr_Baseline
code-creation,Builtin,2,382353,0x7ff78f527e84,708,BitwiseXor_Baseline
code-creation,Builtin,2,382362,0x7ff78f528164,720,ShiftLeft_Baseline
code-creation,Builtin,2,382372,0x7ff78f528444,720,ShiftRight_Baseline
code-creation,Builtin,2,382382,0x7ff78f528724,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,382392,0x7ff78f528a84,720,Add_WithFeedback
code-creation,Builtin,2,382401,0x7ff78f528d64,780,Subtract_WithFeedback
code-creation,Builtin,2,382411,0x7ff78f529084,776,Multiply_WithFeedback
code-creation,Builtin,2,382420,0x7ff78f5293a4,804,Divide_WithFeedback
code-creation,Builtin,2,382430,0x7ff78f5296e4,724,Modulus_WithFeedback
code-creation,Builtin,2,382439,0x7ff78f5299c4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,382449,0x7ff78f529cc4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,382459,0x7ff78f529f84,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,382469,0x7ff78f52a244,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,382479,0x7ff78f52a504,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,382488,0x7ff78f52a7c4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,382498,0x7ff78f52aa84,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,382508,0x7ff78f52adc4,1696,Equal_Baseline
code-creation,Builtin,2,382517,0x7ff78f52b484,908,StrictEqual_Baseline
code-creation,Builtin,2,382527,0x7ff78f52b824,1264,LessThan_Baseline
code-creation,Builtin,2,382537,0x7ff78f52bd24,1264,GreaterThan_Baseline
code-creation,Builtin,2,382546,0x7ff78f52c224,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,382556,0x7ff78f52c724,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,382566,0x7ff78f52cc24,1620,Equal_WithFeedback
code-creation,Builtin,2,382576,0x7ff78f52d284,940,StrictEqual_WithFeedback
code-creation,Builtin,2,382586,0x7ff78f52d644,1240,LessThan_WithFeedback
code-creation,Builtin,2,382597,0x7ff78f52db24,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,382608,0x7ff78f52e004,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,382618,0x7ff78f52e4e4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,382628,0x7ff78f52e9c4,332,BitwiseNot_Baseline
code-creation,Builtin,2,382638,0x7ff78f52eb24,460,Decrement_Baseline
code-creation,Builtin,2,382647,0x7ff78f52ed04,464,Increment_Baseline
code-creation,Builtin,2,382657,0x7ff78f52eee4,488,Negate_Baseline
code-creation,Builtin,2,382667,0x7ff78f52f0e4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,382677,0x7ff78f52f224,440,Decrement_WithFeedback
code-creation,Builtin,2,382686,0x7ff78f52f3e4,444,Increment_WithFeedback
code-creation,Builtin,2,382696,0x7ff78f52f5a4,472,Negate_WithFeedback
code-creation,Builtin,2,382706,0x7ff78f52f784,252,ObjectAssign
code-creation,Builtin,2,382716,0x7ff78f52f884,864,ObjectCreate
code-creation,Builtin,2,382725,0x7ff78f52fc04,12,ObjectDefineGetter
code-creation,Builtin,2,382735,0x7ff78f52fc24,12,ObjectDefineProperties
code-creation,Builtin,2,382747,0x7ff78f52fc44,12,ObjectDefineProperty
code-creation,Builtin,2,382765,0x7ff78f52fc64,12,ObjectDefineSetter
code-creation,Builtin,2,382775,0x7ff78f52fc84,1516,ObjectEntries
code-creation,Builtin,2,382785,0x7ff78f530284,12,ObjectFreeze
code-creation,Builtin,2,382795,0x7ff78f5302a4,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,382805,0x7ff78f5318a4,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,382815,0x7ff78f5318c4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,382825,0x7ff78f531b24,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,382835,0x7ff78f531b44,164,ObjectHasOwn
code-creation,Builtin,2,382845,0x7ff78f531c04,388,ObjectIs
code-creation,Builtin,2,382854,0x7ff78f531da4,12,ObjectIsFrozen
code-creation,Builtin,2,382863,0x7ff78f531dc4,12,ObjectIsSealed
code-creation,Builtin,2,382873,0x7ff78f531de4,536,ObjectKeys
code-creation,Builtin,2,382882,0x7ff78f532004,12,ObjectLookupGetter
code-creation,Builtin,2,382892,0x7ff78f532024,12,ObjectLookupSetter
code-creation,Builtin,2,382902,0x7ff78f532044,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,382912,0x7ff78f532944,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,382922,0x7ff78f532a24,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,382932,0x7ff78f532a44,12,ObjectPrototypeGetProto
code-creation,Builtin,2,382942,0x7ff78f532a64,12,ObjectPrototypeSetProto
code-creation,Builtin,2,382952,0x7ff78f532a84,12,ObjectSeal
code-creation,Builtin,2,382961,0x7ff78f532aa4,1108,ObjectToString
code-creation,Builtin,2,382971,0x7ff78f532f04,1284,ObjectValues
code-creation,Builtin,2,382980,0x7ff78f533424,280,OrdinaryHasInstance
code-creation,Builtin,2,382990,0x7ff78f533544,344,InstanceOf
code-creation,Builtin,2,383000,0x7ff78f5336a4,632,InstanceOf_WithFeedback
code-creation,Builtin,2,383010,0x7ff78f533924,648,InstanceOf_Baseline
code-creation,Builtin,2,383020,0x7ff78f533bc4,268,ForInEnumerate
code-creation,Builtin,2,383029,0x7ff78f533ce4,148,ForInPrepare
code-creation,Builtin,2,383039,0x7ff78f533d84,2584,ForInFilter
code-creation,Builtin,2,383048,0x7ff78f5347a4,52,ReflectApply
code-creation,Builtin,2,383058,0x7ff78f5347e4,60,ReflectConstruct
code-creation,Builtin,2,383067,0x7ff78f534824,12,ReflectDefineProperty
code-creation,Builtin,2,383077,0x7ff78f534844,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,383087,0x7ff78f534864,12,ReflectOwnKeys
code-creation,Builtin,2,383096,0x7ff78f534884,12,ReflectSet
code-creation,Builtin,2,383106,0x7ff78f5348a4,12,RegExpCapture1Getter
code-creation,Builtin,2,383116,0x7ff78f5348c4,12,RegExpCapture2Getter
code-creation,Builtin,2,383125,0x7ff78f5348e4,12,RegExpCapture3Getter
code-creation,Builtin,2,383135,0x7ff78f534904,12,RegExpCapture4Getter
code-creation,Builtin,2,383145,0x7ff78f534924,12,RegExpCapture5Getter
code-creation,Builtin,2,383154,0x7ff78f534944,12,RegExpCapture6Getter
code-creation,Builtin,2,383164,0x7ff78f534964,12,RegExpCapture7Getter
code-creation,Builtin,2,383173,0x7ff78f534984,12,RegExpCapture8Getter
code-creation,Builtin,2,383185,0x7ff78f5349a4,12,RegExpCapture9Getter
code-creation,Builtin,2,383196,0x7ff78f5349c4,2212,RegExpConstructor
code-creation,Builtin,2,383205,0x7ff78f535284,12,RegExpInputGetter
code-creation,Builtin,2,383215,0x7ff78f5352a4,12,RegExpInputSetter
code-creation,Builtin,2,383225,0x7ff78f5352c4,12,RegExpLastMatchGetter
code-creation,Builtin,2,383235,0x7ff78f5352e4,12,RegExpLastParenGetter
code-creation,Builtin,2,383245,0x7ff78f535304,12,RegExpLeftContextGetter
code-creation,Builtin,2,383255,0x7ff78f535324,908,RegExpPrototypeCompile
code-creation,Builtin,2,383265,0x7ff78f5356c4,12,RegExpPrototypeToString
code-creation,Builtin,2,383275,0x7ff78f5356e4,12,RegExpRightContextGetter
code-creation,Builtin,2,383284,0x7ff78f535704,252,RegExpExecAtom
code-creation,Builtin,2,383294,0x7ff78f535804,1040,RegExpExecInternal
code-creation,Builtin,2,383303,0x7ff78f535c24,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,383313,0x7ff78f535c44,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,383323,0x7ff78f535c64,2684,SetConstructor
code-creation,Builtin,2,383332,0x7ff78f5366e4,1284,SetPrototypeHas
code-creation,Builtin,2,383342,0x7ff78f536c04,1736,SetPrototypeAdd
code-creation,Builtin,2,383351,0x7ff78f5372e4,1476,SetPrototypeDelete
code-creation,Builtin,2,383361,0x7ff78f5378c4,12,SetPrototypeClear
code-creation,Builtin,2,383371,0x7ff78f5378e4,284,SetPrototypeEntries
code-creation,Builtin,2,383381,0x7ff78f537a04,144,SetPrototypeGetSize
code-creation,Builtin,2,383390,0x7ff78f537aa4,444,SetPrototypeForEach
code-creation,Builtin,2,383400,0x7ff78f537c64,284,SetPrototypeValues
code-creation,Builtin,2,383409,0x7ff78f537d84,988,SetIteratorPrototypeNext
code-creation,Builtin,2,383419,0x7ff78f538164,1112,SetOrSetIteratorToList
code-creation,Builtin,2,383429,0x7ff78f5385c4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,383439,0x7ff78f5385e4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,383449,0x7ff78f538604,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,383459,0x7ff78f538624,1280,AtomicsLoad
code-creation,Builtin,2,383469,0x7ff78f538b44,1008,AtomicsStore
code-creation,Builtin,2,383479,0x7ff78f538f44,1704,AtomicsExchange
code-creation,Builtin,2,383488,0x7ff78f539604,2092,AtomicsCompareExchange
code-creation,Builtin,2,383498,0x7ff78f539e44,1804,AtomicsAdd
code-creation,Builtin,2,383508,0x7ff78f53a564,1804,AtomicsSub
code-creation,Builtin,2,383517,0x7ff78f53ac84,1804,AtomicsAnd
code-creation,Builtin,2,383526,0x7ff78f53b3a4,1804,AtomicsOr
code-creation,Builtin,2,383536,0x7ff78f53bac4,1804,AtomicsXor
code-creation,Builtin,2,383545,0x7ff78f53c1e4,12,AtomicsNotify
code-creation,Builtin,2,383555,0x7ff78f53c204,12,AtomicsIsLockFree
code-creation,Builtin,2,383564,0x7ff78f53c224,12,AtomicsWait
code-creation,Builtin,2,383574,0x7ff78f53c244,12,AtomicsWaitAsync
code-creation,Builtin,2,383583,0x7ff78f53c264,12,StringFromCodePoint
code-creation,Builtin,2,383592,0x7ff78f53c284,1428,StringFromCharCode
code-creation,Builtin,2,383602,0x7ff78f53c824,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,383611,0x7ff78f53c844,4360,StringPrototypeMatchAll
code-creation,Builtin,2,383621,0x7ff78f53d964,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,383631,0x7ff78f53d984,1228,StringPrototypeReplace
code-creation,Builtin,2,383641,0x7ff78f53de64,2900,StringPrototypeSplit
code-creation,Builtin,2,383651,0x7ff78f53e9c4,12,StringRaw
code-creation,Builtin,2,383660,0x7ff78f53e9e4,12,SymbolConstructor
code-creation,Builtin,2,383670,0x7ff78f53ea04,12,SymbolFor
code-creation,Builtin,2,383679,0x7ff78f53ea24,12,SymbolKeyFor
code-creation,Builtin,2,383689,0x7ff78f53ea44,88,TypedArrayBaseConstructor
code-creation,Builtin,2,383698,0x7ff78f53eaa4,256,TypedArrayConstructor
code-creation,Builtin,2,383708,0x7ff78f53ebc4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,383718,0x7ff78f53ebe4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,383729,0x7ff78f53ef64,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,383739,0x7ff78f53f0e4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,383757,0x7ff78f53f344,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,383768,0x7ff78f53f364,12,TypedArrayPrototypeFill
code-creation,Builtin,2,383778,0x7ff78f53f384,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,383788,0x7ff78f53f3a4,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,383798,0x7ff78f53f3c4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,383808,0x7ff78f53f3e4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,383818,0x7ff78f53f404,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,383829,0x7ff78f53f544,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,383838,0x7ff78f541f04,792,GenericJSToWasmWrapper
code-creation,Builtin,2,383848,0x7ff78f542224,148,WasmCompileLazy
code-creation,Builtin,2,383858,0x7ff78f5422c4,168,WasmDebugBreak
code-creation,Builtin,2,383868,0x7ff78f542384,16,WasmOnStackReplace
code-creation,Builtin,2,383877,0x7ff78f5423a4,140,WasmFloat32ToNumber
code-creation,Builtin,2,383887,0x7ff78f542444,152,WasmFloat64ToNumber
code-creation,Builtin,2,383897,0x7ff78f5424e4,4,WasmI32AtomicWait32
code-creation,Builtin,2,383906,0x7ff78f542504,4,WasmI64AtomicWait32
code-creation,Builtin,2,383916,0x7ff78f542524,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,383926,0x7ff78f542544,4320,WeakMapConstructor
code-creation,Builtin,2,383936,0x7ff78f543644,196,WeakMapLookupHashIndex
code-creation,Builtin,2,383945,0x7ff78f543724,220,WeakMapGet
code-creation,Builtin,2,383955,0x7ff78f543804,176,WeakMapPrototypeHas
code-creation,Builtin,2,383965,0x7ff78f5438c4,204,WeakMapPrototypeSet
code-creation,Builtin,2,383974,0x7ff78f5439a4,144,WeakMapPrototypeDelete
code-creation,Builtin,2,383984,0x7ff78f543a44,2876,WeakSetConstructor
code-creation,Builtin,2,383994,0x7ff78f544584,176,WeakSetPrototypeHas
code-creation,Builtin,2,384003,0x7ff78f544644,204,WeakSetPrototypeAdd
code-creation,Builtin,2,384013,0x7ff78f544724,144,WeakSetPrototypeDelete
code-creation,Builtin,2,384023,0x7ff78f5447c4,372,WeakCollectionDelete
code-creation,Builtin,2,384032,0x7ff78f544944,764,WeakCollectionSet
code-creation,Builtin,2,384042,0x7ff78f544c44,296,AsyncGeneratorResolve
code-creation,Builtin,2,384052,0x7ff78f544d84,100,AsyncGeneratorReject
code-creation,Builtin,2,384062,0x7ff78f544e04,2760,AsyncGeneratorYield
code-creation,Builtin,2,384071,0x7ff78f5458e4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,384081,0x7ff78f546424,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,384091,0x7ff78f546564,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,384101,0x7ff78f546584,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,384110,0x7ff78f546984,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,384120,0x7ff78f546da4,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,384130,0x7ff78f5471c4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,384140,0x7ff78f547c84,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,384150,0x7ff78f548744,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,384160,0x7ff78f5487c4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,384171,0x7ff78f548864,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,384181,0x7ff78f5488e4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,384192,0x7ff78f548964,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,384202,0x7ff78f5489e4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,384212,0x7ff78f548a84,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,384222,0x7ff78f5490c4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,384232,0x7ff78f549784,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,384242,0x7ff78f549e44,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,384252,0x7ff78f549ec4,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,384263,0x7ff78f549fa4,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,384274,0x7ff78f54a084,200,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,384286,0x7ff78f54a164,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,384297,0x7ff78f54a304,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,384308,0x7ff78f54a4a4,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,384319,0x7ff78f54a5a4,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,384329,0x7ff78f54a6a4,216,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,384340,0x7ff78f54a784,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,384351,0x7ff78f54a924,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,384361,0x7ff78f54aac4,4,DirectCEntry
code-creation,Builtin,2,384370,0x7ff78f54aae4,1096,StringAdd_CheckNone
code-creation,Builtin,2,384380,0x7ff78f54af44,2484,SubString
code-creation,Builtin,2,384389,0x7ff78f54b904,16,StackCheck
code-creation,Builtin,2,384398,0x7ff78f54b924,84,DoubleToI
code-creation,Builtin,2,384407,0x7ff78f54b984,2236,GetProperty
code-creation,Builtin,2,384417,0x7ff78f54c244,2308,GetPropertyWithReceiver
code-creation,Builtin,2,384427,0x7ff78f54cb64,16004,SetProperty
code-creation,Builtin,2,384436,0x7ff78f550a04,13480,SetPropertyInLiteral
code-creation,Builtin,2,384446,0x7ff78f553ec4,8,MemCopyUint8Uint8
code-creation,Builtin,2,384455,0x7ff78f553ee4,8,MemMove
code-creation,Builtin,2,384465,0x7ff78f553f04,12,IsTraceCategoryEnabled
code-creation,Builtin,2,384474,0x7ff78f553f24,12,Trace
code-creation,Builtin,2,384484,0x7ff78f553f44,12,FinalizationRegistryUnregister
code-creation,Builtin,2,384494,0x7ff78f553f64,416,AsyncModuleEvaluate
code-creation,Builtin,2,384503,0x7ff78f554124,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,384513,0x7ff78f554144,12,CallAsyncModuleRejected
code-creation,Builtin,2,384523,0x7ff78f554164,260,AggregateErrorConstructor
code-creation,Builtin,2,384533,0x7ff78f554284,856,ArrayPrototypeAt
code-creation,Builtin,2,384542,0x7ff78f5545e4,656,ArrayPrototypeConcat
code-creation,Builtin,2,384552,0x7ff78f554884,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,384561,0x7ff78f555f64,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,384571,0x7ff78f556044,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,384581,0x7ff78f5562c4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,384591,0x7ff78f556fc4,1464,ArrayEvery
code-creation,Builtin,2,384601,0x7ff78f557584,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,384611,0x7ff78f5576a4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,384621,0x7ff78f557a84,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,384631,0x7ff78f558884,4260,ArrayFilter
code-creation,Builtin,2,384641,0x7ff78f559944,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,384651,0x7ff78f559a24,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,384661,0x7ff78f559a64,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,384671,0x7ff78f559ba4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,384681,0x7ff78f559dc4,1460,ArrayPrototypeFind
code-creation,Builtin,2,384691,0x7ff78f55a384,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,384701,0x7ff78f55a464,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,384711,0x7ff78f55a4a4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,384722,0x7ff78f55a5e4,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,384732,0x7ff78f55a804,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,384742,0x7ff78f55adc4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,384760,0x7ff78f55afa4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,384770,0x7ff78f55b664,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,384780,0x7ff78f55b844,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,384790,0x7ff78f55bf04,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,384800,0x7ff78f55bfe4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,384811,0x7ff78f55c0c4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,384822,0x7ff78f55cd24,1328,ArrayForEach
code-creation,Builtin,2,384832,0x7ff78f55d264,3572,ArrayFrom
code-creation,Builtin,2,384842,0x7ff78f55e064,148,ArrayIsArray
code-creation,Builtin,2,384851,0x7ff78f55e104,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,384862,0x7ff78f55e2a4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,384872,0x7ff78f55e2e4,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,384882,0x7ff78f55e384,312,ConvertToLocaleString
code-creation,Builtin,2,384892,0x7ff78f55e4c4,752,JoinStackPush
code-creation,Builtin,2,384902,0x7ff78f55e7c4,272,JoinStackPop
code-creation,Builtin,2,384911,0x7ff78f55e8e4,6628,ArrayPrototypeJoin
code-creation,Builtin,2,384921,0x7ff78f5602e4,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,384931,0x7ff78f5617e4,236,ArrayPrototypeToString
code-creation,Builtin,2,384940,0x7ff78f5618e4,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,384950,0x7ff78f563024,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,384961,0x7ff78f564244,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,384971,0x7ff78f565144,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,384981,0x7ff78f565264,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,384991,0x7ff78f565364,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,385001,0x7ff78f565584,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,385010,0x7ff78f566204,3912,ArrayMap
code-creation,Builtin,2,385020,0x7ff78f567164,1000,ArrayOf
code-creation,Builtin,2,385029,0x7ff78f567564,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,385040,0x7ff78f567724,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,385050,0x7ff78f567804,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,385060,0x7ff78f5678e4,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,385070,0x7ff78f568584,2000,ArrayReduceRight
code-creation,Builtin,2,385080,0x7ff78f568d64,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,385091,0x7ff78f568e24,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,385101,0x7ff78f568f04,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,385111,0x7ff78f568fe4,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,385121,0x7ff78f569ca4,1604,ArrayReduce
code-creation,Builtin,2,385131,0x7ff78f56a304,3216,ArrayPrototypeReverse
code-creation,Builtin,2,385140,0x7ff78f56afa4,3592,ArrayPrototypeShift
code-creation,Builtin,2,385150,0x7ff78f56bdc4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,385160,0x7ff78f56d244,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,385170,0x7ff78f56d324,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,385180,0x7ff78f56d584,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,385190,0x7ff78f56e284,1448,ArraySome
code-creation,Builtin,2,385200,0x7ff78f56e844,14216,ArrayPrototypeSplice
code-creation,Builtin,2,385209,0x7ff78f571fe4,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,385219,0x7ff78f572cc4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,385229,0x7ff78f572e24,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,385240,0x7ff78f572f84,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,385250,0x7ff78f573064,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,385260,0x7ff78f5731c4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,385270,0x7ff78f5732a4,96,ArrayBufferIsView
code-creation,Builtin,2,385280,0x7ff78f573324,396,ToInteger
code-creation,Builtin,2,385289,0x7ff78f5734c4,3084,FastCreateDataProperty
code-creation,Builtin,2,385299,0x7ff78f5740e4,676,CheckNumberInRange
code-creation,Builtin,2,385309,0x7ff78f5743a4,584,CheckSameObject
code-creation,Builtin,2,385318,0x7ff78f574604,904,BooleanConstructor
code-creation,Builtin,2,385328,0x7ff78f5749a4,164,BooleanPrototypeToString
code-creation,Builtin,2,385339,0x7ff78f574a64,156,BooleanPrototypeValueOf
code-creation,Builtin,2,385350,0x7ff78f574b04,1184,BigIntAddNoThrow
code-creation,Builtin,2,385359,0x7ff78f574fc4,1280,BigIntAdd
code-creation,Builtin,2,385369,0x7ff78f5754e4,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,385378,0x7ff78f5759a4,1280,BigIntSubtract
code-creation,Builtin,2,385388,0x7ff78f575ec4,284,BigIntUnaryMinus
code-creation,Builtin,2,385397,0x7ff78f575fe4,1360,ToString
code-creation,Builtin,2,385407,0x7ff78f576544,156,StringPrototypeToString
code-creation,Builtin,2,385417,0x7ff78f5765e4,156,StringPrototypeValueOf
code-creation,Builtin,2,385427,0x7ff78f576684,2480,StringToList
code-creation,Builtin,2,385436,0x7ff78f577044,1012,StringPrototypeCharAt
code-creation,Builtin,2,385446,0x7ff78f577444,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,385455,0x7ff78f577704,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,385465,0x7ff78f577c24,400,StringPrototypeConcat
code-creation,Builtin,2,385475,0x7ff78f577dc4,992,StringConstructor
code-creation,Builtin,2,385485,0x7ff78f5781c4,1436,StringAddConvertLeft
code-creation,Builtin,2,385494,0x7ff78f578764,1464,StringAddConvertRight
code-creation,Builtin,2,385504,0x7ff78f578d24,816,StringCharAt
code-creation,Builtin,2,385514,0x7ff78f579064,16,FastNewClosureBaseline
code-creation,Builtin,2,385523,0x7ff78f579084,196,FastNewFunctionContextEval
code-creation,Builtin,2,385533,0x7ff78f579164,196,FastNewFunctionContextFunction
code-creation,Builtin,2,385543,0x7ff78f579244,248,CreateRegExpLiteral
code-creation,Builtin,2,385553,0x7ff78f579344,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,385563,0x7ff78f579784,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,385572,0x7ff78f579984,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,385582,0x7ff78f57a064,384,ObjectConstructor
code-creation,Builtin,2,385592,0x7ff78f57a204,176,CreateEmptyLiteralObject
code-creation,Builtin,2,385601,0x7ff78f57a2c4,536,NumberConstructor
code-creation,Builtin,2,385611,0x7ff78f57a4e4,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,385621,0x7ff78f57a544,64,StringToNumber
code-creation,Builtin,2,385631,0x7ff78f57a5a4,184,NonNumberToNumber
code-creation,Builtin,2,385640,0x7ff78f57a664,240,NonNumberToNumeric
code-creation,Builtin,2,385650,0x7ff78f57a764,36,ToNumeric
code-creation,Builtin,2,385659,0x7ff78f57a7a4,1184,NumberToString
code-creation,Builtin,2,385669,0x7ff78f57ac64,92,ToBoolean
code-creation,Builtin,2,385678,0x7ff78f57acc4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,385688,0x7ff78f57ad44,728,ToLength
code-creation,Builtin,2,385697,0x7ff78f57b024,1312,ToName
code-creation,Builtin,2,385706,0x7ff78f57b564,756,ToObject
code-creation,Builtin,2,385716,0x7ff78f57b864,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,385725,0x7ff78f57b944,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,385735,0x7ff78f57ba24,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,385750,0x7ff78f57bb04,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,385762,0x7ff78f57bc44,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,385772,0x7ff78f57bd84,216,FastConsoleAssert
code-creation,Builtin,2,385782,0x7ff78f57be64,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,385792,0x7ff78f57bf24,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,385802,0x7ff78f57c084,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,385812,0x7ff78f57c1e4,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,385822,0x7ff78f57c424,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,385832,0x7ff78f57c664,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,385842,0x7ff78f57c904,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,385851,0x7ff78f57cba4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,385861,0x7ff78f57cee4,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,385871,0x7ff78f57d1a4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,385881,0x7ff78f57d504,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,385891,0x7ff78f57d8a4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,385902,0x7ff78f57dc84,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,385913,0x7ff78f57e084,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,385923,0x7ff78f57e444,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,385933,0x7ff78f57e804,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,385943,0x7ff78f57ec24,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,385953,0x7ff78f57f044,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,385963,0x7ff78f57f484,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,385972,0x7ff78f57f8c4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,385982,0x7ff78f57fce4,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,385993,0x7ff78f580144,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,386014,0x7ff78f580504,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,386033,0x7ff78f5808c4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,386049,0x7ff78f580c04,1152,FinalizationRegistryRegister
code-creation,Builtin,2,386065,0x7ff78f5810a4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,386083,0x7ff78f581344,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,386099,0x7ff78f5814a4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,386114,0x7ff78f581844,88,IncBlockCounter
code-creation,Builtin,2,386129,0x7ff78f5818a4,228,GetTemplateObject
code-creation,Builtin,2,386144,0x7ff78f5819a4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,386160,0x7ff78f5819c4,92,ForInNext
code-creation,Builtin,2,386174,0x7ff78f581a24,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,386189,0x7ff78f581ac4,116,GetIteratorWithFeedback
code-creation,Builtin,2,386204,0x7ff78f581b44,100,GetIteratorBaseline
code-creation,Builtin,2,386219,0x7ff78f581bc4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,386235,0x7ff78f581ce4,1084,CallIteratorWithFeedback
code-creation,Builtin,2,386251,0x7ff78f582124,288,MathAbs
code-creation,Builtin,2,386265,0x7ff78f582264,428,MathCeil
code-creation,Builtin,2,386279,0x7ff78f582424,432,MathFloor
code-creation,Builtin,2,386294,0x7ff78f5825e4,488,MathRound
code-creation,Builtin,2,386308,0x7ff78f5827e4,428,MathTrunc
code-creation,Builtin,2,386322,0x7ff78f5829a4,368,MathPow
code-creation,Builtin,2,386336,0x7ff78f582b24,396,MathMax
code-creation,Builtin,2,386351,0x7ff78f582cc4,404,MathMin
code-creation,Builtin,2,386365,0x7ff78f582e64,320,MathAcos
code-creation,Builtin,2,386379,0x7ff78f582fc4,320,MathAcosh
code-creation,Builtin,2,386394,0x7ff78f583124,320,MathAsin
code-creation,Builtin,2,386409,0x7ff78f583284,320,MathAsinh
code-creation,Builtin,2,386423,0x7ff78f5833e4,320,MathAtan
code-creation,Builtin,2,386438,0x7ff78f583544,416,MathAtan2
code-creation,Builtin,2,386452,0x7ff78f583704,320,MathAtanh
code-creation,Builtin,2,386466,0x7ff78f583864,320,MathCbrt
code-creation,Builtin,2,386481,0x7ff78f5839c4,168,MathClz32
code-creation,Builtin,2,386495,0x7ff78f583a84,320,MathCos
code-creation,Builtin,2,386510,0x7ff78f583be4,320,MathCosh
code-creation,Builtin,2,386524,0x7ff78f583d44,320,MathExp
code-creation,Builtin,2,386538,0x7ff78f583ea4,320,MathExpm1
code-creation,Builtin,2,386553,0x7ff78f584004,272,MathFround
code-creation,Builtin,2,386567,0x7ff78f584124,304,MathImul
code-creation,Builtin,2,386582,0x7ff78f584264,320,MathLog
code-creation,Builtin,2,386596,0x7ff78f5843c4,320,MathLog1p
code-creation,Builtin,2,386613,0x7ff78f584524,320,MathLog10
code-creation,Builtin,2,386628,0x7ff78f584684,320,MathLog2
code-creation,Builtin,2,386643,0x7ff78f5847e4,320,MathSin
code-creation,Builtin,2,386658,0x7ff78f584944,180,MathSign
code-creation,Builtin,2,386674,0x7ff78f584a04,320,MathSinh
code-creation,Builtin,2,386694,0x7ff78f584b64,268,MathSqrt
code-creation,Builtin,2,386711,0x7ff78f584c84,320,MathTan
code-creation,Builtin,2,386726,0x7ff78f584de4,320,MathTanh
code-creation,Builtin,2,386740,0x7ff78f584f44,1060,MathHypot
code-creation,Builtin,2,386762,0x7ff78f585384,332,MathRandom
code-creation,Builtin,2,386778,0x7ff78f5854e4,2956,NumberPrototypeToString
code-creation,Builtin,2,386858,0x7ff78f586084,136,NumberIsFinite
code-creation,Builtin,2,386877,0x7ff78f586124,340,NumberIsInteger
code-creation,Builtin,2,386893,0x7ff78f586284,116,NumberIsNaN
code-creation,Builtin,2,386908,0x7ff78f586304,372,NumberIsSafeInteger
code-creation,Builtin,2,386923,0x7ff78f586484,156,NumberPrototypeValueOf
code-creation,Builtin,2,386939,0x7ff78f586524,196,NumberParseFloat
code-creation,Builtin,2,386954,0x7ff78f586604,248,ParseInt
code-creation,Builtin,2,386969,0x7ff78f586704,84,NumberParseInt
code-creation,Builtin,2,386984,0x7ff78f586764,860,Add
code-creation,Builtin,2,386998,0x7ff78f586ac4,424,Subtract
code-creation,Builtin,2,387013,0x7ff78f586c84,608,Multiply
code-creation,Builtin,2,387027,0x7ff78f586f04,532,Divide
code-creation,Builtin,2,387042,0x7ff78f587124,592,Modulus
code-creation,Builtin,2,387056,0x7ff78f587384,524,Exponentiate
code-creation,Builtin,2,387071,0x7ff78f5875a4,344,Negate
code-creation,Builtin,2,387086,0x7ff78f587704,112,BitwiseNot
code-creation,Builtin,2,387100,0x7ff78f587784,112,Decrement
code-creation,Builtin,2,387115,0x7ff78f587804,112,Increment
code-creation,Builtin,2,387129,0x7ff78f587884,392,ShiftLeft
code-creation,Builtin,2,387144,0x7ff78f587a24,392,ShiftRight
code-creation,Builtin,2,387159,0x7ff78f587bc4,508,ShiftRightLogical
code-creation,Builtin,2,387175,0x7ff78f587dc4,388,BitwiseAnd
code-creation,Builtin,2,387190,0x7ff78f587f64,388,BitwiseOr
code-creation,Builtin,2,387204,0x7ff78f588104,388,BitwiseXor
code-creation,Builtin,2,387219,0x7ff78f5882a4,796,LessThan
code-creation,Builtin,2,387234,0x7ff78f5885c4,796,LessThanOrEqual
code-creation,Builtin,2,387248,0x7ff78f5888e4,796,GreaterThan
code-creation,Builtin,2,387263,0x7ff78f588c04,796,GreaterThanOrEqual
code-creation,Builtin,2,387279,0x7ff78f588f24,860,Equal
code-creation,Builtin,2,387293,0x7ff78f589284,348,StrictEqual
code-creation,Builtin,2,387308,0x7ff78f5893e4,3132,ObjectFromEntries
code-creation,Builtin,2,387323,0x7ff78f58a024,756,CreateObjectWithoutProperties
code-creation,Builtin,2,387339,0x7ff78f58a324,144,ObjectIsExtensible
code-creation,Builtin,2,387354,0x7ff78f58a3c4,148,ObjectPreventExtensions
code-creation,Builtin,2,387369,0x7ff78f58a464,144,ObjectGetPrototypeOf
code-creation,Builtin,2,387384,0x7ff78f58a504,300,ObjectSetPrototypeOf
code-creation,Builtin,2,387400,0x7ff78f58a644,80,ObjectPrototypeToString
code-creation,Builtin,2,387416,0x7ff78f58a6a4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,387431,0x7ff78f58a724,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,387447,0x7ff78f58a7e4,868,FulfillPromise
code-creation,Builtin,2,387461,0x7ff78f58ab64,988,RejectPromise
code-creation,Builtin,2,387477,0x7ff78f58af44,2416,NewPromiseCapability
code-creation,Builtin,2,387492,0x7ff78f58b8c4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,387507,0x7ff78f58b984,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,387523,0x7ff78f58ba24,1416,PerformPromiseThen
code-creation,Builtin,2,387538,0x7ff78f58bfc4,648,PromiseReject
code-creation,Builtin,2,387553,0x7ff78f58c264,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,387569,0x7ff78f58c384,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,387584,0x7ff78f58c404,4560,PromiseAll
code-creation,Builtin,2,387599,0x7ff78f58d5e4,4880,PromiseAllSettled
code-creation,Builtin,2,387614,0x7ff78f58e904,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,387630,0x7ff78f58ed64,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,387646,0x7ff78f58f2e4,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,387662,0x7ff78f58f864,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,387678,0x7ff78f58fd04,2368,PromiseAny
code-creation,Builtin,2,387693,0x7ff78f590664,2908,PromiseConstructor
code-creation,Builtin,2,387708,0x7ff78f5911c4,296,PromisePrototypeCatch
code-creation,Builtin,2,387724,0x7ff78f591304,88,PromiseValueThunkFinally
code-creation,Builtin,2,387742,0x7ff78f591364,84,PromiseThrowerFinally
code-creation,Builtin,2,387764,0x7ff78f5913c4,904,PromiseCatchFinally
code-creation,Builtin,2,387783,0x7ff78f591764,904,PromiseThenFinally
code-creation,Builtin,2,387799,0x7ff78f591b04,1700,PromisePrototypeFinally
code-creation,Builtin,2,387815,0x7ff78f5921c4,1336,PromiseRace
code-creation,Builtin,2,387829,0x7ff78f592704,268,PromiseFulfillReactionJob
code-creation,Builtin,2,387845,0x7ff78f592824,364,PromiseRejectReactionJob
code-creation,Builtin,2,387860,0x7ff78f5929a4,156,PromiseResolveTrampoline
code-creation,Builtin,2,387876,0x7ff78f592a44,656,PromiseResolve
code-creation,Builtin,2,387890,0x7ff78f592ce4,712,ResolvePromise
code-creation,Builtin,2,387906,0x7ff78f592fc4,2224,PromisePrototypeThen
code-creation,Builtin,2,387921,0x7ff78f593884,1144,PromiseResolveThenableJob
code-creation,Builtin,2,387936,0x7ff78f593d04,448,ProxyConstructor
code-creation,Builtin,2,387951,0x7ff78f593ee4,1760,ProxyDeleteProperty
code-creation,Builtin,2,387966,0x7ff78f5945e4,2112,ProxyGetProperty
code-creation,Builtin,2,387982,0x7ff78f594e44,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,387996,0x7ff78f595284,1668,ProxyHasProperty
code-creation,Builtin,2,388012,0x7ff78f595924,760,ProxyIsExtensible
code-creation,Builtin,2,388027,0x7ff78f595c24,800,ProxyPreventExtensions
code-creation,Builtin,2,388043,0x7ff78f595f64,1148,ProxyRevocable
code-creation,Builtin,2,388058,0x7ff78f5963e4,120,ProxyRevoke
code-creation,Builtin,2,388073,0x7ff78f596464,2216,ProxySetProperty
code-creation,Builtin,2,388088,0x7ff78f596d24,1292,ProxySetPrototypeOf
code-creation,Builtin,2,388103,0x7ff78f597244,208,ReflectIsExtensible
code-creation,Builtin,2,388118,0x7ff78f597324,212,ReflectPreventExtensions
code-creation,Builtin,2,388133,0x7ff78f597404,188,ReflectGetPrototypeOf
code-creation,Builtin,2,388148,0x7ff78f5974c4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,388164,0x7ff78f597604,284,ReflectGet
code-creation,Builtin,2,388179,0x7ff78f597724,160,ReflectDeleteProperty
code-creation,Builtin,2,388193,0x7ff78f5977e4,148,ReflectHas
code-creation,Builtin,2,388208,0x7ff78f597884,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,388224,0x7ff78f598ca4,5104,RegExpPrototypeExec
code-creation,Builtin,2,388242,0x7ff78f59a0a4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,388258,0x7ff78f59a9e4,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,388274,0x7ff78f59cec4,8840,RegExpMatchFast
code-creation,Builtin,2,388289,0x7ff78f59f164,3600,RegExpPrototypeMatch
code-creation,Builtin,2,388305,0x7ff78f59ff84,6328,RegExpReplace
code-creation,Builtin,2,388319,0x7ff78f5a1844,524,RegExpPrototypeReplace
code-creation,Builtin,2,388335,0x7ff78f5a1a64,1424,RegExpSearchFast
code-creation,Builtin,2,388350,0x7ff78f5a2004,1640,RegExpPrototypeSearch
code-creation,Builtin,2,388365,0x7ff78f5a2684,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,388380,0x7ff78f5a2764,5872,RegExpSplit
code-creation,Builtin,2,388395,0x7ff78f5a3e64,476,RegExpPrototypeSplit
code-creation,Builtin,2,388411,0x7ff78f5a4044,2252,RegExpPrototypeTest
code-creation,Builtin,2,388426,0x7ff78f5a4924,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,388441,0x7ff78f5a4e84,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,388459,0x7ff78f5a4f84,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,388475,0x7ff78f5a5084,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,388491,0x7ff78f5a5184,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,388507,0x7ff78f5a5284,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,388523,0x7ff78f5a5384,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,388538,0x7ff78f5a5484,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,388555,0x7ff78f5a55a4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,388575,0x7ff78f5a56c4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,388592,0x7ff78f5a5fa4,1500,StringPrototypeAt
code-creation,Builtin,2,388606,0x7ff78f5a6584,3008,StringPrototypeEndsWith
code-creation,Builtin,2,388622,0x7ff78f5a7164,480,CreateHTML
code-creation,Builtin,2,388636,0x7ff78f5a7364,164,StringPrototypeAnchor
code-creation,Builtin,2,388652,0x7ff78f5a7424,128,StringPrototypeBig
code-creation,Builtin,2,388667,0x7ff78f5a74c4,128,StringPrototypeBlink
code-creation,Builtin,2,388684,0x7ff78f5a7564,128,StringPrototypeBold
code-creation,Builtin,2,388701,0x7ff78f5a7604,168,StringPrototypeFontcolor
code-creation,Builtin,2,388717,0x7ff78f5a76c4,168,StringPrototypeFontsize
code-creation,Builtin,2,388732,0x7ff78f5a7784,128,StringPrototypeFixed
code-creation,Builtin,2,388747,0x7ff78f5a7824,128,StringPrototypeItalics
code-creation,Builtin,2,388773,0x7ff78f5a78c4,168,StringPrototypeLink
code-creation,Builtin,2,388789,0x7ff78f5a7984,128,StringPrototypeSmall
code-creation,Builtin,2,388804,0x7ff78f5a7a24,128,StringPrototypeStrike
code-creation,Builtin,2,388819,0x7ff78f5a7ac4,128,StringPrototypeSub
code-creation,Builtin,2,388835,0x7ff78f5a7b64,128,StringPrototypeSup
code-creation,Builtin,2,388850,0x7ff78f5a7c04,1028,StringPrototypeIncludes
code-creation,Builtin,2,388865,0x7ff78f5a8024,628,StringPrototypeIndexOf
code-creation,Builtin,2,388878,0x7ff78f5a82a4,344,StringPrototypeIterator
code-creation,Builtin,2,388892,0x7ff78f5a8404,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,388907,0x7ff78f5a8c04,1304,StringPrototypeMatch
code-creation,Builtin,2,388922,0x7ff78f5a9124,1304,StringPrototypeSearch
code-creation,Builtin,2,388938,0x7ff78f5a9644,824,StringPrototypePadStart
code-creation,Builtin,2,388953,0x7ff78f5a9984,824,StringPrototypePadEnd
code-creation,Builtin,2,388967,0x7ff78f5a9cc4,120,StringRepeat
code-creation,Builtin,2,388982,0x7ff78f5a9d44,400,StringPrototypeRepeat
code-creation,Builtin,2,389000,0x7ff78f5a9ee4,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,389016,0x7ff78f5acaa4,3388,StringPrototypeSlice
code-creation,Builtin,2,389031,0x7ff78f5ad7e4,3028,StringPrototypeStartsWith
code-creation,Builtin,2,389046,0x7ff78f5ae3c4,3328,StringPrototypeSubstr
code-creation,Builtin,2,389061,0x7ff78f5af0e4,3260,StringPrototypeSubstring
code-creation,Builtin,2,389076,0x7ff78f5afda4,6916,StringPrototypeTrim
code-creation,Builtin,2,389090,0x7ff78f5b18c4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,389105,0x7ff78f5b3184,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,389120,0x7ff78f5b4864,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,389135,0x7ff78f5b4924,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,389150,0x7ff78f5b49c4,172,SymbolPrototypeToString
code-creation,Builtin,2,389164,0x7ff78f5b4a84,156,SymbolPrototypeValueOf
code-creation,Builtin,2,389179,0x7ff78f5b4b24,832,TypedArrayPrototypeAt
code-creation,Builtin,2,389197,0x7ff78f5b4e84,10064,CreateTypedArray
code-creation,Builtin,2,389213,0x7ff78f5b75e4,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,389229,0x7ff78f5b79e4,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,389245,0x7ff78f5b7b64,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,389264,0x7ff78f5b8924,996,TypedArrayPrototypeFind
code-creation,Builtin,2,389280,0x7ff78f5b8d24,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,389295,0x7ff78f5b9124,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,389311,0x7ff78f5b92e4,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,389329,0x7ff78f5b97a4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,389345,0x7ff78f5b9964,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,389360,0x7ff78f5b9e44,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,389375,0x7ff78f5ba1c4,2352,TypedArrayFrom
code-creation,Builtin,2,389389,0x7ff78f5bab04,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,389403,0x7ff78f5bac84,1028,TypedArrayOf
code-creation,Builtin,2,389418,0x7ff78f5bb0a4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,389432,0x7ff78f5bb464,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,389448,0x7ff78f5bb824,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,389463,0x7ff78f5bc204,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,389478,0x7ff78f5bce04,992,TypedArrayPrototypeSome
code-creation,Builtin,2,389493,0x7ff78f5bd204,1060,TypedArrayMergeSort
code-creation,Builtin,2,389508,0x7ff78f5bd644,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,389528,0x7ff78f5bdca4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,389554,0x7ff78f5be764,372,TypedArrayPrototypeValues
code-creation,Builtin,2,389579,0x7ff78f5be8e4,952,WeakRefConstructor
code-creation,Builtin,2,389600,0x7ff78f5beca4,184,WeakRefDeref
code-creation,Builtin,2,389615,0x7ff78f5bed64,680,NewSloppyArgumentsElements
code-creation,Builtin,2,389635,0x7ff78f5bf024,296,NewStrictArgumentsElements
code-creation,Builtin,2,389658,0x7ff78f5bf164,320,NewRestArgumentsElements
code-creation,Builtin,2,389683,0x7ff78f5bf2c4,1388,FastNewSloppyArguments
code-creation,Builtin,2,389705,0x7ff78f5bf844,524,FastNewStrictArguments
code-creation,Builtin,2,389727,0x7ff78f5bfa64,556,FastNewRestArguments
code-creation,Builtin,2,389742,0x7ff78f5bfca4,676,StringSlowFlatten
code-creation,Builtin,2,389766,0x7ff78f5bff64,2068,StringIndexOf
code-creation,Builtin,2,389788,0x7ff78f5c0784,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,389812,0x7ff78f5c07a4,20,TestHelperPlus1
code-creation,Builtin,2,389834,0x7ff78f5c07c4,20,TestHelperPlus2
code-creation,Builtin,2,389849,0x7ff78f5c07e4,96,NewSmiBox
code-creation,Builtin,2,389863,0x7ff78f5c0864,24,ReturnTwoValues
code-creation,Builtin,2,389882,0x7ff78f5c0884,32,Load_FastSmiElements_0
code-creation,Builtin,2,389905,0x7ff78f5c08c4,32,Load_FastObjectElements_0
code-creation,Builtin,2,389926,0x7ff78f5c0904,144,Load_FastDoubleElements_0
code-creation,Builtin,2,389948,0x7ff78f5c09a4,32,Store_FastSmiElements_0
code-creation,Builtin,2,389963,0x7ff78f5c09e4,96,Store_FastObjectElements_0
code-creation,Builtin,2,389978,0x7ff78f5c0a64,48,Store_FastDoubleElements_0
code-creation,Builtin,2,389993,0x7ff78f5c0aa4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,390011,0x7ff78f5c0ae4,36,Delete_FastObjectElements_0
code-creation,Builtin,2,390035,0x7ff78f5c0b24,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,390058,0x7ff78f5c0b64,308,SortCompareDefault
code-creation,Builtin,2,390076,0x7ff78f5c0ca4,92,SortCompareUserFn
code-creation,Builtin,2,390092,0x7ff78f5c0d04,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,390115,0x7ff78f5c0d24,312,Copy
code-creation,Builtin,2,390134,0x7ff78f5c0e64,5776,MergeAt
code-creation,Builtin,2,390150,0x7ff78f5c2504,792,GallopLeft
code-creation,Builtin,2,390168,0x7ff78f5c2824,832,GallopRight
code-creation,Builtin,2,390188,0x7ff78f5c2b84,3832,ArrayTimSort
code-creation,Builtin,2,390208,0x7ff78f5c3a84,2112,ArrayPrototypeSort
code-creation,Builtin,2,390222,0x7ff78f5c42e4,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,390238,0x7ff78f5c4364,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,390253,0x7ff78f5c43e4,76,WasmTaggedToFloat64
code-creation,Builtin,2,390267,0x7ff78f5c4444,72,WasmMemoryGrow
code-creation,Builtin,2,390282,0x7ff78f5c44a4,100,WasmTableInit
code-creation,Builtin,2,390296,0x7ff78f5c4524,100,WasmTableCopy
code-creation,Builtin,2,390311,0x7ff78f5c45a4,84,WasmTableFill
code-creation,Builtin,2,390774,0x7ff78f5c4604,72,WasmTableGrow
code-creation,Builtin,2,390795,0x7ff78f5c4664,144,WasmTableGet
code-creation,Builtin,2,390811,0x7ff78f5c4704,236,WasmTableSet
code-creation,Builtin,2,390826,0x7ff78f5c4804,88,WasmRefFunc
code-creation,Builtin,2,390841,0x7ff78f5c4864,144,WasmAllocateFixedArray
code-creation,Builtin,2,390856,0x7ff78f5c4904,44,WasmThrow
code-creation,Builtin,2,390871,0x7ff78f5c4944,52,WasmRethrow
code-creation,Builtin,2,390886,0x7ff78f5c4984,44,WasmTriggerTierUp
code-creation,Builtin,2,390901,0x7ff78f5c49c4,32,WasmStackGuard
code-creation,Builtin,2,390916,0x7ff78f5c4a04,32,WasmStackOverflow
code-creation,Builtin,2,390979,0x7ff78f5c4a44,40,WasmTraceMemory
code-creation,Builtin,2,391001,0x7ff78f5c4a84,32,WasmTraceEnter
code-creation,Builtin,2,391024,0x7ff78f5c4ac4,40,WasmTraceExit
code-creation,Builtin,2,391050,0x7ff78f5c4b04,332,WasmAllocateJSArray
code-creation,Builtin,2,391068,0x7ff78f5c4c64,104,WasmAllocatePair
code-creation,Builtin,2,391084,0x7ff78f5c4ce4,64,WasmAllocateRtt
code-creation,Builtin,2,391099,0x7ff78f5c4d44,72,WasmAllocateFreshRtt
code-creation,Builtin,2,391114,0x7ff78f5c4da4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,391135,0x7ff78f5c4e24,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,391155,0x7ff78f5c4ec4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,391171,0x7ff78f5c4f84,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,391186,0x7ff78f5c5044,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,391202,0x7ff78f5c50c4,60,WasmArrayCopy
code-creation,Builtin,2,391221,0x7ff78f5c5104,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,391237,0x7ff78f5c5204,52,WasmSubtypeCheck
code-creation,Builtin,2,391252,0x7ff78f5c5244,8,WasmInt32ToNumber
code-creation,Builtin,2,391271,0x7ff78f5c5264,116,WasmUint32ToNumber
code-creation,Builtin,2,391288,0x7ff78f5c52e4,144,UintPtr53ToNumber
code-creation,Builtin,2,391302,0x7ff78f5c5384,96,WasmAtomicNotify
code-creation,Builtin,2,391316,0x7ff78f5c5404,116,WasmI32AtomicWait64
code-creation,Builtin,2,391329,0x7ff78f5c5484,116,WasmI64AtomicWait64
code-creation,Builtin,2,391344,0x7ff78f5c5504,580,WasmGetOwnProperty
code-creation,Builtin,2,391358,0x7ff78f5c5764,40,WasmTrap
code-creation,Builtin,2,391372,0x7ff78f5c57a4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,391387,0x7ff78f5c57c4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,391409,0x7ff78f5c57e4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,391545,0x7ff78f5c5804,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,391565,0x7ff78f5c5824,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,391584,0x7ff78f5c5844,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,391622,0x7ff78f5c5864,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,391685,0x7ff78f5c5884,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,391708,0x7ff78f5c58a4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,392165,0x7ff78f5c58c4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,392184,0x7ff78f5c58e4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,392201,0x7ff78f5c5904,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,392217,0x7ff78f5c5924,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,392234,0x7ff78f5c5944,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,392249,0x7ff78f5c5964,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,392266,0x7ff78f5c5984,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,392282,0x7ff78f5c59a4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,392299,0x7ff78f5c5a64,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,392315,0x7ff78f5c5a84,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,392331,0x7ff78f5c5b04,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,392347,0x7ff78f5c5b84,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,392364,0x7ff78f5c5ba4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,392381,0x7ff78f5c5c84,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,392398,0x7ff78f5c5d84,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,392414,0x7ff78f5c5da4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,392431,0x7ff78f5c5dc4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,392447,0x7ff78f5c5de4,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,392672,0x7ff78f5c5e04,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,392692,0x7ff78f5c5ea4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,392707,0x7ff78f5c5ec4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,392724,0x7ff78f5c5f04,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,392747,0x7ff78f5c5f44,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,392767,0x7ff78f5c5f84,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,392782,0x7ff78f5c6a04,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,392797,0x7ff78f5c6a24,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,392811,0x7ff78f5c6a64,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,392825,0x7ff78f5c6a84,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,392844,0x7ff78f5c6b44,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,392863,0x7ff78f5c6c04,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,392879,0x7ff78f5c6c84,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,392894,0x7ff78f5c6cc4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,392910,0x7ff78f5c6d64,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,392925,0x7ff78f5c6de4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,392942,0x7ff78f5c6e04,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,392959,0x7ff78f5c6ea4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,392975,0x7ff78f5c6ec4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,392992,0x7ff78f5c6ee4,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,393009,0x7ff78f5c7164,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,393025,0x7ff78f5c7244,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,393090,0x7ff78f5c7284,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,393115,0x7ff78f5c7364,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,393133,0x7ff78f5c7464,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,393152,0x7ff78f5c74a4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,393172,0x7ff78f5c7584,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,393196,0x7ff78f5c75a4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,393252,0x7ff78f5c75c4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,393273,0x7ff78f5c7684,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,393292,0x7ff78f5c76a4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,393312,0x7ff78f5c76c4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,393331,0x7ff78f5c7784,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,393350,0x7ff78f5c77a4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,393369,0x7ff78f5c77c4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,393397,0x7ff78f5c7884,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,393425,0x7ff78f5c78a4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,393494,0x7ff78f5c78c4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,393516,0x7ff78f5c7984,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,393535,0x7ff78f5c7a24,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,393576,0x7ff78f5c7ae4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,393604,0x7ff78f5c7ba4,12,CollatorConstructor
code-creation,Builtin,2,393631,0x7ff78f5c7bc4,12,CollatorInternalCompare
code-creation,Builtin,2,393656,0x7ff78f5c7be4,12,CollatorPrototypeCompare
code-creation,Builtin,2,393681,0x7ff78f5c7c04,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,393708,0x7ff78f5c7c24,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,393734,0x7ff78f5c7c44,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,393766,0x7ff78f5c7c64,12,DatePrototypeToLocaleString
code-creation,Builtin,2,393792,0x7ff78f5c7c84,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,393818,0x7ff78f5c7ca4,12,DateTimeFormatConstructor
code-creation,Builtin,2,393844,0x7ff78f5c7cc4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,393870,0x7ff78f5c7ce4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,393896,0x7ff78f5c7d04,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,393922,0x7ff78f5c7d24,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,393948,0x7ff78f5c7d44,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,393974,0x7ff78f5c7d64,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,394000,0x7ff78f5c7d84,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,394026,0x7ff78f5c7da4,12,DisplayNamesConstructor
code-creation,Builtin,2,394054,0x7ff78f5c7dc4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,394081,0x7ff78f5c7de4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,394107,0x7ff78f5c7e04,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,394133,0x7ff78f5c7e24,12,IntlGetCanonicalLocales
code-creation,Builtin,2,394158,0x7ff78f5c7e44,12,ListFormatConstructor
code-creation,Builtin,2,394184,0x7ff78f5c7e64,224,ListFormatPrototypeFormat
code-creation,Builtin,2,394209,0x7ff78f5c7f64,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,394235,0x7ff78f5c8064,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,394261,0x7ff78f5c8084,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,394287,0x7ff78f5c80a4,12,LocaleConstructor
code-creation,Builtin,2,394312,0x7ff78f5c80c4,12,LocalePrototypeBaseName
code-creation,Builtin,2,394337,0x7ff78f5c80e4,12,LocalePrototypeCalendar
code-creation,Builtin,2,394363,0x7ff78f5c8104,12,LocalePrototypeCalendars
code-creation,Builtin,2,394388,0x7ff78f5c8124,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,394414,0x7ff78f5c8144,12,LocalePrototypeCollation
code-creation,Builtin,2,394439,0x7ff78f5c8164,12,LocalePrototypeCollations
code-creation,Builtin,2,394465,0x7ff78f5c8184,12,LocalePrototypeHourCycle
code-creation,Builtin,2,394490,0x7ff78f5c81a4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,394516,0x7ff78f5c81c4,12,LocalePrototypeLanguage
code-creation,Builtin,2,394541,0x7ff78f5c81e4,12,LocalePrototypeMaximize
code-creation,Builtin,2,394566,0x7ff78f5c8204,12,LocalePrototypeMinimize
code-creation,Builtin,2,394592,0x7ff78f5c8224,12,LocalePrototypeNumeric
code-creation,Builtin,2,394618,0x7ff78f5c8244,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,394643,0x7ff78f5c8264,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,394669,0x7ff78f5c8284,12,LocalePrototypeRegion
code-creation,Builtin,2,394695,0x7ff78f5c82a4,12,LocalePrototypeScript
code-creation,Builtin,2,394720,0x7ff78f5c82c4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,394746,0x7ff78f5c82e4,12,LocalePrototypeTimeZones
code-creation,Builtin,2,394775,0x7ff78f5c8304,12,LocalePrototypeToString
code-creation,Builtin,2,394801,0x7ff78f5c8324,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,394827,0x7ff78f5c8344,12,NumberFormatConstructor
code-creation,Builtin,2,394852,0x7ff78f5c8364,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,394878,0x7ff78f5c8384,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,394904,0x7ff78f5c83a4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,394930,0x7ff78f5c83c4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,394956,0x7ff78f5c83e4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,394982,0x7ff78f5c8404,12,PluralRulesConstructor
code-creation,Builtin,2,395007,0x7ff78f5c8424,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,395033,0x7ff78f5c8444,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,395059,0x7ff78f5c8464,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,395085,0x7ff78f5c8484,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,395111,0x7ff78f5c84a4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,395137,0x7ff78f5c84c4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,395163,0x7ff78f5c84e4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,395189,0x7ff78f5c8504,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,395215,0x7ff78f5c8524,12,SegmenterConstructor
code-creation,Builtin,2,395241,0x7ff78f5c8544,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,395267,0x7ff78f5c8564,12,SegmenterPrototypeSegment
code-creation,Builtin,2,395292,0x7ff78f5c8584,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,395318,0x7ff78f5c85a4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,395344,0x7ff78f5c85c4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,395369,0x7ff78f5c85e4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,395395,0x7ff78f5c8604,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,395423,0x7ff78f5c8624,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,395450,0x7ff78f5c8644,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,395476,0x7ff78f5c8664,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,395502,0x7ff78f5c8744,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,395528,0x7ff78f5c8764,636,StringToLowerCaseIntl
code-creation,Builtin,2,395553,0x7ff78f5c89e4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,395579,0x7ff78f5c8a04,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,395605,0x7ff78f5c8a24,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,395631,0x7ff78f5c8a44,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,395657,0x7ff78f5c8a64,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,395682,0x7ff78f5c8a84,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,395708,0x7ff78f5c8aa4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,395735,0x7ff78f5c8ac4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,395765,0x7ff78f5c8ae4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,395792,0x7ff78f5c8b04,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,395817,0x7ff78f5c8b24,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,395843,0x7ff78f5c8b44,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,395869,0x7ff78f5c8b64,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,395897,0x7ff78f5c8b84,24,Wide
code-creation,BytecodeHandler,0,395922,0x7ff78f5c8ba4,24,ExtraWide
code-creation,BytecodeHandler,0,395948,0x7ff78f5c8bc4,104,DebugBreakWide
code-creation,BytecodeHandler,0,395974,0x7ff78f5c8c44,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,396000,0x7ff78f5c8cc4,164,DebugBreak0
code-creation,BytecodeHandler,0,396026,0x7ff78f5c8d84,104,DebugBreak1
code-creation,BytecodeHandler,0,396052,0x7ff78f5c8e04,104,DebugBreak2
code-creation,BytecodeHandler,0,396078,0x7ff78f5c8e84,104,DebugBreak3
code-creation,BytecodeHandler,0,396104,0x7ff78f5c8f04,104,DebugBreak4
code-creation,BytecodeHandler,0,396130,0x7ff78f5c8f84,104,DebugBreak5
code-creation,BytecodeHandler,0,396155,0x7ff78f5c9004,104,DebugBreak6
code-creation,BytecodeHandler,0,396182,0x7ff78f5c9084,32,Ldar
code-creation,BytecodeHandler,0,396207,0x7ff78f5c90c4,68,LdaZero
code-creation,BytecodeHandler,0,396233,0x7ff78f5c9124,76,LdaSmi
code-creation,BytecodeHandler,0,396258,0x7ff78f5c9184,68,LdaUndefined
code-creation,BytecodeHandler,0,396284,0x7ff78f5c91e4,68,LdaNull
code-creation,BytecodeHandler,0,396309,0x7ff78f5c9244,68,LdaTheHole
code-creation,BytecodeHandler,0,396335,0x7ff78f5c92a4,20,LdaTrue
code-creation,BytecodeHandler,0,396361,0x7ff78f5c92c4,20,LdaFalse
code-creation,BytecodeHandler,0,396386,0x7ff78f5c92e4,76,LdaConstant
code-creation,BytecodeHandler,0,396412,0x7ff78f5c9344,132,LdaContextSlot
code-creation,BytecodeHandler,0,396438,0x7ff78f5c93e4,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,396465,0x7ff78f5c9484,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,396491,0x7ff78f5c94e4,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,396518,0x7ff78f5c9544,32,Star
code-creation,BytecodeHandler,0,396544,0x7ff78f5c9584,40,Mov
code-creation,BytecodeHandler,0,396569,0x7ff78f5c95c4,40,PushContext
code-creation,BytecodeHandler,0,396595,0x7ff78f5c9604,36,PopContext
code-creation,BytecodeHandler,0,396621,0x7ff78f5c9644,48,TestReferenceEqual
code-creation,BytecodeHandler,0,396647,0x7ff78f5c9684,52,TestUndetectable
code-creation,BytecodeHandler,0,396673,0x7ff78f5c96c4,36,TestNull
code-creation,BytecodeHandler,0,396698,0x7ff78f5c9704,36,TestUndefined
code-creation,BytecodeHandler,0,396724,0x7ff78f5c9744,336,TestTypeOf
code-creation,BytecodeHandler,0,396754,0x7ff78f5c98a4,6036,LdaGlobal
code-creation,BytecodeHandler,0,396780,0x7ff78f5cb044,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,396807,0x7ff78f5cc204,168,StaGlobal
code-creation,BytecodeHandler,0,396832,0x7ff78f5cc2c4,160,StaContextSlot
code-creation,BytecodeHandler,0,396858,0x7ff78f5cc384,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,396888,0x7ff78f5cc404,124,LdaLookupSlot
code-creation,BytecodeHandler,0,396915,0x7ff78f5cc484,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,396942,0x7ff78f5cc584,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,396968,0x7ff78f5cd844,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,396995,0x7ff78f5cd8c4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,397022,0x7ff78f5cd9c4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,397048,0x7ff78f5cec64,220,StaLookupSlot
code-creation,BytecodeHandler,0,397074,0x7ff78f5ced44,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,397100,0x7ff78f5d01c4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,397127,0x7ff78f5d0284,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,397153,0x7ff78f5d0364,160,LdaModuleVariable
code-creation,BytecodeHandler,0,397179,0x7ff78f5d0424,292,StaModuleVariable
code-creation,BytecodeHandler,0,397205,0x7ff78f5d0564,172,StaNamedProperty
code-creation,BytecodeHandler,0,397231,0x7ff78f5d0624,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,397257,0x7ff78f5d06e4,164,StaKeyedProperty
code-creation,BytecodeHandler,0,397283,0x7ff78f5d07a4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,397309,0x7ff78f5d0864,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,397336,0x7ff78f5d0944,160,CollectTypeProfile
code-creation,BytecodeHandler,0,397362,0x7ff78f5d0a04,1028,Add
code-creation,BytecodeHandler,0,397388,0x7ff78f5d0e24,1064,Sub
code-creation,BytecodeHandler,0,397413,0x7ff78f5d1264,1024,Mul
code-creation,BytecodeHandler,0,397438,0x7ff78f5d1684,988,Div
code-creation,BytecodeHandler,0,397463,0x7ff78f5d1a64,912,Mod
code-creation,BytecodeHandler,0,397489,0x7ff78f5d1e04,964,Exp
code-creation,BytecodeHandler,0,397514,0x7ff78f5d21e4,876,BitwiseOr
code-creation,BytecodeHandler,0,397539,0x7ff78f5d2564,888,BitwiseXor
code-creation,BytecodeHandler,0,397565,0x7ff78f5d28e4,888,BitwiseAnd
code-creation,BytecodeHandler,0,397591,0x7ff78f5d2c64,900,ShiftLeft
code-creation,BytecodeHandler,0,397617,0x7ff78f5d3004,900,ShiftRight
code-creation,BytecodeHandler,0,397642,0x7ff78f5d33a4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,397668,0x7ff78f5d37a4,960,AddSmi
code-creation,BytecodeHandler,0,397693,0x7ff78f5d3b84,1000,SubSmi
code-creation,BytecodeHandler,0,397719,0x7ff78f5d3f84,916,MulSmi
code-creation,BytecodeHandler,0,397746,0x7ff78f5d4324,920,DivSmi
code-creation,BytecodeHandler,0,397775,0x7ff78f5d46c4,816,ModSmi
code-creation,BytecodeHandler,0,397800,0x7ff78f5d4a04,872,ExpSmi
code-creation,BytecodeHandler,0,397826,0x7ff78f5d4d84,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,397851,0x7ff78f5d4f84,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,397877,0x7ff78f5d5184,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,397904,0x7ff78f5d5384,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,397929,0x7ff78f5d5584,488,ShiftRightSmi
code-creation,BytecodeHandler,0,397955,0x7ff78f5d5784,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,397981,0x7ff78f5d5a24,656,Inc
code-creation,BytecodeHandler,0,398006,0x7ff78f5d5cc4,656,Dec
code-creation,BytecodeHandler,0,398031,0x7ff78f5d5f64,640,Negate
code-creation,BytecodeHandler,0,398056,0x7ff78f5d6204,480,BitwiseNot
code-creation,BytecodeHandler,0,398082,0x7ff78f5d6404,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,398108,0x7ff78f5d6484,36,LogicalNot
code-creation,BytecodeHandler,0,398134,0x7ff78f5d64c4,208,TypeOf
code-creation,BytecodeHandler,0,398159,0x7ff78f5d65a4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,398185,0x7ff78f5d6624,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,398212,0x7ff78f5d66a4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,398238,0x7ff78f5d66e4,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,398263,0x7ff78f5d6b64,1132,CallProperty
code-creation,BytecodeHandler,0,398289,0x7ff78f5d6fe4,1012,CallProperty0
code-creation,BytecodeHandler,0,398314,0x7ff78f5d73e4,1028,CallProperty1
code-creation,BytecodeHandler,0,398342,0x7ff78f5d7804,1040,CallProperty2
code-creation,BytecodeHandler,0,398370,0x7ff78f5d7c24,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,398396,0x7ff78f5d8024,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,398423,0x7ff78f5d8444,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,398449,0x7ff78f5d8844,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,398475,0x7ff78f5d8c64,1132,CallWithSpread
code-creation,BytecodeHandler,0,398501,0x7ff78f5d90e4,124,CallRuntime
code-creation,BytecodeHandler,0,398527,0x7ff78f5d9164,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,398553,0x7ff78f5d9204,80,CallJSRuntime
code-creation,BytecodeHandler,0,398579,0x7ff78f5d9264,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,398605,0x7ff78f5d9744,1020,Construct
code-creation,BytecodeHandler,0,398630,0x7ff78f5d9b44,536,ConstructWithSpread
code-creation,BytecodeHandler,0,398656,0x7ff78f5d9d64,1936,TestEqual
code-creation,BytecodeHandler,0,398682,0x7ff78f5da504,1064,TestEqualStrict
code-creation,BytecodeHandler,0,398708,0x7ff78f5da944,1624,TestLessThan
code-creation,BytecodeHandler,0,398734,0x7ff78f5dafa4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,398765,0x7ff78f5db604,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,398792,0x7ff78f5dbc64,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,398818,0x7ff78f5dc2c4,860,TestInstanceOf
code-creation,BytecodeHandler,0,398844,0x7ff78f5dc624,156,TestIn
code-creation,BytecodeHandler,0,398870,0x7ff78f5dc6c4,112,ToName
code-creation,BytecodeHandler,0,398896,0x7ff78f5dc744,212,ToNumber
code-creation,BytecodeHandler,0,398921,0x7ff78f5dc824,232,ToNumeric
code-creation,BytecodeHandler,0,398947,0x7ff78f5dc924,112,ToObject
code-creation,BytecodeHandler,0,398972,0x7ff78f5dc9a4,116,ToString
code-creation,BytecodeHandler,0,398998,0x7ff78f5dca24,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,399024,0x7ff78f5dcbc4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,399050,0x7ff78f5dd184,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,399077,0x7ff78f5dd1e4,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,399103,0x7ff78f5dd504,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,399129,0x7ff78f5ddd64,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,399156,0x7ff78f5dde64,168,CloneObject
code-creation,BytecodeHandler,0,399182,0x7ff78f5ddf24,212,GetTemplateObject
code-creation,BytecodeHandler,0,399208,0x7ff78f5de004,328,CreateClosure
code-creation,BytecodeHandler,0,399234,0x7ff78f5de164,120,CreateBlockContext
code-creation,BytecodeHandler,0,399260,0x7ff78f5de1e4,132,CreateCatchContext
code-creation,BytecodeHandler,0,399287,0x7ff78f5de284,256,CreateFunctionContext
code-creation,BytecodeHandler,0,399313,0x7ff78f5de3a4,256,CreateEvalContext
code-creation,BytecodeHandler,0,399340,0x7ff78f5de4c4,132,CreateWithContext
code-creation,BytecodeHandler,0,399366,0x7ff78f5de564,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,399392,0x7ff78f5deba4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,399419,0x7ff78f5dee04,632,CreateRestParameter
code-creation,BytecodeHandler,0,399445,0x7ff78f5df084,424,JumpLoop
code-creation,BytecodeHandler,0,399471,0x7ff78f5df244,44,Jump
code-creation,BytecodeHandler,0,399497,0x7ff78f5df284,56,JumpConstant
code-creation,BytecodeHandler,0,399523,0x7ff78f5df2c4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,399549,0x7ff78f5df324,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,399576,0x7ff78f5df384,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,399602,0x7ff78f5df3e4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,399629,0x7ff78f5df444,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,399655,0x7ff78f5df4a4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,399682,0x7ff78f5df504,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,399708,0x7ff78f5df564,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,399735,0x7ff78f5df5c4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,399768,0x7ff78f5df664,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,399796,0x7ff78f5df704,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,399823,0x7ff78f5df7a4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,399849,0x7ff78f5df844,64,JumpIfTrue
code-creation,BytecodeHandler,0,399875,0x7ff78f5df8a4,64,JumpIfFalse
code-creation,BytecodeHandler,0,399900,0x7ff78f5df904,64,JumpIfNull
code-creation,BytecodeHandler,0,399926,0x7ff78f5df964,64,JumpIfNotNull
code-creation,BytecodeHandler,0,399952,0x7ff78f5df9c4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,399978,0x7ff78f5dfa24,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,400004,0x7ff78f5dfa84,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,400031,0x7ff78f5dfae4,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,400057,0x7ff78f5dfb44,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,400084,0x7ff78f5dfbc4,464,ForInEnumerate
code-creation,BytecodeHandler,0,400110,0x7ff78f5dfda4,252,ForInPrepare
code-creation,BytecodeHandler,0,400136,0x7ff78f5dfea4,60,ForInContinue
code-creation,BytecodeHandler,0,400162,0x7ff78f5dfee4,256,ForInNext
code-creation,BytecodeHandler,0,400187,0x7ff78f5e0004,48,ForInStep
code-creation,BytecodeHandler,0,400213,0x7ff78f5e0044,36,SetPendingMessage
code-creation,BytecodeHandler,0,400239,0x7ff78f5e0084,116,Throw
code-creation,BytecodeHandler,0,400265,0x7ff78f5e0104,116,ReThrow
code-creation,BytecodeHandler,0,400291,0x7ff78f5e0184,112,Return
code-creation,BytecodeHandler,0,400316,0x7ff78f5e0204,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,400343,0x7ff78f5e02e4,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,400370,0x7ff78f5e0384,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,400397,0x7ff78f5e0424,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,400424,0x7ff78f5e04c4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,400450,0x7ff78f5e0544,512,SuspendGenerator
code-creation,BytecodeHandler,0,400476,0x7ff78f5e0764,128,ResumeGenerator
code-creation,BytecodeHandler,0,400502,0x7ff78f5e0804,152,GetIterator
code-creation,BytecodeHandler,0,400528,0x7ff78f5e08a4,116,Debugger
code-creation,BytecodeHandler,0,400554,0x7ff78f5e0924,124,IncBlockCounter
code-creation,BytecodeHandler,0,400579,0x7ff78f5e09a4,56,Abort
code-creation,BytecodeHandler,0,400605,0x7ff78f5e09e4,32,Star0
code-creation,BytecodeHandler,0,400630,0x7ff78f5e0a24,60,Illegal
code-creation,BytecodeHandler,0,400657,0x7ff78f5e0a64,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,400683,0x7ff78f5e0ae4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,400710,0x7ff78f5e0b64,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,400736,0x7ff78f5e0be4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,400769,0x7ff78f5e0c64,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,400801,0x7ff78f5e0ce4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,400822,0x7ff78f5e0d64,32,Ldar.Wide
code-creation,BytecodeHandler,0,400847,0x7ff78f5e0da4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,400874,0x7ff78f5e0de4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,400900,0x7ff78f5e0e24,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,400927,0x7ff78f5e0e84,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,400954,0x7ff78f5e0ee4,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,400981,0x7ff78f5e0f24,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,401008,0x7ff78f5e0f64,32,Star.Wide
code-creation,BytecodeHandler,0,401034,0x7ff78f5e0fa4,40,Mov.Wide
code-creation,BytecodeHandler,0,401060,0x7ff78f5e0fe4,40,PushContext.Wide
code-creation,BytecodeHandler,0,401086,0x7ff78f5e1024,36,PopContext.Wide
code-creation,BytecodeHandler,0,401113,0x7ff78f5e1064,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,401139,0x7ff78f5e10a4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,401165,0x7ff78f5e22e4,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,401192,0x7ff78f5e34e4,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,401221,0x7ff78f5e35a4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,401249,0x7ff78f5e3664,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,401276,0x7ff78f5e36e4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,401302,0x7ff78f5e3784,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,401329,0x7ff78f5e3884,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,401356,0x7ff78f5e4b84,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,401383,0x7ff78f5e4c24,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,401411,0x7ff78f5e4d24,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,401438,0x7ff78f5e6004,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,401464,0x7ff78f5e60e4,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,401491,0x7ff78f5e7564,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,401518,0x7ff78f5e7624,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,401545,0x7ff78f5e76e4,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,401571,0x7ff78f5e77a4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,401598,0x7ff78f5e78e4,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,401625,0x7ff78f5e79a4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,401652,0x7ff78f5e7a64,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,401678,0x7ff78f5e7b24,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,401705,0x7ff78f5e7be4,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,401732,0x7ff78f5e7cc4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,401764,0x7ff78f5e7d84,984,Add.Wide
code-creation,BytecodeHandler,0,401790,0x7ff78f5e8164,1020,Sub.Wide
code-creation,BytecodeHandler,0,401816,0x7ff78f5e8564,972,Mul.Wide
code-creation,BytecodeHandler,0,401842,0x7ff78f5e8944,988,Div.Wide
code-creation,BytecodeHandler,0,401868,0x7ff78f5e8d24,916,Mod.Wide
code-creation,BytecodeHandler,0,401894,0x7ff78f5e90c4,988,Exp.Wide
code-creation,BytecodeHandler,0,401920,0x7ff78f5e94a4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,401946,0x7ff78f5e9844,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,401972,0x7ff78f5e9be4,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,401998,0x7ff78f5e9f84,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,402024,0x7ff78f5ea344,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,402051,0x7ff78f5ea704,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,402077,0x7ff78f5eab24,916,AddSmi.Wide
code-creation,BytecodeHandler,0,402103,0x7ff78f5eaec4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,402129,0x7ff78f5eb2a4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,402155,0x7ff78f5eb644,920,DivSmi.Wide
code-creation,BytecodeHandler,0,402181,0x7ff78f5eb9e4,816,ModSmi.Wide
code-creation,BytecodeHandler,0,402207,0x7ff78f5ebd24,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,402234,0x7ff78f5ec0a4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,402260,0x7ff78f5ec2a4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,402287,0x7ff78f5ec4a4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,402313,0x7ff78f5ec6a4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,402340,0x7ff78f5ec8a4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,402367,0x7ff78f5ecaa4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,402394,0x7ff78f5ecd44,616,Inc.Wide
code-creation,BytecodeHandler,0,402420,0x7ff78f5ecfc4,616,Dec.Wide
code-creation,BytecodeHandler,0,402446,0x7ff78f5ed244,648,Negate.Wide
code-creation,BytecodeHandler,0,402472,0x7ff78f5ed4e4,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,402498,0x7ff78f5ed6e4,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,402525,0x7ff78f5ed764,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,402552,0x7ff78f5ed7e4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,402579,0x7ff78f5ed824,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,402606,0x7ff78f5edca4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,402634,0x7ff78f5ee124,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,402662,0x7ff78f5ee524,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,402688,0x7ff78f5ee944,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,402715,0x7ff78f5eed64,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,402742,0x7ff78f5ef164,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,402772,0x7ff78f5ef584,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,402800,0x7ff78f5ef9a4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,402827,0x7ff78f5efdc4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,402854,0x7ff78f5f0244,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,402880,0x7ff78f5f02e4,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,402907,0x7ff78f5f03a4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,402934,0x7ff78f5f0404,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,402960,0x7ff78f5f08e4,968,Construct.Wide
code-creation,BytecodeHandler,0,402987,0x7ff78f5f0cc4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,403014,0x7ff78f5f0ea4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,403040,0x7ff78f5f1664,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,403067,0x7ff78f5f1aa4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,403094,0x7ff78f5f20a4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,403120,0x7ff78f5f26a4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,403147,0x7ff78f5f2ca4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,403174,0x7ff78f5f32a4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,403201,0x7ff78f5f3624,160,TestIn.Wide
code-creation,BytecodeHandler,0,403227,0x7ff78f5f36e4,116,ToName.Wide
code-creation,BytecodeHandler,0,403253,0x7ff78f5f3764,216,ToNumber.Wide
code-creation,BytecodeHandler,0,403279,0x7ff78f5f3844,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,403305,0x7ff78f5f3944,116,ToObject.Wide
code-creation,BytecodeHandler,0,403331,0x7ff78f5f39c4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,403358,0x7ff78f5f3b64,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,403385,0x7ff78f5f40e4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,403412,0x7ff78f5f4404,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,403439,0x7ff78f5f4c04,172,CloneObject.Wide
code-creation,BytecodeHandler,0,403466,0x7ff78f5f4cc4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,403493,0x7ff78f5f4d84,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,403519,0x7ff78f5f4ee4,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,403546,0x7ff78f5f4f64,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,403573,0x7ff78f5f5004,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,403600,0x7ff78f5f5124,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,403627,0x7ff78f5f5244,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,403653,0x7ff78f5f52e4,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,403679,0x7ff78f5f54a4,44,Jump.Wide
code-creation,BytecodeHandler,0,403705,0x7ff78f5f54e4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,403732,0x7ff78f5f5524,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,403763,0x7ff78f5f5584,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,403790,0x7ff78f5f55e4,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,403817,0x7ff78f5f5644,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,403845,0x7ff78f5f56a4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,403872,0x7ff78f5f5704,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,403898,0x7ff78f5f5764,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,403925,0x7ff78f5f57c4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,403952,0x7ff78f5f5824,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,403980,0x7ff78f5f58c4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,404008,0x7ff78f5f5964,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,404036,0x7ff78f5f5a04,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,404063,0x7ff78f5f5aa4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,404089,0x7ff78f5f5b04,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,404116,0x7ff78f5f5b64,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,404142,0x7ff78f5f5bc4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,404169,0x7ff78f5f5c24,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,404195,0x7ff78f5f5c84,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,404222,0x7ff78f5f5ce4,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,404249,0x7ff78f5f5d44,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,404276,0x7ff78f5f5da4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,404302,0x7ff78f5f5e24,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,404329,0x7ff78f5f6004,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,404356,0x7ff78f5f6104,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,404382,0x7ff78f5f6144,260,ForInNext.Wide
code-creation,BytecodeHandler,0,404409,0x7ff78f5f6264,48,ForInStep.Wide
code-creation,BytecodeHandler,0,404435,0x7ff78f5f62a4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,404462,0x7ff78f5f6344,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,404489,0x7ff78f5f6404,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,404516,0x7ff78f5f6484,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,404542,0x7ff78f5f66a4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,404569,0x7ff78f5f6744,156,GetIterator.Wide
code-creation,BytecodeHandler,0,404596,0x7ff78f5f67e4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,404622,0x7ff78f5f6884,56,Abort.Wide
code-creation,BytecodeHandler,0,404649,0x7ff78f5f68c4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,404676,0x7ff78f5f6944,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,404702,0x7ff78f5f69c4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,404729,0x7ff78f5f6a44,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,404759,0x7ff78f5f6ac4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,404786,0x7ff78f5f6b44,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,404812,0x7ff78f5f6bc4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,404839,0x7ff78f5f6c04,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,404865,0x7ff78f5f6c24,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,404892,0x7ff78f5f6c64,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,404919,0x7ff78f5f6cc4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,404946,0x7ff78f5f6d24,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,404973,0x7ff78f5f6d64,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,405000,0x7ff78f5f6da4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,405026,0x7ff78f5f6dc4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,405053,0x7ff78f5f6e04,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,405080,0x7ff78f5f6e44,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,405106,0x7ff78f5f6e84,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,405133,0x7ff78f5f6ec4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,405160,0x7ff78f5f8104,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,405187,0x7ff78f5f9304,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,405214,0x7ff78f5f93c4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,405241,0x7ff78f5f9464,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,405268,0x7ff78f5f94e4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,405295,0x7ff78f5f9584,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,405322,0x7ff78f5f9684,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,405349,0x7ff78f5fa984,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,405378,0x7ff78f5faa24,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,405406,0x7ff78f5fab24,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,405433,0x7ff78f5fbe04,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,405460,0x7ff78f5fbee4,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,405487,0x7ff78f5fd344,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,405514,0x7ff78f5fd404,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,405541,0x7ff78f5fd4a4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,405568,0x7ff78f5fd564,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,405595,0x7ff78f5fd6a4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,405621,0x7ff78f5fd764,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,405648,0x7ff78f5fd824,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,405675,0x7ff78f5fd8e4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,405702,0x7ff78f5fd9a4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,405729,0x7ff78f5fda84,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,405761,0x7ff78f5fdb44,980,Add.ExtraWide
code-creation,BytecodeHandler,0,405779,0x7ff78f5fdf24,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,405814,0x7ff78f5fe324,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,405849,0x7ff78f5fe704,988,Div.ExtraWide
code-creation,BytecodeHandler,0,405875,0x7ff78f5feae4,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,405902,0x7ff78f5fee84,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,405928,0x7ff78f5ff264,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,405954,0x7ff78f5ff604,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,405981,0x7ff78f5ff9a4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,406008,0x7ff78f5ffd44,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,406035,0x7ff78f600104,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,406061,0x7ff78f6004c4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,406089,0x7ff78f6008e4,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,406115,0x7ff78f600c84,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,406142,0x7ff78f601064,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,406168,0x7ff78f601404,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,406195,0x7ff78f6017a4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,406221,0x7ff78f601ae4,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,406248,0x7ff78f601e64,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,406275,0x7ff78f602064,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,406302,0x7ff78f602264,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,406329,0x7ff78f602464,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,406356,0x7ff78f602664,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,406383,0x7ff78f602864,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,406410,0x7ff78f602b04,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,406436,0x7ff78f602d84,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,406462,0x7ff78f603004,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,406488,0x7ff78f6032a4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,406515,0x7ff78f6034a4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,406543,0x7ff78f603524,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,406570,0x7ff78f6035a4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,406597,0x7ff78f6035e4,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,406625,0x7ff78f603a64,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,406651,0x7ff78f603ee4,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,406679,0x7ff78f6042e4,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,406706,0x7ff78f604704,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,406735,0x7ff78f604b24,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,406779,0x7ff78f604f24,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,406806,0x7ff78f605344,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,406834,0x7ff78f605744,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,406867,0x7ff78f605b64,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,406894,0x7ff78f605fe4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,406921,0x7ff78f606084,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,406948,0x7ff78f606144,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,406975,0x7ff78f6061a4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,408004,0x7ff78f606684,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,408099,0x7ff78f606a64,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,408130,0x7ff78f606c44,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,408154,0x7ff78f607404,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,408179,0x7ff78f607844,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,408205,0x7ff78f607e44,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,408226,0x7ff78f608444,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,408252,0x7ff78f608a44,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,408280,0x7ff78f609044,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,408303,0x7ff78f6093c4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,408320,0x7ff78f609464,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,408343,0x7ff78f6094e4,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,408369,0x7ff78f6095c4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,408387,0x7ff78f6096c4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,408408,0x7ff78f609744,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,408432,0x7ff78f6098e4,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,408457,0x7ff78f609e64,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,408484,0x7ff78f60a184,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,408510,0x7ff78f60a984,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,408531,0x7ff78f60aa44,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,408557,0x7ff78f60ab04,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,408580,0x7ff78f60ac64,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,408603,0x7ff78f60ace4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,408631,0x7ff78f60ad84,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,408659,0x7ff78f60aea4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,408686,0x7ff78f60afc4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,408712,0x7ff78f60b064,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,408736,0x7ff78f60b224,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,408767,0x7ff78f60b264,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,408790,0x7ff78f60b2a4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,408816,0x7ff78f60b304,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,408843,0x7ff78f60b364,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,408872,0x7ff78f60b3c4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,408897,0x7ff78f60b424,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,408922,0x7ff78f60b484,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,408946,0x7ff78f60b4e4,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,408973,0x7ff78f60b544,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,409006,0x7ff78f60b5a4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,409040,0x7ff78f60b644,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,409139,0x7ff78f60b6e4,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,409175,0x7ff78f60b784,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,409202,0x7ff78f60b824,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,409226,0x7ff78f60b884,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,409256,0x7ff78f60b8e4,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,409282,0x7ff78f60b944,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,409307,0x7ff78f60b9a4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,409329,0x7ff78f60ba04,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,409356,0x7ff78f60ba64,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,409385,0x7ff78f60bac4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,409412,0x7ff78f60bb24,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,409442,0x7ff78f60bba4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,409470,0x7ff78f60bd84,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,409498,0x7ff78f60be84,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,409525,0x7ff78f60bec4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,409552,0x7ff78f60bfe4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,409579,0x7ff78f60c024,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,409602,0x7ff78f60c0c4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,409635,0x7ff78f60c184,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,409655,0x7ff78f60c204,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,409682,0x7ff78f60c424,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,409709,0x7ff78f60c4a4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,409736,0x7ff78f60c544,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,409768,0x7ff78f60c5c4,56,Abort.ExtraWide
tick,0x7ff78fa6f247,409806,0,0x0,6
tick,0x7ffc909ed044,409832,0,0x0,6
new,MemoryChunk,0x307c6240000,262144
new,MemoryChunk,0x1da54d80000,262144
new,MemoryChunk,0x263e9300000,262144
new,MemoryChunk,0x28d26c0000,262144
new,MemoryChunk,0x7f483c0000,262144
code-creation,Eval,10,415819,0x7f483ca91e,5, node:internal/main/run_main_module:1:1,0x7f483ca7d8,~
script-source,99,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x7f483ca91e,99,0,649,C0O0C4O649,,
code-creation,Function,10,415938,0x7f483ca9c6,58, node:internal/main/run_main_module:1:1,0x7f483ca898,~
code-source-info,0x7f483ca9c6,99,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,416371,0x7f483cac06,76,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x39626a111d8,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Determine if a core module can be loaded without the node: prefix. This\x0d\n  // function does not validate if the module actually exists.\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return !schemelessBlockList.has(id);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x7f483cac06,9,11126,11479,C0O11136C2O11147C4O11143C9O11164C13O11185C14O11208C19O11221C24O11225C29O11225C35O11369C37O11379C47O11427C60O11385C65O11379C66O11449C71O11449C75O11476,,
code-creation,LazyCompile,10,417572,0x7f483cb99e,175,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x39626a11108,~
code-source-info,0x7f483cb99e,9,10306,10889,C0O10325C6O10340C12O10370C16O10378C17O10409C22O10418C23O10431C30O10477C37O10508C45O10477C63O10610C70O10610C75O10646C89O10681C103O10638C108O10721C109O10733C124O10765C126O10778C141O10801C152O10820C160O10852C165O10801C170O10876C174O10884,,
code-creation,Eval,10,418291,0x7f483cca3e,5, node:internal/bootstrap/pre_execution:1:1,0x7f483cc618,~
script-source,100,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C\x0d\n                                    initialzeModules = true) {\x0d\n  refreshRuntimeOptions();\x0d\n\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n\x0d\n  require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n\x0d\n  if (!initialzeModules) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: getOptionValue('--build-snapshot')\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto') });\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  refreshRuntimeOptions\x2C\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupCustomEvent\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x7f483cca3e,100,0,19719,C0O0C4O19719,,
code-creation,Function,10,420334,0x7f483cd756,530, node:internal/bootstrap/pre_execution:1:1,0x7f483cc9b8,~
code-source-info,0x7f483cd756,100,0,19719,C0O0C229O28C235O47C241O72C247O107C253O119C259O135C265O165C271O272C277O272C282O209C288O228C294O251C300O338C306O338C311O310C317O448C323O448C328O378C334O398C340O426C346O496C352O496C357O485C363O558C369O558C374O584C379O524C385O608C391O608C395O608C397O19223C404O19245C410O19271C416O19294C422O19317C428O19341C434O19356C440O19375C446O19396C452O19414C458O19433C464O19464C470O19491C476O19515C482O19546C488O19579C494O19602C500O19630C506O19654C512O19675C518O19699C524O19238C529O19718,,
code-creation,LazyCompile,10,420862,0x7f483cf23e,273,prepareMainThreadExecution node:internal/bootstrap/pre_execution:29:36,0x7f483cca70,~
code-source-info,0x7f483cf23e,100,674,2891,C20O763C23O763C26O912C31O912C34O1017C37O1017C41O1053C44O1053C47O1083C50O1083C53O1104C56O1104C59O1130C62O1130C65O1156C68O1156C71O1173C74O1173C77O1194C80O1194C83O1399C86O1411C91O1415C97O1440C100O1448C111O1505C116O1509C121O1478C125O1469C129O1538C132O1538C135O1633C138O1633C141O1742C144O1742C147O1765C150O1765C153O1826C156O1826C159O2156C162O2156C165O2234C168O2234C171O2436C174O2436C177O2465C180O2465C183O2500C186O2500C189O2529C192O2529C195O2552C201O2552C206O2591C211O2592C215O2624C219O2654C220O2661C221O2672C224O2672C227O2698C230O2698C233O2742C239O2742C244O2785C249O2803C255O2785C259O2834C262O2834C265O2859C268O2859C272O2890,,
code-creation,LazyCompile,10,421121,0x7f483d07fe,10,refreshRuntimeOptions node:internal/bootstrap/pre_execution:99:31,0x7f483ccac0,~
code-source-info,0x7f483d07fe,100,2925,2953,C0O2933C5O2933C9O2952,,
code-creation,LazyCompile,10,421215,0x7f483d08e6,22,refreshOptions node:internal/options:39:24,0x118dcd7e8c8,~
script-source,95,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x0d\n};\x0d\n
code-source-info,0x7f483d08e6,95,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,LazyCompile,10,421626,0x7f483d0c4e,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x19bc9c4bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x7f483d0c4e,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
tick,0x7ff78ea01aaf,425513,0,0x0,3,0x7ff78f0a54e0,0x7f483cf25d,0x7f483ca9d5
code-creation,LazyCompile,10,425650,0x7f483d353e,460,patchProcessObject node:internal/bootstrap/pre_execution:103:28,0x7f483ccb10,~
code-source-info,0x7f483d353e
code-creation,LazyCompile,10,425797,0x7f483d38ce,69,internalBinding node:internal/bootstrap/loaders:171:45,0x39626a10b60,~
code-source-info,0x7f483d38ce,9,5433,5678,C0O5459C7O5469C11O5484C15O5522C25O5549C30O5547C37O5584C48O5603C56O5639C61O5584C66O5662C68O5673,,
code-creation,LazyCompile,10,425951,0x7f483d3b86,69,refreshHrtimeBuffer node:internal/process/per_thread:67:29,0x19bc9c58950,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x7f483d3b86,30,1502,1950,C0O1693C7O1720C10O1728C17O1704C25O1702C31O1883C38O1919C41O1927C53O1900C61O1898C68O1949,,
code-creation,LazyCompile,10,426705,0x7f483d4a4e,82,getOptionValue node:internal/options:44:24,0x118dcd7e938,~
code-source-info,0x7f483d4a4e,95,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,LazyCompile,10,426778,0x7f483d4ba6,33,getCLIOptionsFromBinding node:internal/options:18:34,0x3ba377fce8,~
code-source-info,0x7f483d4ba6,95,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,427361,0x7f483d4e9e,832,resolve node:path:158:10,0x118dcd4d510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x7f483d4e9e
code-creation,LazyCompile,10,430210,0x7f483d84b6,30,validateString node:internal/validators:119:24,0x12028f49390,~
script-source,16,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!isInt32(value)) {\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!isUint32(value)) {\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n      ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x7f483d84b6,16,3546,3658,C0O3565C6O3601C22O3607C27O3601C29O3657,,
code-creation,LazyCompile,10,430774,0x7f483d8ed6,17,isPathSeparator node:path:52:25,0x118dcd4cf90,~
code-source-info,0x7f483d8ed6,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,430866,0x7f483d8fd6,35,isWindowsDeviceRoot node:path:60:29,0x118dcd4d408,~
code-source-info,0x7f483d8fd6,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,430942,0x7f483d90f6,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x19bc9c7edd0,~
script-source,98,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x7f483d90f6,98,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,431307,0x7f483d975e,442,normalizeString node:path:66:25,0x118dcd4d458,~
code-source-info,0x7f483d975e
code-creation,LazyCompile,10,431544,0x7f483d9e16,37,initializeGlobalConsole node:internal/console/constructor:687:33,0x19bc9c6a5e0,~
script-source,37,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = ObjectCreate(null);\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime // exported for tests\x0d\n};\x0d\n
code-source-info,0x7f483d9e16,37,21084,21198,C0O21105C2O21119C4O21118C11O21136C16O21150C18O21164C20O21163C29O21180C36O21197,,
code-creation,LazyCompile,10,432842,0x7f483db7f6,94,value node:internal/console/constructor:200:20,0x19bc9c69b60,~
code-source-info,0x7f483db7f6,37,5921,6580,C0O5921C15O5943C16O5943C18O5962C19O5962C21O5977C33O6028C38O6130C46O6241C60O6304C65O6406C73O6521C87O5977C93O6579,,
code-creation,LazyCompile,10,433032,0x7f483dbe46,414,value node:internal/console/constructor:230:20,0x19bc9c69be8,~
code-source-info,0x7f483dbe46,37,6684,8114,C17O6741C27O6804C34O6848C52O6919C55O6889C73O6991C86O7090C89O7060C104O7140C111O7184C126O7225C129O7225C144O7278C151O7300C166O7334C169O7330C187O7427C191O7437C198O7459C213O7493C216O7489C235O7516C239O7529C246O7551C261O7581C275O7604C279O7617C286O7639C300O7669C314O7687C318O7702C325O7724C340O7754C354O7770C358O7795C365O7839C380O7880C394O7919C398O7939C407O6741C413O8113,,
code-creation,LazyCompile,10,433148,0x7f483dc2b6,18,createWriteErrorHandler node:internal/console/constructor:354:33,0x19bc9c69e90,~
code-source-info,0x7f483dc2b6,37,10994,11869,C0O10994C13O11024C17O11866,,
code-creation,LazyCompile,10,433256,0x7f483dc496,27,SafeMap node:internal/per_context/primordials:366:16,0x39626a0aa58,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x0d\n    )\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @param {Promise<any>[]} promises\x0d\n * @param {(v: Promise<any>\x2C k: number) => Promise<any>} [mapFn]\x0d\n * @returns {Promise<any>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x0d\n  );\x0d\n\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x7f483dc496,6,10966,10983,C3O10972C7O10978C11O10972C26O10982,,
code-creation,LazyCompile,10,434206,0x7f483dd5a6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:155:33,0x7f483ccb60,~
code-source-info,0x7f483dd5a6,100,5153,5412,C16O5206C21O5206C26O5233C28O5251C36O5281C43O5371C49O5390C56O5251C62O5411,,
code-creation,LazyCompile,10,434288,0x7f483dd70e,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:318:33,0x7f483ccf20,~
code-source-info,0x7f483dd70e,100,10053,10284,C0O10096C6O10096C11O10069C16O10169C22O10169C27O10140C32O10212C35O10237C40O10212C45O10283,,
code-creation,LazyCompile,10,434360,0x7f483dd8a6,77,toggleTraceCategoryState node:internal/process/per_thread:397:34,0x19bc9c59070,~
code-source-info,0x7f483dd8a6,30,11761,12068,C0O11786C4O11816C10O11852C16O11884C21O11928C26O11929C33O11873C39O11955C44O11976C49O11976C55O11996C61O12029C66O12050C71O12050C76O12067,,
code-creation,LazyCompile,10,434419,0x7f483dda56,42,setupPerfHooks node:internal/bootstrap/pre_execution:324:24,0x7f483ccf70,~
code-source-info,0x7f483dda56,100,10311,10434,C0O10319C6O10319C11O10355C16O10356C20O10380C26O10380C31O10410C36O10411C41O10433,,
code-creation,LazyCompile,10,434492,0x7f483ddbd6,42,refreshTimeOrigin node:internal/perf/performance:217:27,0x18b8602e900,~
script-source,76,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst { markResourceTiming } = require('internal/perf/resource_timing');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearResourceTimings(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('resource'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  clearResourceTimings: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearResourceTimings\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\x0d\n  // which is a Node.js dependency\x2C not a internal module\x0d\n  markResourceTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: markResourceTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x7f483ddbd6,76,4969,5154,C0O4977C7O4998C10O5010C25O5119C28O5119C35O4977C41O5153,,
code-creation,LazyCompile,10,434879,0x7f483de426,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x118dcd67e10,~
script-source,48,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x7f483de426,48,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,434984,0x7f483de696,62,setupInspectorHooks node:internal/bootstrap/pre_execution:329:29,0x7f483ccfc0,~
code-source-info,0x7f483de696,100,10466,11032,C0O10815C6O10819C11O10844C17O10913C23O10913C28O10881C33O10896C38O10960C44O10960C49O10988C54O10989C61O11031,,
code-creation,Eval,10,435121,0x7f483dea2e,5, node:internal/inspector_async_hook:1:1,0x7f483de878,~
script-source,101,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x7f483dea2e,101,0,2048,C0O0C4O2048,,
code-creation,Function,10,435274,0x7f483dec4e,79, node:internal/inspector_async_hook:1:1,0x7f483de9a8,~
code-source-info,0x7f483dec4e,101,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
new,MemoryChunk,0x17e03b40000,262144
code-creation,Function,11,435467,0x17e03b43060,664,nativeModuleRequire node:internal/bootstrap/loaders:349:29,0x39626a111d8,^
code-source-info,0x17e03b43060,9,11126,11479,,,
code-creation,Function,11,435503,0x17e03b43360,216,isPathSeparator node:path:52:25,0x118dcd4cf90,^
code-source-info,0x17e03b43360,41,1794,1876,,,
code-creation,Function,11,435568,0x17e03b434a0,3076,normalizeString node:path:66:25,0x118dcd4d458,^
code-source-info,0x17e03b434a0,41,2226,4212,,,
code-creation,LazyCompile,10,435647,0x7f483df44e,69,setupWarningHandler node:internal/bootstrap/pre_execution:168:29,0x7f483ccbb0,~
code-source-info,0x7f483df44e,100,5444,5649,C0O5482C6O5482C11O5465C16O5522C24O5526C33O5571C38O5575C45O5592C50O5608C53O5616C61O5616C68O5648,,
code-creation,LazyCompile,10,435805,0x7f483df6c6,20,addListener node:events:604:58,0x12028f6f688,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x7f483df6c6,23,18313,18387,C0O18335C14O18342C19O18384,,
code-creation,LazyCompile,10,437986,0x7f483e1d1e,378,_addListener node:events:541:22,0x12028f6f5e8,~
code-source-info,0x7f483e1d1e
code-creation,LazyCompile,10,438141,0x7f483e202e,15,checkListener node:events:265:23,0x12028f6ef98,~
code-source-info,0x7f483e202e,23,7994,8052,C0O8010C8O8010C14O8051,,
code-creation,LazyCompile,10,438193,0x7f483e211e,30, node:internal/validators:245:42,0x12028f49828,~
code-source-info,0x7f483e211e,16,7817,7936,C0O7839C6O7877C22O7883C27O7877C29O7935,,
code-creation,LazyCompile,10,438338,0x7f483e2386,380,emit node:events:460:44,0x12028f6f528,~
code-source-info,0x7f483e
code-creation,LazyCompile,10,438497,0x7f483e272e,172,startListeningIfSignal node:internal/process/signal:22:32,0x19bc9c7db90,~
script-source,97,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x7f483e272e,97,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,438650,0x7f483e2aee,19,isSignal node:internal/process/signal:17:18,0x19bc9c7d9d8,~
code-source-info,0x7f483e2aee,97,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,438718,0x7f483e2d26,156,setupFetch node:internal/bootstrap/pre_execution:179:20,0x7f483ccc00,~
code-source-info,0x7f483e2d26,100,5707,6176,C0O5715C8O5720C14O5767C15O5774C16O5785C24O5785C28O5839C34O5839C39O5882C46O5898C52O5926C57O5882C62O5937C69O5953C75O5984C80O5937C85O5998C92O6014C98O6044C103O5998C108O6057C115O6073C121O6103C126O6057C131O6116C138O6132C144O6163C149O6116C155O6175,,
tick,0x7ffc9097f25f,438924,0,0x0,3,0x7ff78f0a54e0,0x7f483cf282,0x7f483ca9d5
code-creation,LazyCompile,10,439069,0x7f483e3256,280,setupWebCrypto node:internal/bootstrap/pre_execution:196:24,0x7f483ccc50,~
code-source-info,0x7f483e3256,100,6309,7539,C0O6309C8O6317C13O6329C18O6336C23O6346C33O6381C39O6381C45O6439C46O6446C47O6461C48O6461C50O6475C61O6496C76O6564C107O6564C120O6475C125O6843C133O6847C138O6872C144O6892C158O6906C162O6902C164O6949C175O6970C189O7118C197O6949C202O7139C213O7160C227O7311C235O7139C240O7335C251O7356C265O7510C273O7335C279O7538,,
code-creation,LazyCompile,10,439250,0x7f483e34de,5,get node:internal/bootstrap/node:136:6,0x39626a15f78,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      __proto__: null\x2C\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      __proto__: null\x2C\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      __proto__: null\x2C\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x7f483e34de,10,4287,4315,C0O4292C4O4313,,
code-creation,LazyCompile,10,441224,0x7f483e46c6,52,get node:internal/bootstrap/node:112:6,0x39626a15ed8,~
code-source-info,0x7f483e46c6,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,441407,0x7f483e4886,74,setupCustomEvent node:internal/bootstrap/pre_execution:238:26,0x7f483cccc8,~
code-source-info,0x7f483e4886,100,7676,7944,C0O7684C3O7696C8O7703C13O7713C21O7748C27O7748C33O7808C34O7815C35O7848C41O7848C46O7832C51O7885C58O7901C67O7885C73O7943,,
code-creation,LazyCompile,10,441537,0x7f483e4a76,75,setupDebugEnv node:internal/bootstrap/pre_execution:290:23,0x7f483cce30,~
code-source-info,0x7f483e4a76,100,9275,9490,C0O9283C6O9283C11O9316C19O9344C24O9348C29O9317C34O9364C42O9368C48O9413C54O9413C59O9450C64O9463C69O9464C74O9489,,
code-creation,LazyCompile,10,441693,0x7f483e4e0e,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x12028f65818,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x7f483e4e0e,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,442011,0x7f483e541e,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:268:40,0x7f483ccd68,~
code-source-info,0x7f483e541e,100,8797,8991,C0O8805C8O8810C14O8851C15O8858C16O8894C22O8894C27O8875C32O8946C38O8980C43O8980C48O8990,,
code-creation,LazyCompile,10,442081,0x7f483e5636,62,initializeReport node:internal/bootstrap/pre_execution:278:26,0x7f483ccdb8,~
code-source-info,0x7f483e5636,100,9020,9249,C0O9020C8O9047C16O9047C21O9036C27O9086C42O9107C47O9203C55O9086C61O9248,,
code-creation,Eval,10,442271,0x7f483e5ba6,5, node:internal/process/report:1:1,0x7f483e59b0,~
script-source,102,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x7f483e5ba6,102,0,2666,C0O0C4O2666,,
code-creation,Function,10,442470,0x7f483e66b6,306, node:internal/process/report:1:1,0x7f483e5b20,~
code-source-info,0x7f483e66b6,102,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,442702,0x7f483e851e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:298:40,0x7f483cce80,~
code-source-info,0x7f483e851e,100,9594,9694,C0O9631C6O9631C11O9610C16O9672C20O9693,,
code-creation,LazyCompile,10,442783,0x7f483e8626,57,addSignalHandler node:internal/process/report:98:26,0x7f483e5bd8,~
code-source-info,0x7f483e8626,102,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,442854,0x7f483e8bee,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:304:46,0x7f483cced0,~
code-source-info,0x7f483e8bee,100,9743,10017,C0O9743C8O9766C18O9766C23O9812C25O9830C26O9837C27O9843C35O9843C40O9873C45O9874C50O9935C58O9935C63O9913C69O9955C74O9963C79O9966C84O9963C91O10016,,
code-creation,LazyCompile,10,442940,0x7f483e8e7e,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:437:37,0x7f483cd0a0,~
code-source-info,0x7f483e8e7e,100,13955,14501,C0O13963C3O13975C8O13979C14O14018C20O14018C25O14064C33O14087C38O14091C46O14064C52O14118C53O14128C57O14118C61O14212C64O14227C73O14288C76O14296C81O14300C90O14348C93O14363C102O14407C108O14407C113O14431C118O14432C124O14472C127O14487C132O14472C137O14500,,
code-creation,LazyCompile,10,443031,0x7f483e900e,21,assert node:internal/assert:11:16,0x12028f647d8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x7f483e900e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,443673,0x7f483e9e96,5, node:child_process:1:1,0x7f483e99b0,~
script-source,103,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = kEmptyObject;\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x7f483e9e96,103,0,25941,C0O0C4O25941,,
code-creation,Function,10,445179,0x7f483ea8fe,757, node:child_process:1:1,0x7f483e9e10,~
code-source-info,0x7f483ea8fe
code-creation,LazyCompile,10,445445,0x7f483ecf3e,82,debuglog node:internal/util/debuglog:71:18,0x12028f65b68,~
code-source-info,0x7f483ecf3e,22,2302,3350,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3238C74O3169C79O3333C81O3347,,
code-creation,Eval,10,446331,0x7f483eff0e,5, node:internal/child_process:1:1,0x7f483ef810,~
script-source,104,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x7f483eff0e,104,0,32672,C0O0C4O32672,,
code-creation,Function,10,448172,0x7f483f152e,1265, node:internal/child_process:1:1,0x7f483efe88,~
code-source-info,0x7f483f152e
code-creation,Function,10,448359,0x7f483f1ca6,35,<instance_members_initializer> node:internal/child_process:525:3,0x7f483f0bf0,~
code-source-info,0x7f483f1ca6,104,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,449789,0x7f483f60d6,5, node:net:1:1,0x7f483f5878,~
script-source,105,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\x0d\n    } else {\x0d\n      this._handle.close(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n    }\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = ObjectCreate(null);\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = ObjectCreate(null);\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = ObjectCreate(null);\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x7f483f60d6,105,0,53892,C0O0C4O53892,,
code-creation,Function,10,453170,0x7f483f9126,2694, node:net:1:1,0x7f483f6050,~
code-source-info,0x7f483f9126,105,0,53892,C0O0C435O1183C441O1200C447O1226C453O1238C459O1249C465O1265C471O1284C477O1309C482O1334C487O1345C493O1401C499O1401C503O1401C505O1436C511O1436C515O1436C517O1468C523O1468C528O1501C542O1502C548O1468C550O1635C556O1635C561O1560C567O1569C572O1580C577O1591C583O1616C589O1676C595O1676C599O1676C601O1765C604O1765C609O1716C615O1734C621O1748C627O1810C633O1810C638O1799C644O1858C647O1858C652O1838C658O1909C661O1909C666O1892C672O2009C675O2009C680O1953C686O1961C692O1991C698O2109C701O2109C706O2050C712O2059C718O2090C724O2245C730O2245C735O2151C741O2166C752O2208C758O2225C764O2455C770O2455C775O2290C781O2308C787O2325C793O2342C798O2363C804O2375C809O2392C814O2413C820O2425C826O2439C832O2903C838O2903C843O2903C848O2522C854O2555C860O2582C866O2610C872O2636C878O2665C884O2695C890O2727C896O2756C902O2780C908O2807C914O2826C920O2852C926O2873C932O2957C938O2957C943O2940C949O3120C955O3120C960O3001C966O3025C972O3046C978O3064C984O3083C990O3100C996O3181C999O3181C1003O3181C1005O3283C1011O3283C1016O3223C1022O3256C1028O3366C1029O3366C1031O3380C1032O3380C1034O3390C1035O3390C1037O3406C1038O3406C1040O3449C1046O3449C1051O3432C1057O3490C1063O3490C1068O3477C1074O3547C1076O3547C1078O3585C1080O3585C1082O3612C1085O3620C1092O3629C1095O3612C1097O3658C1101O3658C1103O3707C1106O3707C1110O3707C1112O3803C1118O3803C1123O3758C1129O3774C1135O3788C1141O7427C1144O7427C1148O7427C1150O7472C1153O7472C1157O7472C1159O7518C1162O7518C1166O7518C1168O7564C1171O7564C1175O7564C1177O7624C1180O7624C1184O7624C1186O12306C1189O12334C1197O12352C1202O12359C1207O12306C1212O12372C1218O12408C1223O12372C1228O12451C1231O12458C1240O12480C1244O12716C1247O12723C1256O12740C1260O14310C1263O14317C1270O14338C1274O14363C1277O14370C1286O14391C1290O14919C1293O14926C1302O14947C1306O15348C1309O15355C1318O15378C1322O16019C1325O16026C1334O16044C1338O16099C1344O16127C1358O16183C1366O16099C1371O16238C1377O16266C1391O16313C1399O16238C1404O16405C1410O16433C1424O16488C1432O16405C1437O16825C1443O16853C1457O16908C1465O16825C1470O17001C1476O17029C1481O17040C1487O17084C1498O17001C1503O17465C1506O17472C1515O17488C1519O17735C1522O17742C1531O17756C1535O17955C1538O17962C1547O17988C1555O18359C1558O18366C1567O18382C1575O18736C1578O18743C1587O18760C1595O18959C1598O18966C1607O18981C1615O19335C1618O19342C1627O19364C1635O19528C1638O19535C1647O19554C1655O20856C1658O20863C1667O20880C1675O20990C1678O20997C1687O21020C1695O21507C1703O21507C1713O21631C1721O21631C1731O21734C1739O21734C1749O21834C1757O21834C1767O21930C1770O21937C1779O21960C1787O22254C1795O22254C1805O22357C1813O22357C1823O22451C1826O22458C1831O22468C1835O22486C1843O22542C1846O22549C1855O22573C1863O23372C1866O23379C1875O23397C1883O23476C1886O23483C1895O23500C1903O23751C1911O23751C1921O23895C1929O23895C1939O27685C1942O27692C1951O27710C1959O32265C1962O32272C1971O32286C1979O32493C1982O32500C1991O32516C1999O36136C2002O36164C2014O36188C2023O36136C2033O36201C2039O36201C2049O40322C2052O40329C2063O40348C2071O41890C2074O41897C2087O41914C2095O46281C2101O46309C2122O46363C2134O46281C2144O46461C2147O46468C2160O46486C2168O48663C2171O48670C2184O48695C2192O49492C2195O49499C2208O49515C2216O50426C2219O50433C2232O50463C2240O50963C2243O50970C2255O50993C2268O51017C2276O51350C2282O51375C2303O51420C2315O51461C2327O51350C2337O51511C2343O51539C2360O51586C2372O51622C2384O51511C2394O51667C2397O51674C2410O51697C2418O51952C2421O51959C2434O51973C2442O52085C2445O52092C2458O52108C2466O52225C2468O52281C2469O52281C2471O52290C2482O52314C2483O52314C2485O52340C2494O53070C2499O53352C2509O53395C2519O53434C2529O53452C2539O53720C2549O53750C2559O53762C2569O53785C2579O53802C2589O53821C2599O53832C2609O53843C2619O53862C2684O53367C2693O53891,,
code-creation,Eval,10,453961,0x7f483feebe,5, node:internal/net:1:1,0x7f483fecf8,~
script-source,106,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x7f483feebe,106,0,1818,C0O0C4O1818,,
code-creation,Function,10,454107,0x7f483ff2ae,617, node:internal/net:1:1,0x7f483fee38,~
code-source-info,0x7f483ff2ae,106,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
new,MemoryChunk,0x1000c240000,262144
code-creation,Eval,10,454494,0x7f483fffd6,5, node:internal/dtrace:1:1,0x28d26ffed0,~
script-source,107,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x7f483fffd6,107,0,589,C0O0C4O589,,
code-creation,Function,10,454567,0x1000c2415be,140, node:internal/dtrace:1:1,0x28d26fff90,~
code-source-info,0x1000c2415be,107,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
tick,0x7ff78f2968aa,454833,0,0x0,3,0x7ff78f0a54e0,0x7f483f97cd,0x7f483cba05,0x17e03b432e5,0x7f483f171c,0x7f483cba05,0x17e03b432e5,0x7f483eab4b,0x7f483cba05,0x17e03b432e5,0x7f483e8eea,0x7f483cf2e0,0x7f483ca9d5
code-creation,LazyCompile,10,455105,0x1000c24254e,34,protoGetter node:net:796:21,0x7f483f6518,~
code-source-info,0x1000c24254e,105,21335,21503,C0O21357C8O21385C13O21396C20O21485C27O21357C33O21502,,
code-creation,Eval,10,456515,0x1000c247c46,5, node:dgram:1:1,0x1000c2476d0,~
script-source,108,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  state.handle.onerror = onError;\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onError(nread\x2C handle\x2C error) {\x0d\n  const self = handle[owner_symbol];\x0d\n  return self.emit('error'\x2C error);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x1000c247c46,108,0,28578,C0O0C4O28578,,
code-creation,Function,10,459477,0x1000c249bae,1507, node:dgram:1:1,0x1000c247bc0,~
code-source-info,0x1000c249bae
code-creation,Eval,10,460038,0x1000c24d03e,5, node:internal/dgram:1:1,0x1000c24ce38,~
script-source,109,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x1000c24d03e,109,0,1941,C0O0C4O1941,,
code-creation,Function,10,460197,0x1000c24d306,196, node:internal/dgram:1:1,0x1000c24cfb8,~
code-source-info,0x1000c24d306,109,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,LazyCompile,10,460508,0x1000c24fbc6,152,deprecate node:internal/util:96:19,0x12028f45bf0,~
script-source,15,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze(ObjectCreate(null));\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x1000c24fbc6,15,2496,3713,C0O2496C26O2517C31O2529C37O2543C42O2560C44O2570C45O2629C53O2668C61O2690C66O2671C83O2728C87O2757C100O2757C105O2805C106O2805C108O3400C121O3400C126O3441C129O3448C135O3645C141O3671C145O3666C149O3692C151O3710,,
code-creation,Function,11,461651,0x17e03b44120,1344,deprecate node:internal/util:96:19,0x12028f45bf0,^
code-source-info,0x17e03b44120,15,2496,3713,,,
code-creation,Function,11,461692,0x17e03b446c0,572,getOptionValue node:internal/options:44:24,0x118dcd7e938,^
code-source-info,0x17e03b446c0,95,1028,1278,,,
code-creation,Function,11,461734,0x17e03b44960,1252,compileForInternalLoader node:internal/bootstrap/loaders:316:27,0x39626a11108,^
code-source-info,0x17e03b44960,9,10306,10889,,,
code-creation,Function,11,461783,0x17e03b44ec0,548,internalBinding node:internal/bootstrap/loaders:171:45,0x39626a10b60,^
code-source-info,0x17e03b44ec0,9,5433,5678,,,
code-creation,Eval,10,462045,0x1000c2522d6,5, node:internal/socket_list:1:1,0x1000c252180,~
script-source,110,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x1000c2522d6,110,0,2813,C0O0C4O2813,,
code-creation,Function,10,462246,0x1000c252916,126, node:internal/socket_list:1:1,0x1000c252250,~
code-source-info,0x1000c252916,110,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,462513,0x1000c2534c6,14,customPromiseExecFunction node:child_process:231:35,0x7f483ea478,~
code-source-info,0x1000c2534c6,103,6853,7233,C0O6853C9O6868C13O7230,,
code-creation,LazyCompile,10,462616,0x1000c25555e,129,_forkChild node:child_process:170:20,0x7f483e9f18,~
code-source-info,0x1000c25555e,103,5092,5574,C0O5092C8O5156C19O5165C22O5179C29O5156C35O5190C40O5190C45O5205C50O5205C54O5233C72O5233C77O5233C79O5281C84O5289C97O5289C103O5424C108O5432C121O5432C128O5573,,
code-creation,LazyCompile,10,467082,0x1000c255f5e,396,setupChannel node:internal/child_process:571:22,0x7f483f01c0,~
code-source-info,0x1000c255f5e
code-creation,LazyCompile,10,467217,0x1000c25873e,72,Control node:internal/child_process:529:14,0x7f483f09f8,~
code-source-info,0x1000c25873e,104,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,467273,0x1000c258876,21,EventEmitter node:events:212:22,0x12028f6ee50,~
code-source-info,0x1000c258876,23,6524,6574,C0O6536C3O6549C8O6554C13O6554C20O6573,,
code-creation,LazyCompile,10,467352,0x1000c2589be,149,EventEmitter.init node:events:337:29,0x12028f6f248,~
code-source-info,0x1000c2589be,23,10180,10788,C0O10203C6O10240C13O10252C16O10252C21O10278C25O10248C30O10295C32O10310C37O10310C41O10308C45O10335C46O10353C50O10394C60O10387C64O10429C71O10437C80O10465C85O10486C93O10465C98O10540C100O10545C105O10557C108O10570C113O10557C117O10555C123O10730C125O10735C131O10760C138O10770C140O10769C143O10745C148O10787,,
code-creation,Eval,10,467691,0x1000c2592e6,5, node:internal/child_process/serialization:1:1,0x1000c258fe0,~
script-source,111,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kMessageBufferSize = Symbol('kMessageBufferSize');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = [];\x0d\n    channel[kMessageBufferSize] = 0;\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    ArrayPrototypePush(channel[kMessageBuffer]\x2C readData);\x0d\n    channel[kMessageBufferSize] += readData.length;\x0d\n\x0d\n    // Index 0 should always be present because we just pushed data into it.\x0d\n    let messageBufferHead = channel[kMessageBuffer][0];\x0d\n    while (messageBufferHead.length >= 4) {\x0d\n      // We call `readUInt32BE` manually here\x2C because this is faster than first converting\x0d\n      // it to a buffer and using `readUInt32BE` on that.\x0d\n      const fullMessageSize = (\x0d\n        messageBufferHead[0] << 24 |\x0d\n        messageBufferHead[1] << 16 |\x0d\n        messageBufferHead[2] << 8 |\x0d\n        messageBufferHead[3]\x0d\n      ) + 4;\x0d\n\x0d\n      if (channel[kMessageBufferSize] < fullMessageSize) break;\x0d\n\x0d\n      const concatenatedBuffer = channel[kMessageBuffer].length === 1 ?\x0d\n        channel[kMessageBuffer][0] :\x0d\n        Buffer.concat(\x0d\n          channel[kMessageBuffer]\x2C\x0d\n          channel[kMessageBufferSize]\x0d\n        );\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(concatenatedBuffer\x2C 4\x2C fullMessageSize)\x0d\n      );\x0d\n\x0d\n      messageBufferHead = TypedArrayPrototypeSubarray(concatenatedBuffer\x2C fullMessageSize);\x0d\n      channel[kMessageBufferSize] = messageBufferHead.length;\x0d\n      channel[kMessageBuffer] =\x0d\n        channel[kMessageBufferSize] !== 0 ? [messageBufferHead] : [];\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n\x0d\n    channel.buffering = channel[kMessageBufferSize] > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    // Add 4 bytes\x2C to later populate with message length\x0d\n    ser.writeRawBytes(Buffer.allocUnsafe(4));\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const serializedMessageLength = serializedMessage.length - 4;\x0d\n\x0d\n    serializedMessage.set([\x0d\n      serializedMessageLength >> 24 & 0xFF\x2C\x0d\n      serializedMessageLength >> 16 & 0xFF\x2C\x0d\n      serializedMessageLength >> 8 & 0xFF\x2C\x0d\n      serializedMessageLength & 0xFF\x2C\x0d\n    ]\x2C 0);\x0d\n\x0d\n    const result = channel.writeBuffer(req\x2C serializedMessage\x2C handle);\x0d\n\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = serializedMessage;\x0d\n\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x1000c2592e6,111,0,5522,C0O0C4O5522,,
code-creation,Function,10,468078,0x1000c259b5e,390, node:internal/child_process/serialization:1:1,0x1000c259260,~
code-source-info,0x1000c259b5e,111,0,5522,C0O0C62O28C68O42C74O60C80O85C86O108C91O119C97O186C100O186C105O175C111O232C114O232C119O214C125O271C128O271C133O317C136O317C141O295C147O365C150O365C154O365C156O442C159O442C164O402C170O419C176O500C179O500C183O500C185O554C188O554C192O554C194O605C197O605C201O605C203O652C206O652C210O652C212O915C213O915C215O950C217O950C223O994C258O954C264O1318C299O1276C301O1776C306O1781C314O1927C322O3502C333O4379C338O4384C346O4499C354O5309C365O5484C372O5503C378O5513C384O5499C389O5521,,
code-creation,LazyCompile,10,468299,0x1000c25a756,23,initMessageChannel node:internal/child_process/serialization:132:21,0x1000c259548,~
code-source-info,0x1000c25a756,111,4402,4492,C0O4419C2O4427C7O4440C11O4451C13O4459C17O4475C22O4491,,
code-creation,LazyCompile,10,468399,0x1000c25b07e,19,_getMaxListeners node:events:414:26,0x12028f6f418,~
code-source-info,0x1000c25b07e,23,12446,12574,C0O12467C6O12501C9O12521C13O12541C14O12557C18O12571,,
code-creation,LazyCompile,10,468446,0x1000c25b176,5,get node:events:272:16,0x12028f6f038,~
code-source-info,0x1000c25b176,23,8173,8215,C0O8183C4O8210,,
code-creation,LazyCompile,10,468528,0x1000c25b4d6,322,arrayClone node:events:865:20,0x12028f6fc90,~
code-source-info,0x1000c25b4d6,23,25538,26003,C0O25680C42O25703C50O25714C62O25722C71O25727C72O25741C80O25752C92O25760C104O25768C113O25773C114O25787C122O25798C134O25806C146O25814C158O25822C167O25827C168O25841C176O25852C188O25860C200O25868C212O25876C224O25884C233O25889C234O25903C242O25914C254O25922C266O25930C278O25938C290O25946C302O25954C311O25959C312O25968C317O25975C321O26000,,
code-creation,LazyCompile,10,468693,0x1000c25b7a6,22, node:internal/child_process:707:36,0x1000c255a78,~
code-source-info,0x1000c25b7a6,104,20117,20530,C0O20129C5O20137C15O20137C21O20529,,
code-creation,LazyCompile,10,468829,0x1000c25ba46,368,nextTick node:internal/process/task_queues:104:18,0x19bc9c5ae08,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x1000c25ba
code-creation,LazyCompile,10,469197,0x1000c25c2b6,21, node:internal/validators:231:42,0x12028f49788,~
code-source-info,0x1000c25c2b6,16,7392,7496,C0O7411C6O7452C13O7458C18O7452C20O7495,,
code-creation,LazyCompile,10,469252,0x1000c25c3b6,15,isEmpty node:internal/fixed_queue:95:10,0x19bc9c60050,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1000c25c3b6,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,469515,0x1000c25c86e,13,isEmpty node:internal/fixed_queue:67:10,0x19bc9c5fde0,~
code-source-info,0x1000c25c86e,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,469560,0x1000c25c95e,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x19bc9c5ad18,~
code-source-info,0x1000c25c95e,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,469645,0x1000c25ca56,23,newAsyncId node:internal/async_hooks:416:20,0x39626a3a668,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1000c25ca56,13,14888,14941,C0O14896C7O14921C16O14936C22O14938,,
tick,0x7ff78f1420ba,470822,0,0x0,2,0x7ff78f0a54e0,0x1000c25bb4b,0x1000c25b7b5,0x7f483e24d7,0x7f483e1d6b,0x7f483df6d4,0x1000c2555bf,0x7f483e8ef4,0x7f483cf2e0,0x7f483ca9d5
code-creation,LazyCompile,10,470871,0x1000c25df2e,35,getDefaultTriggerAsyncId node:internal/async_hooks:432:34,0x39626a3a708,~
code-source-info,0x1000c25df2e,13,15363,15626,C0O15401C7O15417C9O15416C13O15512C14O15538C19O15548C26O15571C28O15570C31O15590C32O15594C34O15623,,
code-creation,LazyCompile,10,470985,0x1000c25e03e,13,initHooksExist node:internal/async_hooks:478:24,0x39626a3a8f8,~
code-source-info,0x1000c25e03e,13,16630,16664,C0O16638C5O16654C8O16645C12O16661,,
code-creation,LazyCompile,10,471041,0x1000c25e126,16,hasHooks node:internal/async_hooks:470:18,0x39626a3a858,~
code-source-info,0x1000c25e126,13,16490,16538,C0O16501C7O16525C12O16531C15O16535,,
code-creation,LazyCompile,10,471098,0x1000c25e236,59,push node:internal/fixed_queue:99:7,0x19bc9c600a0,~
code-source-info,0x1000c25e236,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,471158,0x1000c25e37e,24,isFull node:internal/fixed_queue:71:9,0x19bc9c5fe30,~
code-source-info,0x1000c25e37e,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,471209,0x1000c25e48e,37,push node:internal/fixed_queue:75:7,0x19bc9c5fe98,~
code-source-info,0x1000c25e48e,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,471293,0x1000c25e5ae,30,onNewListener node:child_process:176:51,0x1000c255418,~
code-source-info,0x1000c25e5ae,103,5329,5418,C0O5343C2O5352C9O5374C14O5392C19O5400C24O5400C29O5417,,
code-creation,LazyCompile,10,471439,0x1000c25e8fe,455,initializePolicy node:internal/bootstrap/pre_execution:465:26,0x7f483cd140,~
code-source-info,0x1000c25e8fe
code-creation,LazyCompile,10,471577,0x1000c25ecce,63,initializeClusterIPC node:internal/bootstrap/pre_execution:456:30,0x7f483cd0f0,~
code-source-info,0x1000c25ecce,100,14534,14782,C0O14542C3O14554C10O14558C18O14573C23O14577C29O14616C35O14616C40O14649C45O14649C49O14740C52O14755C62O14781,,
code-creation,LazyCompile,10,471652,0x1000c25ee3e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:560:38,0x7f483cd280,~
code-source-info,0x1000c25ee3e,100,18437,18590,C0O18483C6O18483C11O18453C16O18535C21O18564C26O18589,,
code-creation,Eval,10,472012,0x1000c25f8ae,5, node:internal/source_map/source_map_cache:1:1,0x1000c25f518,~
script-source,112,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x2C\x0d\n    content\x2C\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else if (isGeneratedSource) {\x0d\n      generatedSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const matchSourceURL = RegExpPrototypeExec(\x0d\n    /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/\x2C\x0d\n    content\x0d\n  );\x0d\n  if (matchSourceURL == null) {\x0d\n    return;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL\x2C isGenerated) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap;\x0d\n  if (isGenerated) {\x0d\n    sourceMap = generatedSourceMapCache.get(sourceURL);\x0d\n  } else {\x0d\n    sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n    if (sourceMap === undefined) {\x0d\n      for (const value of cjsSourceMapCache) {\x0d\n        const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n        if (sourceURL === filename) {\x0d\n          sourceMap = {\x0d\n            data: ObjectGetValueSafe(value\x2C 'data')\x0d\n          };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x1000c25f8ae,112,0,9338,C0O0C4O9338,,
code-creation,Function,10,472557,0x1000c25ff96,482, node:internal/source_map/source_map_cache:1:1,0x1000c25f828,~
code-source-info,0x1000c25ff96,112,0,9338,C0O0C164O28C170O50C176O64C182O81C188O96C194O131C200O165C206O189C212O220C217O232C223O553C229O553C234O542C240O585C246O585C251O618C264O619C270O585C272O684C278O684C282O684C284O727C290O727C295O708C301O785C307O785C312O765C317O868C323O868C328O841C334O938C340O938C345O918C351O1015C357O1015C362O979C367O1252C369O1252C374O1252C376O1381C378O1381C383O1381C385O1516C387O1516C392O1516C394O1557C398O1557C400O1619C406O1619C411O1581C417O1596C423O1611C429O1649C430O1649C432O1667C433O1667C435O4606C439O9195C446O9217C452O9235C458O9260C464O9285C470O9309C476O9210C481O9337,,
code-creation,Eval,10,472974,0x1000c261176,5, node:internal/util/iterable_weak_map:1:1,0x1000c260f28,~
script-source,113,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x1000c261176,113,0,2042,C0O0C4O2042,,
code-creation,Function,10,473371,0x1000c2618d6,196, node:internal/util/iterable_weak_map:1:1,0x1000c2610f0,~
code-source-info,0x1000c2618d6,113,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,473426,0x1000c261a56,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x1000c261400,~
code-source-info,0x1000c261a56,113,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,474828,0x1000c26273e,5, node:internal/modules/cjs/helpers:1:1,0x1000c262488,~
script-source,114,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          __proto__: null\x2C\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x1000c26273e,114,0,7098,C0O0C4O7098,,
code-creation,Function,10,475297,0x1000c262cbe,536, node:internal/modules/cjs/helpers:1:1,0x1000c2626b8,~
code-source-info,0x1000c262cbe,114,0,7098,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6929C488O6951C494O6978C500O6996C506O7013C512O7034C518O7058C524O7083C530O6944C535O7097,,
code-creation,LazyCompile,10,475536,0x1000c263986,27,SafeSet node:internal/per_context/primordials:379:16,0x39626a0abe0,~
code-source-info,0x1000c263986,6,11306,11323,C3O11312C7O11318C11O11312C26O11322,,
code-creation,LazyCompile,10,475619,0x1000c263b4e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x1000c2611f8,~
code-source-info,0x1000c263b4e,113,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,475667,0x1000c263ed6,27,SafeWeakMap node:internal/per_context/primordials:372:16,0x39626a0ab18,~
code-source-info,0x1000c263ed6,6,11143,11160,C3O11149C7O11155C11O11149C26O11159,,
code-creation,LazyCompile,10,475721,0x1000c263fde,27,SafeFinalizationRegistry node:internal/per_context/primordials:393:16,0x39626a0ad68,~
code-source-info,0x1000c263fde,6,11770,11815,C3O11790C7O11796C11O11790C26O11814,,
code-creation,LazyCompile,10,475919,0x1000c26485e,492,initializeDeprecations node:internal/bootstrap/pre_execution:347:32,0x7f483cd010,~
code-source-info,0x1000c26485e
code-creation,LazyCompile,10,476058,0x1000c264d76,53,initializeWASI node:internal/bootstrap/pre_execution:514:24,0x7f483cd190,~
code-source-info,0x1000c264d76,100,16683,16894,C0O16716C6O16716C11O16699C16O16783C21O16787C29O16787C35O16803C37O16835C43O16835C47O16828C52O16893,,
code-creation,LazyCompile,10,476141,0x1000c264eae,53,runDeserializeCallbacks node:internal/v8/startup_snapshot:31:33,0x3ba376f858,~
script-source,89,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  markBootstrapComplete\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  // For now this is the only way to build a snapshot.\x0d\n  return require('internal/options').getOptionValue('--build-snapshot');\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n  // Remove the hooks from the snapshot.\x0d\n  require('v8').startupSnapshot = undefined;\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x0d\n    } = require('internal/bootstrap/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    prepareMainThreadExecution(true);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1000c264eae,89,790,936,C0O833C5O826C11O833C16O878C21O899C26O899C31O856C37O869C44O913C48O798C52O935,,
code-creation,LazyCompile,10,476436,0x1000c26543e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:521:29,0x7f483cd1e0,~
code-source-info,0x1000c26543e,100,16926,17249,C0O16952C6O16952C11O16995C16O17000C20O17020C26O17059C31O17066C36O17066C40O17165C51O17187C56O17223C60O17180C65O17248,,
code-creation,Eval,10,477515,0x1000c26744e,5, node:internal/modules/cjs/loader:1:1,0x1000c266b68,~
script-source,115,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  ArrayPrototypeFlatMap\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate\x2C kEmptyObject } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers &&\x0d\n    NativeModule.canBeRequiredWithoutScheme(id)) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst allBuiltins = new SafeSet(\x0d\n  ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\x0d\n);\x0d\nNativeModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeExec(trailingSlashRegex\x2C request) !== null;\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (\x0d\n    (\x0d\n      StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n      NativeModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n    ) || (\x0d\n      NativeModule.canBeRequiredByUsers(request) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(request)\x0d\n    )\x0d\n  ) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = readPackageScope(parentPath) || {};\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                cjsConditions)\x2C parentPath\x2C request\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers &&\x0d\n        NativeModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nModule.isBuiltin = function isBuiltin(moduleName) {\x0d\n  return allBuiltins.has(moduleName);\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x1000c26744e,115,0,42557,C0O0C4O42557,,
code-creation,Function,10,479882,0x1000c26931e,2678, node:internal/modules/cjs/loader:1:1,0x1000c2673c8,~
code-source-info,0x1000c26931e
code-creation,Eval,10,480531,0x1000c26d596,5, node:internal/modules/package_json_reader:1:1,0x1000c26d3f0,~
script-source,116,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x1000c26d596,116,0,1024,C0O0C4O1024,,
code-creation,Function,10,480642,0x1000c26d6e6,113, node:internal/modules/package_json_reader:1:1,0x1000c26d510,~
code-source-info,0x1000c26d6e6,116,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,480865,0x1000c26de9e,5, node:internal/process/esm_loader:1:1,0x1000c26dc98,~
script-source,117,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\x0d\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\x0d\n// esmLoader.\x0d\nlet isESMInitialized = false;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  if (isESMInitialized) { return; }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (customLoaders.length === 0) return;\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const keyedExportsList = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(keyedExportsList);\x0d\n\x0d\n  isESMInitialized = true;\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1000c26de9e,117,0,3087,C0O0C4O3087,,
code-creation,Function,10,481068,0x1000c26e13e,188, node:internal/process/esm_loader:1:1,0x1000c26de18,~
code-source-info,0x1000c26e13e,117,0,3087,C0O0C47O28C53O119C59O119C64O145C69O74C75O176C81O176C86O162C92O270C98O270C103O228C109O336C115O336C120O318C126O397C132O397C137O373C143O431C147O466C151O777C155O817C159O1300C162O1300C167O1300C169O1318C171O1336C175O1588C176O1588C178O2717C182O2733C187O3086,,
code-creation,Eval,10,481663,0x1000c26f766,5, node:internal/modules/esm/loader:1:1,0x1000c26f268,~
script-source,118,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * @typedef {object} ExportedHooks\x0d\n * @property {Function} globalPreload\x0d\n * @property {Function} resolve\x0d\n * @property {Function} load\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedExports\x0d\n * @property {ModuleExports} exports\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedHook\x0d\n * @property {Function} fn\x0d\n * @property {URL['href']} url\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n// [2] `validate...()`s throw the wrong error\x0d\n\x0d\nlet emittedSpecifierResolutionWarning = false;\x0d\n\x0d\n/**\x0d\n * A utility function to iterate through a hook chain\x2C track advancement in the\x0d\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\x0d\n * hook.\x0d\n * @param {KeyedHook[]} chain The whole hook chain.\x0d\n * @param {object} meta Properties that change as the current hook advances\x0d\n * along the chain.\x0d\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\x0d\n * reached AND invoked.\x0d\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\x0d\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\x0d\n * @param {number} meta.hookIndex A non-negative integer tracking the current\x0d\n * position in the hook chain.\x0d\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\x0d\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\x0d\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\x0d\n *  containing all validation of a custom loader hook's intermediary output. Any\x0d\n *  validation within MUST throw.\x0d\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\x0d\n */\x0d\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\x0d\n  // First\x2C prepare the current\x0d\n  const { hookName } = meta;\x0d\n  const {\x0d\n    fn: hook\x2C\x0d\n    url: hookFilePath\x2C\x0d\n  } = chain[meta.hookIndex];\x0d\n\x0d\n  // ex 'nextResolve'\x0d\n  const nextHookName = `next${\x0d\n    StringPrototypeToUpperCase(hookName[0]) +\x0d\n    StringPrototypeSlice(hookName\x2C 1)\x0d\n  }`;\x0d\n\x0d\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\x0d\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\x0d\n  const generatedHookIndex = meta.hookIndex;\x0d\n  let nextNextHook;\x0d\n  if (meta.hookIndex > 0) {\x0d\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\x0d\n    // factory generates the next link in the chain.\x0d\n    meta.hookIndex--;\x0d\n\x0d\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n  } else {\x0d\n    // eslint-disable-next-line func-name-matching\x0d\n    nextNextHook = function chainAdvancedTooFar() {\x0d\n      throw new ERR_INTERNAL_ASSERTION(\x0d\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\x0d\n      );\x0d\n    };\x0d\n  }\x0d\n\x0d\n  return ObjectDefineProperty(\x0d\n    async (arg0 = undefined\x2C context) => {\x0d\n      // Update only when hook is invoked to avoid fingering the wrong filePath\x0d\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\x0d\n\x0d\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\x0d\n\x0d\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\x0d\n\x0d\n      // Set when next<HookName> is actually called\x2C not just generated.\x0d\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\x0d\n\x0d\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\x0d\n        ObjectAssign(meta.context\x2C context);\x0d\n      }\x0d\n\x0d\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\x0d\n\x0d\n      validateOutput(outputErrIdentifier\x2C output);\x0d\n\x0d\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n      return output;\x0d\n\x0d\n    }\x2C\x0d\n    'name'\x2C\x0d\n    { __proto__: null\x2C value: nextHookName }\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} globalPreloaders Last-in-first-out\x0d\n   *  list of preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} loaders Last-in-first-out\x0d\n   *  collection of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    {\x0d\n      fn: defaultLoad\x2C\x0d\n      url: 'node:internal/modules/esm/load'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {KeyedHook[]} resolvers Last-in-first-out\x0d\n   *  collection of resolver hooks.\x0d\n   */\x0d\n  #resolvers = [\x0d\n    {\x0d\n      fn: defaultResolve\x2C\x0d\n      url: 'node:internal/modules/esm/resolve'\x2C\x0d\n    }\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  constructor() {\x0d\n    if (getOptionValue('--experimental-loader').length > 0) {\x0d\n      emitExperimentalWarning('Custom ESM Loaders');\x0d\n    }\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    if (\x0d\n      !emittedSpecifierResolutionWarning &&\x0d\n      getOptionValue('--experimental-specifier-resolution') === 'node'\x0d\n    ) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning'\x0d\n      );\x0d\n      emittedSpecifierResolutionWarning = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {ModuleExports} exports\x0d\n   * @returns {ExportedHooks}\x0d\n   */\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {KeyedExports} customLoaders\x0d\n   *  A list of exports from user-defined loaders (as returned by\x0d\n   *  ESMLoader.import()).\x0d\n   */\x0d\n  addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const {\x0d\n        exports\x2C\x0d\n        url\x2C\x0d\n      } = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#globalPreloaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(globalPreloader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (resolver) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#resolvers\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(resolver)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (loader) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#loaders\x2C\x0d\n          {\x0d\n            fn: FunctionPrototypeBind(loader)\x2C // [1]\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n\x0d\n    // By default\x2C `this.#loaders` contains just the Node default load hook\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user-provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve = ObjectAssign(\x0d\n        ObjectCreate(null)\x2C\x0d\n        importAssertions\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        responseURL\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\x0d\n   *  A collection of module export(s) or a list of collections of module\x0d\n   *  export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\x0d\n    // list pairing the url and exports collected. This is especially useful for\x0d\n    // error messaging\x2C to identity from where an export came. But\x2C in most\x0d\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\x0d\n    // only 1 possible url from which the exports were collected and it is\x0d\n    // already known to the caller. Nesting that in a list would only ever\x0d\n    // create redundant work for the caller\x2C so it is later popped off the\x0d\n    // internal list.\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) { specifiers = [specifiers]; }\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const namespace = ObjectCreate(null);\x0d\n      namespace.url = specifiers[i];\x0d\n      namespace.exports = namespaces[i];\x0d\n\x0d\n      namespaces[i] = namespace;\x0d\n    }\x0d\n\x0d\n    return namespaces;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const chain = this.#loaders;\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'load'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\x0d\n      if (typeof nextUrl !== 'string') {\x0d\n        // non-strings can be coerced to a url string\x0d\n        // validateString() throws a less-specific error\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          `${hookErrIdentifier} url`\x2C\x0d\n          'a url string'\x2C\x0d\n          nextUrl\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      // Try to avoid expensive URL instantiation for known-good urls\x0d\n      if (!this.moduleMap.has(nextUrl)) {\x0d\n        try {\x0d\n          new URL(nextUrl);\x0d\n        } catch {\x0d\n          throw new ERR_INVALID_ARG_VALUE(\x0d\n            `${hookErrIdentifier} url`\x2C\x0d\n            nextUrl\x2C\x0d\n            'should be a url string'\x2C\x0d\n          );\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const loaded = await nextLoad(url\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C loaded);\x0d\n\x0d\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n    let responseURL = loaded.responseURL;\x0d\n\x0d\n    if (responseURL === undefined) {\x0d\n      responseURL = url;\x0d\n    }\x0d\n\x0d\n    let responseURLObj;\x0d\n    if (typeof responseURL === 'string') {\x0d\n      try {\x0d\n        responseURLObj = new URL(responseURL);\x0d\n      } catch {\x0d\n        // responseURLObj not defined will throw in next branch.\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (responseURLObj?.href !== responseURL) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'undefined or a fully resolved URL string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'responseURL'\x2C\x0d\n        responseURL\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') { // [2]\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) {\x0d\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'source'\x2C\x0d\n        source\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      responseURL\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    for (let i = this.#globalPreloaders.length - 1; i >= 0; i--) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const {\x0d\n        fn: preloader\x2C\x0d\n        url: specifier\x2C\x0d\n      } = this.#globalPreloaders[i];\x0d\n\x0d\n      const preload = preloader({\x0d\n        port: insideLoader\x2C\x0d\n      });\x0d\n\x0d\n      if (preload == null) { return; }\x0d\n\x0d\n      const hookErrIdentifier = `${specifier} globalPreload`;\x0d\n\x0d\n      if (typeof preload !== 'string') { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'a string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName) &&\x0d\n                NativeModule.canBeRequiredWithoutScheme(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'parentURL'\x2C\x0d\n        ['string'\x2C 'URL']\x2C\x0d\n        parentURL\x2C\x0d\n      );\x0d\n    }\x0d\n    const chain = this.#resolvers;\x0d\n    const context = {\x0d\n      conditions: DEFAULT_CONDITIONS\x2C\x0d\n      importAssertions\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'resolve'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\x0d\n      validateString(\x0d\n        suppliedSpecifier\x2C\x0d\n        `${hookErrIdentifier} specifier`\x2C\x0d\n      ); // non-strings can be coerced to a url string\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const resolution = await nextResolve(originalSpecifier\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C resolution);\x0d\n\x0d\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string' // [2]\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') {\x0d\n      // non-strings can be coerced to a url string\x0d\n      // validateString() throws a less-specific error\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a url string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // Try to avoid expensive URL instantiation for known-good urls\x0d\n    if (!this.moduleMap.has(url)) {\x0d\n      try {\x0d\n        new URL(url);\x0d\n      } catch {\x0d\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n          'a url string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          'url'\x2C\x0d\n          url\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x1000c26f766,118,0,27123,C0O0C4O27123,,
code-creation,Function,10,483469,0x1000c27007e,721, node:internal/modules/esm/loader:1:1,0x1000c26f6e0,~
code-source-info,0x1000c27007e,118,0,27123,C0O0C146O82C152O82C156O136C162O146C168O163C174O186C180O209C186O235C192O261C198O278C204O295C210O320C215O345C221O360C227O384C233O406C239O422C245O447C251O478C257O536C263O536C268O517C274O790C280O790C285O816C290O581C296O613C302O640C308O665C314O691C320O729C326O758C332O871C338O871C343O833C349O848C355O863C361O933C367O933C372O905C378O1016C384O1016C389O971C395O992C401O1100C407O1100C412O1060C418O1079C424O1151C430O1151C434O1151C436O1214C442O1214C446O1214C448O1316C454O1316C459O1272C465O1291C471O1395C477O1395C482O1369C488O1476C494O1476C499O1460C505O1539C511O1539C516O1523C522O1616C528O1616C533O1597C539O2323C540O2323C701O27070C708O27039C713O27091C715O27109C720O27122,,
code-creation,Function,10,483569,0x1000c270606,176,<instance_members_initializer> node:internal/modules/esm/loader:190:3,0x1000c26fb88,~
code-source-info,0x1000c270606,118,6059,7106,C3O6079C17O6254C33O6274C56O6524C72O6544C95O6653C110O6752C117O6752C131O6875C141O6967C148O6967C162O7095C175O7106,,
code-creation,Eval,10,483848,0x1000c27288e,5, node:internal/modules/esm/module_map:1:1,0x1000c2726a0,~
script-source,119,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x1000c27288e,119,0,1487,C0O0C4O1487,,
code-creation,Function,10,483968,0x1000c272cc6,175, node:internal/modules/esm/module_map:1:1,0x1000c272808,~
code-source-info,0x1000c272cc6,119,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,484272,0x1000c27373e,5, node:internal/modules/esm/module_job:1:1,0x1000c273478,~
script-source,120,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await SafePromiseAll(promises);\x0d\n\x0d\n      return SafePromiseAll(dependencyJobs);\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return SafePromiseAll(dependencyJobs\x2C addJobsToDependencyGraph);\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\x0d\n          /:\\d+$/\x2C\x0d\n          splitStack[0]\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\x0d\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\x0d\n          e.message);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x1000c27373e,120,0,8281,C0O0C4O8281,,
code-creation,Function,10,484836,0x1000c273c1e,316, node:internal/modules/esm/module_job:1:1,0x1000c2736b8,~
code-source-info,0x1000c273c1e,120,0,8281,C0O0C79O28C85O51C91O74C97O97C102O119C108O136C113O161C118O180C124O206C130O223C136O247C142O280C148O299C154O311C160O339C166O364C172O435C178O435C183O420C189O501C195O501C200O478C206O566C212O566C217O539C223O631C229O631C233O631C235O684C238O684C240O718C242O718C244O761C245O761C247O793C251O793C253O918C257O918C296O8233C303O8202C308O8252C310O8267C315O8280,,
code-creation,Eval,10,485139,0x1000c27580e,5, node:internal/modules/esm/assert:1:1,0x1000c275618,~
script-source,121,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x1000c27580e,121,0,3734,C0O0C4O3734,,
code-creation,Function,10,485383,0x1000c275ae6,201, node:internal/modules/esm/assert:1:1,0x1000c275788,~
code-source-info,0x1000c275ae6,121,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,485519,0x1000c2760f6,9, node:internal/modules/esm/assert:43:3,0x1000c2758e0,~
code-source-info,0x1000c2760f6,121,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,486466,0x1000c277cce,5, node:internal/modules/esm/resolve:1:1,0x1000c277520,~
script-source,122,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null)\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ?\x0d\n      StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    throwInvalidSubpath(request\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n      NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier) &&\x0d\n          NativeModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x1000c277cce,122,0,42159,C0O0C4O42159,,
code-creation,Function,10,489085,0x1000c278dfe,1185, node:internal/modules/esm/resolve:1:1,0x1000c277c48,~
code-source-info,0x1000c278dfe
tick,0x7ff78ea01aaf,489283,1,0x7ff78eb32120,3,0x7ff78f4768e0,0x17e03b44b9b,0x17e03b432e5,0x1000c270244,0x17e03b44c63,0x17e03b432e5,0x1000c26e18f,0x17e03b44c63,0x17e03b432e5,0x1000c2697cd,0x17e03b44c63,0x17e03b432e5,0x1000c265444,0x7f483cf31e,0x7f483ca9d5
code-creation,Eval,10,489682,0x1000c27c7e6,5, node:internal/modules/esm/get_format:1:1,0x1000c27c560,~
script-source,123,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x1000c27c7e6,123,0,4260,C0O0C4O4260,,
code-creation,Function,10,490064,0x1000c27cc66,368, node:internal/modules/esm/get_format:1:1,0x1000c27c760,~
code-source-info,0x1000c27cc66,123,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,491034,0x1000c27dabe,5, node:internal/modules/esm/fetch_module:1:1,0x1000c27d7d8,~
script-source,124,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: { concat: BufferConcat }\x2C\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\nconst { once } = require('events');\x0d\nconst { compose } = require('stream');\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * It caches either the promise or the cache entry since import.meta.url needs\x0d\n * the value synchronously for the response location after all redirects.\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x2C\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Redirection status code as per section 6.4 of RFC 7231:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7231#section-6.4\x0d\n * and RFC 7238:\x0d\n * https://datatracker.ietf.org/doc/html/rfc7238\x0d\n * @param {number} statusCode\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isRedirect(statusCode) {\x0d\n  switch (statusCode) {\x0d\n    case 300: // Multiple Choices\x0d\n    case 301: // Moved Permanently\x0d\n    case 302: // Found\x0d\n    case 303: // See Other\x0d\n    case 307: // Temporary Redirect\x0d\n    case 308: // Permanent Redirect\x0d\n      return true;\x0d\n    default:\x0d\n      return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = (async () => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: { Accept: '*/*' }\x2C\x0d\n    });\x0d\n    // Note that `once` is used here to handle `error` and that it hits the\x0d\n    // `finally` on network error/timeout.\x0d\n    const { 0: res } = await once(req\x2C 'response');\x0d\n    try {\x0d\n      const hasLocation = ObjectPrototypeHasOwnProperty(res.headers\x2C 'location');\x0d\n      if (isRedirect(res.statusCode) && hasLocation) {\x0d\n        const location = new URL(res.headers.location\x2C parsed);\x0d\n        if (location.protocol !== 'http:' && location.protocol !== 'https:') {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            res.headers.location\x2C\x0d\n            parsed.href\x2C\x0d\n            'cannot redirect to non-network location'\x0d\n          );\x0d\n        }\x0d\n        const entry = await fetchWithRedirects(location);\x0d\n        cacheForGET.set(parsed.href\x2C entry);\x0d\n        return entry;\x0d\n      }\x0d\n      if (res.statusCode === 404) {\x0d\n        const err = new ERR_MODULE_NOT_FOUND(parsed.href\x2C null);\x0d\n        err.message = `Cannot find module '${parsed.href}'\x2C HTTP 404`;\x0d\n        throw err;\x0d\n      }\x0d\n      // This condition catches all unsupported status codes\x2C including\x0d\n      // 3xx redirection codes without `Location` HTTP header.\x0d\n      if (res.statusCode < 200 || res.statusCode >= 300) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          res.headers.location\x2C\x0d\n          parsed.href\x2C\x0d\n          'cannot redirect to non-network location');\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        throw new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          "the 'Content-Type' header is required"\x0d\n        );\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x2C\x0d\n        }\x2C\x0d\n        body: (async () => {\x0d\n          let bodyStream = res;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = compose(res\x2C createBrotliDecompress());\x0d\n          } else if (\x0d\n            res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate'\x0d\n          ) {\x0d\n            bodyStream = compose(res\x2C createUnzip());\x0d\n          }\x0d\n          const buffers = await bodyStream.toArray();\x0d\n          const body = BufferConcat(buffers);\x0d\n          entry.body = body;\x0d\n          return body;\x0d\n        })()\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      await entry.body;\x0d\n      return entry;\x0d\n    } finally {\x0d\n      req.destroy();\x0d\n    }\x0d\n  })();\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n      StringPrototypeEndsWith(hostname\x2C ']')\x0d\n    ) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule\x2C\x0d\n};\x0d\n
code-source-info,0x1000c27dabe,124,0,8018,C0O0C4O8018,,
code-creation,Function,10,491933,0x1000c27df76,355, node:internal/modules/esm/fetch_module:1:1,0x1000c27da38,~
code-source-info,0x1000c27df76,124,0,8018,C0O0C113O26C119O60C125O85C130O97C136O125C142O150C148O246C154O246C159O246C164O225C170O374C176O374C181O400C186O277C192O311C198O347C204O425C210O425C215O417C221O463C227O463C232O497C238O497C243O488C249O537C255O537C260O525C266O1131C268O1131C273O1131C275O1429C276O1429C278O1669C279O1669C281O2066C282O2066C284O6093C289O6085C294O6085C296O6107C299O6117C310O6117C316O6145C319O6155C330O6155C336O7978C343O8000C349O7993C354O8017,,
code-creation,LazyCompile,10,492132,0x1000c27ec86,37,get BlockList node:net:1920:16,0x7f483f8560,~
code-source-info,0x1000c27ec86,105,53493,53585,C0O53503C14O53517C19O53546C26O53513C32O53563C36O53580,,
new,MemoryChunk,0x2481a600000,262144
code-creation,Eval,10,492414,0x1000c27f166,5, node:internal/blocklist:1:1,0x1000c27ef80,~
script-source,125,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x1000c27f166,125,0,4043,C0O0C4O4043,,
code-creation,Function,10,492690,0x1000c27fb6e,359, node:internal/blocklist:1:1,0x1000c27f0e0,~
code-source-info,0x1000c27fb6e,125,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,493054,0x2481a6027a6,5, node:internal/socketaddress:1:1,0x2481a6025b0,~
script-source,126,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x2481a6027a6,126,0,3363,C0O0C4O3363,,
code-creation,Function,10,493305,0x2481a6032ce,366, node:internal/socketaddress:1:1,0x2481a602720,~
code-source-info,0x2481a6032ce,126,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,493534,0x2481a603d7e,72,BlockList node:internal/blocklist:40:14,0x1000c27f198,~
code-source-info,0x2481a603d7e,125,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,493634,0x2481a604526,115,addAddress node:internal/blocklist:60:13,0x1000c27f238,~
code-source-info,0x2481a604526,125,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,493707,0x2481a6046a6,20,isSocketAddress node:internal/socketaddress:43:25,0x2481a602828,~
code-source-info,0x2481a6046a6,126,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,493830,0x2481a604e3e,323,SocketAddress node:internal/socketaddress:47:14,0x2481a6027d8,~
code-source-info,0x2481a604e3e,126,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,493951,0x2481a60518e,99, node:internal/validators:163:3,0x12028f49540,~
code-source-info,0x2481a60518e,16,4893,5464,C0O4952C4O4993C9O5029C14O5068C21O5104C26O5141C33O5177C38O5192C46O5240C50O5254C53O5254C67O5331C75O5398C91O5404C96O5398C98O5463,,
code-creation,LazyCompile,10,494038,0x2481a60533e,129,validatePort node:internal/validators:220:22,0x12028f49718,~
code-source-info,0x2481a60533e,16,6980,7347,C24O7025C44O7123C47O7123C52O7148C58O7156C65O7173C70O7184C72O7190C75O7179C86O7212C92O7237C99O7247C101O7266C117O7272C122O7266C123O7328C125O7340C128O7344,,
code-creation,LazyCompile,10,494123,0x2481a60558e,149, node:internal/validators:102:40,0x12028f49340,~
code-source-info,0x2481a60558e,16,2998,3517,C0O3030C6O3068C22O3074C27O3068C28O3131C31O3136C37O3160C42O3165C48O3198C64O3204C69O3198C70O3277C80O3331C90O3370C109O3337C114O3331C115O3409C120O3431C125O3445C141O3451C146O3445C148O3516,,
code-creation,LazyCompile,10,494185,0x2481a60571e,9,isUint32 node:internal/validators:41:18,0x12028f491e0,~
code-source-info,0x2481a60571e,16,851,898,C0O864C2O888C5O877C8O895,,
code-creation,LazyCompile,10,494303,0x2481a605c16,229,addRange node:internal/blocklist:72:11,0x1000c27f288,~
code-source-info,0x2481a605c16,125,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,494493,0x2481a606176,5, node:internal/modules/esm/formats:1:1,0x2481a606000,~
script-source,127,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    ) !== null\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x2481a606176,127,0,1256,C0O0C4O1256,,
code-creation,Function,10,494608,0x2481a60642e,120, node:internal/modules/esm/formats:1:1,0x2481a6060f0,~
code-source-info,0x2481a60642e,127,0,1256,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1134C90O1156C96O1179C102O1208C108O1237C114O1149C119O1255,,
code-creation,Eval,10,494813,0x2481a606ab6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x2481a606920,~
script-source,128,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const { url } = context;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x2481a606ab6,128,0,1021,C0O0C4O1021,,
code-creation,Function,10,494964,0x2481a606c7e,90, node:internal/modules/esm/initialize_import_meta:1:1,0x2481a606a30,~
code-source-info,0x2481a606c7e,128,0,1021,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O973C78O995C84O988C89O1020,,
code-creation,Eval,10,495186,0x2481a6072e6,5, node:internal/modules/esm/load:1:1,0x2481a6070b0,~
script-source,129,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst { readFile: readFileAsync } = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function getSource(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  let responseURL = url;\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n    responseURL = res.resolvedHREF;\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return { responseURL\x2C source };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let responseURL = url;\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x2481a6072e6,129,0,2849,C0O0C4O2849,,
code-creation,Function,10,495381,0x2481a607526,263, node:internal/modules/esm/load:1:1,0x2481a607260,~
code-source-info,0x2481a607526,129,0,2849,C0O0C58O28C64O51C70O75C76O145C79O145C84O124C90O221C93O221C98O198C104O289C107O289C112O270C117O343C120O343C125O327C131O459C134O459C143O504C150O459C152O589C155O589C159O589C161O683C164O683C169O683C174O666C180O741C183O741C188O772C193O723C199O799C202O799C207O791C213O893C216O893C221O919C226O836C232O856C238O955C242O955C244O2809C251O2831C257O2824C262O2848,,
code-creation,Eval,10,496246,0x2481a608aae,5, node:internal/fs/promises:1:1,0x2481a608300,~
script-source,130,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = constants;\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrParams;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    // This is fh.read(params)\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = bufferOrParams ?? kEmptyObject);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset !== null && typeof offset === 'object') {\x0d\n    // This is fh.read(buffer\x2C options)\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offset);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || kEmptyObject;\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validatePrimitiveStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n    constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x2481a608aae,130,0,24252,C0O0C4O24252,,
code-creation,Function,10,497786,0x2481a60b1fe,1682, node:internal/fs/promises:1:1,0x2481a608a28,~
code-source-info,0x2481a60b1fe
code-creation,Function,10,497991,0x2481a60bbbe,27,<instance_members_initializer> node:internal/fs/promises:195:3,0x2481a60a088,~
code-source-info,0x2481a60bbbe,130,4461,5290,C0O4461C12O4469C26O5290,,
code-creation,Eval,10,498454,0x2481a60e72e,5, node:internal/fs/rimraf:1:1,0x2481a60e3c8,~
script-source,131,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x2481a60e72e,131,0,7392,C0O0C4O7392,,
code-creation,Function,10,498947,0x2481a60ed2e,409, node:internal/fs/rimraf:1:1,0x2481a60e6a8,~
code-source-info,0x2481a60ed2e,131,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,499249,0x2481a60fbc6,188,from node:buffer:301:28,0x12028f7af20,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!ArrayPrototypeIncludes(kForgivingBase64AllowedChars\x2C\x0d\n                                StringPrototypeCharCodeAt(input\x2C n)))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2481a60fbc6,24,8846,9829,C3O8885C9O8921C12O8928C17O8964C18O8970C28O9026C33O9030C39O9062C51O9069C56O9118C57O9148C63O9165C68O9165C73O9181C78O9221C95O9314C104O9321C109O9361C110O9386C113O9386C118O9410C120O9424C122O9433C123O9441C125O9458C127O9457C134O9520C136O9526C138O9525C145O9544C151O9563C155O9609C158O9616C163O9656C164O9683C182O9689C187O9683,,
code-creation,LazyCompile,10,501573,0x2481a6126ce,110,fromString node:buffer:437:20,0x12028f7b308,~
code-source-info,0x2481a6126ce,24,13033,13482,C0O13061C2O13069C8O13114C14O13121C19O13146C25O13153C30O13167C35O13174C40O13191C41O13197C46O13215C51O13226C56O13265C59O13271C64O13302C66O13332C73O13338C78O13332C79O13390C85O13397C90O13411C95O13418C100O13435C101O13444C104O13451C109O13479,,
code-creation,LazyCompile,10,501679,0x2481a612886,177,fromStringFast node:buffer:418:24,0x12028f7b268,~
code-source-info,0x2481a612886,24,12470,13010,C0O12508C5O12508C11O12533C14O12555C18O12564C21O12544C26O12577C31O12613C36O12584C41O12626C42O12632C44O12646C49O12657C51O12655C54O12643C59O12675C62O12675C65O12700C72O12715C77O12726C85O12700C91O12769C110O12769C116O12801C118O12812C123O12898C130O12917C135O12928C143O12902C149O12957C156O12971C162O12968C168O12982C171O12982C174O12998C176O13007,,
code-creation,LazyCompile,10,501776,0x2481a612a76,36,FastBuffer node:internal/buffer:958:14,0x19bc9c4bb00,~
code-source-info,0x2481a612a76,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,501857,0x2481a612b76,23,write node:buffer:598:12,0x12028f7b678,~
code-source-info,0x2481a612b76,24,17262,17326,C0O17296C17O17296C22O17326,,
code-creation,LazyCompile,10,501925,0x2481a612c66,42,alignPool node:buffer:163:19,0x12028f7aca0,~
code-source-info,0x2481a612c66,24,4281,4391,C0O4317C4O4332C9O4346C19O4357C25O4370C34O4380C41O4390,,
code-creation,LazyCompile,10,502086,0x2481a613026,251,promisify node:internal/util:324:19,0x12028f46368,~
code-source-info,0x2481a613026,15,9196,10795,C0O9196C17O9260C25O9301C33O9325C38O9304C55O9363C68O9363C73O9408C80O9421C82O9420C87O9466C94O9475C96O9474C100O9509C110O9509C115O9563C126O9595C136O9661C143O9570C148O9728C149O9896C156O9905C158O9904C161O9896C163O10481C174O10506C180O10506C185O10481C190O10544C201O10569C211O10631C218O10544C223O10700C234O10745C240O10745C245O10707C250O10792,,
code-creation,LazyCompile,10,502305,0x2481a6135d6,65,EventEmitterMixin node:internal/event_target:1020:27,0x118dcd5eb70,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x2481a6135d6,44,27905,28339,C0O27958C23O28149C30O28181C33O28194C38O28149C43O28209C47O28243C52O28284C57O28243C62O28311C64O28336,,
tick,0x7ffc9097fab3,504151,0,0x0,3,0x7ff78f0a54e0,0x2481a60b6c8,0x17e03b44c63,0x17e03b432e5,0x2481a6075dd,0x17e03b44c63,0x17e03b432e5,0x1000c27026c,0x17e03b44c63,0x17e03b432e5,0x1000c26e18f,0x17e03b44c63,0x17e03b432e5,0x1000c2697cd,0x17e03b44c63,0x17e03b432e5,0x1000c265444,0x7f483cf31e,0x7f483ca9d5
code-creation,Eval,10,504717,0x2481a616176,5, node:internal/modules/esm/translators:1:1,0x2481a615d10,~
script-source,132,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2481a616176,132,0,11113,C0O0C4O11113,,
code-creation,Function,10,505501,0x2481a616916,715, node:internal/modules/esm/translators:1:1,0x2481a6160f0,~
code-source-info,0x2481a
code-creation,Eval,10,505903,0x2481a617e1e,5, node:internal/modules/esm/create_dynamic_module:1:1,0x2481a617c48,~
script-source,133,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x2481a617e1e,133,0,1828,C0O0C4O1828,,
code-creation,Function,10,506170,0x2481a618046,111, node:internal/modules/esm/create_dynamic_module:1:1,0x2481a617d98,~
code-source-info,0x2481a618046,133,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,507868,0x2481a618f6e,5, node:internal/vm/module:1:1,0x2481a618a18,~
script-source,134,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAll\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x2481a618f6e,134,0,12831,C0O0C4O12831,,
code-creation,Function,10,508785,0x2481a61a1d6,881, node:internal/vm/module:1:1,0x2481a618ee8,~
code-source-info,0x2481a61a1d6,134,0,12831,C0O0C159O32C165O32C169O32C171O72C177O89C183O115C189O141C195O164C201O181C207O206C213O231C219O256C225O273C231O292C236O308C241O319C247O341C253O395C256O395C261O381C267O490C273O490C278O438C284O466C290O626C296O626C301O534C306O558C312O586C318O607C324O915C330O915C335O941C340O664C346O689C352O715C358O748C364O784C370O828C376O859C382O888C388O1079C394O1079C399O961C405O981C411O1002C417O1020C423O1039C429O1058C435O1130C438O1130C442O1130C444O1292C447O1174C453O1189C458O1209C463O1228C469O1246C474O1262C480O1277C486O1323C493O1329C497O1347C504O1363C508O1380C515O1395C519O1411C526O1425C530O1439C537O1457C541O1470C548O1487C552O1498C559O1323C561O1537C562O1537C564O1567C566O1567C568O1605C570O1605C575O1605C577O1641C580O1641C584O1641C586O1676C589O1676C593O1676C595O1725C598O1725C602O1725C604O1771C607O1771C611O1771C669O6203C697O7012C700O7012C704O7012C706O7063C709O7063C713O7063C745O7117C808O10706C836O12664C843O12686C849O12697C855O12718C861O12738C865O12789C875O12679C880O12830,,
code-creation,Function,10,508916,0x2481a61a71e,30,<instance_members_initializer> node:internal/vm/module:259:3,0x2481a619558,~
code-source-info,0x2481a61a71e,134,7129,7166,C3O7138C29O7166,,
code-creation,LazyCompile,10,509246,0x2481a61bc6e,166,ESMLoader node:internal/modules/esm/loader:240:14,0x1000c26f868,~
code-source-info,0x2481a61bc6e,118,7124,7747,C9O7124C28O7134C38O7138C43O7177C49O7185C54O7199C64O7199C68O7258C78O7262C84O7321C94O7321C98O7377C110O7434C116O7434C123O7488C128O7515C133O7523C144O7523C150O7694C156O7728C165O7746,,
code-creation,LazyCompile,10,509346,0x2481a61da76,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x1000c272910,~
code-source-info,0x2481a61da76,119,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,509422,0x2481a61dd1e,13,desc.value node:internal/per_context/primordials:340:32,0x39626a0a9b0,~
code-source-info,0x2481a61dd1e,6,10212,10273,C0O10230C7O10237C12O10260,,
code-creation,LazyCompile,10,509471,0x2481a61de26,13,SafeIterator node:internal/per_context/primordials:285:16,0x39626a0a400,~
code-source-info,0x2481a61de26,6,8422,8484,C0O8442C3O8459C7O8457C12O8483,,
code-creation,LazyCompile,10,509522,0x2481a61df5e,13,next node:internal/per_context/primordials:288:9,0x39626a0a4c8,~
code-source-info,0x2481a61df5e,6,8494,8541,C0O8506C3O8523C8O8513C12O8534,,
code-creation,LazyCompile,10,509572,0x2481a61e04e,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x39626a10eb8,~
code-source-info,0x2481a61e04e,9,8028,8081,C0O8040C7O8068C12O8068C18O8076,,
code-creation,LazyCompile,10,509808,0x2481a61e286,32, node:internal/modules/cjs/loader:192:41,0x1000c267c10,~
code-source-info,0x2481a61e286,115,6005,6031,C0O6013C9O6014C21O6026C31O6031,,
code-creation,LazyCompile,10,509946,0x2481a620d86,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0x39626a10f38,~
code-source-info,0x2481a620d86,9,8118,8171,C0O8128C11O8145C14O8135C18O8166,,
code-creation,LazyCompile,10,510017,0x2481a620ece,26, node:internal/modules/cjs/loader:194:49,0x1000c267c60,~
code-source-info,0x2481a620ece,115,6086,6133,C0O6111C5O6111C15O6123C20O6111C25O6133,,
code-creation,LazyCompile,10,510168,0x2481a6215be,28,getEmbedderOptions node:internal/options:32:28,0x3ba377ff68,~
code-source-info,0x2481a6215be,95,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,510280,0x2481a621866,315,Module._initPaths node:internal/modules/cjs/loader:1254:29,0x1000c268770,~
code-source-info,0x2481a
code-creation,Eval,10,510567,0x2481a621f2e,5, node:internal/modules/run_main:1:1,0x2481a621d08,~
script-source,135,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  if (userLoaders.length > 0)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x2481a621f2e,135,0,2788,C0O0C4O2788,,
code-creation,Function,10,510770,0x2481a622216,178, node:internal/modules/run_main:1:1,0x2481a621ea8,~
code-source-info,0x2481a622216,135,0,2788,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2716C160O2738C166O2764C172O2731C177O2787,,
code-creation,LazyCompile,10,510964,0x2481a622826,163,initializeESMLoader node:internal/bootstrap/pre_execution:531:29,0x7f483cd230,~
code-source-info,0x2481a622826,100,17281,18396,C0O17365C6O17365C13O17414C16O17410C21O17408C25O17434C30O17438C34O17458C40O17487C41O17494C42O17599C48O17599C53O17513C58O17554C63O17646C69O17646C74O17850C79O17808C83O17921C88O17882C92O18091C100O18095C106O18214C112O18214C117O18162C122O18170C127O18188C132O18261C138O18261C143O18281C145O18291C149O18306C151O18326C155O18351C157O18370C162O18395,,
code-creation,LazyCompile,10,511062,0x2481a622a3e,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x1000c267bc0,~
code-source-info,0x2481a622a3e,115,2368,2408,C0O2373C4O2406,,
code-creation,LazyCompile,10,511128,0x2481a622b26,53,loadPreloadModules node:internal/bootstrap/pre_execution:574:28,0x7f483cd320,~
code-source-info,0x2481a622b26,100,18888,19219,C0O18977C8O18977C13O19009C15O19046C21O19053C26O19134C32O19134C37O19134C42O19099C47O19179C52O19218,,
code-creation,LazyCompile,10,511223,0x2481a622d1e,166,Module._preloadModules node:internal/modules/cjs/loader:1284:34,0x1000c268800,~
code-source-info,0x2481a622d1e,115,41548,42143,C0O41564C5O41569C11O41598C12O41605C13O41611C17O41624C23O41824C33O41824C42O41876C45O41898C53O41923C58O41923C63O41898C68O41889C85O41953C88O41959C95O41964C100O41987C106O42000C114O42016C116O42016C119O42053C121O42069C125O42058C130O42094C137O42110C141O42094C146O42078C151O42040C154O42119C158O42132C165O42142,,
code-creation,LazyCompile,10,511319,0x2481a622f3e,94,Module node:internal/modules/cjs/loader:172:16,0x1000c267520,~
code-source-info,0x2481a622f3e,115,5458,5704,C14O5481C16O5489C20O5498C22O5510C25O5515C30O5515C35O5508C39O5531C40O5544C44O5553C49O5571C54O5571C60O5593C71O5593C76O5633C77O5647C81O5658C82O5670C86O5682C88O5696C93O5703,,
code-creation,LazyCompile,10,511481,0x2481a623136,449,dirname node:path:653:10,0x118dcd4d768,~
code-source-info,0x2481a
code-creation,LazyCompile,10,511652,0x2481a62353e,45,updateChildren node:internal/modules/cjs/loader:165:24,0x1000c2674d0,~
code-source-info,0x2481a62353e,115,5216,5393,C0O5260C7O5266C15O5281C19O5299C23O5307C26O5307C33O5354C38O5354C44O5392,,
code-creation,LazyCompile,10,511773,0x2481a62372e,251,Module._nodeModulePaths node:internal/modules/cjs/loader:594:37,0x1000c268010,~
code-source-info,0x2481a62372e
code-creation,Function,11,511961,0x17e03b45160,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:594:37,0x1000c268010,^
code-source-info,0x17e03b45160,115,18128,19679,,,
code-creation,Function,11,512002,0x17e03b459e0,432,getCLIOptionsFromBinding node:internal/options:18:34,0x3ba377fce8,^
code-source-info,0x17e03b459e0,95,514,620,,,
code-creation,Function,11,512035,0x17e03b45c00,252,SafeMap node:internal/per_context/primordials:366:16,0x39626a0aa58,^
code-source-info,0x17e03b45c00,6,10966,10983,,,
code-creation,Function,11,512063,0x17e03b45d60,104,next node:internal/per_context/primordials:288:9,0x39626a0a4c8,^
code-source-info,0x17e03b45d60,6,8494,8541,,,
code-creation,Function,11,512092,0x17e03b45e40,188,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x39626a10eb8,^
code-source-info,0x17e03b45e40,9,8028,8081,,,
code-creation,Function,11,512125,0x17e03b45f60,200, node:internal/modules/cjs/loader:192:41,0x1000c267c10,^
code-source-info,0x17e03b45f60,115,6005,6031,,,
code-creation,Function,11,512157,0x17e03b460a0,272,validateString node:internal/validators:119:24,0x12028f49390,^
code-source-info,0x17e03b460a0,16,3546,3658,,,
code-creation,Function,11,512188,0x17e03b46220,412,isWindowsDeviceRoot node:path:60:29,0x118dcd4d408,^
code-source-info,0x17e03b46220,41,1991,2136,,,
code-creation,LazyCompile,10,512293,0x2481a623f86,127,Module.require node:internal/modules/cjs/loader:1020:36,0x1000c268400,~
code-source-info,0x2481a623f86,115,32936,33239,C0O32946C8O32946C13O32975C15O32982C20O32997C36O33003C41O32997C42O33115C51O33127C60O33145C63O33159C76O33159C93O33216C102O33228C126O33238,,
code-creation,LazyCompile,10,512482,0x2481a62427e,636,Module._load node:internal/modules/cjs/loader:771:24,0x1000c268260,~
code-source-info,0x2481a62427e
code-creation,LazyCompile,10,512664,0x2481a624736,89,logger node:internal/util/debuglog:95:18,0x12028f65db8,~
code-source-info,0x2481a624736,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,512727,0x2481a624876,3, node:internal/per_context/primordials:291:21,0x39626a0a570,~
code-source-info,0x2481a624876,6,8563,8594,C0O8575C2O8587,,
code-creation,LazyCompile,10,512813,0x2481a62494e,140,debug node:internal/util/debuglog:76:15,0x12028f65d18,~
code-source-info,0x2481a62494e,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,512889,0x2481a624afe,41,init node:internal/util/debuglog:72:16,0x12028f65cc8,~
code-source-info,0x2481a624afe,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,512935,0x2481a624bee,2,testEnabled node:internal/util/debuglog:32:19,0x7f483e4ce8,~
code-source-info,0x2481a624bee,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,513009,0x2481a624d86,116,debuglogImpl node:internal/util/debuglog:49:22,0x12028f65b18,~
code-source-info,0x2481a624d86,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,513072,0x2481a624f3e,10, node:internal/modules/cjs/loader:283:66,0x1000c267f30,~
code-source-info,0x2481a624f3e,115,8325,8352,C0O8338C2O8344C9O8351,,
code-creation,LazyCompile,10,513118,0x2481a624fee,2,noop node:internal/util/debuglog:47:14,0x12028f65ac8,~
code-source-info,0x2481a624fee,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,513331,0x2481a62542e,925,Module._resolveFilename node:internal/modules/cjs/loader:865:35,0x1000c2682e8,~
code-source-info,0x2481a62542e
code-creation,LazyCompile,10,513546,0x2481a625a86,28,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x39626a10e40,~
code-source-info,0x2481a625a86,9,7748,7847,C0O7772C5O7785C10O7789C15O7789C21O7803C23O7821C27O7842,,
code-creation,LazyCompile,10,513653,0x2481a625d46,344,Module._resolveLookupPaths node:internal/modules/cjs/loader:678:38,0x1000c268130,~
code-source-info,0x2481a625d46,115,20993,22266,C0O21016C5O21033C10O21033C19O21073C22O21086C27O21086C34O21130C42O21130C47O21175C48O21187C49O21234C56O21238C64O21272C69O21299C76O21306C83O21320C89O21320C97O21354C104O21372C110O21372C118O21406C125O21426C131O21439C137O21439C145O21473C150O21506C155O21524C162O21534C169O21541C178O21560C183O21596C188O21568C194O21625C208O21625C213O21690C219O21697C229O21716C230O21767C234O21790C240O21804C246O21978C251O21992C265O21992C270O22048C272O22065C273O22076C281O22143C289O22076C294O22171C303O22172C306O22177C311O22192C316O22177C328O22207C336O22207C341O22246C343O22263,,
code-creation,LazyCompile,10,513792,0x2481a626066,76,trySelfParentPath node:internal/modules/cjs/loader:438:27,0x1000c267840,~
code-source-info,0x2481a626066,115,13041,13316,C0O13055C4O13068C5O13081C6O13098C12O13129C16O13138C17O13160C24O13163C29O13186C36O13189C44O13233C47O13248C52O13248C59O13256C62O13261C66O13254C69O13265C72O13288C73O13301C75O13315,,
code-creation,LazyCompile,10,513912,0x2481a6262a6,235,trySelf node:internal/modules/cjs/loader:452:17,0x1000c267890,~
code-source-info,0x2481a6262a6,115,13336,14194,C0O13363C4O13380C5O13393C6O13436C9O13436C17O13413C22O13424C27O13475C31O13491C37O13514C38O13527C39O13546C47O13565C48O13578C49O13588C51O13622C55O13614C60O13635C65O13662C70O13708C82O13666C89O13725C94O13743C97O13777C102O13782C107O13743C112O13741C118O13808C119O13821C123O13843C128O13872C133O13902C138O13924C142O13902C149O13967C152O13967C159O13994C168O13872C183O13850C188O14040C200O14063C203O14069C210O14074C215O14109C222O14153C226O14115C231O14109C232O14178C234O14178,,
code-creation,LazyCompile,10,514030,0x2481a62655e,129,readPackageScope node:internal/modules/cjs/loader:332:26,0x1000c267660,~
code-source-info,0x2481a62655e,115,9584,10117,C0O9628C7O9662C10O9628C16O9675C18O9704C25O9759C28O9721C34O9770C47O9782C54O9839C61O9878C66O9882C70O9843C77O9908C78O9921C79O9941C84O9965C86O9963C90O9941C95O9976C97O9987C104O10009C110O10029C116O10047C117O10075C119O10075C124O9694C127O10101C128O10114,,
code-creation,LazyCompile,10,514153,0x2481a6268be,234,readPackage node:internal/modules/cjs/loader:301:21,0x1000c267610,~
code-source-info,0x2481a6268be,115,8736,9555,C0O8772C5O8777C13O8777C20O8837C25O8854C30O8854C36O8872C38O8900C40O8916C41O8937C46O8955C51O8955C57O8994C63O9007C72O9033C77O9044C79O9075C84O9092C91O9092C97O9119C98O9132C102O9169C107O9169C112O9208C117O9230C125O9256C133O9285C141O9317C149O9346C160O9364C165O9381C170O9381C176O9411C178O9427C190O9450C195O9457C199O9474C207O9503C213O9514C220O9525C224O9521C227O9484C231O9539C233O9539,,
code-creation,LazyCompile,10,514302,0x2481a626bc6,199,read node:internal/modules/package_json_reader:16:14,0x1000c26d5c8,~
code-source-info,0x2481a626bc6,116,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,514424,0x2481a626fe6,232,toNamespacedPath node:path:618:19,0x118dcd4d6f8,~
code-source-info,0x2481a626fe6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,514861,0x2481a627b2e,438,Module._findPath node:internal/modules/cjs/loader:505:28,0x1000c267f80,~
code-source-info,0x2481a627b2e
code-creation,LazyCompile,10,515033,0x2481a627ede,109,isAbsolute node:path:402:13,0x118dcd4d5d0,~
code-source-info,0x2481a627ede,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,515217,0x2481a62816e,85,stat node:internal/modules/cjs/loader:151:14,0x1000c267480,~
code-source-info,0x2481a62816e,115,4780,5189,C0O4796C5O4812C10O4812C17O4843C23O4889C28O4899C33O4899C39O4919C41O4945C43O4959C44O4983C49O4983C54O5016C61O5049C66O5131C71O5141C76O5141C82O5172C84O5186,,
code-creation,LazyCompile,10,515383,0x2481a6282c6,44,tryExtensions node:internal/modules/cjs/loader:411:23,0x1000c2677a0,~
code-source-info,0x2481a6282c6,115,12245,12438,C0O12281C2O12293C6O12286C11O12330C16O12346C19O12340C23O12330C29O12367C31O12390C33O12406C34O12302C39O12268C42O12422C43O12435,,
code-creation,LazyCompile,10,515454,0x2481a6283f6,50,tryFile node:internal/modules/cjs/loader:395:17,0x1000c267700,~
code-source-info,0x2481a6283f6,115,11805,12006,C0O11843C3O11843C8O11865C9O11872C14O11879C15O11886C16O11890C24O11915C26O11930C31O11942C36O11942C41O11963C42O11972C45O11979C49O12003,,
code-creation,LazyCompile,10,515614,0x2481a62853e,42,toRealPath node:internal/modules/cjs/loader:404:20,0x1000c267750,~
code-source-info,0x2481a62853e,115,12029,12145,C0O12048C5O12058C10O12071C17O12092C20O12103C28O12122C35O12058C41O12142,,
code-creation,LazyCompile,10,516035,0x2481a628cd6,1079,realpathSync node:fs:2460:22,0x3ba3759940,~
script-source,83,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || kEmptyObject;\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validatePrimitiveStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2481a628cd
tick,0x7ff78fa4de43,521370,0,0x0,3,0x7ff78f0a54e0,0x2481a628561,0x2481a628423,0x2481a6282dd,0x2481a627c86,0x2481a625730,0x2481a624350,0x2481a623fd2,0x2481a622dab,0x2481a622b55,0x7f483cf344,0x7f483ca9d5
code-creation,LazyCompile,10,521496,0x2481a62f556,135,getOptions node:internal/fs/utils:318:20,0x3ba3762348,~
script-source,84,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePrimitiveStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  validatePrimitiveStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x2481a62f556,84,7595,8221,C9O7622C16O7641C27O7702C29O7724C30O7735C36O7775C41O7820C43O7844C47O7860C54O7896C60O7936C78O7942C83O7936C84O8032C91O8041C96O8060C99O8083C104O8060C108O8111C114O8140C119O8168C127O8140C132O8203C134O8218,,
code-creation,LazyCompile,10,523419,0x2481a63154e,48,assertEncoding node:internal/fs/utils:155:24,0x3ba3761d50,~
code-source-info,0x2481a63154e,84,3741,3923,C0O3757C6O3774C9O3781C14O3781C21O3825C24O3853C40O3859C45O3853C47O3922,,
code-creation,LazyCompile,10,524025,0x2481a631666,20,toPathIfFileURL node:internal/url:1513:25,0x19bc9c79918,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = {};\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different key may result same after `toUSVString()`\x2C we only\x0d\n            // leave the later one. Refers to WPT.\x0d\n            if (visited[typedKey] !== undefined) {\x0d\n              this[searchParams][visited[typedKey]] = typedValue;\x0d\n            } else {\x0d\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\x0d\n                                                     typedKey\x2C\x0d\n                                                     typedValue) - 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x2481a631666,39,43660,43785,C0O43681C3O43686C9O43721C11O43742C12O43746C15O43753C19O43782,,
code-creation,LazyCompile,10,530134,0x2481a63481e,17,isURLInstance node:internal/url:1509:23,0x19bc9c798c8,~
code-source-info,0x2481a63481e,39,43533,43632,C0O43554C3O43575C6O43600C12O43622C16O43629,,
code-creation,LazyCompile,10,530278,0x2481a63497e,81, node:internal/fs/utils:671:38,0x3ba3762d70,~
code-source-info,0x2481a63497e,84,18882,19162,C14O18916C22O18949C25O18949C31O18976C36O19007C49O18982C54O18976C55O19075C68O19075C74O19114C76O19144C78O19144C80O19161,,
code-creation,LazyCompile,10,530413,0x2481a634b8e,110, node:internal/fs/utils:360:35,0x3ba37623e8,~
code-source-info,0x2481a634b8e,84,8971,9580,C16O9036C21O9090C26O9090C31O9187C37O9210C41O9239C45O9256C51O9256C60O9308C64O9329C69O9329C76O9375C77O9382C78O9405C94O9405C100O9524C104O9547C106O9547C107O9566C109O9577,,
code-creation,LazyCompile,10,530534,0x2481a634d06,16,isUint8Array node:internal/util/types:13:22,0x12028f4a790,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2481a634d06,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,531039,0x2481a63517e,23,splitRoot node:fs:2412:33,0x3ba37597f8,~
code-source-info,0x2481a63517e,83,66679,66745,C0O66692C9O66719C12O66699C19O66736C22O66740,,
code-creation,LazyCompile,10,531351,0x2481a635286,63,handleErrorFromBinding node:internal/fs/utils:343:32,0x3ba3762398,~
code-source-info,0x2481a635286,84,8315,8826,C0O8334C6O8398C11O8398C16O8421C24O8421C29O8479C31O8479C32O8506C38O8738C43O8765C51O8738C56O8812C60O8802C62O8825,,
code-creation,LazyCompile,10,531497,0x2481a6353e6,53,nextPart node:fs:2438:31,0x3ba37598f0,~
code-source-info,0x2481a6353e6,83,67436,67687,C0O67463C4O67459C9O67496C14O67496C20O67580C22O67591C24O67587C31O67621C33O67617C38O67650C40O67659C41O67473C47O67450C50O67672C52O67682,,
code-creation,LazyCompile,10,531711,0x2481a63552e,34,isFileType node:fs:213:20,0x3ba3757598,~
code-source-info,0x2481a63552e,83,5673,5921,C0O5810C2O5815C6O5823C10O5858C15O5865C20O5882C22O5897C24O5895C30O5905C33O5918,,
code-creation,Function,11,532192,0x17e03b46420,6232,resolve node:path:158:10,0x118dcd4d510,^
code-source-info,0x17e03b46420,41,4875,9786,,,
code-creation,Function,11,532268,0x17e03b47ce0,544,nextPart node:fs:2438:31,0x3ba37598f0,^
code-source-info,0x17e03b47ce0,83,67436,67687,,,
code-creation,LazyCompile,10,533143,0x2481a635ed6,72,encodeRealpathResult node:fs:2425:30,0x3ba37598a0,~
code-source-info,0x2481a635ed6,83,67025,67291,C0O67048C4O67073C10O67093C17O67102C22O67119C24O67133C25O67154C30O67161C35O67161C41O67190C48O67199C53O67220C55O67236C56O67261C61O67278C66O67261C71O67288,,
code-creation,LazyCompile,10,533321,0x2481a6360c6,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x1000c262770,~
code-source-info,0x2481a6360c6,114,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,533531,0x2481a636a4e,246,Module.load node:internal/modules/cjs/loader:992:33,0x1000c268378,~
code-source-info,0x2481a636a4e,115,31969,32805,C0O31985C8O32031C16O31985C21O32041C26O32054C32O32041C36O32066C38O32080C42O32095C45O32115C52O32132C55O32137C60O32137C66O32115C71O32106C75O32180C78O32180C83O32259C91O32263C101O32316C106O32327C112O32342C124O32348C129O32342C130O32390C133O32397C140O32408C144O32419C150O32440C151O32452C155O32483C160O32492C165O32596C170O32633C175O32644C187O32685C192O32692C197O32692C204O32706C206O32704C211O32739C216O32748C221O32748C228O32774C233O32783C238O32783C245O32804,,
code-creation,LazyCompile,10,533806,0x2481a636cfe,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:424:40,0x1000c2677f0,~
code-source-info,0x2481a636cfe,115,12570,13011,C0O12599C5O12604C10O12604C16O12631C18O12656C20O12683C22O12752C36O12705C44O12752C49O12767C51O12786C55O12796C56O12806C61O12813C63O12861C68O12880C74O12920C77O12931C84O12942C89O12962C91O12986C92O12689C95O12995C97O13008,,
code-creation,LazyCompile,10,534135,0x2481a636ede,415,basename node:path:749:11,0x118dcd4d7d0,~
code-source-info,0x2481a636ede
code-creation,LazyCompile,10,534543,0x2481a6373fe,485,Module._extensions..js node:internal/modules/cjs/loader:1135:37,0x1000c268518,~
code-source-info,0x2481a6373fe
tick,0x7ff78f1e9d32,534820,0,0x0,0,0x7ff78f0a54e0,0x2481a636ade,0x2481a624428,0x2481a623fd2,0x2481a622dab,0x2481a622b55,0x7f483cf344,0x7f483ca9d5
code-creation,LazyCompile,10,535205,0x2481a63785e,376,readFileSync node:fs:459:22,0x3ba3757a18,~
code-source-info,0x2481a63785e
code-creation,LazyCompile,10,535362,0x2481a637b7e,30,isEncoding node:buffer:535:40,0x12028f7b550,~
code-source-info,0x2481a637b7e,24,15448,15583,C0O15464C6O15512C12O15519C20O15538C23O15538C28O15566C29O15580,,
code-creation,LazyCompile,10,535423,0x2481a637c86,30,normalizeEncoding node:internal/util:160:27,0x12028f45ea0,~
code-source-info,0x2481a637c86,15,4358,4466,C0O4369C7O4392C14O4410C19O4423C21O4437C22O4441C25O4448C29O4463,,
code-creation,LazyCompile,10,535500,0x2481a637dfe,113,openSync node:fs:585:18,0x3ba3757c00,~
code-source-info,0x2481a637dfe,83,15283,15673,C0O15308C5O15315C11O15362C16O15362C21O15387C37O15394C44O15447C51O15449C58O15475C63O15483C70O15488C73O15499C78O15499C95O15483C101O15624C106O15624C110O15656C112O15670,,
code-creation,LazyCompile,10,535568,0x2481a637f7e,37, node:internal/fs/utils:683:42,0x3ba3762dc0,~
code-source-info,0x2481a637f7e,84,19209,19348,C14O19265C19O19265C24O19300C29O19300C34O19333C36O19345,,
code-creation,LazyCompile,10,535691,0x2481a638356,515,stringToFlags node:internal/fs/utils:558:23,0x3ba3762be0,~
code-source-info,0x2481a
code-creation,LazyCompile,10,535875,0x2481a638746,97,parseFileMode node:internal/validators:60:23,0x12028f49230,~
code-source-info,0x2481a638746,16,1561,1876,C0O1585C11O1603C17O1641C24O1665C27O1645C34O1701C41O1746C52O1707C57O1701C58O1769C66O1777C73O1813C89O1813C94O1860C96O1873,,
code-creation,LazyCompile,10,535960,0x2481a6388de,206, node:internal/validators:85:3,0x12028f492f0,~
code-source-info,0x2481a6388de,16,2362,2951,C36O2505C42O2545C58O2551C63O2545C64O2612C67O2617C73O2642C78O2647C84O2682C100O2688C105O2682C106O2753C116O2792C129O2805C142O2759C147O2753C148O2832C150O2842C157O2857C162O2873C172O2912C185O2925C198O2879C203O2873C205O2950,,
code-creation,LazyCompile,10,536026,0x2481a638aa6,9,isInt32 node:internal/validators:37:17,0x12028f48d58,~
code-source-info,0x2481a638aa6,16,785,830,C0O798C2O822C5O811C8O827,,
code-creation,LazyCompile,10,536216,0x2481a638bae,66,tryStatSync node:fs:413:21,0x3ba3757928,~
code-source-info,0x2481a638bae,83,11015,11233,C0O11047C2O11068C7O11076C22O11076C28O11121C36O11145C38O11162C43O11165C48O11165C53O11185C58O11191C62O11185C63O11217C65O11230,,
code-creation,LazyCompile,10,536318,0x2481a638d26,96,tryCreateBuffer node:fs:423:25,0x3ba3757978,~
code-source-info,0x2481a638d26,83,11261,11561,C0O11299C2O11312C7O11334C9O11345C11O11343C16O11368C23O11374C28O11368C29O11419C34O11435C39O11435C45O11459C57O11465C58O11494C65O11508C67O11518C72O11521C77O11521C93O11544C95O11558,,
code-creation,LazyCompile,10,536382,0x2481a638e7e,17,allocUnsafe node:buffer:378:42,0x12028f7b0c8,~
code-source-info,0x2481a638e7e,24,11388,11446,C0O11400C5O11400C9O11421C12O11428C16O11443,,
code-creation,LazyCompile,10,536439,0x2481a638f86,54, node:buffer:354:36,0x12028f7b010,~
code-source-info,0x2481a638f86,24,10662,10822,C0O10677C8O10677C13O10710C14O10721C21O10737C23O10734C28O10757C33O10789C46O10763C51O10757C53O10821,,
code-creation,LazyCompile,10,536519,0x2481a63910e,177,validateNumber node:internal/validators:124:24,0x12028f49430,~
code-source-info,0x2481a63910e,16,3685,4141,C19O3726C25O3762C41O3768C46O3762C47O3822C54O3848C66O3880C83O3930C86O3930C92O3958C110O4029C136O4061C151O4105C169O3964C174O3958C176O4140,,
code-creation,LazyCompile,10,536598,0x2481a6392d6,119,allocate node:buffer:403:18,0x12028f7b218,~
code-source-info,0x2481a6392d6,24,12115,12443,C0O12127C1O12136C6O12149C11O12156C16O12173C17O12182C20O12201C24O12210C27O12191C32O12225C34O12237C39O12248C41O12246C44O12234C49O12268C52O12268C55O12297C62O12312C67O12323C75O12297C81O12347C88O12361C94O12358C100O12372C103O12372C106O12390C108O12399C109O12408C114O12415C118O12440,,
code-creation,LazyCompile,10,536692,0x2481a639496,86,tryReadSync node:fs:438:21,0x3ba37579c8,~
code-source-info,0x2481a639496,83,11585,11830,C0O11635C2O11648C7O11673C12O11688C29O11688C35O11725C47O11731C48O11760C55O11774C57O11784C62O11787C67O11787C83O11810C85O11827,,
code-creation,LazyCompile,10,536813,0x2481a639686,251,readSync node:fs:699:18,0x3ba3757cd0,~
code-source-info,0x2481a639686,83,18462,19491,C0O18462C2O18506C7O18511C13O18536C18O18536C22O18579C29O18586C34O18663C40O18673C43O18704C55O18723C61O18739C68O18750C73O18767C82O18813C87O18840C92O18869C105O18869C110O18917C117O18935C118O18946C123O18960C124O18969C125O18991C131O19002C136O19016C152O19022C157O19016C158O19148C163O19196C174O19148C179O19214C184O19241C188O19261C196O19261C201O19318C203O19340C208O19348C233O19348C239O19442C244O19442C248O19474C250O19488,,
code-creation,LazyCompile,10,536911,0x2481a6398ee,52, node:internal/fs/utils:689:40,0x3ba3762e10,~
code-source-info,0x2481a6398ee,84,19393,19522,C14O19423C22O19427C29O19452C30O19461C31O19472C44O19472C49O19509C51O19519,,
code-creation,LazyCompile,10,536970,0x2481a639a5e,51, node:internal/validators:200:40,0x12028f49658,~
code-source-info,0x2481a639a5e,16,6227,6463,C14O6261C19O6266C25O6300C30O6331C43O6306C48O6300C50O6462,,
code-creation,LazyCompile,10,537040,0x2481a639bb6,151, node:internal/validators:74:3,0x12028f492a0,~
code-source-info,0x2481a639bb6,16,1924,2312,C12O1944C25O1974C32O2008C38O2046C54O2052C59O2046C60O2106C65O2111C71O2142C87O2148C92O2142C93O2202C95O2212C102O2227C107O2241C117O2280C130O2293C143O2247C148O2241C150O2311,,
code-creation,LazyCompile,10,537122,0x2481a639da6,103, node:internal/fs/utils:639:3,0x3ba3762cd0,~
code-source-info,0x2481a639da6,84,17967,18357,C0O18008C1O18019C6O18033C22O18039C27O18033C28O18099C29O18110C34O18124C50O18130C55O18124C56O18190C58O18201C64O18210C69O18235C82O18325C95O18241C100O18235C102O18356,,
code-creation,LazyCompile,10,537209,0x2481a63a0ae,151, node:internal/fs/utils:904:42,0x3ba3763180,~
code-source-info,0x2481a63a0ae,84,25452,26024,C0O25477C6O25518C14O25518C21O25567C27O25608C32O25631C35O25626C37O25623C47O25657C53O25664C56O25651C61O25680C77O25764C80O25759C98O25784C104O25791C117O25686C122O25680C125O25868C143O25874C148O25868C150O26023,,
code-creation,LazyCompile,10,537317,0x2481a63a266,47,closeSync node:fs:535:19,0x3ba3757b28,~
code-source-info,0x2481a63a266,83,14102,14230,C0O14112C5O14117C11O14154C13O14161C18O14169C31O14169C36O14199C41O14199C46O14229,,
code-creation,LazyCompile,10,537430,0x2481a63a39e,162,toString node:buffer:790:46,0x12028f7cf50,~
code-source-info,0x2481a63a39e,24,24231,24823,C0O24231C2O24273C8O24280C13O24306C20O24324C25O24306C31O24332C32O24360C37O24373C38O24383C43O24394C48O24413C50O24423C55O24436C57O24446C58O24460C65O24477C71O24506C76O24518C83O24542C90O24557C92O24565C97O24580C99O24590C100O24596C104O24641C109O24641C115O24663C116O24681C119O24681C124O24710C126O24738C133O24744C138O24738C139O24796C156O24796C161O24820,,
code-creation,LazyCompile,10,537578,0x2481a63a65e,499,getEncodingOps node:buffer:684:24,0x12028f7cda8,~
code-source-info,0x2481a63a65e
code-creation,LazyCompile,10,537748,0x2481a63aa46,12,slice node:buffer:599:12,0x12028f7b770,~
code-source-info,0x2481a63aa46,24,17340,17386,C0O17365C5O17365C11O17386,,
code-creation,LazyCompile,10,538347,0x2481a63b56e,499,Module._compile node:internal/modules/cjs/loader:1080:37,0x1000c268488,~
code-source-info,0x2481a63b56e
code-creation,LazyCompile,10,538560,0x2481a63bb2e,274,maybeCacheSourceMap node:internal/source_map/source_map_cache:80:29,0x1000c25f9d0,~
code-source-info,0x2481a63bb2e,112,2568,3836,C0O2657C3O2657C7O2684C10O2698C15O2702C23O2722C25O2742C26O2749C30O2764C35O2775C44O2773C54O2911C64O2911C68O2928C69O2935C70O2958C80O2958C86O3065C88O3096C91O3124C96O3131C101O3096C107O3167C112O3187C117O3194C122O3217C126O3249C131O3267C136O3271C143O3301C150O3333C160O3364C166O3379C170O3267C178O3406C182O3438C187O3462C192O3466C200O3500C210O3531C216O3546C220O3462C228O3705C233O3723C238O3727C246O3761C256O3792C262O3807C266O3723C273O3835,,
code-creation,LazyCompile,10,538659,0x2481a63c716,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:49:30,0x1000c25f930,~
code-source-info,0x2481a63c716,112,1716,1866,C0O1724C6O1768C11O1789C17O1789C22O1768C26O1838C30O1863,,
code-creation,LazyCompile,10,538732,0x2481a63c88e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:56:30,0x1000c25f980,~
code-source-info,0x2481a63c88e,112,1899,2536,C0O1910C8O1910C13O2020C19O2020C24O1957C29O1984C34O2050C38O2080C42O2138C48O2138C53O2111C58O2195C64O2254C70O2417C76O2417C81O2389C86O2450C90O2509C92O2527C99O2535,,
code-creation,LazyCompile,10,538838,0x2481a63ca06,30,validateBoolean node:internal/validators:148:25,0x12028f494d0,~
code-source-info,0x2481a63ca06,16,4555,4669,C0O4574C6O4611C22O4617C27O4611C29O4668,,
code-creation,LazyCompile,10,538976,0x2481a63cdfe,165,wrapSafe node:internal/modules/cjs/loader:1040:18,0x1000c267a70,~
code-source-info,0x2481a63cdfe,115,33444,34474,C0O33444C9O33488C17O33524C22O33531C27O33531C33O33551C40O33561C45O33578C52O33596C56O33688C64O33561C70O33916C74O33936C81O33946C86O33962C98O34084C102O34101C113O33946C118O34343C130O34368C135O34380C142O34391C147O34421C157O34421C162O34456C164O34456,,
code-creation,LazyCompile,10,539203,0x2481a63d5de,475,compileFunction node:vm:316:25,0x3ba37769a0,~
script-source,92,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x2481a63d5de
code-creation,LazyCompile,10,540095,0x2481a63e7ee,95, node:internal/validators:177:39,0x12028f49590,~
code-source-info,0x2481a63e7ee,16,5508,5794,C16O5545C21O5550C27O5578C43O5584C48O5578C49O5650C56O5657C61O5692C66O5715C71O5733C87O5739C92O5733C94O5793,,
code-creation,LazyCompile,10,540155,0x2481a63e94e,27, node:vm:321:27,0x2481a63d2a8,~
code-source-info,0x2481a63e94e,92,10165,10216,C0O10179C10O10211C21O10179C26O10216,,
code-creation,Eval,10,540227,0x2481a63ebc6,5, C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x2481a63ea80,~
script-source,136,C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x2481a63ebc6,136,0,119,C0O0C4O119,,
code-creation,Function,10,540281,0x2481a63ecae,29, C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x2481a63eb40,~
code-source-info,0x2481a63ecae,136,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,541339,0x2481a63ef26,19,importModuleDynamicallyWrap node:internal/vm/module:436:37,0x2481a618fa0,~
code-source-info,0x2481a63ef26,134,12202,12660,C0O12202C13O12272C18O12657,,
code-creation,LazyCompile,10,541546,0x1000c27fede,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x1000c2627c0,~
code-source-info,0x1000c27fede,114,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
new,MemoryChunk,0x30a77d00000,262144
code-creation,LazyCompile,10,541710,0x30a77d011fe,14,require node:internal/modules/cjs/helpers:101:31,0x1000c27fdb0,~
code-source-info,0x30a77d011fe,114,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,541784,0x30a77d0133e,10, node:internal/modules/cjs/helpers:29:66,0x1000c262990,~
code-source-info,0x30a77d0133e,114,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,541863,0x30a77d014b6,129,compileForPublicLoader node:internal/bootstrap/loaders:263:25,0x39626a10fb0,~
code-source-info,0x30a77d014b6,9,8268,8956,C0O8288C6O8435C16O8478C33O8441C38O8435C39O8517C44O8517C48O8560C54O8752C61O8783C69O8752C75O8808C80O8826C90O8842C93O8858C98O8842C102O8824C106O8885C111O8885C115O8911C120O8911C124O8943C128O8951,,
code-creation,Eval,10,541968,0x30a77d01816,5, node:cluster:1:1,0x30a77d016d0,~
script-source,137,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x30a77d01816,137,0,1316,C0O0C4O1316,,
code-creation,Function,10,542072,0x30a77d018be,39, node:cluster:1:1,0x30a77d01790,~
code-source-info,0x30a77d018be,137,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,542484,0x30a77d0247e,5, node:internal/cluster/primary:1:1,0x30a77d020f8,~
script-source,138,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeExec(debugArgRegex\x2C arg) !== null) ||\x0d\n      RegExpPrototypeExec(debugArgRegex\x2C nodeOptions) !== null) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x30a77d0247e,138,0,11199,C0O0C4O11199,,
code-creation,Function,10,543157,0x30a77d02e46,640, node:internal/cluster/primary:1:1,0x30a77d023f8,~
code-source-info,0x30a77d02e
code-creation,Eval,10,543530,0x30a77d044ce,5, node:internal/cluster/round_robin_handle:1:1,0x30a77d042b8,~
script-source,139,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen({\x0d\n      path: address\x2C\x0d\n      backlog\x2C\x0d\n      readableAll\x2C\x0d\n      writableAll\x2C\x0d\n    });  // UNIX socket path.\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x30a77d044ce,139,0,3517,C0O0C4O3517,,
code-creation,Function,10,543814,0x30a77d04896,217, node:internal/cluster/round_robin_handle:1:1,0x30a77d04448,~
code-source-info,0x30a77d04896,139,0,3517,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1401C172O1415C176O2093C185O2110C189O2513C198O2534C202O2901C211O2919C216O3516,,
code-creation,Eval,10,543996,0x30a77d051d6,5, node:internal/cluster/utils:1:1,0x30a77d05060,~
script-source,140,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x30a77d051d6,140,0,1104,C0O0C4O1104,,
code-creation,Function,10,544100,0x30a77d05396,72, node:internal/cluster/utils:1:1,0x30a77d05150,~
code-source-info,0x30a77d05396,140,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,544269,0x30a77d059a6,5, node:internal/cluster/shared_handle:1:1,0x30a77d05820,~
script-source,141,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x30a77d059a6,141,0,1147,C0O0C4O1147,,
code-creation,Function,10,544385,0x30a77d05bde,89, node:internal/cluster/shared_handle:1:1,0x30a77d05920,~
code-source-info,0x30a77d05bde,141,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,544552,0x30a77d061d6,5, node:internal/cluster/worker:1:1,0x30a77d06050,~
script-source,142,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = kEmptyObject;\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x30a77d061d6,142,0,1434,C0O0C4O1434,,
code-creation,Function,10,544683,0x30a77d0654e,158, node:internal/cluster/worker:1:1,0x30a77d06150,~
code-source-info,0x30a77d0654e,142,0,1434,C0O0C20O28C25O53C31O109C34O109C38O109C40O156C43O156C48O139C54O185C56O200C60O913C63O941C71O965C76O913C81O978C87O978C92O1025C95O1032C104O1047C108O1117C111O1124C120O1139C124O1229C127O1236C136O1253C140O1351C143O1358C152O1380C157O1433,,
code-creation,LazyCompile,10,544914,0x30a77d06d16,151,getESMFacade node:internal/bootstrap/loaders:281:15,0x39626a11028,~
code-source-info,0x30a77d06d16,9,8974,9620,C0O8974C8O8993C14O9013C18O9020C19O9049C29O9049C34O9034C39O9098C42O9111C51O9143C53O9143C55O9174C62O9199C67O9174C72O9217C82O9217C87O9266C89O9319C102O9280C107O9278C111O9531C116O9538C121O9538C125O9563C130O9570C140O9570C146O9608C150O9615,,
code-creation,LazyCompile,10,545031,0x30a77d070fe,40, node:internal/bootstrap/loaders:290:15,0x30a77d06c10,~
code-source-info,0x30a77d070fe,9,9347,9455,C0O9361C5O9374C10O9374C14O9403C24O9424C27O9437C32O9403C39O9454,,
code-creation,LazyCompile,10,545106,0x30a77d07256,89,syncExports node:internal/bootstrap/loaders:304:14,0x39626a11098,~
code-source-info,0x30a77d07256,9,9933,10276,C0O9962C5O9988C11O10018C13O10031C17O10023C22O10074C24O10079C28O10093C30O10108C35O10123C37O10147C42O10154C51O10207C54O10219C59O10245C67O10207C73O10154C79O10040C84O10005C88O10275,,
code-creation,LazyCompile,10,545175,0x30a77d073be,35,getOwn node:internal/bootstrap/loaders:187:16,0x39626a10c38,~
code-source-info,0x30a77d073be,9,5832,5990,C0O5869C5O5876C14O5931C26O5931C34O5987,,
code-creation,RegExp,3,545405,0x17e03b47f60,1532,(?:^|\\/)\\.?\\.$
code-creation,Function,11,545692,0x17e03b485c0,252,SafeSet node:internal/per_context/primordials:379:16,0x39626a0abe0,^
code-source-info,0x17e03b485c0,6,11306,11323,,,
code-creation,Function,11,545764,0x17e03b48720,1936,toNamespacedPath node:path:618:19,0x118dcd4d6f8,^
code-source-info,0x17e03b48720,41,20086,21201,,,
code-creation,Function,11,545803,0x17e03b48f20,320,isFileType node:fs:213:20,0x3ba3757598,^
code-source-info,0x17e03b48f20,83,5673,5921,,,
code-creation,Function,11,545834,0x17e03b490c0,304,getOwn node:internal/bootstrap/loaders:187:16,0x39626a10c38,^
code-source-info,0x17e03b490c0,9,5832,5990,,,
code-creation,Function,11,545867,0x17e03b49260,672,syncExports node:internal/bootstrap/loaders:304:14,0x39626a11098,^
code-source-info,0x17e03b49260,9,9933,10276,,,
code-creation,RegExp,3,545971,0x17e03b49560,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,546499,0x17e03b49c00,72,isUint32 node:internal/validators:41:18,0x12028f491e0,^
code-source-info,0x17e03b49c00,16,851,898,,,
code-creation,Function,11,546579,0x17e03b49cc0,3380,dirname node:path:653:10,0x118dcd4d768,^
code-source-info,0x17e03b49cc0,41,21280,23908,,,
code-creation,Function,11,546611,0x17e03b4aa60,216, node:vm:321:27,0x2481a63d2a8,^
code-source-info,0x17e03b4aa60,92,10165,10216,,,
code-creation,Eval,10,546732,0x30a77d081fe,5, C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x30a77d08058,~
script-source,143,C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x30a77d081fe,143,0,494,C0O0C4O494,,
code-creation,Function,10,546810,0x30a77d084a6,157, C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x30a77d08178,~
code-source-info,0x30a77d084a6,143,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,546956,0x30a77d08976,37,get SocketAddress node:net:1924:20,0x7f483f85d8,~
code-source-info,0x30a77d08976,105,53607,53715,C0O53617C14O53635C19O53668C26O53631C32O53689C36O53710,,
code-creation,Eval,10,547093,0x30a77d08d36,5, node:worker_threads:1:1,0x30a77d08bf0,~
script-source,144,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x30a77d08d36,144,0,727,C0O0C4O727,,
code-creation,Function,10,547184,0x30a77d08f46,180, node:worker_threads:1:1,0x30a77d08cb0,~
code-source-info,0x30a77d08f46,144,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
code-creation,Eval,10,547763,0x30a77d09ede,5, node:internal/worker:1:1,0x30a77d098f0,~
script-source,145,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = kEmptyObject) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x30a77d09ede,145,0,15928,C0O0C4O15928,,
code-creation,Function,10,548736,0x30a77d0b23e,1208, node:internal/worker:1:1,0x30a77d09e58,~
code-source-info,0x30a77d0b23e,145,0,15928,C0O0C247O28C253O54C259O76C265O99C270O116C276O142C282O160C288O172C294O189C300O207C306O219C312O238C318O255C324O279C330O301C335O313C341O324C346O335C351O349C357O377C368O407C374O416C379O479C387O479C392O514C400O514C404O514C406O556C414O556C418O556C420O590C428O590C434O582C440O644C448O644C454O670C458O644C460O859C464O690C470O717C476O737C482O773C488O806C494O831C500O899C508O899C514O880C520O948C528O948C532O948C534O1207C538O991C544O1012C550O1031C556O1048C562O1058C568O1081C574O1101C580O1133C586O1158C592O1182C598O1247C606O1247C612O1226C618O1338C626O1338C632O1290C638O1305C644O1320C650O1389C658O1389C664O1372C670O1442C678O1442C684O1424C690O1726C694O1726C700O1488C705O1509C710O1542C715O1564C721O1585C727O1600C733O1630C739O1658C745O1679C751O1696C756O1772C760O1772C764O1772C766O1812C770O1812C774O1812C776O1853C780O1853C784O1853C786O1890C790O1890C794O1890C796O1929C800O1929C804O1929C806O1984C810O1984C814O1984C816O2044C820O2044C824O2044C826O2097C830O2097C834O2097C836O2149C840O2149C844O2149C846O2194C850O2194C854O2194C856O2236C860O2236C864O2236C866O2295C874O2295C880O2328C896O2329C902O2295C904O2385C905O2385C907O2424C909O2424C914O2424C916O2442C927O2465C933O2494C942O2478C947O2476C951O2546C957O2554C961O2546C963O2564C973O2578C979O3084C989O8301C999O8955C1009O9059C1019O9238C1029O10163C1115O13157C1117O13157C1122O13157C1124O15672C1132O15694C1138O15715C1144O15732C1153O15768C1159O15783C1172O15830C1178O15853C1184O15876C1190O15902C1196O15915C1202O15687C1207O15927,,
code-creation,Eval,10,549274,0x30a77d0d1ae,5, node:internal/error_serdes:1:1,0x30a77d0cee8,~
script-source,146,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x30a77d0d1ae,146,0,4376,C0O0C4O4376,,
code-creation,Function,10,549560,0x30a77d0d5ce,335, node:internal/error_serdes:1:1,0x30a77d0d128,~
code-source-info,0x30a77d0d5ce,146,0,4376,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2197C302O2197C304O2402C305O2402C307O3434C308O3434C310O4320C317O4339C323O4355C329O4335C334O4375,,
code-creation,LazyCompile,10,550073,0x30a77d0e7de,914,Socket node:net:294:16,0x7f483f6388,~
code-source-info,0x30a77d0e7de
code-creation,LazyCompile,10,550367,0x30a77d0eeae,109,Duplex node:internal/streams/duplex:54:16,0x118dcd7e618,~
script-source,57,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  const keys = ObjectKeys(Writable.prototype);\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const method = keys[i];\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\x0d\n  writableHighWaterMark:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\x0d\n  writableObjectMode:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\x0d\n  writableBuffer:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\x0d\n  writableLength:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\x0d\n  writableFinished:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\x0d\n  writableCorked:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\x0d\n  writableEnded:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\x0d\n  writableNeedDrain:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x30a77d0eeae,57,2064,2492,C0O2079C2O2090C7O2115C12O2122C17O2142C18O2148C23O2157C28O2157C34O2181C39O2190C44O2190C50O2214C51O2233C55O2246C59O2278C65O2287C70O2305C71O2319C75O2347C81O2356C86O2374C87O2388C91O2416C97O2430C102O2450C103O2469C108O2491,,
tick,0x7ff78f156bb2,550895,0,0x0,3,0x7ff78f093b80,0x30a77d084e7,0x2481a63b739,0x2481a6375db,0x2481a636ade,0x2481a624428,0x2481a623fd2,0x2481a622dab,0x2481a622b55,0x7f483cf344,0x7f483ca9d5
code-creation,LazyCompile,10,550966,0x30a77d0f56e,220,Readable node:internal/streams/readable:181:18,0x18b8600c320,~
script-source,58,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (dest.listenerCount('error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      src.listenerCount('data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x30a77d0f56e,58,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
code-creation,LazyCompile,10,553418,0x30a77d123a6,18,Stream node:internal/streams/legacy:10:16,0x18b8600eb80,~
script-source,59,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x30a77d123a6,59,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,553792,0x30a77d12c4e,354,ReadableState node:internal/streams/readable:78:23,0x18b8600c2d0,~
code-source-info,0x30a77d12c4e
code-creation,LazyCompile,10,553975,0x30a77d1305e,98,getHighWaterMark node:internal/streams/state:19:26,0x18b860116a0,~
script-source,62,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x30a77d1305e,62,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,554104,0x30a77d132f6,26,highWaterMarkFrom node:internal/streams/state:10:27,0x18b86011540,~
code-source-info,0x30a77d132f6,62,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,554148,0x30a77d133ce,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x18b86011650,~
code-source-info,0x30a77d133ce,62,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,554207,0x30a77d134ae,17,BufferList node:internal/streams/buffer_list:14:14,0x18b860109f8,~
script-source,61,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x30a77d134ae,61,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,554599,0x30a77d13bde,98,construct node:internal/streams/destroy:225:19,0x118dcd7d1b0,~
script-source,56,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x30a77d13bde,56,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,555189,0x30a77d148b6,266,Writable node:internal/streams/writable:220:18,0x18b8601b268,~
script-source,65,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._writableState.writable !== false &&\x0d\n        (this._writableState.destroyed || this._writableState.errored) &&\x0d\n        !this._writableState.finished\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x30a77d148b6,65,7647,9215,C0O7647C9O8232C16O8249C19O8256C23O8238C27O8270C33O8288C44O8288C51O8345C58O8352C63O8374C64O8380C83O8402C88O8400C92O8451C96O8490C104O8519C107O8541C111O8531C115O8574C123O8604C126O8627C130O8617C134O8661C142O8692C145O8716C149O8706C153O8751C161O8780C164O8802C168O8792C172O8835C180O8868C183O8894C187O8884C191O8922C197O8937C204O8970C212O8937C217O8995C224O9002C232O9002C238O9028C245O9040C258O9040C265O9214,,
code-creation,LazyCompile,10,556778,0x30a77d169e6,341,WritableState node:internal/streams/writable:77:23,0x18b8601b108,~
code-source-info,0x30a77d169e6,65,2558,7182,C0O2898C6O2938C8O2967C11O2974C15O2956C20O3086C25O3107C27O3126C33O3102C37O3144C41O3186C52O3210C54O3229C60O3179C64O3443C69O3464C73O3479C88O3479C97O3553C102O3553C106O3462C110O3623C111O3640C115O3678C116O3693C120O3741C121O3753C125O3813C126O3824C130O3868C131O3882C135O3924C136O3939C140O4143C144O4165C150O4179C156O4194C158O4216C159O4213C163O4429C168O4453C170O4472C178O4450C182O4655C183O4667C187O4734C188O4747C192O4827C193O4839C197O5109C198O5119C202O5327C203O5349C207O5418C210O5441C217O5441C223O5431C227O5544C228O5557C232O5632C233O5646C237O5765C238O5789C242O5802C245O5802C249O5933C250O5948C254O6144C255O6161C259O6303C260O6320C264O6410C265O6428C269O6502C271O6520C277O6539C283O6549C287O6517C291O6639C293O6659C299O6678C305O6690C309O6656C313O6918C314O6931C318O7004C319O7016C323O7124C324O7142C328O7156C330O7161C335O7174C340O7181,,
code-creation,LazyCompile,10,558147,0x30a77d16df6,23,resetBuffer node:internal/streams/writable:202:21,0x18b8601b158,~
code-source-info,0x30a77d16df6,65,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,558299,0x30a77d16efe,21,set node:internal/streams/readable:1175:8,0x18b8600d2c8,~
code-source-info,0x30a77d16efe,58,36999,37131,C0O37051C6O37083C13O37111C15O37107C20O37130,,
code-creation,LazyCompile,10,558386,0x30a77d17056,131,createHandle node:net:146:22,0x7f483f6158,~
code-source-info,0x30a77d17056,105,3961,4337,C0O3982C13O3982C18O4026C23O4026C28O4050C30O4059C35O4078C42O4102C46O4114C49O4128C57O4137C60O4151C67O4085C72O4165C73O4176C75O4185C80O4203C87O4226C91O4238C94O4251C102O4260C105O4273C112O4210C117O4287C118O4298C125O4304C130O4298,,
code-creation,LazyCompile,10,558474,0x30a77d171f6,14,set node:net:1848:6,0x7f483f82b0,~
code-source-info,0x30a77d171f6,105,51625,51658,C0O51631C2O51643C7O51652C13O51656,,
code-creation,LazyCompile,10,558520,0x30a77d172e6,8,get node:net:1847:6,0x7f483f8260,~
code-source-info,0x30a77d172e6,105,51589,51617,C0O51594C2O51606C4O51605C7O51615,,
code-creation,LazyCompile,10,558649,0x30a77d17496,196,Readable.on node:internal/streams/readable:874:33,0x18b8600cc00,~
code-source-info,0x30a77d17496,58,28613,29539,C0O28639C5O28646C10O28656C15O28659C29O28659C35O28701C40O28722C42O28729C47O28914C55O28914C62O28940C65O28907C69O29036C75O29044C80O29067C85O29067C91O29087C93O29094C98O29128C104O29149C110O29177C112O29222C118O29201C122O29237C123O29251C127O29267C128O29289C132O29305C140O29332C145O29346C150O29305C155O29373C161O29392C164O29392C170O29437C176O29457C179O29465C187O29465C193O29525C195O29536,,
code-creation,LazyCompile,10,558781,0x30a77d1770e,135,initSocketHandle node:net:263:26,0x7f483f6338,~
code-source-info,0x30a77d1770e,105,6802,7402,C0O6819C5O6819C9O6836C10O6851C14O6940C20O6961C27O6969C32O6983C36O7001C43O7018C45O7016C49O7037C51O7042C57O7080C62O7061C66O7059C70O7111C72O7116C74O7115C78O7131C80O7168C82O7173C84O7172C88O7193C90O7235C94O7254C99O7259C105O7293C106O7300C107O7310C109O7315C114O7324C118O7356C123O7364C128O7364C134O7401,,
code-creation,LazyCompile,10,558884,0x30a77d1793e,120,undestroy node:internal/streams/destroy:160:19,0x118dcd7d0f0,~
code-source-info,0x30a77d1793e,56,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,558988,0x30a77d17b3e,32,getNewAsyncId node:net:165:23,0x7f483f61a8,~
code-source-info,0x30a77d17b3e,105,4365,4484,C0O4379C4O4412C14O4446C17O4446C22O4468C27O4468C31O4481,,
code-creation,LazyCompile,10,559055,0x30a77d17c3e,5,get node:internal/bootstrap/pre_execution:413:8,0x1000c2643b8,~
code-source-info,0x30a77d17c3e,100,13524,13559,C0O13536C4O13552,,
code-creation,LazyCompile,10,559111,0x30a77d17ee6,5,get C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x30a77d08230,~
code-source-info,0x30a77d17ee6,143,392,404,C0O398C4O404,,
code-creation,Eval,10,559898,0x30a77d18386,5, C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x30a77d18240,~
script-source,147,C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x30a77d18386,147,0,85,C0O0C4O85,,
code-creation,Function,10,559955,0x30a77d18426,56, C:\\Users\\cacosta\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x30a77d18300,~
code-source-info,0x30a77d18426,147,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,560130,0x30a77d18b06,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:566:36,0x7f483cd2d0,~
code-source-info,0x30a77d18b06,100,18629,18857,C0O18637C8O18641C14O18687C17O18695C28O18695C34O18809C40O18809C45O18846C49O18856,,
code-creation,LazyCompile,10,560217,0x30a77d18c2e,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x2481a6220a0,~
code-source-info,0x30a77d18c2e,135,2398,2712,C7O2414C14O2418C22O2449C25O2449C30O2496C33O2496C38O2533C40O2558C45O2569C50O2558C56O2673C61O2680C73O2680C79O2711,,
code-creation,LazyCompile,10,560291,0x30a77d1907e,68,resolveMainPath node:internal/modules/run_main:15:25,0x2481a621f60,~
code-source-info,0x30a77d1907e,135,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,560815,0x17e03b4aba0,7900,realpathSync node:fs:2460:22,0x3ba3759940,^
code-source-info,0x17e03b4aba0,83,67994,72014,,,
code-creation,Function,11,560855,0x17e03b4cae0,40,noop node:internal/util/debuglog:47:14,0x12028f65ac8,^
code-source-info,0x17e03b4cae0,22,1465,1473,,,
code-creation,Function,11,560893,0x17e03b4cb80,1020,debuglog node:internal/util/debuglog:71:18,0x12028f65b68,^
code-source-info,0x17e03b4cb80,22,2302,3350,,,
code-creation,Function,11,560975,0x17e03b4cfe0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x39626a10e40,^
code-source-info,0x17e03b4cfe0,9,7748,7847,,,
code-creation,Function,11,561003,0x17e03b4d140,72,isInt32 node:internal/validators:37:17,0x12028f48d58,^
code-source-info,0x17e03b4d140,16,785,830,,,
code-creation,Function,11,561043,0x17e03b4d200,1148,readPackageScope node:internal/modules/cjs/loader:332:26,0x1000c267660,^
code-source-info,0x17e03b4d200,115,9584,10117,,,
code-creation,Function,11,561073,0x17e03b4d6e0,160,checkListener node:events:265:23,0x12028f6ef98,^
code-source-info,0x17e03b4d6e0,23,7994,8052,,,
code-creation,Function,11,561100,0x17e03b4d7e0,128,addListener node:events:604:58,0x12028f6f688,^
code-source-info,0x17e03b4d7e0,23,18313,18387,,,
code-creation,LazyCompile,10,561812,0x30a77d19e46,118,shouldUseESMLoader node:internal/modules/run_main:30:28,0x2481a621fb0,~
code-source-info,0x30a77d19e46,135,870,1612,C0O1060C8O1060C13O1120C19O1127C24O1137C25O1149C26O1194C34O1194C39O1252C41O1284C46O1301C47O1313C48O1363C54O1379C60O1379C67O1427C68O1439C69O1443C75O1460C81O1460C88O1508C89O1521C90O1537C95O1537C100O1568C102O1586C107O1591C114O1596C117O1609,,
code-creation,Eval,10,562480,0x30a77d1a2a6,5, C:\\Users\\cacosta\\Desktop\\Proyectos\\Backend\\Entrega desafios\\DesafC32\\child.js:1:1,0x30a77d1a150,~
script-source,148,C:\\Users\\cacosta\\Desktop\\Proyectos\\Backend\\Entrega desafios\\DesafC32\\child.js,function random(num){\x0d\n    randoms={}\x0d\n    for( i=0; i< num; i++){\x0d\n        const num = (Math.random()+1000).toFixed(0);\x0d\n        if(randoms.hasOwnProperty(num)){\x0d\n            randoms[num] += 1\x0d\n        }\x0d\n        else{\x0d\n            randoms[num]=1\x0d\n        }\x0d\n    }\x0d\n    return JSON.stringify(randoms)\x0d\n}\x0d\n\x0d\nprocess.on("message"\x2C (msg =>{\x0d\n    const arreglo = random(parseInt(msg))\x0d\n    process.send(arreglo)\x0d\n}))\x0d\n\x0d\nmodule.exports = {random};
code-source-info,0x30a77d1a2a6,148,0,443,C0O0C4O443,,
code-creation,Function,10,562623,0x30a77d1a42e,53, C:\\Users\\cacosta\\Desktop\\Proyectos\\Backend\\Entrega desafios\\DesafC32\\child.js:1:1,0x30a77d1a220,~
code-source-info,0x30a77d1a42e,148,0,443,C0O0C11O308C15O316C28O316C34O417C41O435C47O432C52O442,,
code-creation,LazyCompile,10,562860,0x30a77d1a666,44,refCounted node:internal/child_process:539:13,0x7f483f0a48,~
code-source-info,0x30a77d1a666,104,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,563081,0x30a77d1a826,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x19bc9c5adb8,~
code-source-info,0x30a77d1a
code-creation,LazyCompile,10,563314,0x30a77d1aafe,43,shift node:internal/fixed_queue:108:8,0x19bc9c600f0,~
code-source-info,0x30a77d1aafe,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,563406,0x30a77d1ac46,54,shift node:internal/fixed_queue:80:8,0x19bc9c5ff00,~
code-source-info,0x30a77d1ac46,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,563548,0x30a77d1ad7e,42,emitBeforeScript node:internal/async_hooks:509:26,0x39626a3aaa8,~
code-source-info,0x30a77d1ad7e,13,17331,17487,C0O17372C12O17372C17O17430C22O17443C25O17434C31O17458C36O17458C41O17486,,
code-creation,LazyCompile,10,563661,0x30a77d1aece,180,pushAsyncContext node:internal/async_hooks:539:26,0x39626a3ac50,~
code-source-info,0x30a77d1aece,13,18005,18560,C0O18061C7O18079C9O18078C13O18097C20O18131C24O18146C26O18157C32O18164C35O18175C40O18191C44O18161C49O18204C54O18211C59O18254C60O18258C65O18269C72O18292C78O18299C83O18315C85O18314C88O18297C92O18338C97O18349C104O18372C107O18376C113O18383C118O18399C120O18398C123O18381C127O18420C134O18438C142O18451C146O18458C153O18474C158O18493C162O18507C169O18523C174O18540C179O18559,,
code-creation,LazyCompile,10,563983,0x30a77d1b0e6,125, node:internal/child_process:709:22,0x1000c25b700,~
code-source-info,0x30a77d1b0e6,104,20146,20523,C0O20161C3O20173C12O20192C20O20192C27O20227C28O20234C29O20261C32O20268C41O20276C43O20275C47O20310C52O20338C54O20351C55O20358C56O20381C58O20386C60O20386C65O20412C75O20432C85O20454C89O20412C94O20397C99O20368C102O20478C105O20485C114O20493C119O20511C124O20522,,
code-creation,LazyCompile,10,564156,0x30a77d1b2a6,31,listenerCount node:events:840:23,0x12028f6fbd0,~
code-source-info,0x30a77d1b2a6,23,24974,25256,C0O25006C5O25020C7O25072C9O25078C13O25093C17O25140C19O25149C20O25162C24O25219C28O25226C29O25244C30O25253,,
code-creation,LazyCompile,10,564247,0x30a77d1b3ae,13,destroyHooksExist node:internal/async_hooks:486:27,0x39626a3a9b8,~
code-source-info,0x30a77d1b3ae,13,16757,16794,C0O16765C5O16781C8O16772C12O16791,,
code-creation,LazyCompile,10,564325,0x30a77d1b49e,32,emitAfterScript node:internal/async_hooks:517:25,0x39626a3aaf8,~
code-source-info,0x30a77d1b49e,13,17517,17618,C0O17532C5O17545C8O17536C14O17559C19O17559C23O17590C26O17590C31O17617,,
code-creation,LazyCompile,10,564451,0x30a77d1b606,167,popAsyncContext node:internal/async_hooks:553:25,0x39626a3aca0,~
code-source-info,0x30a77d1b606,13,18653,19255,C0O18688C7O18706C9O18705C13O18724C14O18740C19O18747C20O18760C21O18766C24O18770C31O18793C36O18809C38O18808C44O18828C49O18912C54O18919C58O18945C59O18971C61O18983C65O18991C72O19007C77O19028C80O19039C87O19057C90O19054C93O19026C97O19071C104O19087C109O19106C112O19117C119O19135C122O19144C125O19132C128O19104C132O19153C137O19179C142O19179C146O19189C153O19207C158O19221C162O19234C163O19248C166O19252,,
code-creation,LazyCompile,10,564617,0x30a77d1b7e6,13,enabledHooksExist node:internal/async_hooks:474:27,0x39626a3a8a8,~
code-source-info,0x30a77d1b7e6,13,16568,16603,C0O16576C5O16592C8O16583C12O16600,,
code-creation,LazyCompile,10,564882,0x30a77d1bb4e,627,processPromiseRejections node:internal/process/promises:211:34,0x19bc9c5e808,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x30a77d1bb4e,33,6650,9869,C0O6696C6O6719C13O6726C17O6773C23O6766C30O6773C35O6814C43O6834C47O6814C53O6793C58O6802C64O6864C68O6877C78O6877C86O6921C90O6929C96O6929C101O6736C104O6978C110O7005C115O7026C126O7026C128O7053C136O7073C140O7053C145O7127C151O7150C157O7150C163O7169C165O7209C167O7231C168O7250C172O7271C177O7279C182O7284C187O7327C189O7451C198O7344C203O7371C215O7419C227O7630C233O7682C248O7682C256O7809C264O7858C273O8529C282O8649C291O8828C300O9283C309O7911C313O7911C327O7955C332O8073C341O8073C346O8139C352O8197C360O8238C362O8237C369O8278C371O8277C379O8197C384O8381C393O8381C399O8428C401O8442C405O8442C410O8497C412O8570C421O8570C426O8617C428O8694C437O8694C442O8741C446O8741C451O8796C453O8884C462O8884C468O8931C470O8972C474O8972C488O9018C493O9142C502O9142C507O9210C509O9251C511O9351C520O9351C526O9398C528O9427C532O9427C537O9484C543O9501C547O9530C564O9581C570O9605C576O9661C582O9661C597O9726C599O7016C605O9774C611O9826C615O9853C622O9860C626O9866,,
code-creation,LazyCompile,10,565746,0x30a77d1caae,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x19bc9c5dd78,~
code-source-info,0x30a77d1caae,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
tick,0x7ffc909efd34,566874,0,0x0,8
tick,0x7ffc909efd34,582825,0,0x0,8
tick,0x7ffc909efd34,598903,0,0x0,8
tick,0x7ffc909efd34,614820,0,0x0,8
tick,0x7ffc909efd34,629823,0,0x0,8
tick,0x7ffc909efd34,644830,0,0x0,8
tick,0x7ffc909efd34,660839,0,0x0,8
tick,0x7ffc909efd34,676896,0,0x0,8
tick,0x7ffc909efd34,692857,0,0x0,8
tick,0x7ffc909efd34,708836,0,0x0,8
tick,0x7ffc909efd34,725579,0,0x0,8
tick,0x7ffc909efd34,742294,0,0x0,8
tick,0x7ffc909efd34,756828,0,0x0,8
tick,0x7ffc909efd34,772900,0,0x0,8
tick,0x7ffc909efd34,788868,0,0x0,8
tick,0x7ffc909efd34,804824,0,0x0,8
tick,0x7ffc909efd34,820837,0,0x0,8
tick,0x7ffc909efd34,835812,0,0x0,8
tick,0x7ffc909efd34,850841,0,0x0,8
tick,0x7ffc909efd34,865832,0,0x0,8
tick,0x7ffc909efd34,881858,0,0x0,8
tick,0x7ffc909efd34,897829,0,0x0,8
tick,0x7ffc909efd34,916077,0,0x0,8
tick,0x7ffc909efd34,929954,0,0x0,8
tick,0x7ffc909efd34,945820,0,0x0,8
tick,0x7ffc909efd34,960821,0,0x0,8
tick,0x7ffc909efd34,975883,0,0x0,8
tick,0x7ffc909efd34,991885,0,0x0,8
tick,0x7ffc909efd34,1007868,0,0x0,8
tick,0x7ffc909efd34,1024762,0,0x0,8
tick,0x7ffc909efd34,1039945,0,0x0,8
tick,0x7ffc909efd34,1054836,0,0x0,8
tick,0x7ffc909efd34,1070844,0,0x0,8
tick,0x7ffc909efd34,1086848,0,0x0,8
tick,0x7ffc909efd34,1101828,0,0x0,8
tick,0x7ffc909efd34,1116863,0,0x0,8
tick,0x7ffc909efd34,1132825,0,0x0,8
tick,0x7ffc909efd34,1148832,0,0x0,8
tick,0x7ffc909efd34,1164838,0,0x0,8
tick,0x7ffc909efd34,1180849,0,0x0,8
tick,0x7ffc909efd34,1196839,0,0x0,8
tick,0x7ffc909efd34,1212839,0,0x0,8
tick,0x7ffc909efd34,1228833,0,0x0,8
tick,0x7ffc909efd34,1244857,0,0x0,8
tick,0x7ffc909efd34,1260825,0,0x0,8
tick,0x7ffc909efd34,1276899,0,0x0,8
tick,0x7ffc909efd34,1292912,0,0x0,8
tick,0x7ffc909efd34,1308849,0,0x0,8
tick,0x7ffc909efd34,1325381,0,0x0,8
tick,0x7ffc909efd34,1341568,0,0x0,8
tick,0x7ffc909efd34,1357363,0,0x0,8
tick,0x7ffc909efd34,1372839,0,0x0,8
tick,0x7ffc909efd34,1387837,0,0x0,8
tick,0x7ffc909efd34,1403837,0,0x0,8
tick,0x7ffc909efd34,1419835,0,0x0,8
tick,0x7ffc909efd34,1435834,0,0x0,8
tick,0x7ffc909efd34,1451842,0,0x0,8
tick,0x7ffc909efd34,1467825,0,0x0,8
tick,0x7ffc909efd34,1483850,0,0x0,8
tick,0x7ffc909efd34,1498841,0,0x0,8
tick,0x7ffc909efd34,1513832,0,0x0,8
tick,0x7ffc909efd34,1529838,0,0x0,8
tick,0x7ffc909efd34,1545842,0,0x0,8
tick,0x7ffc909efd34,1561869,0,0x0,8
tick,0x7ffc909efd34,1576871,0,0x0,8
tick,0x7ffc909efd34,1593126,0,0x0,8
tick,0x7ffc909efd34,1608850,0,0x0,8
tick,0x7ffc909efd34,1624928,0,0x0,8
tick,0x7ffc909efd34,1641009,0,0x0,8
tick,0x7ffc909efd34,1655882,0,0x0,8
tick,0x7ffc909efd34,1671854,0,0x0,8
tick,0x7ffc909efd34,1687837,0,0x0,8
tick,0x7ffc909efd34,1703859,0,0x0,8
tick,0x7ffc909efd34,1720444,0,0x0,8
tick,0x7ffc909efd34,1735829,0,0x0,8
tick,0x7ffc909efd34,1750848,0,0x0,8
tick,0x7ffc909efd34,1766047,0,0x0,8
tick,0x7ffc909efd34,1780811,0,0x0,8
tick,0x7ffc909efd34,1796838,0,0x0,8
tick,0x7ffc909efd34,1812826,0,0x0,8
tick,0x7ffc909efd34,1828864,0,0x0,8
tick,0x7ffc909efd34,1843826,0,0x0,8
tick,0x7ffc909efd34,1859826,0,0x0,8
tick,0x7ffc909efd34,1875829,0,0x0,8
tick,0x7ffc909efd34,1891831,0,0x0,8
tick,0x7ffc909efd34,1907816,0,0x0,8
tick,0x7ffc909efd34,1923837,0,0x0,8
tick,0x7ffc909efd34,1939843,0,0x0,8
tick,0x7ffc909efd34,1955833,0,0x0,8
tick,0x7ffc909efd34,1970836,0,0x0,8
tick,0x7ffc909efd34,1985857,0,0x0,8
tick,0x7ffc909efd34,2001282,0,0x0,8
tick,0x7ffc909efd34,2015833,0,0x0,8
tick,0x7ffc909efd34,2032643,0,0x0,8
tick,0x7ffc909efd34,2047845,0,0x0,8
tick,0x7ffc909efd34,2063967,0,0x0,8
tick,0x7ffc909efd34,2080221,0,0x0,8
tick,0x7ffc909efd34,2097761,0,0x0,8
tick,0x7ffc909efd34,2111914,0,0x0,8
tick,0x7ffc909efd34,2128790,0,0x0,8
tick,0x7ffc909efd34,2145773,0,0x0,8
tick,0x7ffc909efd34,2162503,0,0x0,8
tick,0x7ffc909efd34,2175899,0,0x0,8
tick,0x7ffc909efd34,2195671,0,0x0,8
tick,0x7ffc909efd34,2212662,0,0x0,8
tick,0x7ffc909efd34,2226884,0,0x0,8
tick,0x7ffc909efd34,2239721,0,0x0,8
tick,0x7ffc909efd34,2257970,0,0x0,8
tick,0x7ffc909efd34,2271177,0,0x0,8
tick,0x7ffc909efd34,2287095,0,0x0,8
tick,0x7ffc909efd34,2303037,0,0x0,8
tick,0x7ffc909efd34,2319027,0,0x0,8
tick,0x7ffc909efd34,2333918,0,0x0,8
tick,0x7ffc909efd34,2350076,0,0x0,8
tick,0x7ffc909efd34,2366000,0,0x0,8
tick,0x7ffc909efd34,2382133,0,0x0,8
tick,0x7ffc909efd34,2397015,0,0x0,8
tick,0x7ffc909efd34,2412547,0,0x0,8
tick,0x7ffc909efd34,2428171,0,0x0,8
tick,0x7ffc909efd34,2444049,0,0x0,8
tick,0x7ffc909efd34,2459204,0,0x0,8
tick,0x7ffc909efd34,2475302,0,0x0,8
tick,0x7ffc909efd34,2491307,0,0x0,8
tick,0x7ffc909efd34,2507077,0,0x0,8
tick,0x7ffc909efd34,2522628,0,0x0,8
tick,0x7ffc909efd34,2538422,0,0x0,8
tick,0x7ffc909efd34,2554176,0,0x0,8
tick,0x7ffc909efd34,2570204,0,0x0,8
tick,0x7ffc909efd34,2585131,0,0x0,8
tick,0x7ffc909efd34,2600546,0,0x0,8
tick,0x7ffc909efd34,2615861,0,0x0,8
tick,0x7ffc909efd34,2632015,0,0x0,8
tick,0x7ffc909efd34,2647371,0,0x0,8
tick,0x7ffc909efd34,2662704,0,0x0,8
tick,0x7ffc909efd34,2678673,0,0x0,8
tick,0x7ffc909efd34,2694448,0,0x0,8
tick,0x7ffc909efd34,2709635,0,0x0,8
tick,0x7ffc909efd34,2725517,0,0x0,8
tick,0x7ffc909efd34,2740889,0,0x0,8
tick,0x7ffc909efd34,2757546,0,0x0,8
tick,0x7ffc909efd34,2772700,0,0x0,8
tick,0x7ffc909efd34,2787948,0,0x0,8
tick,0x7ffc909efd34,2803444,0,0x0,8
tick,0x7ffc909efd34,2819795,0,0x0,8
tick,0x7ffc909efd34,2835420,0,0x0,8
tick,0x7ffc909efd34,2851592,0,0x0,8
tick,0x7ffc909efd34,2866908,0,0x0,8
tick,0x7ffc909efd34,2882896,0,0x0,8
tick,0x7ffc909efd34,2898795,0,0x0,8
tick,0x7ffc909efd34,2915081,0,0x0,8
tick,0x7ffc909efd34,2930284,0,0x0,8
tick,0x7ffc909efd34,2946037,0,0x0,8
tick,0x7ffc909efd34,2961800,0,0x0,8
tick,0x7ffc909efd34,2976843,0,0x0,8
tick,0x7ffc909efd34,2992643,0,0x0,8
tick,0x7ffc909efd34,3008283,0,0x0,8
tick,0x7ffc909efd34,3023920,0,0x0,8
tick,0x7ffc909efd34,3038762,0,0x0,8
tick,0x7ffc909efd34,3054981,0,0x0,8
tick,0x7ffc909efd34,3070393,0,0x0,8
tick,0x7ffc909efd34,3085432,0,0x0,8
tick,0x7ffc909efd34,3101175,0,0x0,8
tick,0x7ffc909efd34,3116650,0,0x0,8
tick,0x7ffc909efd34,3132635,0,0x0,8
tick,0x7ffc909efd34,3148651,0,0x0,8
tick,0x7ffc909efd34,3164901,0,0x0,8
tick,0x7ffc909efd34,3180542,0,0x0,8
tick,0x7ffc909efd34,3196694,0,0x0,8
tick,0x7ffc909efd34,3211550,0,0x0,8
tick,0x7ffc909efd34,3227285,0,0x0,8
tick,0x7ffc909efd34,3243167,0,0x0,8
tick,0x7ffc909efd34,3258530,0,0x0,8
tick,0x7ffc909efd34,3274668,0,0x0,8
tick,0x7ffc909efd34,3290700,0,0x0,8
tick,0x7ffc909efd34,3306252,0,0x0,8
tick,0x7ffc909efd34,3321760,0,0x0,8
tick,0x7ffc909efd34,3337566,0,0x0,8
tick,0x7ffc909efd34,3352837,0,0x0,8
tick,0x7ffc909efd34,3368454,0,0x0,8
tick,0x7ffc909efd34,3383410,0,0x0,8
tick,0x7ffc909efd34,3398337,0,0x0,8
tick,0x7ffc909efd34,3413836,0,0x0,8
tick,0x7ffc909efd34,3429514,0,0x0,8
tick,0x7ffc909efd34,3444461,0,0x0,8
tick,0x7ffc909efd34,3459655,0,0x0,8
tick,0x7ffc909efd34,3475074,0,0x0,8
tick,0x7ffc909efd34,3490575,0,0x0,8
tick,0x7ffc909efd34,3506236,0,0x0,8
tick,0x7ffc909efd34,3521352,0,0x0,8
tick,0x7ffc909efd34,3537037,0,0x0,8
tick,0x7ffc909efd34,3552963,0,0x0,8
tick,0x7ffc909efd34,3568637,0,0x0,8
tick,0x7ffc909efd34,3584064,0,0x0,8
tick,0x7ffc909efd34,3599565,0,0x0,8
tick,0x7ffc909efd34,3615686,0,0x0,8
tick,0x7ffc909efd34,3630975,0,0x0,8
tick,0x7ffc909efd34,3646712,0,0x0,8
tick,0x7ffc909efd34,3661873,0,0x0,8
tick,0x7ffc909efd34,3677763,0,0x0,8
tick,0x7ffc909efd34,3693573,0,0x0,8
tick,0x7ffc909efd34,3709610,0,0x0,8
tick,0x7ffc909efd34,3724593,0,0x0,8
tick,0x7ffc909efd34,3740309,0,0x0,8
tick,0x7ffc909efd34,3755527,0,0x0,8
tick,0x7ffc909efd34,3771186,0,0x0,8
tick,0x7ffc909efd34,3786636,0,0x0,8
tick,0x7ffc909efd34,3802086,0,0x0,8
tick,0x7ffc909efd34,3818336,0,0x0,8
tick,0x7ffc909efd34,3833873,0,0x0,8
tick,0x7ffc909efd34,3849633,0,0x0,8
tick,0x7ffc909efd34,3865280,0,0x0,8
tick,0x7ffc909efd34,3880870,0,0x0,8
tick,0x7ffc909efd34,3896501,0,0x0,8
tick,0x7ffc909efd34,3911983,0,0x0,8
tick,0x7ffc909efd34,3927546,0,0x0,8
tick,0x7ffc909efd34,3943036,0,0x0,8
tick,0x7ffc909efd34,3958966,0,0x0,8
tick,0x7ffc909efd34,3974652,0,0x0,8
tick,0x7ffc909efd34,3990142,0,0x0,8
tick,0x7ffc909efd34,4005385,0,0x0,8
tick,0x7ffc909efd34,4021277,0,0x0,8
tick,0x7ffc909efd34,4036735,0,0x0,8
tick,0x7ffc909efd34,4052654,0,0x0,8
tick,0x7ffc909efd34,4068593,0,0x0,8
tick,0x7ffc909efd34,4084072,0,0x0,8
tick,0x7ffc909efd34,4099474,0,0x0,8
tick,0x7ffc909efd34,4114982,0,0x0,8
tick,0x7ffc909efd34,4130654,0,0x0,8
tick,0x7ffc909efd34,4146236,0,0x0,8
tick,0x7ffc909efd34,4161555,0,0x0,8
tick,0x7ffc909efd34,4177623,0,0x0,8
tick,0x7ffc909efd34,4193019,0,0x0,8
tick,0x7ffc909efd34,4209186,0,0x0,8
tick,0x7ffc909efd34,4224397,0,0x0,8
tick,0x7ffc909efd34,4240555,0,0x0,8
tick,0x7ffc909efd34,4255444,0,0x0,8
tick,0x7ffc909efd34,4271101,0,0x0,8
tick,0x7ffc909efd34,4286661,0,0x0,8
tick,0x7ffc909efd34,4302314,0,0x0,8
tick,0x7ffc909efd34,4317725,0,0x0,8
tick,0x7ffc909efd34,4333118,0,0x0,8
tick,0x7ffc909efd34,4348757,0,0x0,8
tick,0x7ffc909efd34,4364006,0,0x0,8
tick,0x7ffc909efd34,4379758,0,0x0,8
tick,0x7ffc909efd34,4395128,0,0x0,8
tick,0x7ffc909efd34,4410366,0,0x0,8
tick,0x7ffc909efd34,4426421,0,0x0,8
tick,0x7ffc909efd34,4441154,0,0x0,8
tick,0x7ffc909efd34,4456136,0,0x0,8
tick,0x7ffc909efd34,4472307,0,0x0,8
tick,0x7ffc909efd34,4487706,0,0x0,8
tick,0x7ffc909efd34,4503442,0,0x0,8
tick,0x7ffc909efd34,4519222,0,0x0,8
tick,0x7ffc909efd34,4534634,0,0x0,8
tick,0x7ffc909efd34,4549786,0,0x0,8
tick,0x7ffc909efd34,4565907,0,0x0,8
tick,0x7ffc909efd34,4581563,0,0x0,8
tick,0x7ffc909efd34,4596864,0,0x0,8
tick,0x7ffc909efd34,4612466,0,0x0,8
tick,0x7ffc909efd34,4628558,0,0x0,8
tick,0x7ffc909efd34,4643915,0,0x0,8
tick,0x7ffc909efd34,4659357,0,0x0,8
tick,0x7ffc909efd34,4675538,0,0x0,8
tick,0x7ffc909efd34,4691385,0,0x0,8
tick,0x7ffc909efd34,4706700,0,0x0,8
tick,0x7ffc909efd34,4722740,0,0x0,8
tick,0x7ffc909efd34,4738671,0,0x0,8
tick,0x7ffc909efd34,4754640,0,0x0,8
tick,0x7ffc909efd34,4769951,0,0x0,8
tick,0x7ffc909efd34,4785831,0,0x0,8
tick,0x7ffc909efd34,4801732,0,0x0,8
tick,0x7ffc909efd34,4817321,0,0x0,8
tick,0x7ffc909efd34,4832780,0,0x0,8
tick,0x7ffc909efd34,4847968,0,0x0,8
tick,0x7ffc909efd34,4863635,0,0x0,8
tick,0x7ffc909efd34,4878750,0,0x0,8
tick,0x7ffc909efd34,4894449,0,0x0,8
tick,0x7ffc909efd34,4910058,0,0x0,8
tick,0x7ffc909efd34,4926270,0,0x0,8
tick,0x7ffc909efd34,4941634,0,0x0,8
tick,0x7ffc909efd34,4957272,0,0x0,8
tick,0x7ffc909efd34,4972993,0,0x0,8
tick,0x7ffc909efd34,4988172,0,0x0,8
tick,0x7ffc909efd34,5003649,0,0x0,8
tick,0x7ffc909efd34,5019401,0,0x0,8
tick,0x7ffc909efd34,5035176,0,0x0,8
tick,0x7ffc909efd34,5050528,0,0x0,8
tick,0x7ffc909efd34,5066082,0,0x0,8
tick,0x7ffc909efd34,5081790,0,0x0,8
tick,0x7ffc909efd34,5097078,0,0x0,8
tick,0x7ffc909efd34,5112619,0,0x0,8
tick,0x7ffc909efd34,5128412,0,0x0,8
tick,0x7ffc909efd34,5144496,0,0x0,8
tick,0x7ffc909efd34,5160107,0,0x0,8
tick,0x7ffc909efd34,5175543,0,0x0,8
tick,0x7ffc909efd34,5191195,0,0x0,8
tick,0x7ffc909efd34,5206615,0,0x0,8
tick,0x7ffc909efd34,5222164,0,0x0,8
tick,0x7ffc909efd34,5237863,0,0x0,8
tick,0x7ffc909efd34,5253299,0,0x0,8
tick,0x7ffc909efd34,5268950,0,0x0,8
tick,0x7ffc909efd34,5284729,0,0x0,8
tick,0x7ffc909efd34,5300887,0,0x0,8
tick,0x7ffc909efd34,5315632,0,0x0,8
tick,0x7ffc909efd34,5331103,0,0x0,8
tick,0x7ffc909efd34,5346274,0,0x0,8
tick,0x7ffc909efd34,5361757,0,0x0,8
tick,0x7ffc909efd34,5377810,0,0x0,8
tick,0x7ffc909efd34,5393352,0,0x0,8
tick,0x7ffc909efd34,5409286,0,0x0,8
tick,0x7ffc909efd34,5425531,0,0x0,8
tick,0x7ffc909efd34,5441752,0,0x0,8
tick,0x7ffc909efd34,5457903,0,0x0,8
tick,0x7ffc909efd34,5473793,0,0x0,8
tick,0x7ffc909efd34,5489168,0,0x0,8
tick,0x7ffc909efd34,5504530,0,0x0,8
tick,0x7ffc909efd34,5520368,0,0x0,8
tick,0x7ffc909efd34,5535832,0,0x0,8
tick,0x7ffc909efd34,5551838,0,0x0,8
tick,0x7ffc909efd34,5567371,0,0x0,8
tick,0x7ffc909efd34,5583309,0,0x0,8
tick,0x7ffc909efd34,5599112,0,0x0,8
tick,0x7ffc909efd34,5614799,0,0x0,8
tick,0x7ffc909efd34,5630631,0,0x0,8
tick,0x7ffc909efd34,5646183,0,0x0,8
tick,0x7ffc909efd34,5661710,0,0x0,8
tick,0x7ffc909efd34,5677270,0,0x0,8
tick,0x7ffc909efd34,5692981,0,0x0,8
tick,0x7ffc909efd34,5708032,0,0x0,8
tick,0x7ffc909efd34,5723153,0,0x0,8
tick,0x7ffc909efd34,5737983,0,0x0,8
tick,0x7ffc909efd34,5753781,0,0x0,8
tick,0x7ffc909efd34,5769570,0,0x0,8
tick,0x7ffc909efd34,5784866,0,0x0,8
tick,0x7ffc909efd34,5801053,0,0x0,8
tick,0x7ffc909efd34,5817328,0,0x0,8
tick,0x7ffc909efd34,5833342,0,0x0,8
tick,0x7ffc909efd34,5849054,0,0x0,8
tick,0x7ffc909efd34,5864450,0,0x0,8
tick,0x7ffc909efd34,5880266,0,0x0,8
tick,0x7ffc909efd34,5895937,0,0x0,8
tick,0x7ffc909efd34,5911103,0,0x0,8
tick,0x7ffc909efd34,5926480,0,0x0,8
tick,0x7ffc909efd34,5942288,0,0x0,8
tick,0x7ffc909efd34,5957483,0,0x0,8
tick,0x7ffc909efd34,5973119,0,0x0,8
tick,0x7ffc909efd34,5988464,0,0x0,8
tick,0x7ffc909efd34,6004016,0,0x0,8
tick,0x7ffc909efd34,6019683,0,0x0,8
tick,0x7ffc909efd34,6035234,0,0x0,8
tick,0x7ffc909efd34,6051389,0,0x0,8
tick,0x7ffc909efd34,6067029,0,0x0,8
tick,0x7ffc909efd34,6082026,0,0x0,8
tick,0x7ffc909efd34,6097538,0,0x0,8
tick,0x7ffc909efd34,6113302,0,0x0,8
tick,0x7ffc909efd34,6128585,0,0x0,8
tick,0x7ffc909efd34,6144082,0,0x0,8
tick,0x7ffc909efd34,6159937,0,0x0,8
tick,0x7ffc909efd34,6175593,0,0x0,8
tick,0x7ffc909efd34,6190741,0,0x0,8
tick,0x7ffc909efd34,6206181,0,0x0,8
tick,0x7ffc909efd34,6221604,0,0x0,8
tick,0x7ffc909efd34,6237124,0,0x0,8
tick,0x7ffc909efd34,6252641,0,0x0,8
tick,0x7ffc909efd34,6268314,0,0x0,8
tick,0x7ffc909efd34,6284209,0,0x0,8
tick,0x7ffc909efd34,6299820,0,0x0,8
tick,0x7ffc909efd34,6315599,0,0x0,8
tick,0x7ffc909efd34,6331141,0,0x0,8
tick,0x7ffc909efd34,6346368,0,0x0,8
tick,0x7ffc909efd34,6362426,0,0x0,8
tick,0x7ffc909efd34,6378586,0,0x0,8
tick,0x7ffc909efd34,6393964,0,0x0,8
tick,0x7ffc909efd34,6409400,0,0x0,8
tick,0x7ffc909efd34,6425051,0,0x0,8
tick,0x7ffc909efd34,6440369,0,0x0,8
tick,0x7ffc909efd34,6455715,0,0x0,8
tick,0x7ffc909efd34,6471239,0,0x0,8
tick,0x7ffc909efd34,6486821,0,0x0,8
tick,0x7ffc909efd34,6502139,0,0x0,8
tick,0x7ffc909efd34,6517944,0,0x0,8
tick,0x7ffc909efd34,6533264,0,0x0,8
tick,0x7ffc909efd34,6549038,0,0x0,8
tick,0x7ffc909efd34,6564837,0,0x0,8
tick,0x7ffc909efd34,6580462,0,0x0,8
tick,0x7ffc909efd34,6596156,0,0x0,8
tick,0x7ffc909efd34,6611589,0,0x0,8
tick,0x7ffc909efd34,6627052,0,0x0,8
tick,0x7ffc909efd34,6642423,0,0x0,8
tick,0x7ffc909efd34,6657722,0,0x0,8
tick,0x7ffc909efd34,6672852,0,0x0,8
tick,0x7ffc909efd34,6688192,0,0x0,8
tick,0x7ffc909efd34,6703981,0,0x0,8
tick,0x7ffc909efd34,6719443,0,0x0,8
tick,0x7ffc909efd34,6734997,0,0x0,8
tick,0x7ffc909efd34,6750942,0,0x0,8
tick,0x7ffc909efd34,6767099,0,0x0,8
tick,0x7ffc909efd34,6782653,0,0x0,8
tick,0x7ffc909efd34,6798091,0,0x0,8
tick,0x7ffc909efd34,6813812,0,0x0,8
tick,0x7ffc909efd34,6829486,0,0x0,8
tick,0x7ffc909efd34,6845372,0,0x0,8
tick,0x7ffc909efd34,6860664,0,0x0,8
tick,0x7ffc909efd34,6876207,0,0x0,8
tick,0x7ffc909efd34,6891296,0,0x0,8
tick,0x7ffc909efd34,6906796,0,0x0,8
tick,0x7ffc909efd34,6922735,0,0x0,8
tick,0x7ffc909efd34,6937793,0,0x0,8
tick,0x7ffc909efd34,6953708,0,0x0,8
tick,0x7ffc909efd34,6969041,0,0x0,8
tick,0x7ffc909efd34,6984573,0,0x0,8
tick,0x7ffc909efd34,7000450,0,0x0,8
tick,0x7ffc909efd34,7015983,0,0x0,8
tick,0x7ffc909efd34,7032027,0,0x0,8
tick,0x7ffc909efd34,7048145,0,0x0,8
tick,0x7ffc909efd34,7064297,0,0x0,8
tick,0x7ffc909efd34,7080462,0,0x0,8
tick,0x7ffc909efd34,7095803,0,0x0,8
tick,0x7ffc909efd34,7112042,0,0x0,8
tick,0x7ffc909efd34,7127355,0,0x0,8
tick,0x7ffc909efd34,7142881,0,0x0,8
tick,0x7ffc909efd34,7158215,0,0x0,8
tick,0x7ffc909efd34,7173542,0,0x0,8
tick,0x7ffc909efd34,7188829,0,0x0,8
tick,0x7ffc909efd34,7204322,0,0x0,8
tick,0x7ffc909efd34,7219287,0,0x0,8
tick,0x7ffc909efd34,7234933,0,0x0,8
tick,0x7ffc909efd34,7250141,0,0x0,8
tick,0x7ffc909efd34,7265716,0,0x0,8
tick,0x7ffc909efd34,7281673,0,0x0,8
tick,0x7ffc909efd34,7297638,0,0x0,8
tick,0x7ffc909efd34,7313794,0,0x0,8
tick,0x7ffc909efd34,7329912,0,0x0,8
tick,0x7ffc909efd34,7344998,0,0x0,8
tick,0x7ffc909efd34,7360865,0,0x0,8
tick,0x7ffc909efd34,7376991,0,0x0,8
tick,0x7ffc909efd34,7392140,0,0x0,8
tick,0x7ffc909efd34,7407376,0,0x0,8
tick,0x7ffc909efd34,7422797,0,0x0,8
tick,0x7ffc909efd34,7438979,0,0x0,8
tick,0x7ffc909efd34,7454958,0,0x0,8
tick,0x7ffc909efd34,7470199,0,0x0,8
tick,0x7ffc909efd34,7485919,0,0x0,8
tick,0x7ffc909efd34,7501471,0,0x0,8
tick,0x7ffc909efd34,7517329,0,0x0,8
tick,0x7ffc909efd34,7532897,0,0x0,8
tick,0x7ffc909efd34,7548521,0,0x0,8
tick,0x7ffc909efd34,7564317,0,0x0,8
tick,0x7ffc909efd34,7580334,0,0x0,8
tick,0x7ffc909efd34,7595694,0,0x0,8
tick,0x7ffc909efd34,7610863,0,0x0,8
tick,0x7ffc909efd34,7626535,0,0x0,8
tick,0x7ffc909efd34,7641899,0,0x0,8
tick,0x7ffc909efd34,7657125,0,0x0,8
tick,0x7ffc909efd34,7672484,0,0x0,8
tick,0x7ffc909efd34,7687860,0,0x0,8
tick,0x7ffc909efd34,7703472,0,0x0,8
tick,0x7ffc909efd34,7719379,0,0x0,8
tick,0x7ffc909efd34,7735045,0,0x0,8
tick,0x7ffc909efd34,7751570,0,0x0,8
tick,0x7ffc909efd34,7766814,0,0x0,8
tick,0x7ffc909efd34,7782424,0,0x0,8
tick,0x7ffc909efd34,7798173,0,0x0,8
tick,0x7ffc909efd34,7813842,0,0x0,8
tick,0x7ffc909efd34,7829843,0,0x0,8
tick,0x7ffc909efd34,7845637,0,0x0,8
tick,0x7ffc909efd34,7860981,0,0x0,8
tick,0x7ffc909efd34,7877189,0,0x0,8
tick,0x7ffc909efd34,7891954,0,0x0,8
tick,0x7ffc909efd34,7907457,0,0x0,8
tick,0x7ffc909efd34,7923462,0,0x0,8
tick,0x7ffc909efd34,7939304,0,0x0,8
tick,0x7ffc909efd34,7955104,0,0x0,8
tick,0x7ffc909efd34,7970137,0,0x0,8
tick,0x7ffc909efd34,7985821,0,0x0,8
tick,0x7ffc909efd34,8001167,0,0x0,8
tick,0x7ffc909efd34,8016840,0,0x0,8
tick,0x7ffc909efd34,8031980,0,0x0,8
tick,0x7ffc909efd34,8046659,0,0x0,8
tick,0x7ffc909efd34,8062189,0,0x0,8
tick,0x7ffc909efd34,8077895,0,0x0,8
tick,0x7ffc909efd34,8093408,0,0x0,8
tick,0x7ffc909efd34,8109484,0,0x0,8
tick,0x7ffc909efd34,8125223,0,0x0,8
tick,0x7ffc909efd34,8140876,0,0x0,8
tick,0x7ffc909efd34,8156191,0,0x0,8
tick,0x7ffc909efd34,8171452,0,0x0,8
tick,0x7ffc909efd34,8187208,0,0x0,8
tick,0x7ffc909efd34,8202602,0,0x0,8
tick,0x7ffc909efd34,8218547,0,0x0,8
tick,0x7ffc909efd34,8233969,0,0x0,8
tick,0x7ffc909efd34,8250263,0,0x0,8
tick,0x7ffc909efd34,8266130,0,0x0,8
tick,0x7ffc909efd34,8281643,0,0x0,8
tick,0x7ffc909efd34,8297270,0,0x0,8
tick,0x7ffc909efd34,8313517,0,0x0,8
tick,0x7ffc909efd34,8328991,0,0x0,8
tick,0x7ffc909efd34,8344137,0,0x0,8
tick,0x7ffc909efd34,8359475,0,0x0,8
tick,0x7ffc909efd34,8374922,0,0x0,8
tick,0x7ffc909efd34,8390980,0,0x0,8
tick,0x7ffc909efd34,8406825,0,0x0,8
tick,0x7ffc909efd34,8421936,0,0x0,8
tick,0x7ffc909efd34,8437238,0,0x0,8
tick,0x7ffc909efd34,8452577,0,0x0,8
tick,0x7ffc909efd34,8467938,0,0x0,8
tick,0x7ffc909efd34,8483542,0,0x0,8
tick,0x7ffc909efd34,8499536,0,0x0,8
tick,0x7ffc909efd34,8515843,0,0x0,8
tick,0x7ffc909efd34,8531287,0,0x0,8
tick,0x7ffc909efd34,8547334,0,0x0,8
tick,0x7ffc909efd34,8561914,0,0x0,8
tick,0x7ffc909efd34,8577654,0,0x0,8
tick,0x7ffc909efd34,8593095,0,0x0,8
tick,0x7ffc909efd34,8608288,0,0x0,8
tick,0x7ffc909efd34,8623756,0,0x0,8
tick,0x7ffc909efd34,8639382,0,0x0,8
tick,0x7ffc909efd34,8655196,0,0x0,8
tick,0x7ffc909efd34,8670962,0,0x0,8
tick,0x7ffc909efd34,8686727,0,0x0,8
tick,0x7ffc909efd34,8702203,0,0x0,8
tick,0x7ffc909efd34,8717537,0,0x0,8
tick,0x7ffc909efd34,8733155,0,0x0,8
tick,0x7ffc909efd34,8749792,0,0x0,8
tick,0x7ffc909efd34,8765432,0,0x0,8
tick,0x7ffc909efd34,8781517,0,0x0,8
tick,0x7ffc909efd34,8797203,0,0x0,8
tick,0x7ffc909efd34,8812832,0,0x0,8
tick,0x7ffc909efd34,8828645,0,0x0,8
tick,0x7ffc909efd34,8844428,0,0x0,8
tick,0x7ffc909efd34,8860686,0,0x0,8
tick,0x7ffc909efd34,8876683,0,0x0,8
tick,0x7ffc909efd34,8892408,0,0x0,8
tick,0x7ffc909efd34,8907922,0,0x0,8
tick,0x7ffc909efd34,8923105,0,0x0,8
tick,0x7ffc909efd34,8938584,0,0x0,8
tick,0x7ffc909efd34,8954149,0,0x0,8
tick,0x7ffc909efd34,8969596,0,0x0,8
tick,0x7ffc909efd34,8984745,0,0x0,8
tick,0x7ffc909efd34,9001002,0,0x0,8
tick,0x7ffc909efd34,9016470,0,0x0,8
tick,0x7ffc909efd34,9032253,0,0x0,8
tick,0x7ffc909efd34,9047447,0,0x0,8
tick,0x7ffc909efd34,9063287,0,0x0,8
tick,0x7ffc909efd34,9078750,0,0x0,8
tick,0x7ffc909efd34,9094403,0,0x0,8
tick,0x7ffc909efd34,9110144,0,0x0,8
tick,0x7ffc909efd34,9125317,0,0x0,8
tick,0x7ffc909efd34,9141457,0,0x0,8
tick,0x7ffc909efd34,9156969,0,0x0,8
tick,0x7ffc909efd34,9172355,0,0x0,8
tick,0x7ffc909efd34,9187955,0,0x0,8
tick,0x7ffc909efd34,9203378,0,0x0,8
tick,0x7ffc909efd34,9218835,0,0x0,8
tick,0x7ffc909efd34,9234222,0,0x0,8
tick,0x7ffc909efd34,9250222,0,0x0,8
tick,0x7ffc909efd34,9265358,0,0x0,8
tick,0x7ffc909efd34,9281182,0,0x0,8
tick,0x7ffc909efd34,9296705,0,0x0,8
tick,0x7ffc909efd34,9312266,0,0x0,8
tick,0x7ffc909efd34,9328313,0,0x0,8
tick,0x7ffc909efd34,9343141,0,0x0,8
tick,0x7ffc909efd34,9358227,0,0x0,8
tick,0x7ffc909efd34,9374477,0,0x0,8
tick,0x7ffc909efd34,9390238,0,0x0,8
tick,0x7ffc909efd34,9406048,0,0x0,8
tick,0x7ffc909efd34,9421814,0,0x0,8
tick,0x7ffc909efd34,9437475,0,0x0,8
tick,0x7ffc909efd34,9453116,0,0x0,8
tick,0x7ffc909efd34,9469197,0,0x0,8
tick,0x7ffc909efd34,9484972,0,0x0,8
tick,0x7ffc909efd34,9500827,0,0x0,8
tick,0x7ffc909efd34,9516370,0,0x0,8
tick,0x7ffc909efd34,9531894,0,0x0,8
tick,0x7ffc909efd34,9547950,0,0x0,8
tick,0x7ffc909efd34,9563087,0,0x0,8
tick,0x7ffc909efd34,9579171,0,0x0,8
tick,0x7ffc909efd34,9595174,0,0x0,8
tick,0x7ffc909efd34,9611298,0,0x0,8
tick,0x7ffc909efd34,9627389,0,0x0,8
tick,0x7ffc909efd34,9643440,0,0x0,8
tick,0x7ffc909efd34,9658971,0,0x0,8
tick,0x7ffc909efd34,9674368,0,0x0,8
tick,0x7ffc909efd34,9690088,0,0x0,8
tick,0x7ffc909efd34,9705110,0,0x0,8
tick,0x7ffc909efd34,9720412,0,0x0,8
tick,0x7ffc909efd34,9735673,0,0x0,8
tick,0x7ffc909efd34,9751992,0,0x0,8
tick,0x7ffc909efd34,9767865,0,0x0,8
tick,0x7ffc909efd34,9783515,0,0x0,8
tick,0x7ffc909efd34,9799465,0,0x0,8
tick,0x7ffc909efd34,9814861,0,0x0,8
tick,0x7ffc909efd34,9831074,0,0x0,8
tick,0x7ffc909efd34,9846151,0,0x0,8
tick,0x7ffc909efd34,9861947,0,0x0,8
tick,0x7ffc909efd34,9877848,0,0x0,8
tick,0x7ffc909efd34,9893305,0,0x0,8
tick,0x7ffc909efd34,9908412,0,0x0,8
tick,0x7ffc909efd34,9923725,0,0x0,8
tick,0x7ffc909efd34,9939821,0,0x0,8
tick,0x7ffc909efd34,9955751,0,0x0,8
tick,0x7ffc909efd34,9971461,0,0x0,8
tick,0x7ffc909efd34,9987645,0,0x0,8
tick,0x7ffc909efd34,10003429,0,0x0,8
tick,0x7ffc909efd34,10019214,0,0x0,8
tick,0x7ffc909efd34,10035020,0,0x0,8
tick,0x7ffc909efd34,10050542,0,0x0,8
tick,0x7ffc909efd34,10065692,0,0x0,8
tick,0x7ffc909efd34,10081073,0,0x0,8
tick,0x7ffc909efd34,10097015,0,0x0,8
tick,0x7ffc909efd34,10112480,0,0x0,8
tick,0x7ffc909efd34,10127815,0,0x0,8
tick,0x7ffc909efd34,10144071,0,0x0,8
tick,0x7ffc909efd34,10159393,0,0x0,8
tick,0x7ffc909efd34,10175439,0,0x0,8
tick,0x7ffc909efd34,10191119,0,0x0,8
tick,0x7ffc909efd34,10206835,0,0x0,8
tick,0x7ffc909efd34,10222447,0,0x0,8
tick,0x7ffc909efd34,10237397,0,0x0,8
tick,0x7ffc909efd34,10252716,0,0x0,8
tick,0x7ffc909efd34,10268312,0,0x0,8
tick,0x7ffc909efd34,10283604,0,0x0,8
tick,0x7ffc909efd34,10299424,0,0x0,8
tick,0x7ffc909efd34,10315219,0,0x0,8
tick,0x7ffc909efd34,10331235,0,0x0,8
tick,0x7ffc909efd34,10347249,0,0x0,8
tick,0x7ffc909efd34,10363011,0,0x0,8
tick,0x7ffc909efd34,10379113,0,0x0,8
tick,0x7ffc909efd34,10394687,0,0x0,8
tick,0x7ffc909efd34,10410779,0,0x0,8
tick,0x7ffc909efd34,10426604,0,0x0,8
tick,0x7ffc909efd34,10442530,0,0x0,8
tick,0x7ffc909efd34,10458160,0,0x0,8
tick,0x7ffc909efd34,10474113,0,0x0,8
tick,0x7ffc909efd34,10489679,0,0x0,8
tick,0x7ffc909efd34,10505514,0,0x0,8
tick,0x7ffc909efd34,10520749,0,0x0,8
tick,0x7ffc909efd34,10536173,0,0x0,8
tick,0x7ffc909efd34,10552056,0,0x0,8
tick,0x7ffc909efd34,10567841,0,0x0,8
tick,0x7ffc909efd34,10584213,0,0x0,8
tick,0x7ffc909efd34,10599092,0,0x0,8
tick,0x7ffc909efd34,10615121,0,0x0,8
tick,0x7ffc909efd34,10630397,0,0x0,8
tick,0x7ffc909efd34,10646553,0,0x0,8
tick,0x7ffc909efd34,10661841,0,0x0,8
tick,0x7ffc909efd34,10677471,0,0x0,8
tick,0x7ffc909efd34,10692725,0,0x0,8
tick,0x7ffc909efd34,10708326,0,0x0,8
tick,0x7ffc909efd34,10723425,0,0x0,8
tick,0x7ffc909efd34,10739168,0,0x0,8
tick,0x7ffc909efd34,10754896,0,0x0,8
tick,0x7ffc909efd34,10770489,0,0x0,8
tick,0x7ffc909efd34,10786608,0,0x0,8
tick,0x7ffc909efd34,10801873,0,0x0,8
tick,0x7ffc909efd34,10817410,0,0x0,8
tick,0x7ffc909efd34,10832877,0,0x0,8
tick,0x7ffc909efd34,10848314,0,0x0,8
tick,0x7ffc909efd34,10863865,0,0x0,8
tick,0x7ffc909efd34,10879580,0,0x0,8
tick,0x7ffc909efd34,10895977,0,0x0,8
tick,0x7ffc909efd34,10911961,0,0x0,8
tick,0x7ffc909efd34,10927682,0,0x0,8
tick,0x7ffc909efd34,10943575,0,0x0,8
tick,0x7ffc909efd34,10959313,0,0x0,8
tick,0x7ffc909efd34,10975013,0,0x0,8
tick,0x7ffc909efd34,10990847,0,0x0,8
tick,0x7ffc909efd34,11006763,0,0x0,8
tick,0x7ffc909efd34,11022340,0,0x0,8
tick,0x7ffc909efd34,11037280,0,0x0,8
tick,0x7ffc909efd34,11052391,0,0x0,8
tick,0x7ffc909efd34,11068441,0,0x0,8
tick,0x7ffc909efd34,11083711,0,0x0,8
tick,0x7ffc909efd34,11099011,0,0x0,8
tick,0x7ffc909efd34,11115039,0,0x0,8
tick,0x7ffc909efd34,11130362,0,0x0,8
tick,0x7ffc909efd34,11145802,0,0x0,8
tick,0x7ffc909efd34,11161498,0,0x0,8
tick,0x7ffc909efd34,11177036,0,0x0,8
tick,0x7ffc909efd34,11192538,0,0x0,8
tick,0x7ffc909efd34,11208020,0,0x0,8
tick,0x7ffc909efd34,11223764,0,0x0,8
tick,0x7ffc909efd34,11239866,0,0x0,8
tick,0x7ffc909efd34,11255897,0,0x0,8
tick,0x7ffc909efd34,11270368,0,0x0,8
tick,0x7ffc909efd34,11286473,0,0x0,8
tick,0x7ffc909efd34,11301943,0,0x0,8
tick,0x7ffc909efd34,11317585,0,0x0,8
tick,0x7ffc909efd34,11333551,0,0x0,8
tick,0x7ffc909efd34,11349166,0,0x0,8
tick,0x7ffc909efd34,11365147,0,0x0,8
tick,0x7ffc909efd34,11381129,0,0x0,8
tick,0x7ffc909efd34,11397086,0,0x0,8
tick,0x7ffc909efd34,11412826,0,0x0,8
tick,0x7ffc909efd34,11429053,0,0x0,8
tick,0x7ffc909efd34,11444601,0,0x0,8
tick,0x7ffc909efd34,11460109,0,0x0,8
tick,0x7ffc909efd34,11475220,0,0x0,8
tick,0x7ffc909efd34,11490629,0,0x0,8
tick,0x7ffc909efd34,11506190,0,0x0,8
tick,0x7ffc909efd34,11522064,0,0x0,8
tick,0x7ffc909efd34,11536810,0,0x0,8
tick,0x7ffc909efd34,11552085,0,0x0,8
tick,0x7ffc909efd34,11568006,0,0x0,8
tick,0x7ffc909efd34,11583290,0,0x0,8
tick,0x7ffc909efd34,11598725,0,0x0,8
tick,0x7ffc909efd34,11614231,0,0x0,8
tick,0x7ffc909efd34,11630071,0,0x0,8
tick,0x7ffc909efd34,11645470,0,0x0,8
tick,0x7ffc909efd34,11661694,0,0x0,8
tick,0x7ffc909efd34,11677685,0,0x0,8
tick,0x7ffc909efd34,11692994,0,0x0,8
tick,0x7ffc909efd34,11708528,0,0x0,8
tick,0x7ffc909efd34,11724531,0,0x0,8
tick,0x7ffc909efd34,11740315,0,0x0,8
tick,0x7ffc909efd34,11755757,0,0x0,8
tick,0x7ffc909efd34,11770852,0,0x0,8
tick,0x7ffc909efd34,11786098,0,0x0,8
tick,0x7ffc909efd34,11801446,0,0x0,8
tick,0x7ffc909efd34,11817086,0,0x0,8
tick,0x7ffc909efd34,11832400,0,0x0,8
tick,0x7ffc909efd34,11847707,0,0x0,8
tick,0x7ffc909efd34,11863490,0,0x0,8
tick,0x7ffc909efd34,11878679,0,0x0,8
tick,0x7ffc909efd34,11894205,0,0x0,8
tick,0x7ffc909efd34,11909337,0,0x0,8
tick,0x7ffc909efd34,11925217,0,0x0,8
tick,0x7ffc909efd34,11940378,0,0x0,8
tick,0x7ffc909efd34,11956355,0,0x0,8
tick,0x7ffc909efd34,11971824,0,0x0,8
tick,0x7ffc909efd34,11987165,0,0x0,8
tick,0x7ffc909efd34,12002836,0,0x0,8
tick,0x7ffc909efd34,12018480,0,0x0,8
tick,0x7ffc909efd34,12034693,0,0x0,8
tick,0x7ffc909efd34,12050237,0,0x0,8
tick,0x7ffc909efd34,12065769,0,0x0,8
tick,0x7ffc909efd34,12081488,0,0x0,8
tick,0x7ffc909efd34,12097649,0,0x0,8
tick,0x7ffc909efd34,12113048,0,0x0,8
tick,0x7ffc909efd34,12128709,0,0x0,8
tick,0x7ffc909efd34,12144477,0,0x0,8
tick,0x7ffc909efd34,12159999,0,0x0,8
tick,0x7ffc909efd34,12175653,0,0x0,8
tick,0x7ffc909efd34,12191321,0,0x0,8
tick,0x7ffc909efd34,12207066,0,0x0,8
tick,0x7ffc909efd34,12222680,0,0x0,8
tick,0x7ffc909efd34,12238539,0,0x0,8
tick,0x7ffc909efd34,12253681,0,0x0,8
tick,0x7ffc909efd34,12269893,0,0x0,8
tick,0x7ffc909efd34,12285129,0,0x0,8
tick,0x7ffc909efd34,12300913,0,0x0,8
tick,0x7ffc909efd34,12316039,0,0x0,8
tick,0x7ffc909efd34,12331520,0,0x0,8
tick,0x7ffc909efd34,12347401,0,0x0,8
tick,0x7ffc909efd34,12363090,0,0x0,8
tick,0x7ffc909efd34,12378295,0,0x0,8
tick,0x7ffc909efd34,12393696,0,0x0,8
tick,0x7ffc909efd34,12409852,0,0x0,8
tick,0x7ffc909efd34,12425258,0,0x0,8
tick,0x7ffc909efd34,12441089,0,0x0,8
tick,0x7ffc909efd34,12456931,0,0x0,8
tick,0x7ffc909efd34,12472313,0,0x0,8
tick,0x7ffc909efd34,12488376,0,0x0,8
tick,0x7ffc909efd34,12503638,0,0x0,8
tick,0x7ffc909efd34,12518525,0,0x0,8
tick,0x7ffc909efd34,12534192,0,0x0,8
tick,0x7ffc909efd34,12550543,0,0x0,8
tick,0x7ffc909efd34,12566116,0,0x0,8
tick,0x7ffc909efd34,12581391,0,0x0,8
tick,0x7ffc909efd34,12597411,0,0x0,8
tick,0x7ffc909efd34,12612653,0,0x0,8
tick,0x7ffc909efd34,12627913,0,0x0,8
tick,0x7ffc909efd34,12643511,0,0x0,8
tick,0x7ffc909efd34,12659474,0,0x0,8
tick,0x7ffc909efd34,12674296,0,0x0,8
tick,0x7ffc909efd34,12689264,0,0x0,8
tick,0x7ffc909efd34,12704336,0,0x0,8
tick,0x7ffc909efd34,12720562,0,0x0,8
tick,0x7ffc909efd34,12736076,0,0x0,8
tick,0x7ffc909efd34,12751666,0,0x0,8
tick,0x7ffc909efd34,12767442,0,0x0,8
tick,0x7ffc909efd34,12783060,0,0x0,8
tick,0x7ffc909efd34,12798296,0,0x0,8
tick,0x7ffc909efd34,12813302,0,0x0,8
tick,0x7ffc909efd34,12829093,0,0x0,8
tick,0x7ffc909efd34,12845097,0,0x0,8
tick,0x7ffc909efd34,12860804,0,0x0,8
tick,0x7ffc909efd34,12876887,0,0x0,8
tick,0x7ffc909efd34,12892866,0,0x0,8
tick,0x7ffc909efd34,12908190,0,0x0,8
tick,0x7ffc909efd34,12924430,0,0x0,8
tick,0x7ffc909efd34,12940557,0,0x0,8
tick,0x7ffc909efd34,12956099,0,0x0,8
tick,0x7ffc909efd34,12972003,0,0x0,8
tick,0x7ffc909efd34,12987503,0,0x0,8
tick,0x7ffc909efd34,13003252,0,0x0,8
tick,0x7ffc909efd34,13019516,0,0x0,8
tick,0x7ffc909efd34,13035129,0,0x0,8
tick,0x7ffc909efd34,13050271,0,0x0,8
tick,0x7ffc909efd34,13066094,0,0x0,8
tick,0x7ffc909efd34,13081477,0,0x0,8
tick,0x7ffc909efd34,13096632,0,0x0,8
tick,0x7ffc909efd34,13112285,0,0x0,8
tick,0x7ffc909efd34,13127924,0,0x0,8
tick,0x7ffc909efd34,13143786,0,0x0,8
tick,0x7ffc909efd34,13160067,0,0x0,8
tick,0x7ffc909efd34,13175598,0,0x0,8
tick,0x7ffc909efd34,13191473,0,0x0,8
tick,0x7ffc909efd34,13207165,0,0x0,8
tick,0x7ffc909efd34,13222487,0,0x0,8
tick,0x7ffc909efd34,13238541,0,0x0,8
tick,0x7ffc909efd34,13253581,0,0x0,8
tick,0x7ffc909efd34,13269510,0,0x0,8
tick,0x7ffc909efd34,13285879,0,0x0,8
tick,0x7ffc909efd34,13301191,0,0x0,8
tick,0x7ffc909efd34,13316272,0,0x0,8
tick,0x7ffc909efd34,13333069,0,0x0,8
tick,0x7ffc909efd34,13347233,0,0x0,8
tick,0x7ffc909efd34,13362451,0,0x0,8
tick,0x7ffc909efd34,13383051,0,0x0,8
tick,0x7ffc909efd34,13394518,0,0x0,8
tick,0x7ffc909efd34,13410268,0,0x0,8
tick,0x7ffc909efd34,13426380,0,0x0,8
tick,0x7ffc909efd34,13442733,0,0x0,8
tick,0x7ffc909efd34,13458613,0,0x0,8
tick,0x7ffc909efd34,13474370,0,0x0,8
tick,0x7ffc909efd34,13490421,0,0x0,8
tick,0x7ffc909efd34,13506384,0,0x0,8
tick,0x7ffc909efd34,13522752,0,0x0,8
tick,0x7ffc909efd34,13539456,0,0x0,8
tick,0x7ffc909efd34,13554390,0,0x0,8
tick,0x7ffc909efd34,13569282,0,0x0,8
tick,0x7ffc909efd34,13585259,0,0x0,8
tick,0x7ffc909efd34,13601236,0,0x0,8
tick,0x7ffc909efd34,13617302,0,0x0,8
tick,0x7ffc909efd34,13633313,0,0x0,8
tick,0x7ffc909efd34,13649442,0,0x0,8
tick,0x7ffc909efd34,13664432,0,0x0,8
tick,0x7ffc909efd34,13679480,0,0x0,8
tick,0x7ffc909efd34,13695069,0,0x0,8
tick,0x7ffc909efd34,13710959,0,0x0,8
tick,0x7ffc909efd34,13726749,0,0x0,8
tick,0x7ffc909efd34,13742540,0,0x0,8
tick,0x7ffc909efd34,13758205,0,0x0,8
tick,0x7ffc909efd34,13774293,0,0x0,8
tick,0x7ffc909efd34,13789921,0,0x0,8
tick,0x7ffc909efd34,13806726,0,0x0,8
tick,0x7ffc909efd34,13820482,0,0x0,8
tick,0x7ffc909efd34,13835924,0,0x0,8
tick,0x7ffc909efd34,13851620,0,0x0,8
tick,0x7ffc909efd34,13867109,0,0x0,8
tick,0x7ffc909efd34,13882624,0,0x0,8
tick,0x7ffc909efd34,13898316,0,0x0,8
tick,0x7ffc909efd34,13913757,0,0x0,8
tick,0x7ffc909efd34,13929400,0,0x0,8
tick,0x7ffc909efd34,13945686,0,0x0,8
tick,0x7ffc909efd34,13961623,0,0x0,8
tick,0x7ffc909efd34,13977248,0,0x0,8
tick,0x7ffc909efd34,13993382,0,0x0,8
tick,0x7ffc909efd34,14008826,0,0x0,8
tick,0x7ffc909efd34,14024342,0,0x0,8
tick,0x7ffc909efd34,14039448,0,0x0,8
tick,0x7ffc909efd34,14056098,0,0x0,8
tick,0x7ffc909efd34,14070187,0,0x0,8
tick,0x7ffc909efd34,14085611,0,0x0,8
tick,0x7ffc909efd34,14102009,0,0x0,8
tick,0x7ffc909efd34,14117615,0,0x0,8
tick,0x7ffc909efd34,14133450,0,0x0,8
tick,0x7ffc909efd34,14148992,0,0x0,8
tick,0x7ffc909efd34,14163980,0,0x0,8
tick,0x7ffc909efd34,14179291,0,0x0,8
tick,0x7ffc909efd34,14194564,0,0x0,8
tick,0x7ffc909efd34,14210946,0,0x0,8
tick,0x7ffc909efd34,14225932,0,0x0,8
tick,0x7ffc909efd34,14241856,0,0x0,8
tick,0x7ffc909efd34,14257528,0,0x0,8
tick,0x7ffc909efd34,14273540,0,0x0,8
tick,0x7ffc909efd34,14288886,0,0x0,8
tick,0x7ffc909efd34,14304820,0,0x0,8
tick,0x7ffc909efd34,14320198,0,0x0,8
tick,0x7ffc909efd34,14336173,0,0x0,8
tick,0x7ffc909efd34,14351415,0,0x0,8
tick,0x7ffc909efd34,14366818,0,0x0,8
tick,0x7ffc909efd34,14382100,0,0x0,8
tick,0x7ffc909efd34,14397965,0,0x0,8
tick,0x7ffc909efd34,14413498,0,0x0,8
tick,0x7ffc909efd34,14429611,0,0x0,8
tick,0x7ffc909efd34,14445326,0,0x0,8
tick,0x7ffc909efd34,14461341,0,0x0,8
tick,0x7ffc909efd34,14477205,0,0x0,8
tick,0x7ffc909efd34,14493360,0,0x0,8
tick,0x7ffc909efd34,14508767,0,0x0,8
tick,0x7ffc909efd34,14524460,0,0x0,8
tick,0x7ffc909efd34,14539734,0,0x0,8
tick,0x7ffc909efd34,14555644,0,0x0,8
tick,0x7ffc909efd34,14572088,0,0x0,8
tick,0x7ffc909efd34,14586858,0,0x0,8
tick,0x7ffc909efd34,14602334,0,0x0,8
tick,0x7ffc909efd34,14617782,0,0x0,8
tick,0x7ffc909efd34,14633223,0,0x0,8
tick,0x7ffc909efd34,14648854,0,0x0,8
tick,0x7ffc909efd34,14664223,0,0x0,8
tick,0x7ffc909efd34,14680209,0,0x0,8
tick,0x7ffc909efd34,14695634,0,0x0,8
tick,0x7ffc909efd34,14710907,0,0x0,8
tick,0x7ffc909efd34,14726379,0,0x0,8
tick,0x7ffc909efd34,14741808,0,0x0,8
tick,0x7ffc909efd34,14756915,0,0x0,8
tick,0x7ffc909efd34,14772110,0,0x0,8
tick,0x7ffc909efd34,14787844,0,0x0,8
tick,0x7ffc909efd34,14803932,0,0x0,8
tick,0x7ffc909efd34,14819685,0,0x0,8
tick,0x7ffc909efd34,14834729,0,0x0,8
tick,0x7ffc909efd34,14850605,0,0x0,8
tick,0x7ffc909efd34,14866313,0,0x0,8
tick,0x7ffc909efd34,14881795,0,0x0,8
tick,0x7ffc909efd34,14897411,0,0x0,8
tick,0x7ffc909efd34,14913130,0,0x0,8
tick,0x7ffc909efd34,14928952,0,0x0,8
tick,0x7ffc909efd34,14944933,0,0x0,8
tick,0x7ffc909efd34,14961012,0,0x0,8
tick,0x7ffc909efd34,14976451,0,0x0,8
tick,0x7ffc909efd34,14991926,0,0x0,8
tick,0x7ffc909efd34,15007742,0,0x0,8
tick,0x7ffc909efd34,15023352,0,0x0,8
tick,0x7ffc909efd34,15038864,0,0x0,8
tick,0x7ffc909efd34,15054734,0,0x0,8
tick,0x7ffc909efd34,15069821,0,0x0,8
tick,0x7ffc909efd34,15085759,0,0x0,8
tick,0x7ffc909efd34,15100773,0,0x0,8
tick,0x7ffc909efd34,15116368,0,0x0,8
tick,0x7ffc909efd34,15132100,0,0x0,8
tick,0x7ffc909efd34,15147767,0,0x0,8
tick,0x7ffc909efd34,15163241,0,0x0,8
tick,0x7ffc909efd34,15179285,0,0x0,8
tick,0x7ffc909efd34,15194025,0,0x0,8
tick,0x7ffc909efd34,15208927,0,0x0,8
tick,0x7ffc909efd34,15224782,0,0x0,8
tick,0x7ffc909efd34,15240264,0,0x0,8
tick,0x7ffc909efd34,15255807,0,0x0,8
tick,0x7ffc909efd34,15271250,0,0x0,8
tick,0x7ffc909efd34,15286482,0,0x0,8
tick,0x7ffc909efd34,15302271,0,0x0,8
tick,0x7ffc909efd34,15317978,0,0x0,8
tick,0x7ffc909efd34,15333153,0,0x0,8
tick,0x7ffc909efd34,15348092,0,0x0,8
tick,0x7ffc909efd34,15363700,0,0x0,8
tick,0x7ffc909efd34,15379350,0,0x0,8
tick,0x7ffc909efd34,15395246,0,0x0,8
tick,0x7ffc909efd34,15410824,0,0x0,8
tick,0x7ffc909efd34,15426296,0,0x0,8
tick,0x7ffc909efd34,15442470,0,0x0,8
tick,0x7ffc909efd34,15458144,0,0x0,8
tick,0x7ffc909efd34,15474087,0,0x0,8
tick,0x7ffc909efd34,15490046,0,0x0,8
tick,0x7ffc909efd34,15505215,0,0x0,8
tick,0x7ffc909efd34,15521077,0,0x0,8
tick,0x7ffc909efd34,15536396,0,0x0,8
tick,0x7ffc909efd34,15552009,0,0x0,8
tick,0x7ffc909efd34,15567626,0,0x0,8
tick,0x7ffc909efd34,15583064,0,0x0,8
tick,0x7ffc909efd34,15598697,0,0x0,8
tick,0x7ffc909efd34,15614268,0,0x0,8
tick,0x7ffc909efd34,15630650,0,0x0,8
tick,0x7ffc909efd34,15646488,0,0x0,8
tick,0x7ffc909efd34,15661993,0,0x0,8
tick,0x7ffc909efd34,15677341,0,0x0,8
tick,0x7ffc909efd34,15692689,0,0x0,8
tick,0x7ffc909efd34,15708684,0,0x0,8
tick,0x7ffc909efd34,15724832,0,0x0,8
tick,0x7ffc909efd34,15740125,0,0x0,8
tick,0x7ffc909efd34,15755821,0,0x0,8
tick,0x7ffc909efd34,15771419,0,0x0,8
tick,0x7ffc909efd34,15786250,0,0x0,8
tick,0x7ffc909efd34,15801793,0,0x0,8
tick,0x7ffc909efd34,15816986,0,0x0,8
tick,0x7ffc909efd34,15832698,0,0x0,8
tick,0x7ffc909efd34,15849037,0,0x0,8
tick,0x7ffc909efd34,15863429,0,0x0,8
tick,0x7ffc909efd34,15879439,0,0x0,8
tick,0x7ffc909efd34,15895086,0,0x0,8
tick,0x7ffc909efd34,15910367,0,0x0,8
tick,0x7ffc909efd34,15925849,0,0x0,8
tick,0x7ffc909efd34,15941865,0,0x0,8
tick,0x7ffc909efd34,15957451,0,0x0,8
tick,0x7ffc909efd34,15973328,0,0x0,8
tick,0x7ffc909efd34,15989118,0,0x0,8
tick,0x7ffc909efd34,16004681,0,0x0,8
tick,0x7ffc909efd34,16019584,0,0x0,8
tick,0x7ffc909efd34,16034753,0,0x0,8
tick,0x7ffc909efd34,16050708,0,0x0,8
tick,0x7ffc909efd34,16066767,0,0x0,8
tick,0x7ffc909efd34,16082726,0,0x0,8
tick,0x7ffc909efd34,16098258,0,0x0,8
tick,0x7ffc909efd34,16114033,0,0x0,8
tick,0x7ffc909efd34,16129975,0,0x0,8
tick,0x7ffc909efd34,16145382,0,0x0,8
tick,0x7ffc909efd34,16161110,0,0x0,8
tick,0x7ffc909efd34,16176315,0,0x0,8
tick,0x7ffc909efd34,16191886,0,0x0,8
tick,0x7ffc909efd34,16207519,0,0x0,8
tick,0x7ffc909efd34,16222688,0,0x0,8
tick,0x7ffc909efd34,16238083,0,0x0,8
tick,0x7ffc909efd34,16253345,0,0x0,8
tick,0x7ffc909efd34,16269487,0,0x0,8
tick,0x7ffc909efd34,16285436,0,0x0,8
tick,0x7ffc909efd34,16301239,0,0x0,8
tick,0x7ffc909efd34,16316552,0,0x0,8
tick,0x7ffc909efd34,16332615,0,0x0,8
tick,0x7ffc909efd34,16348521,0,0x0,8
tick,0x7ffc909efd34,16364092,0,0x0,8
tick,0x7ffc909efd34,16379590,0,0x0,8
tick,0x7ffc909efd34,16395348,0,0x0,8
tick,0x7ffc909efd34,16410283,0,0x0,8
tick,0x7ffc909efd34,16425219,0,0x0,8
tick,0x7ffc909efd34,16440709,0,0x0,8
tick,0x7ffc909efd34,16455858,0,0x0,8
tick,0x7ffc909efd34,16471248,0,0x0,8
tick,0x7ffc909efd34,16486271,0,0x0,8
tick,0x7ffc909efd34,16501645,0,0x0,8
tick,0x7ffc909efd34,16517695,0,0x0,8
tick,0x7ffc909efd34,16533109,0,0x0,8
tick,0x7ffc909efd34,16565116,0,0x0,8
tick,0x7ffc909efd34,16600445,0,0x0,8
tick,0x7ffc909efd34,16617827,0,0x0,8
tick,0x7ffc909efd34,16628133,0,0x0,8
tick,0x7ffc909efd34,16644179,0,0x0,8
tick,0x7ffc909efd34,16660131,0,0x0,8
tick,0x7ffc909efd34,16676143,0,0x0,8
tick,0x7ffc909efd34,16692251,0,0x0,8
tick,0x7ffc909efd34,16707894,0,0x0,8
tick,0x7ffc909efd34,16723711,0,0x0,8
tick,0x7ffc909efd34,16738974,0,0x0,8
tick,0x7ffc909efd34,16755295,0,0x0,8
tick,0x7ffc909efd34,16770297,0,0x0,8
tick,0x7ffc909efd34,16786068,0,0x0,8
tick,0x7ffc909efd34,16801894,0,0x0,8
tick,0x7ffc909efd34,16817332,0,0x0,8
tick,0x7ffc909efd34,16832202,0,0x0,8
tick,0x7ffc909efd34,16848015,0,0x0,8
tick,0x7ffc909efd34,16863729,0,0x0,8
tick,0x7ffc909efd34,16878923,0,0x0,8
tick,0x7ffc909efd34,16894323,0,0x0,8
tick,0x7ffc909efd34,16909762,0,0x0,8
tick,0x7ffc909efd34,16925650,0,0x0,8
tick,0x7ffc909efd34,16941664,0,0x0,8
tick,0x7ffc909efd34,16957141,0,0x0,8
tick,0x7ffc909efd34,16972369,0,0x0,8
tick,0x7ffc909efd34,16988183,0,0x0,8
tick,0x7ffc909efd34,17003378,0,0x0,8
tick,0x7ffc909efd34,17019294,0,0x0,8
tick,0x7ffc909efd34,17035480,0,0x0,8
tick,0x7ffc909efd34,17050993,0,0x0,8
tick,0x7ffc909efd34,17067133,0,0x0,8
tick,0x7ffc909efd34,17082824,0,0x0,8
tick,0x7ffc909efd34,17098327,0,0x0,8
tick,0x7ffc909efd34,17113559,0,0x0,8
tick,0x7ffc909efd34,17129443,0,0x0,8
tick,0x7ffc909efd34,17144985,0,0x0,8
tick,0x7ffc909efd34,17160285,0,0x0,8
tick,0x7ffc909efd34,17176347,0,0x0,8
tick,0x7ffc909efd34,17191624,0,0x0,8
tick,0x7ffc909efd34,17213718,0,0x0,8
tick,0x7ffc909efd34,17224595,0,0x0,8
tick,0x7ffc909efd34,17239456,0,0x0,8
tick,0x7ffc909efd34,17255289,0,0x0,8
tick,0x7ffc909efd34,17269870,0,0x0,8
tick,0x7ffc909efd34,17285651,0,0x0,8
tick,0x7ffc909efd34,17301491,0,0x0,8
tick,0x7ffc909efd34,17317566,0,0x0,8
tick,0x7ffc909efd34,17334850,0,0x0,8
tick,0x7ffc909efd34,17348725,0,0x0,8
tick,0x7ffc909efd34,17364188,0,0x0,8
tick,0x7ffc909efd34,17382111,0,0x0,8
tick,0x7ffc909efd34,17394374,0,0x0,8
tick,0x7ffc909efd34,17410362,0,0x0,8
tick,0x7ffc909efd34,17425424,0,0x0,8
tick,0x7ffc909efd34,17441340,0,0x0,8
tick,0x7ffc909efd34,17457611,0,0x0,8
tick,0x7ffc909efd34,17473314,0,0x0,8
tick,0x7ffc909efd34,17489414,0,0x0,8
tick,0x7ffc909efd34,17504316,0,0x0,8
tick,0x7ffc909efd34,17519638,0,0x0,8
tick,0x7ffc909efd34,17535372,0,0x0,8
tick,0x7ffc909efd34,17551484,0,0x0,8
tick,0x7ffc909efd34,17566838,0,0x0,8
tick,0x7ffc909efd34,17582439,0,0x0,8
tick,0x7ffc909efd34,17598167,0,0x0,8
tick,0x7ffc909efd34,17613716,0,0x0,8
tick,0x7ffc909efd34,17629499,0,0x0,8
tick,0x7ffc909efd34,17644864,0,0x0,8
tick,0x7ffc909efd34,17660385,0,0x0,8
tick,0x7ffc909efd34,17675827,0,0x0,8
tick,0x7ffc909efd34,17691103,0,0x0,8
tick,0x7ffc909efd34,17706791,0,0x0,8
tick,0x7ffc909efd34,17723189,0,0x0,8
tick,0x7ffc909efd34,17738364,0,0x0,8
tick,0x7ffc909efd34,17752098,0,0x0,8
tick,0x7ffc909efd34,17768069,0,0x0,8
tick,0x7ffc909efd34,17783007,0,0x0,8
tick,0x7ffc909efd34,17800074,0,0x0,8
tick,0x7ffc909efd34,17814131,0,0x0,8
tick,0x7ffc909efd34,17829781,0,0x0,8
tick,0x7ffc909efd34,17844954,0,0x0,8
tick,0x7ffc909efd34,17860418,0,0x0,8
tick,0x7ffc909efd34,17874839,0,0x0,8
tick,0x7ffc909efd34,17889577,0,0x0,8
tick,0x7ffc909efd34,17904846,0,0x0,8
tick,0x7ffc909efd34,17922293,0,0x0,8
tick,0x7ffc909efd34,17936803,0,0x0,8
tick,0x7ffc909efd34,17951600,0,0x0,8
tick,0x7ffc909efd34,17967608,0,0x0,8
tick,0x7ffc909efd34,17983607,0,0x0,8
tick,0x7ffc909efd34,17999588,0,0x0,8
tick,0x7ffc909efd34,18015597,0,0x0,8
tick,0x7ffc909efd34,18031701,0,0x0,8
tick,0x7ffc909efd34,18046884,0,0x0,8
tick,0x7ffc909efd34,18062584,0,0x0,8
tick,0x7ffc909efd34,18078031,0,0x0,8
tick,0x7ffc909efd34,18093421,0,0x0,8
tick,0x7ffc909efd34,18109511,0,0x0,8
tick,0x7ffc909efd34,18124788,0,0x0,8
tick,0x7ffc909efd34,18140951,0,0x0,8
tick,0x7ffc909efd34,18156141,0,0x0,8
tick,0x7ffc909efd34,18171389,0,0x0,8
tick,0x7ffc909efd34,18187431,0,0x0,8
tick,0x7ffc909efd34,18203211,0,0x0,8
tick,0x7ffc909efd34,18218857,0,0x0,8
tick,0x7ffc909efd34,18234864,0,0x0,8
tick,0x7ffc909efd34,18250969,0,0x0,8
tick,0x7ffc909efd34,18265905,0,0x0,8
tick,0x7ffc909efd34,18281879,0,0x0,8
tick,0x7ffc909efd34,18297243,0,0x0,8
tick,0x7ffc909efd34,18313150,0,0x0,8
tick,0x7ffc909efd34,18328228,0,0x0,8
tick,0x7ffc909efd34,18344156,0,0x0,8
tick,0x7ffc909efd34,18360134,0,0x0,8
tick,0x7ffc909efd34,18386732,0,0x0,8
tick,0x7ffc909efd34,18391097,0,0x0,8
tick,0x7ffc909efd34,18407022,0,0x0,8
tick,0x7ffc909efd34,18421173,0,0x0,8
tick,0x7ffc909efd34,18438479,0,0x0,8
tick,0x7ffc909efd34,18453150,0,0x0,8
tick,0x7ffc909efd34,18469257,0,0x0,8
tick,0x7ffc909efd34,18484037,0,0x0,8
tick,0x7ffc909efd34,18498977,0,0x0,8
tick,0x7ffc909efd34,18514914,0,0x0,8
tick,0x7ffc909efd34,18531120,0,0x0,8
tick,0x7ffc909efd34,18546157,0,0x0,8
tick,0x7ffc909efd34,18560886,0,0x0,8
tick,0x7ffc909efd34,18576476,0,0x0,8
tick,0x7ffc909efd34,18591729,0,0x0,8
tick,0x7ffc909efd34,18607031,0,0x0,8
tick,0x7ffc909efd34,18622902,0,0x0,8
tick,0x7ffc909efd34,18638216,0,0x0,8
tick,0x7ffc909efd34,18652967,0,0x0,8
tick,0x7ffc909efd34,18668276,0,0x0,8
tick,0x7ffc909efd34,18684185,0,0x0,8
tick,0x7ffc909efd34,18700242,0,0x0,8
tick,0x7ffc909efd34,18716120,0,0x0,8
tick,0x7ffc909efd34,18731917,0,0x0,8
tick,0x7ffc909efd34,18747519,0,0x0,8
tick,0x7ffc909efd34,18763136,0,0x0,8
tick,0x7ffc909efd34,18778455,0,0x0,8
tick,0x7ffc909efd34,18793660,0,0x0,8
tick,0x7ffc909efd34,18809133,0,0x0,8
tick,0x7ffc909efd34,18824478,0,0x0,8
tick,0x7ffc909efd34,18840229,0,0x0,8
tick,0x7ffc909efd34,18856028,0,0x0,8
tick,0x7ffc909efd34,18871955,0,0x0,8
tick,0x7ffc909efd34,18888128,0,0x0,8
tick,0x7ffc909efd34,18902634,0,0x0,8
tick,0x7ffc909efd34,18917808,0,0x0,8
tick,0x7ffc909efd34,18933951,0,0x0,8
tick,0x7ffc909efd34,18949915,0,0x0,8
tick,0x7ffc909efd34,18965088,0,0x0,8
tick,0x7ffc909efd34,18980034,0,0x0,8
tick,0x7ffc909efd34,18996010,0,0x0,8
tick,0x7ffc909efd34,19011932,0,0x0,8
tick,0x7ffc909efd34,19039491,0,0x0,8
tick,0x7ffc909efd34,19043737,0,0x0,8
tick,0x7ffc909efd34,19058868,0,0x0,8
tick,0x7ffc909efd34,19074888,0,0x0,8
tick,0x7ffc909efd34,19090884,0,0x0,8
tick,0x7ffc909efd34,19106896,0,0x0,8
tick,0x7ffc909efd34,19122551,0,0x0,8
tick,0x7ffc909efd34,19138204,0,0x0,8
tick,0x7ffc909efd34,19154384,0,0x0,8
tick,0x7ffc909efd34,19169917,0,0x0,8
tick,0x7ffc909efd34,19185829,0,0x0,8
tick,0x7ffc909efd34,19201365,0,0x0,8
tick,0x7ffc909efd34,19216419,0,0x0,8
tick,0x7ffc909efd34,19232431,0,0x0,8
tick,0x7ffc909efd34,19248336,0,0x0,8
tick,0x7ffc909efd34,19264323,0,0x0,8
tick,0x7ffc909efd34,19280162,0,0x0,8
tick,0x7ffc909efd34,19296203,0,0x0,8
tick,0x7ffc909efd34,19311539,0,0x0,8
tick,0x7ffc909efd34,19327074,0,0x0,8
tick,0x7ffc909efd34,19343020,0,0x0,8
tick,0x7ffc909efd34,19358504,0,0x0,8
tick,0x7ffc909efd34,19373478,0,0x0,8
tick,0x7ffc909efd34,19388526,0,0x0,8
tick,0x7ffc909efd34,19406631,0,0x0,8
tick,0x7ffc909efd34,19419139,0,0x0,8
tick,0x7ffc909efd34,19434445,0,0x0,8
tick,0x7ffc909efd34,19449312,0,0x0,8
tick,0x7ffc909efd34,19464292,0,0x0,8
tick,0x7ffc909efd34,19480458,0,0x0,8
tick,0x7ffc909efd34,19495888,0,0x0,8
tick,0x7ffc909efd34,19511312,0,0x0,8
tick,0x7ffc909efd34,19527252,0,0x0,8
tick,0x7ffc909efd34,19542728,0,0x0,8
tick,0x7ffc909efd34,19558711,0,0x0,8
tick,0x7ffc909efd34,19573746,0,0x0,8
tick,0x7ffc909efd34,19589958,0,0x0,8
tick,0x7ffc909efd34,19605096,0,0x0,8
tick,0x7ffc909efd34,19621724,0,0x0,8
tick,0x7ffc909efd34,19636155,0,0x0,8
tick,0x7ffc909efd34,19651374,0,0x0,8
tick,0x7ffc909efd34,19666818,0,0x0,8
tick,0x7ffc909efd34,19683022,0,0x0,8
tick,0x7ffc909efd34,19699074,0,0x0,8
tick,0x7ffc909efd34,19715201,0,0x0,8
tick,0x7ffc909efd34,19730865,0,0x0,8
tick,0x7ffc909efd34,19745900,0,0x0,8
tick,0x7ffc909efd34,19760732,0,0x0,8
tick,0x7ffc909efd34,19775700,0,0x0,8
tick,0x7ffc909efd34,19791483,0,0x0,8
tick,0x7ffc909efd34,19806540,0,0x0,8
tick,0x7ffc909efd34,19822744,0,0x0,8
tick,0x7ffc909efd34,19840915,0,0x0,8
tick,0x7ffc909efd34,19852798,0,0x0,8
tick,0x7ffc909efd34,19867665,0,0x0,8
tick,0x7ffc909efd34,19883804,0,0x0,8
tick,0x7ffc909efd34,19899424,0,0x0,8
tick,0x7ffc909efd34,19915033,0,0x0,8
tick,0x7ffc909efd34,19930718,0,0x0,8
tick,0x7ffc909efd34,19945660,0,0x0,8
tick,0x7ffc909efd34,19960987,0,0x0,8
tick,0x7ffc909efd34,19983233,0,0x0,8
tick,0x7ffc909efd34,19992763,0,0x0,8
tick,0x7ffc909efd34,20008454,0,0x0,8
tick,0x7ffc909efd34,20024022,0,0x0,8
tick,0x7ffc909efd34,20041331,0,0x0,8
tick,0x7ffc909efd34,20056253,0,0x0,8
tick,0x7ffc909efd34,20072141,0,0x0,8
tick,0x7ffc909efd34,20089886,0,0x0,8
tick,0x7ffc909efd34,20103107,0,0x0,8
tick,0x7ffc909efd34,20119158,0,0x0,8
tick,0x7ffc909efd34,20134339,0,0x0,8
tick,0x7ffc909efd34,20149463,0,0x0,8
tick,0x7ffc909efd34,20165201,0,0x0,8
tick,0x7ffc909efd34,20180694,0,0x0,8
tick,0x7ffc909efd34,20196757,0,0x0,8
tick,0x7ffc909efd34,20211890,0,0x0,8
tick,0x7ffc909efd34,20227850,0,0x0,8
tick,0x7ffc909efd34,20243014,0,0x0,8
tick,0x7ffc909efd34,20259146,0,0x0,8
tick,0x7ffc909efd34,20275296,0,0x0,8
tick,0x7ffc909efd34,20290851,0,0x0,8
tick,0x7ffc909efd34,20306470,0,0x0,8
tick,0x7ffc909efd34,20322373,0,0x0,8
tick,0x7ffc909efd34,20337369,0,0x0,8
tick,0x7ffc909efd34,20352589,0,0x0,8
tick,0x7ffc909efd34,20368721,0,0x0,8
tick,0x7ffc909efd34,20384121,0,0x0,8
tick,0x7ffc909efd34,20399648,0,0x0,8
tick,0x7ffc909efd34,20415244,0,0x0,8
tick,0x7ffc909efd34,20430551,0,0x0,8
tick,0x7ffc909efd34,20445639,0,0x0,8
tick,0x7ffc909efd34,20461332,0,0x0,8
tick,0x7ffc909efd34,20476698,0,0x0,8
tick,0x7ffc909efd34,20492193,0,0x0,8
tick,0x7ffc909efd34,20507421,0,0x0,8
tick,0x7ffc909efd34,20523465,0,0x0,8
tick,0x7ffc909efd34,20539410,0,0x0,8
tick,0x7ffc909efd34,20555965,0,0x0,8
tick,0x7ffc909efd34,20571184,0,0x0,8
tick,0x7ffc909efd34,20585478,0,0x0,8
tick,0x7ffc909efd34,20600800,0,0x0,8
tick,0x7ffc909efd34,20615958,0,0x0,8
tick,0x7ffc909efd34,20632216,0,0x0,8
tick,0x7ffc909efd34,20647372,0,0x0,8
tick,0x7ffc909efd34,20662849,0,0x0,8
tick,0x7ffc909efd34,20678697,0,0x0,8
tick,0x7ffc909efd34,20694317,0,0x0,8
tick,0x7ffc909efd34,20709665,0,0x0,8
tick,0x7ffc909efd34,20724940,0,0x0,8
tick,0x7ffc909efd34,20740852,0,0x0,8
tick,0x7ffc909efd34,20756353,0,0x0,8
tick,0x7ffc909efd34,20772261,0,0x0,8
tick,0x7ffc909efd34,20787580,0,0x0,8
tick,0x7ffc909efd34,20802536,0,0x0,8
tick,0x7ffc909efd34,20817909,0,0x0,8
tick,0x7ffc909efd34,20833161,0,0x0,8
tick,0x7ffc909efd34,20849200,0,0x0,8
tick,0x7ffc909efd34,20865333,0,0x0,8
tick,0x7ffc909efd34,20880465,0,0x0,8
tick,0x7ffc909efd34,20895853,0,0x0,8
tick,0x7ffc909efd34,20910988,0,0x0,8
tick,0x7ffc909efd34,20926978,0,0x0,8
tick,0x7ffc909efd34,20942916,0,0x0,8
tick,0x7ffc909efd34,20958852,0,0x0,8
tick,0x7ffc909efd34,20974310,0,0x0,8
tick,0x7ffc909efd34,20989309,0,0x0,8
tick,0x7ffc909efd34,21005068,0,0x0,8
tick,0x7ffc909efd34,21020372,0,0x0,8
tick,0x7ffc909efd34,21035611,0,0x0,8
tick,0x7ffc909efd34,21050943,0,0x0,8
tick,0x7ffc909efd34,21066177,0,0x0,8
tick,0x7ffc909efd34,21081440,0,0x0,8
tick,0x7ffc909efd34,21096750,0,0x0,8
tick,0x7ffc909efd34,21111995,0,0x0,8
tick,0x7ffc909efd34,21127756,0,0x0,8
tick,0x7ffc909efd34,21143128,0,0x0,8
tick,0x7ffc909efd34,21159221,0,0x0,8
tick,0x7ffc909efd34,21174481,0,0x0,8
tick,0x7ffc909efd34,21190688,0,0x0,8
tick,0x7ffc909efd34,21205945,0,0x0,8
tick,0x7ffc909efd34,21221090,0,0x0,8
tick,0x7ffc909efd34,21236314,0,0x0,8
tick,0x7ffc909efd34,21251575,0,0x0,8
tick,0x7ffc909efd34,21267113,0,0x0,8
tick,0x7ffc909efd34,21283089,0,0x0,8
tick,0x7ffc909efd34,21298467,0,0x0,8
tick,0x7ffc909efd34,21314081,0,0x0,8
tick,0x7ffc909efd34,21330161,0,0x0,8
tick,0x7ffc909efd34,21345757,0,0x0,8
tick,0x7ffc909efd34,21360939,0,0x0,8
tick,0x7ffc909efd34,21376344,0,0x0,8
tick,0x7ffc909efd34,21391571,0,0x0,8
tick,0x7ffc909efd34,21407649,0,0x0,8
tick,0x7ffc909efd34,21423815,0,0x0,8
tick,0x7ffc909efd34,21438218,0,0x0,8
tick,0x7ffc909efd34,21453510,0,0x0,8
tick,0x7ffc909efd34,21468942,0,0x0,8
tick,0x7ffc909efd34,21484167,0,0x0,8
tick,0x7ffc909efd34,21499402,0,0x0,8
tick,0x7ffc909efd34,21514737,0,0x0,8
tick,0x7ffc909efd34,21530054,0,0x0,8
tick,0x7ffc909efd34,21544967,0,0x0,8
tick,0x7ffc909efd34,21560175,0,0x0,8
tick,0x7ffc909efd34,21576126,0,0x0,8
tick,0x7ffc909efd34,21591504,0,0x0,8
tick,0x7ffc909efd34,21607145,0,0x0,8
tick,0x7ffc909efd34,21622529,0,0x0,8
tick,0x7ffc909efd34,21637607,0,0x0,8
tick,0x7ffc909efd34,21653470,0,0x0,8
tick,0x7ffc909efd34,21669044,0,0x0,8
tick,0x7ffc909efd34,21684855,0,0x0,8
tick,0x7ffc909efd34,21700185,0,0x0,8
tick,0x7ffc909efd34,21716153,0,0x0,8
tick,0x7ffc909efd34,21732020,0,0x0,8
tick,0x7ffc909efd34,21747974,0,0x0,8
tick,0x7ffc909efd34,21763279,0,0x0,8
tick,0x7ffc909efd34,21779163,0,0x0,8
tick,0x7ffc909efd34,21795249,0,0x0,8
tick,0x7ffc909efd34,21811345,0,0x0,8
tick,0x7ffc909efd34,21827414,0,0x0,8
tick,0x7ffc909efd34,21843300,0,0x0,8
tick,0x7ffc909efd34,21859205,0,0x0,8
tick,0x7ffc909efd34,21874433,0,0x0,8
tick,0x7ffc909efd34,21889816,0,0x0,8
tick,0x7ffc909efd34,21905168,0,0x0,8
tick,0x7ffc909efd34,21921255,0,0x0,8
tick,0x7ffc909efd34,21935579,0,0x0,8
tick,0x7ffc909efd34,21951128,0,0x0,8
tick,0x7ffc909efd34,21967085,0,0x0,8
tick,0x7ffc909efd34,21982174,0,0x0,8
tick,0x7ffc909efd34,21998015,0,0x0,8
tick,0x7ffc909efd34,22013059,0,0x0,8
tick,0x7ffc909efd34,22028494,0,0x0,8
tick,0x7ffc909efd34,22044297,0,0x0,8
tick,0x7ffc909efd34,22059799,0,0x0,8
tick,0x7ffc909efd34,22075260,0,0x0,8
tick,0x7ffc909efd34,22090352,0,0x0,8
tick,0x7ffc909efd34,22106430,0,0x0,8
tick,0x7ffc909efd34,22123671,0,0x0,8
tick,0x7ffc909efd34,22139222,0,0x0,8
tick,0x7ffc909efd34,22152369,0,0x0,8
tick,0x7ffc909efd34,22167892,0,0x0,8
tick,0x7ffc909efd34,22183149,0,0x0,8
tick,0x7ffc909efd34,22198738,0,0x0,8
tick,0x7ffc909efd34,22214097,0,0x0,8
tick,0x7ffc909efd34,22229813,0,0x0,8
tick,0x7ffc909efd34,22245051,0,0x0,8
tick,0x7ffc909efd34,22260741,0,0x0,8
tick,0x7ffc909efd34,22276764,0,0x0,8
tick,0x7ffc909efd34,22292052,0,0x0,8
tick,0x7ffc909efd34,22307084,0,0x0,8
tick,0x7ffc909efd34,22322546,0,0x0,8
tick,0x7ffc909efd34,22338908,0,0x0,8
tick,0x7ffc909efd34,22355630,0,0x0,8
tick,0x7ffc909efd34,22369131,0,0x0,8
tick,0x7ffc909efd34,22385355,0,0x0,8
tick,0x7ffc909efd34,22400275,0,0x0,8
tick,0x7ffc909efd34,22415294,0,0x0,8
tick,0x7ffc909efd34,22430175,0,0x0,8
tick,0x7ffc909efd34,22445728,0,0x0,8
tick,0x7ffc909efd34,22461700,0,0x0,8
tick,0x7ffc909efd34,22477324,0,0x0,8
tick,0x7ffc909efd34,22492399,0,0x0,8
tick,0x7ffc909efd34,22507518,0,0x0,8
tick,0x7ffc909efd34,22523113,0,0x0,8
tick,0x7ffc909efd34,22538421,0,0x0,8
tick,0x7ffc909efd34,22554710,0,0x0,8
tick,0x7ffc909efd34,22569128,0,0x0,8
tick,0x7ffc909efd34,22585418,0,0x0,8
tick,0x7ffc909efd34,22600616,0,0x0,8
tick,0x7ffc909efd34,22616585,0,0x0,8
tick,0x7ffc909efd34,22632170,0,0x0,8
tick,0x7ffc909efd34,22647630,0,0x0,8
tick,0x7ffc909efd34,22663178,0,0x0,8
tick,0x7ffc909efd34,22678327,0,0x0,8
tick,0x7ffc909efd34,22693933,0,0x0,8
tick,0x7ffc909efd34,22709428,0,0x0,8
tick,0x7ffc909efd34,22724583,0,0x0,8
tick,0x7ffc909efd34,22740131,0,0x0,8
tick,0x7ffc909efd34,22755871,0,0x0,8
tick,0x7ffc909efd34,22770799,0,0x0,8
tick,0x7ffc909efd34,22787041,0,0x0,8
tick,0x7ffc909efd34,22801244,0,0x0,8
tick,0x7ffc909efd34,22816790,0,0x0,8
tick,0x7ffc909efd34,22832829,0,0x0,8
tick,0x7ffc909efd34,22848203,0,0x0,8
tick,0x7ffc909efd34,22863315,0,0x0,8
tick,0x7ffc909efd34,22878622,0,0x0,8
tick,0x7ffc909efd34,22893797,0,0x0,8
tick,0x7ffc909efd34,22909508,0,0x0,8
tick,0x7ffc909efd34,22925628,0,0x0,8
tick,0x7ffc909efd34,22941656,0,0x0,8
tick,0x7ffc909efd34,22956987,0,0x0,8
tick,0x7ffc909efd34,22973011,0,0x0,8
tick,0x7ffc909efd34,22989140,0,0x0,8
tick,0x7ffc909efd34,23004840,0,0x0,8
tick,0x7ffc909efd34,23020781,0,0x0,8
tick,0x7ffc909efd34,23037127,0,0x0,8
tick,0x7ffc909efd34,23051834,0,0x0,8
tick,0x7ffc909efd34,23067717,0,0x0,8
tick,0x7ffc909efd34,23083023,0,0x0,8
tick,0x7ffc909efd34,23098902,0,0x0,8
tick,0x7ffc909efd34,23114522,0,0x0,8
tick,0x7ffc909efd34,23129665,0,0x0,8
tick,0x7ffc909efd34,23144870,0,0x0,8
tick,0x7ffc909efd34,23160743,0,0x0,8
tick,0x7ffc909efd34,23176198,0,0x0,8
tick,0x7ffc909efd34,23191413,0,0x0,8
tick,0x7ffc909efd34,23206816,0,0x0,8
tick,0x7ffc909efd34,23222060,0,0x0,8
tick,0x7ffc909efd34,23237115,0,0x0,8
tick,0x7ffc909efd34,23252307,0,0x0,8
tick,0x7ffc909efd34,23267902,0,0x0,8
tick,0x7ffc909efd34,23283215,0,0x0,8
tick,0x7ffc909efd34,23299139,0,0x0,8
tick,0x7ffc909efd34,23314758,0,0x0,8
tick,0x7ffc909efd34,23329706,0,0x0,8
tick,0x7ffc909efd34,23345026,0,0x0,8
tick,0x7ffc909efd34,23360389,0,0x0,8
tick,0x7ffc909efd34,23375836,0,0x0,8
tick,0x7ffc909efd34,23391308,0,0x0,8
tick,0x7ffc909efd34,23407232,0,0x0,8
tick,0x7ffc909efd34,23422766,0,0x0,8
tick,0x7ffc909efd34,23438771,0,0x0,8
tick,0x7ffc909efd34,23454838,0,0x0,8
tick,0x7ffc909efd34,23470436,0,0x0,8
tick,0x7ffc909efd34,23485630,0,0x0,8
tick,0x7ffc909efd34,23501793,0,0x0,8
tick,0x7ffc909efd34,23517419,0,0x0,8
tick,0x7ffc909efd34,23532869,0,0x0,8
tick,0x7ffc909efd34,23547764,0,0x0,8
tick,0x7ffc909efd34,23563149,0,0x0,8
tick,0x7ffc909efd34,23578292,0,0x0,8
tick,0x7ffc909efd34,23594392,0,0x0,8
tick,0x7ffc909efd34,23609617,0,0x0,8
tick,0x7ffc909efd34,23625160,0,0x0,8
tick,0x7ffc909efd34,23641212,0,0x0,8
tick,0x7ffc909efd34,23656608,0,0x0,8
tick,0x7ffc909efd34,23672633,0,0x0,8
tick,0x7ffc909efd34,23687950,0,0x0,8
tick,0x7ffc909efd34,23703097,0,0x0,8
tick,0x7ffc909efd34,23718377,0,0x0,8
tick,0x7ffc909efd34,23734239,0,0x0,8
tick,0x7ffc909efd34,23749492,0,0x0,8
tick,0x7ffc909efd34,23765078,0,0x0,8
tick,0x7ffc909efd34,23781050,0,0x0,8
tick,0x7ffc909efd34,23796370,0,0x0,8
tick,0x7ffc909efd34,23812118,0,0x0,8
tick,0x7ffc909efd34,23827285,0,0x0,8
tick,0x7ffc909efd34,23842582,0,0x0,8
tick,0x7ffc909efd34,23858267,0,0x0,8
tick,0x7ffc909efd34,23873739,0,0x0,8
tick,0x7ffc909efd34,23889660,0,0x0,8
tick,0x7ffc909efd34,23905789,0,0x0,8
tick,0x7ffc909efd34,23921382,0,0x0,8
tick,0x7ffc909efd34,23937572,0,0x0,8
tick,0x7ffc909efd34,23953070,0,0x0,8
tick,0x7ffc909efd34,23968052,0,0x0,8
tick,0x7ffc909efd34,23984115,0,0x0,8
tick,0x7ffc909efd34,23999320,0,0x0,8
tick,0x7ffc909efd34,24015406,0,0x0,8
tick,0x7ffc909efd34,24030209,0,0x0,8
tick,0x7ffc909efd34,24045176,0,0x0,8
tick,0x7ffc909efd34,24060611,0,0x0,8
tick,0x7ffc909efd34,24075907,0,0x0,8
tick,0x7ffc909efd34,24091391,0,0x0,8
tick,0x7ffc909efd34,24106444,0,0x0,8
tick,0x7ffc909efd34,24121854,0,0x0,8
tick,0x7ffc909efd34,24136890,0,0x0,8
tick,0x7ffc909efd34,24152335,0,0x0,8
tick,0x7ffc909efd34,24168193,0,0x0,8
tick,0x7ffc909efd34,24183660,0,0x0,8
tick,0x7ffc909efd34,24199075,0,0x0,8
tick,0x7ffc909efd34,24214088,0,0x0,8
tick,0x7ffc909efd34,24230005,0,0x0,8
tick,0x7ffc909efd34,24245261,0,0x0,8
tick,0x7ffc909efd34,24260730,0,0x0,8
tick,0x7ffc909efd34,24276541,0,0x0,8
tick,0x7ffc909efd34,24291891,0,0x0,8
tick,0x7ffc909efd34,24307935,0,0x0,8
tick,0x7ffc909efd34,24323305,0,0x0,8
tick,0x7ffc909efd34,24339458,0,0x0,8
tick,0x7ffc909efd34,24355126,0,0x0,8
tick,0x7ffc909efd34,24370572,0,0x0,8
tick,0x7ffc909efd34,24386371,0,0x0,8
tick,0x7ffc909efd34,24402349,0,0x0,8
tick,0x7ffc909efd34,24417700,0,0x0,8
tick,0x7ffc909efd34,24433238,0,0x0,8
tick,0x7ffc909efd34,24448649,0,0x0,8
tick,0x7ffc909efd34,24463632,0,0x0,8
tick,0x7ffc909efd34,24478961,0,0x0,8
tick,0x7ffc909efd34,24494450,0,0x0,8
tick,0x7ffc909efd34,24509597,0,0x0,8
tick,0x7ffc909efd34,24524887,0,0x0,8
tick,0x7ffc909efd34,24540282,0,0x0,8
tick,0x7ffc909efd34,24556298,0,0x0,8
tick,0x7ffc909efd34,24571555,0,0x0,8
tick,0x7ffc909efd34,24587274,0,0x0,8
tick,0x7ffc909efd34,24602214,0,0x0,8
tick,0x7ffc909efd34,24616703,0,0x0,8
tick,0x7ffc909efd34,24631794,0,0x0,8
tick,0x7ffc909efd34,24647071,0,0x0,8
tick,0x7ffc909efd34,24662391,0,0x0,8
tick,0x7ffc909efd34,24677764,0,0x0,8
tick,0x7ffc909efd34,24693338,0,0x0,8
tick,0x7ffc909efd34,24709219,0,0x0,8
tick,0x7ffc909efd34,24724310,0,0x0,8
tick,0x7ffc909efd34,24739703,0,0x0,8
tick,0x7ffc909efd34,24754867,0,0x0,8
tick,0x7ffc909efd34,24770508,0,0x0,8
tick,0x7ffc909efd34,24785198,0,0x0,8
tick,0x7ffc909efd34,24800853,0,0x0,8
tick,0x7ffc909efd34,24816728,0,0x0,8
tick,0x7ffc909efd34,24831967,0,0x0,8
tick,0x7ffc909efd34,24848075,0,0x0,8
tick,0x7ffc909efd34,24863346,0,0x0,8
tick,0x7ffc909efd34,24878525,0,0x0,8
tick,0x7ffc909efd34,24893775,0,0x0,8
tick,0x7ffc909efd34,24909262,0,0x0,8
tick,0x7ffc909efd34,24923931,0,0x0,8
tick,0x7ffc909efd34,24938938,0,0x0,8
tick,0x7ffc909efd34,24954404,0,0x0,8
tick,0x7ffc909efd34,24970161,0,0x0,8
tick,0x7ffc909efd34,24986713,0,0x0,8
tick,0x7ffc909efd34,25001695,0,0x0,8
tick,0x7ffc909efd34,25017159,0,0x0,8
tick,0x7ffc909efd34,25032402,0,0x0,8
tick,0x7ffc909efd34,25047995,0,0x0,8
tick,0x7ffc909efd34,25064139,0,0x0,8
tick,0x7ffc909efd34,25079349,0,0x0,8
tick,0x7ffc909efd34,25094717,0,0x0,8
tick,0x7ffc909efd34,25110633,0,0x0,8
tick,0x7ffc909efd34,25126092,0,0x0,8
tick,0x7ffc909efd34,25141943,0,0x0,8
tick,0x7ffc909efd34,25157417,0,0x0,8
tick,0x7ffc909efd34,25172721,0,0x0,8
tick,0x7ffc909efd34,25188096,0,0x0,8
tick,0x7ffc909efd34,25203813,0,0x0,8
tick,0x7ffc909efd34,25219391,0,0x0,8
tick,0x7ffc909efd34,25234296,0,0x0,8
tick,0x7ffc909efd34,25249432,0,0x0,8
tick,0x7ffc909efd34,25265190,0,0x0,8
tick,0x7ffc909efd34,25281243,0,0x0,8
tick,0x7ffc909efd34,25296509,0,0x0,8
tick,0x7ffc909efd34,25311912,0,0x0,8
tick,0x7ffc909efd34,25327182,0,0x0,8
tick,0x7ffc909efd34,25342590,0,0x0,8
tick,0x7ffc909efd34,25358767,0,0x0,8
tick,0x7ffc909efd34,25374407,0,0x0,8
tick,0x7ffc909efd34,25390738,0,0x0,8
tick,0x7ffc909efd34,25406547,0,0x0,8
tick,0x7ffc909efd34,25421882,0,0x0,8
tick,0x7ffc909efd34,25436976,0,0x0,8
tick,0x7ffc909efd34,25452445,0,0x0,8
tick,0x7ffc909efd34,25467752,0,0x0,8
tick,0x7ffc909efd34,25483181,0,0x0,8
tick,0x7ffc909efd34,25499463,0,0x0,8
tick,0x7ffc909efd34,25515101,0,0x0,8
tick,0x7ffc909efd34,25530968,0,0x0,8
tick,0x7ffc909efd34,25551337,0,0x0,8
tick,0x7ffc909efd34,25565969,0,0x0,8
tick,0x7ffc909efd34,25582642,0,0x0,8
tick,0x7ffc909efd34,25594962,0,0x0,8
tick,0x7ffc909efd34,25610582,0,0x0,8
tick,0x7ffc909efd34,25625502,0,0x0,8
tick,0x7ffc909efd34,25640529,0,0x0,8
tick,0x7ffc909efd34,25655521,0,0x0,8
tick,0x7ffc909efd34,25670342,0,0x0,8
tick,0x7ffc909efd34,25686339,0,0x0,8
tick,0x7ffc909efd34,25701906,0,0x0,8
tick,0x7ffc909efd34,25717039,0,0x0,8
tick,0x7ffc909efd34,25733213,0,0x0,8
tick,0x7ffc909efd34,25748600,0,0x0,8
tick,0x7ffc909efd34,25764105,0,0x0,8
tick,0x7ffc909efd34,25779841,0,0x0,8
tick,0x7ffc909efd34,25795088,0,0x0,8
tick,0x7ffc909efd34,25811201,0,0x0,8
tick,0x7ffc909efd34,25827252,0,0x0,8
tick,0x7ffc909efd34,25842728,0,0x0,8
tick,0x7ffc909efd34,25858031,0,0x0,8
tick,0x7ffc909efd34,25873449,0,0x0,8
tick,0x7ffc909efd34,25889292,0,0x0,8
tick,0x7ffc909efd34,25904419,0,0x0,8
tick,0x7ffc909efd34,25919951,0,0x0,8
tick,0x7ffc909efd34,25935076,0,0x0,8
tick,0x7ffc909efd34,25950373,0,0x0,8
tick,0x7ffc909efd34,25965627,0,0x0,8
tick,0x7ffc909efd34,25980763,0,0x0,8
tick,0x7ffc909efd34,25996262,0,0x0,8
tick,0x7ffc909efd34,26011431,0,0x0,8
tick,0x7ffc909efd34,26026842,0,0x0,8
tick,0x7ffc909efd34,26042302,0,0x0,8
tick,0x7ffc909efd34,26058385,0,0x0,8
tick,0x7ffc909efd34,26074200,0,0x0,8
tick,0x7ffc909efd34,26089660,0,0x0,8
tick,0x7ffc909efd34,26105067,0,0x0,8
tick,0x7ffc909efd34,26120969,0,0x0,8
tick,0x7ffc909efd34,26136339,0,0x0,8
tick,0x7ffc909efd34,26151751,0,0x0,8
tick,0x7ffc909efd34,26167713,0,0x0,8
tick,0x7ffc909efd34,26183563,0,0x0,8
tick,0x7ffc909efd34,26198611,0,0x0,8
tick,0x7ffc909efd34,26213732,0,0x0,8
tick,0x7ffc909efd34,26229278,0,0x0,8
tick,0x7ffc909efd34,26245294,0,0x0,8
tick,0x7ffc909efd34,26260484,0,0x0,8
tick,0x7ffc909efd34,26276002,0,0x0,8
tick,0x7ffc909efd34,26291795,0,0x0,8
tick,0x7ffc909efd34,26307416,0,0x0,8
tick,0x7ffc909efd34,26323286,0,0x0,8
tick,0x7ffc909efd34,26339223,0,0x0,8
tick,0x7ffc909efd34,26354356,0,0x0,8
tick,0x7ffc909efd34,26369524,0,0x0,8
tick,0x7ffc909efd34,26385873,0,0x0,8
tick,0x7ffc909efd34,26401282,0,0x0,8
tick,0x7ffc909efd34,26416625,0,0x0,8
tick,0x7ffc909efd34,26431856,0,0x0,8
tick,0x7ffc909efd34,26447666,0,0x0,8
tick,0x7ffc909efd34,26463141,0,0x0,8
tick,0x7ffc909efd34,26478665,0,0x0,8
tick,0x7ffc909efd34,26494360,0,0x0,8
tick,0x7ffc909efd34,26509998,0,0x0,8
tick,0x7ffc909efd34,26525450,0,0x0,8
tick,0x7ffc909efd34,26541604,0,0x0,8
tick,0x7ffc909efd34,26556418,0,0x0,8
tick,0x7ffc909efd34,26571971,0,0x0,8
tick,0x7ffc909efd34,26587911,0,0x0,8
tick,0x7ffc909efd34,26603585,0,0x0,8
tick,0x7ffc909efd34,26620021,0,0x0,8
tick,0x7ffc909efd34,26634151,0,0x0,8
tick,0x7ffc909efd34,26649810,0,0x0,8
tick,0x7ffc909efd34,26665128,0,0x0,8
tick,0x7ffc909efd34,26680259,0,0x0,8
tick,0x7ffc909efd34,26695274,0,0x0,8
tick,0x7ffc909efd34,26710531,0,0x0,8
tick,0x7ffc909efd34,26726411,0,0x0,8
tick,0x7ffc909efd34,26742199,0,0x0,8
tick,0x7ffc909efd34,26757751,0,0x0,8
tick,0x7ffc909efd34,26772934,0,0x0,8
tick,0x7ffc909efd34,26788286,0,0x0,8
tick,0x7ffc909efd34,26803747,0,0x0,8
tick,0x7ffc909efd34,26819230,0,0x0,8
tick,0x7ffc909efd34,26834777,0,0x0,8
tick,0x7ffc909efd34,26849947,0,0x0,8
tick,0x7ffc909efd34,26865503,0,0x0,8
tick,0x7ffc909efd34,26881596,0,0x0,8
tick,0x7ffc909efd34,26897383,0,0x0,8
tick,0x7ffc909efd34,26912634,0,0x0,8
tick,0x7ffc909efd34,26928259,0,0x0,8
tick,0x7ffc909efd34,26943858,0,0x0,8
tick,0x7ffc909efd34,26959265,0,0x0,8
tick,0x7ffc909efd34,26974699,0,0x0,8
tick,0x7ffc909efd34,26990135,0,0x0,8
tick,0x7ffc909efd34,27006205,0,0x0,8
tick,0x7ffc909efd34,27022307,0,0x0,8
tick,0x7ffc909efd34,27038334,0,0x0,8
tick,0x7ffc909efd34,27054160,0,0x0,8
tick,0x7ffc909efd34,27070163,0,0x0,8
tick,0x7ffc909efd34,27084779,0,0x0,8
tick,0x7ffc909efd34,27100289,0,0x0,8
tick,0x7ffc909efd34,27116189,0,0x0,8
tick,0x7ffc909efd34,27132244,0,0x0,8
tick,0x7ffc909efd34,27148030,0,0x0,8
tick,0x7ffc909efd34,27163180,0,0x0,8
tick,0x7ffc909efd34,27178245,0,0x0,8
tick,0x7ffc909efd34,27194231,0,0x0,8
tick,0x7ffc909efd34,27210031,0,0x0,8
tick,0x7ffc909efd34,27226083,0,0x0,8
tick,0x7ffc909efd34,27241590,0,0x0,8
tick,0x7ffc909efd34,27256541,0,0x0,8
tick,0x7ffc909efd34,27271325,0,0x0,8
tick,0x7ffc909efd34,27286873,0,0x0,8
tick,0x7ffc909efd34,27302717,0,0x0,8
tick,0x7ffc909efd34,27318296,0,0x0,8
tick,0x7ffc909efd34,27333326,0,0x0,8
tick,0x7ffc909efd34,27349130,0,0x0,8
tick,0x7ffc909efd34,27365136,0,0x0,8
tick,0x7ffc909efd34,27380206,0,0x0,8
tick,0x7ffc909efd34,27396077,0,0x0,8
tick,0x7ffc909efd34,27412236,0,0x0,8
tick,0x7ffc909efd34,27427857,0,0x0,8
tick,0x7ffc909efd34,27443054,0,0x0,8
tick,0x7ffc909efd34,27458202,0,0x0,8
tick,0x7ffc909efd34,27473933,0,0x0,8
tick,0x7ffc909efd34,27489256,0,0x0,8
tick,0x7ffc909efd34,27504756,0,0x0,8
tick,0x7ffc909efd34,27521720,0,0x0,8
tick,0x7ffc909efd34,27536342,0,0x0,8
tick,0x7ffc909efd34,27551594,0,0x0,8
tick,0x7ffc909efd34,27567709,0,0x0,8
tick,0x7ffc909efd34,27583131,0,0x0,8
tick,0x7ffc909efd34,27598373,0,0x0,8
tick,0x7ffc909efd34,27613309,0,0x0,8
tick,0x7ffc909efd34,27628654,0,0x0,8
tick,0x7ffc909efd34,27643996,0,0x0,8
tick,0x7ffc909efd34,27659213,0,0x0,8
tick,0x7ffc909efd34,27674730,0,0x0,8
tick,0x7ffc909efd34,27690188,0,0x0,8
tick,0x7ffc909efd34,27705725,0,0x0,8
tick,0x7ffc909efd34,27721161,0,0x0,8
tick,0x7ffc909efd34,27736679,0,0x0,8
tick,0x7ffc909efd34,27752523,0,0x0,8
tick,0x7ffc909efd34,27767545,0,0x0,8
tick,0x7ffc909efd34,27783279,0,0x0,8
tick,0x7ffc909efd34,27799552,0,0x0,8
tick,0x7ffc909efd34,27814992,0,0x0,8
tick,0x7ffc909efd34,27830410,0,0x0,8
tick,0x7ffc909efd34,27845771,0,0x0,8
tick,0x7ffc909efd34,27860930,0,0x0,8
tick,0x7ffc909efd34,27876284,0,0x0,8
tick,0x7ffc909efd34,27892396,0,0x0,8
tick,0x7ffc909efd34,27907600,0,0x0,8
tick,0x7ffc909efd34,27923059,0,0x0,8
tick,0x7ffc909efd34,27939167,0,0x0,8
tick,0x7ffc909efd34,27954310,0,0x0,8
tick,0x7ffc909efd34,27969743,0,0x0,8
tick,0x7ffc909efd34,27985762,0,0x0,8
tick,0x7ffc909efd34,28001061,0,0x0,8
tick,0x7ffc909efd34,28016498,0,0x0,8
tick,0x7ffc909efd34,28032518,0,0x0,8
tick,0x7ffc909efd34,28047594,0,0x0,8
tick,0x7ffc909efd34,28063027,0,0x0,8
tick,0x7ffc909efd34,28078250,0,0x0,8
tick,0x7ffc909efd34,28093262,0,0x0,8
tick,0x7ffc909efd34,28109373,0,0x0,8
tick,0x7ffc909efd34,28136840,0,0x0,8
tick,0x7ffc909efd34,28151055,0,0x0,8
tick,0x7ffc909efd34,28186555,0,0x0,8
tick,0x7ffc909efd34,28192657,0,0x0,8
tick,0x7ffc909efd34,28204716,0,0x0,8
tick,0x7ffc909efd34,28224199,0,0x0,8
tick,0x7ffc909efd34,28234217,0,0x0,8
tick,0x7ffc909efd34,28249472,0,0x0,8
tick,0x7ffc909efd34,28265429,0,0x0,8
tick,0x7ffc909efd34,28281448,0,0x0,8
tick,0x7ffc909efd34,28297362,0,0x0,8
tick,0x7ffc909efd34,28312440,0,0x0,8
tick,0x7ffc909efd34,28328307,0,0x0,8
tick,0x7ffc909efd34,28344192,0,0x0,8
tick,0x7ffc909efd34,28359629,0,0x0,8
tick,0x7ffc909efd34,28374787,0,0x0,8
tick,0x7ffc909efd34,28390510,0,0x0,8
tick,0x7ffc909efd34,28406100,0,0x0,8
tick,0x7ffc909efd34,28421836,0,0x0,8
tick,0x7ffc909efd34,28437573,0,0x0,8
tick,0x7ffc909efd34,28453820,0,0x0,8
tick,0x7ffc909efd34,28469200,0,0x0,8
tick,0x7ffc909efd34,28485425,0,0x0,8
tick,0x7ffc909efd34,28500796,0,0x0,8
tick,0x7ffc909efd34,28516667,0,0x0,8
tick,0x7ffc909efd34,28532863,0,0x0,8
tick,0x7ffc909efd34,28548257,0,0x0,8
tick,0x7ffc909efd34,28563872,0,0x0,8
tick,0x7ffc909efd34,28579963,0,0x0,8
tick,0x7ffc909efd34,28595148,0,0x0,8
tick,0x7ffc909efd34,28611264,0,0x0,8
tick,0x7ffc909efd34,28627004,0,0x0,8
tick,0x7ffc909efd34,28643304,0,0x0,8
tick,0x7ffc909efd34,28658722,0,0x0,8
tick,0x7ffc909efd34,28674010,0,0x0,8
tick,0x7ffc909efd34,28689377,0,0x0,8
tick,0x7ffc909efd34,28705030,0,0x0,8
tick,0x7ffc909efd34,28721081,0,0x0,8
tick,0x7ffc909efd34,28736698,0,0x0,8
tick,0x7ffc909efd34,28752714,0,0x0,8
tick,0x7ffc909efd34,28767978,0,0x0,8
tick,0x7ffc909efd34,28783185,0,0x0,8
tick,0x7ffc909efd34,28798659,0,0x0,8
tick,0x7ffc909efd34,28814387,0,0x0,8
tick,0x7ffc909efd34,28829933,0,0x0,8
tick,0x7ffc909efd34,28845407,0,0x0,8
tick,0x7ffc909efd34,28861494,0,0x0,8
tick,0x7ffc909efd34,28877703,0,0x0,8
tick,0x7ffc909efd34,28893260,0,0x0,8
tick,0x7ffc909efd34,28908958,0,0x0,8
tick,0x7ffc909efd34,28924110,0,0x0,8
tick,0x7ffc909efd34,28938757,0,0x0,8
tick,0x7ffc909efd34,28954735,0,0x0,8
tick,0x7ffc909efd34,28971022,0,0x0,8
tick,0x7ffc909efd34,28986609,0,0x0,8
tick,0x7ffc909efd34,29002490,0,0x0,8
tick,0x7ffc909efd34,29018845,0,0x0,8
tick,0x7ffc909efd34,29033607,0,0x0,8
tick,0x7ffc909efd34,29049304,0,0x0,8
tick,0x7ffc909efd34,29064289,0,0x0,8
tick,0x7ffc909efd34,29079459,0,0x0,8
tick,0x7ffc909efd34,29094749,0,0x0,8
tick,0x7ffc909efd34,29109993,0,0x0,8
tick,0x7ffc909efd34,29126023,0,0x0,8
tick,0x7ffc909efd34,29142025,0,0x0,8
tick,0x7ffc909efd34,29157333,0,0x0,8
tick,0x7ffc909efd34,29172935,0,0x0,8
tick,0x7ffc909efd34,29188946,0,0x0,8
tick,0x7ffc909efd34,29204059,0,0x0,8
tick,0x7ffc909efd34,29219964,0,0x0,8
tick,0x7ffc909efd34,29236189,0,0x0,8
tick,0x7ffc909efd34,29251131,0,0x0,8
tick,0x7ffc909efd34,29266882,0,0x0,8
tick,0x7ffc909efd34,29282383,0,0x0,8
tick,0x7ffc909efd34,29298274,0,0x0,8
tick,0x7ffc909efd34,29314137,0,0x0,8
tick,0x7ffc909efd34,29329307,0,0x0,8
tick,0x7ffc909efd34,29345040,0,0x0,8
tick,0x7ffc909efd34,29360705,0,0x0,8
tick,0x7ffc909efd34,29376648,0,0x0,8
tick,0x7ffc909efd34,29392060,0,0x0,8
tick,0x7ffc909efd34,29407469,0,0x0,8
tick,0x7ffc909efd34,29423209,0,0x0,8
tick,0x7ffc909efd34,29439305,0,0x0,8
tick,0x7ffc909efd34,29455463,0,0x0,8
tick,0x7ffc909efd34,29470662,0,0x0,8
tick,0x7ffc909efd34,29485921,0,0x0,8
tick,0x7ffc909efd34,29501073,0,0x0,8
tick,0x7ffc909efd34,29516587,0,0x0,8
tick,0x7ffc909efd34,29532681,0,0x0,8
tick,0x7ffc909efd34,29547964,0,0x0,8
tick,0x7ffc909efd34,29563549,0,0x0,8
tick,0x7ffc909efd34,29578771,0,0x0,8
tick,0x7ffc909efd34,29594218,0,0x0,8
tick,0x7ffc909efd34,29610283,0,0x0,8
tick,0x7ffc909efd34,29626116,0,0x0,8
tick,0x7ffc909efd34,29641291,0,0x0,8
tick,0x7ffc909efd34,29656487,0,0x0,8
tick,0x7ffc909efd34,29672456,0,0x0,8
tick,0x7ffc909efd34,29687573,0,0x0,8
tick,0x7ffc909efd34,29703572,0,0x0,8
tick,0x7ffc909efd34,29719054,0,0x0,8
tick,0x7ffc909efd34,29734340,0,0x0,8
tick,0x7ffc909efd34,29749981,0,0x0,8
tick,0x7ffc909efd34,29765251,0,0x0,8
tick,0x7ffc909efd34,29780649,0,0x0,8
tick,0x7ffc909efd34,29796387,0,0x0,8
tick,0x7ffc909efd34,29811956,0,0x0,8
tick,0x7ffc909efd34,29827372,0,0x0,8
tick,0x7ffc909efd34,29843238,0,0x0,8
tick,0x7ffc909efd34,29859230,0,0x0,8
tick,0x7ffc909efd34,29875353,0,0x0,8
tick,0x7ffc909efd34,29890886,0,0x0,8
tick,0x7ffc909efd34,29906903,0,0x0,8
tick,0x7ffc909efd34,29923067,0,0x0,8
tick,0x7ffc909efd34,29938806,0,0x0,8
tick,0x7ffc909efd34,29954500,0,0x0,8
tick,0x7ffc909efd34,29969844,0,0x0,8
tick,0x7ffc909efd34,29985321,0,0x0,8
tick,0x7ffc909efd34,30000638,0,0x0,8
tick,0x7ffc909efd34,30016440,0,0x0,8
tick,0x7ffc909efd34,30032382,0,0x0,8
tick,0x7ffc909efd34,30048378,0,0x0,8
tick,0x7ffc909efd34,30063802,0,0x0,8
tick,0x7ffc909efd34,30080060,0,0x0,8
tick,0x7ffc909efd34,30095444,0,0x0,8
tick,0x7ffc909efd34,30111576,0,0x0,8
tick,0x7ffc909efd34,30126749,0,0x0,8
tick,0x7ffc909efd34,30142137,0,0x0,8
tick,0x7ffc909efd34,30157357,0,0x0,8
tick,0x7ffc909efd34,30173174,0,0x0,8
tick,0x7ffc909efd34,30188722,0,0x0,8
tick,0x7ffc909efd34,30204159,0,0x0,8
tick,0x7ffc909efd34,30219696,0,0x0,8
tick,0x7ffc909efd34,30234941,0,0x0,8
tick,0x7ffc909efd34,30250099,0,0x0,8
tick,0x7ffc909efd34,30265482,0,0x0,8
tick,0x7ffc909efd34,30281510,0,0x0,8
tick,0x7ffc909efd34,30297215,0,0x0,8
tick,0x7ffc909efd34,30312475,0,0x0,8
tick,0x7ffc909efd34,30327760,0,0x0,8
tick,0x7ffc909efd34,30343700,0,0x0,8
tick,0x7ffc909efd34,30358746,0,0x0,8
tick,0x7ffc909efd34,30374019,0,0x0,8
tick,0x7ffc909efd34,30389414,0,0x0,8
tick,0x7ffc909efd34,30405479,0,0x0,8
tick,0x7ffc909efd34,30420853,0,0x0,8
tick,0x7ffc909efd34,30436725,0,0x0,8
tick,0x7ffc909efd34,30450802,0,0x0,8
tick,0x7ffc909efd34,30466261,0,0x0,8
tick,0x7ffc909efd34,30482329,0,0x0,8
tick,0x7ffc909efd34,30497748,0,0x0,8
tick,0x7ffc909efd34,30513893,0,0x0,8
tick,0x7ffc909efd34,30529670,0,0x0,8
tick,0x7ffc909efd34,30545296,0,0x0,8
tick,0x7ffc909efd34,30561449,0,0x0,8
tick,0x7ffc909efd34,30576954,0,0x0,8
tick,0x7ffc909efd34,30592204,0,0x0,8
tick,0x7ffc909efd34,30607636,0,0x0,8
tick,0x7ffc909efd34,30622744,0,0x0,8
tick,0x7ffc909efd34,30638066,0,0x0,8
tick,0x7ffc909efd34,30653372,0,0x0,8
tick,0x7ffc909efd34,30669239,0,0x0,8
tick,0x7ffc909efd34,30685126,0,0x0,8
tick,0x7ffc909efd34,30700488,0,0x0,8
tick,0x7ffc909efd34,30716536,0,0x0,8
tick,0x7ffc909efd34,30731608,0,0x0,8
tick,0x7ffc909efd34,30747297,0,0x0,8
tick,0x7ffc909efd34,30761773,0,0x0,8
tick,0x7ffc909efd34,30777148,0,0x0,8
tick,0x7ffc909efd34,30792436,0,0x0,8
tick,0x7ffc909efd34,30808073,0,0x0,8
tick,0x7ffc909efd34,30824145,0,0x0,8
tick,0x7ffc909efd34,30839357,0,0x0,8
tick,0x7ffc909efd34,30854908,0,0x0,8
tick,0x7ffc909efd34,30871053,0,0x0,8
tick,0x7ffc909efd34,30886759,0,0x0,8
tick,0x7ffc909efd34,30902528,0,0x0,8
tick,0x7ffc909efd34,30917437,0,0x0,8
tick,0x7ffc909efd34,30932733,0,0x0,8
tick,0x7ffc909efd34,30948820,0,0x0,8
tick,0x7ffc909efd34,30964065,0,0x0,8
tick,0x7ffc909efd34,30980201,0,0x0,8
tick,0x7ffc909efd34,30995511,0,0x0,8
tick,0x7ffc909efd34,31010699,0,0x0,8
tick,0x7ffc909efd34,31026031,0,0x0,8
tick,0x7ffc909efd34,31041580,0,0x0,8
tick,0x7ffc909efd34,31057084,0,0x0,8
tick,0x7ffc909efd34,31073124,0,0x0,8
tick,0x7ffc909efd34,31088598,0,0x0,8
tick,0x7ffc909efd34,31103748,0,0x0,8
tick,0x7ffc909efd34,31118998,0,0x0,8
tick,0x7ffc909efd34,31134389,0,0x0,8
tick,0x7ffc909efd34,31149529,0,0x0,8
tick,0x7ffc909efd34,31164974,0,0x0,8
tick,0x7ffc909efd34,31181103,0,0x0,8
tick,0x7ffc909efd34,31196712,0,0x0,8
tick,0x7ffc909efd34,31211975,0,0x0,8
tick,0x7ffc909efd34,31227761,0,0x0,8
tick,0x7ffc909efd34,31242417,0,0x0,8
tick,0x7ffc909efd34,31258388,0,0x0,8
tick,0x7ffc909efd34,31273888,0,0x0,8
tick,0x7ffc909efd34,31289142,0,0x0,8
tick,0x7ffc909efd34,31304553,0,0x0,8
tick,0x7ffc909efd34,31319565,0,0x0,8
tick,0x7ffc909efd34,31334939,0,0x0,8
tick,0x7ffc909efd34,31350164,0,0x0,8
tick,0x7ffc909efd34,31365521,0,0x0,8
tick,0x7ffc909efd34,31380825,0,0x0,8
tick,0x7ffc909efd34,31396152,0,0x0,8
tick,0x7ffc909efd34,31411735,0,0x0,8
tick,0x7ffc909efd34,31427010,0,0x0,8
tick,0x7ffc909efd34,31442151,0,0x0,8
tick,0x7ffc909efd34,31458214,0,0x0,8
tick,0x7ffc909efd34,31473424,0,0x0,8
tick,0x7ffc909efd34,31488380,0,0x0,8
tick,0x7ffc909efd34,31503826,0,0x0,8
tick,0x7ffc909efd34,31519066,0,0x0,8
tick,0x7ffc909efd34,31534054,0,0x0,8
tick,0x7ffc909efd34,31549984,0,0x0,8
tick,0x7ffc909efd34,31565354,0,0x0,8
tick,0x7ffc909efd34,31580547,0,0x0,8
tick,0x7ffc909efd34,31596003,0,0x0,8
tick,0x7ffc909efd34,31611153,0,0x0,8
tick,0x7ffc909efd34,31626584,0,0x0,8
tick,0x7ffc909efd34,31641820,0,0x0,8
tick,0x7ffc909efd34,31657450,0,0x0,8
tick,0x7ffc909efd34,31673270,0,0x0,8
tick,0x7ffc909efd34,31688797,0,0x0,8
tick,0x7ffc909efd34,31703957,0,0x0,8
tick,0x7ffc909efd34,31720128,0,0x0,8
tick,0x7ffc909efd34,31735575,0,0x0,8
tick,0x7ffc909efd34,31751458,0,0x0,8
tick,0x7ffc909efd34,31766773,0,0x0,8
tick,0x7ffc909efd34,31781982,0,0x0,8
tick,0x7ffc909efd34,31797382,0,0x0,8
tick,0x7ffc909efd34,31812529,0,0x0,8
tick,0x7ffc909efd34,31828016,0,0x0,8
tick,0x7ffc909efd34,31843320,0,0x0,8
tick,0x7ffc909efd34,31859220,0,0x0,8
tick,0x7ffc909efd34,31874603,0,0x0,8
tick,0x7ffc909efd34,31890061,0,0x0,8
tick,0x7ffc909efd34,31905331,0,0x0,8
tick,0x7ffc909efd34,31920571,0,0x0,8
tick,0x7ffc909efd34,31936550,0,0x0,8
tick,0x7ffc909efd34,31952226,0,0x0,8
tick,0x7ffc909efd34,31967175,0,0x0,8
tick,0x7ffc909efd34,31982700,0,0x0,8
tick,0x7ffc909efd34,31998512,0,0x0,8
tick,0x7ffc909efd34,32014319,0,0x0,8
tick,0x7ffc909efd34,32029597,0,0x0,8
tick,0x7ffc909efd34,32045459,0,0x0,8
tick,0x7ffc909efd34,32060596,0,0x0,8
tick,0x7ffc909efd34,32075668,0,0x0,8
tick,0x7ffc909efd34,32091709,0,0x0,8
tick,0x7ffc909efd34,32106994,0,0x0,8
tick,0x7ffc909efd34,32122153,0,0x0,8
tick,0x7ffc909efd34,32138231,0,0x0,8
tick,0x7ffc909efd34,32153515,0,0x0,8
tick,0x7ffc909efd34,32169403,0,0x0,8
tick,0x7ffc909efd34,32184885,0,0x0,8
tick,0x7ffc909efd34,32200150,0,0x0,8
tick,0x7ffc909efd34,32216104,0,0x0,8
tick,0x7ffc909efd34,32231421,0,0x0,8
tick,0x7ffc909efd34,32246772,0,0x0,8
tick,0x7ffc909efd34,32262053,0,0x0,8
tick,0x7ffc909efd34,32277300,0,0x0,8
tick,0x7ffc909efd34,32293334,0,0x0,8
tick,0x7ffc909efd34,32309059,0,0x0,8
tick,0x7ffc909efd34,32324583,0,0x0,8
tick,0x7ffc909efd34,32340293,0,0x0,8
tick,0x7ffc909efd34,32355795,0,0x0,8
tick,0x7ffc909efd34,32371332,0,0x0,8
tick,0x7ffc909efd34,32386593,0,0x0,8
tick,0x7ffc909efd34,32401721,0,0x0,8
tick,0x7ffc909efd34,32417272,0,0x0,8
tick,0x7ffc909efd34,32433326,0,0x0,8
tick,0x7ffc909efd34,32448631,0,0x0,8
tick,0x7ffc909efd34,32464105,0,0x0,8
tick,0x7ffc909efd34,32479765,0,0x0,8
tick,0x7ffc909efd34,32494931,0,0x0,8
tick,0x7ffc909efd34,32510253,0,0x0,8
tick,0x7ffc909efd34,32525445,0,0x0,8
tick,0x7ffc909efd34,32540661,0,0x0,8
tick,0x7ffc909efd34,32556555,0,0x0,8
tick,0x7ffc909efd34,32571395,0,0x0,8
tick,0x7ffc909efd34,32586989,0,0x0,8
tick,0x7ffc909efd34,32603850,0,0x0,8
tick,0x7ffc909efd34,32618482,0,0x0,8
tick,0x7ffc909efd34,32633299,0,0x0,8
tick,0x7ffc909efd34,32649151,0,0x0,8
tick,0x7ffc909efd34,32664963,0,0x0,8
tick,0x7ffc909efd34,32680877,0,0x0,8
tick,0x7ffc909efd34,32696103,0,0x0,8
tick,0x7ffc909efd34,32712442,0,0x0,8
tick,0x7ffc909efd34,32727813,0,0x0,8
tick,0x7ffc909efd34,32743073,0,0x0,8
tick,0x7ffc909efd34,32758678,0,0x0,8
tick,0x7ffc909efd34,32774026,0,0x0,8
tick,0x7ffc909efd34,32789413,0,0x0,8
tick,0x7ffc909efd34,32805455,0,0x0,8
tick,0x7ffc909efd34,32820697,0,0x0,8
tick,0x7ffc909efd34,32835757,0,0x0,8
tick,0x7ffc909efd34,32851389,0,0x0,8
tick,0x7ffc909efd34,32866773,0,0x0,8
tick,0x7ffc909efd34,32882015,0,0x0,8
tick,0x7ffc909efd34,32897291,0,0x0,8
tick,0x7ffc909efd34,32912613,0,0x0,8
tick,0x7ffc909efd34,32928442,0,0x0,8
tick,0x7ffc909efd34,32943808,0,0x0,8
tick,0x7ffc909efd34,32959936,0,0x0,8
tick,0x7ffc909efd34,32976293,0,0x0,8
tick,0x7ffc909efd34,32992018,0,0x0,8
tick,0x7ffc909efd34,33007818,0,0x0,8
tick,0x7ffc909efd34,33023143,0,0x0,8
tick,0x7ffc909efd34,33038898,0,0x0,8
tick,0x7ffc909efd34,33053981,0,0x0,8
tick,0x7ffc909efd34,33069382,0,0x0,8
tick,0x7ffc909efd34,33085300,0,0x0,8
tick,0x7ffc909efd34,33101328,0,0x0,8
tick,0x7ffc909efd34,33116061,0,0x0,8
tick,0x7ffc909efd34,33131256,0,0x0,8
tick,0x7ffc909efd34,33146708,0,0x0,8
tick,0x7ffc909efd34,33162178,0,0x0,8
tick,0x7ffc909efd34,33177607,0,0x0,8
tick,0x7ffc909efd34,33192842,0,0x0,8
tick,0x7ffc909efd34,33207931,0,0x0,8
tick,0x7ffc909efd34,33223009,0,0x0,8
tick,0x7ffc909efd34,33238151,0,0x0,8
tick,0x7ffc909efd34,33253091,0,0x0,8
tick,0x7ffc909efd34,33268990,0,0x0,8
tick,0x7ffc909efd34,33283738,0,0x0,8
tick,0x7ffc909efd34,33299699,0,0x0,8
tick,0x7ffc909efd34,33314995,0,0x0,8
tick,0x7ffc909efd34,33330274,0,0x0,8
tick,0x7ffc909efd34,33345688,0,0x0,8
tick,0x7ffc909efd34,33360502,0,0x0,8
tick,0x7ffc909efd34,33375529,0,0x0,8
tick,0x7ffc909efd34,33390909,0,0x0,8
tick,0x7ffc909efd34,33405607,0,0x0,8
tick,0x7ffc909efd34,33421338,0,0x0,8
tick,0x7ffc909efd34,33436425,0,0x0,8
tick,0x7ffc909efd34,33451437,0,0x0,8
tick,0x7ffc909efd34,33467074,0,0x0,8
tick,0x7ffc909efd34,33482274,0,0x0,8
tick,0x7ffc909efd34,33498014,0,0x0,8
tick,0x7ffc909efd34,33512891,0,0x0,8
tick,0x7ffc909efd34,33527834,0,0x0,8
tick,0x7ffc909efd34,33543178,0,0x0,8
tick,0x7ffc909efd34,33559312,0,0x0,8
tick,0x7ffc909efd34,33574588,0,0x0,8
tick,0x7ffc909efd34,33590453,0,0x0,8
tick,0x7ffc909efd34,33605802,0,0x0,8
tick,0x7ffc909efd34,33621836,0,0x0,8
tick,0x7ffc909efd34,33637573,0,0x0,8
tick,0x7ffc909efd34,33652440,0,0x0,8
tick,0x7ffc909efd34,33668260,0,0x0,8
tick,0x7ffc909efd34,33683037,0,0x0,8
tick,0x7ffc909efd34,33698669,0,0x0,8
tick,0x7ffc909efd34,33714644,0,0x0,8
tick,0x7ffc909efd34,33730800,0,0x0,8
tick,0x7ffc909efd34,33747056,0,0x0,8
tick,0x7ffc909efd34,33762786,0,0x0,8
tick,0x7ffc909efd34,33778667,0,0x0,8
tick,0x7ffc909efd34,33793851,0,0x0,8
tick,0x7ffc909efd34,33809687,0,0x0,8
tick,0x7ffc909efd34,33825670,0,0x0,8
tick,0x7ffc909efd34,33841704,0,0x0,8
tick,0x7ffc909efd34,33857721,0,0x0,8
tick,0x7ffc909efd34,33873709,0,0x0,8
tick,0x7ffc909efd34,33889642,0,0x0,8
tick,0x7ffc909efd34,33905998,0,0x0,8
tick,0x7ffc909efd34,33920676,0,0x0,8
tick,0x7ffc909efd34,33935742,0,0x0,8
tick,0x7ffc909efd34,33951620,0,0x0,8
tick,0x7ffc909efd34,33967989,0,0x0,8
tick,0x7ffc909efd34,33984647,0,0x0,8
tick,0x7ffc909efd34,33998714,0,0x0,8
tick,0x7ffc909efd34,34014799,0,0x0,8
tick,0x7ffc909efd34,34030711,0,0x0,8
tick,0x7ffc909efd34,34046648,0,0x0,8
tick,0x7ffc909efd34,34062750,0,0x0,8
tick,0x7ffc909efd34,34078597,0,0x0,8
tick,0x7ffc909efd34,34094579,0,0x0,8
tick,0x7ffc909efd34,34110678,0,0x0,8
tick,0x7ffc909efd34,34126674,0,0x0,8
tick,0x7ffc909efd34,34142539,0,0x0,8
tick,0x7ffc909efd34,34158501,0,0x0,8
tick,0x7ffc909efd34,34174573,0,0x0,8
tick,0x7ffc909efd34,34190845,0,0x0,8
tick,0x7ffc909efd34,34206411,0,0x0,8
tick,0x7ffc909efd34,34221899,0,0x0,8
tick,0x7ffc909efd34,34237599,0,0x0,8
tick,0x7ffc909efd34,34253472,0,0x0,8
tick,0x7ffc909efd34,34269485,0,0x0,8
tick,0x7ffc909efd34,34284622,0,0x0,8
tick,0x7ffc909efd34,34299983,0,0x0,8
tick,0x7ffc909efd34,34316082,0,0x0,8
tick,0x7ffc909efd34,34331191,0,0x0,8
tick,0x7ffc909efd34,34346737,0,0x0,8
tick,0x7ffc909efd34,34362652,0,0x0,8
tick,0x7ffc909efd34,34378676,0,0x0,8
tick,0x7ffc909efd34,34394831,0,0x0,8
tick,0x7ffc909efd34,34410966,0,0x0,8
tick,0x7ffc909efd34,34426698,0,0x0,8
tick,0x7ffc909efd34,34442733,0,0x0,8
tick,0x7ffc909efd34,34458801,0,0x0,8
tick,0x7ffc909efd34,34474811,0,0x0,8
tick,0x7ffc909efd34,34490625,0,0x0,8
tick,0x7ffc909efd34,34505403,0,0x0,8
tick,0x7ffc909efd34,34521595,0,0x0,8
tick,0x7ffc909efd34,34536978,0,0x0,8
tick,0x7ffc909efd34,34551894,0,0x0,8
tick,0x7ffc909efd34,34567924,0,0x0,8
tick,0x7ffc909efd34,34583496,0,0x0,8
tick,0x7ffc909efd34,34599618,0,0x0,8
tick,0x7ffc909efd34,34615827,0,0x0,8
tick,0x7ffc909efd34,34631454,0,0x0,8
tick,0x7ffc909efd34,34647522,0,0x0,8
tick,0x7ffc909efd34,34663435,0,0x0,8
tick,0x7ffc909efd34,34679471,0,0x0,8
tick,0x7ffc909efd34,34696523,0,0x0,8
tick,0x7ffc909efd34,34711436,0,0x0,8
tick,0x7ffc909efd34,34727400,0,0x0,8
tick,0x7ffc909efd34,34743371,0,0x0,8
tick,0x7ffc909efd34,34759480,0,0x0,8
tick,0x7ffc909efd34,34775508,0,0x0,8
tick,0x7ffc909efd34,34791466,0,0x0,8
tick,0x7ffc909efd34,34807379,0,0x0,8
tick,0x7ffc909efd34,34823380,0,0x0,8
tick,0x7ffc909efd34,34839478,0,0x0,8
tick,0x7ffc909efd34,34854422,0,0x0,8
tick,0x7ffc909efd34,34870448,0,0x0,8
tick,0x7ffc909efd34,34886414,0,0x0,8
tick,0x7ffc909efd34,34902624,0,0x0,8
tick,0x7ffc909efd34,34918605,0,0x0,8
tick,0x7ffc909efd34,34934963,0,0x0,8
tick,0x7ffc909efd34,34953809,0,0x0,8
tick,0x7ffc909efd34,34965892,0,0x0,8
tick,0x7ffc909efd34,34982006,0,0x0,8
tick,0x7ffc909efd34,34997902,0,0x0,8
tick,0x7ffc909efd34,35013910,0,0x0,8
tick,0x7ffc909efd34,35030049,0,0x0,8
tick,0x7ffc909efd34,35044872,0,0x0,8
tick,0x7ffc909efd34,35060347,0,0x0,8
tick,0x7ffc909efd34,35076436,0,0x0,8
tick,0x7ffc909efd34,35092397,0,0x0,8
tick,0x7ffc909efd34,35108349,0,0x0,8
tick,0x7ffc909efd34,35126267,0,0x0,8
tick,0x7ffc909efd34,35140539,0,0x0,8
tick,0x7ffc909efd34,35156749,0,0x0,8
tick,0x7ffc909efd34,35171364,0,0x0,8
tick,0x7ffc909efd34,35186527,0,0x0,8
tick,0x7ffc909efd34,35202662,0,0x0,8
tick,0x7ffc909efd34,35218116,0,0x0,8
tick,0x7ffc909efd34,35232715,0,0x0,8
tick,0x7ffc909efd34,35247850,0,0x0,8
tick,0x7ffc909efd34,35263053,0,0x0,8
tick,0x7ffc909efd34,35278891,0,0x0,8
tick,0x7ffc909efd34,35295005,0,0x0,8
tick,0x7ffc909efd34,35310553,0,0x0,8
tick,0x7ffc909efd34,35325776,0,0x0,8
tick,0x7ffc909efd34,35341870,0,0x0,8
tick,0x7ffc909efd34,35357312,0,0x0,8
tick,0x7ffc909efd34,35372370,0,0x0,8
tick,0x7ffc909efd34,35388204,0,0x0,8
tick,0x7ffc909efd34,35404111,0,0x0,8
tick,0x7ffc909efd34,35419572,0,0x0,8
tick,0x7ffc909efd34,35435599,0,0x0,8
tick,0x7ffc909efd34,35451442,0,0x0,8
tick,0x7ffc909efd34,35466736,0,0x0,8
tick,0x7ffc909efd34,35482252,0,0x0,8
tick,0x7ffc909efd34,35497787,0,0x0,8
tick,0x7ffc909efd34,35513435,0,0x0,8
tick,0x7ffc909efd34,35528574,0,0x0,8
tick,0x7ffc909efd34,35544218,0,0x0,8
tick,0x7ffc909efd34,35559770,0,0x0,8
tick,0x7ffc909efd34,35575359,0,0x0,8
tick,0x7ffc909efd34,35591013,0,0x0,8
tick,0x7ffc909efd34,35606148,0,0x0,8
tick,0x7ffc909efd34,35621222,0,0x0,8
tick,0x7ffc909efd34,35636328,0,0x0,8
tick,0x7ffc909efd34,35652314,0,0x0,8
tick,0x7ffc909efd34,35668542,0,0x0,8
tick,0x7ffc909efd34,35683433,0,0x0,8
tick,0x7ffc909efd34,35699737,0,0x0,8
tick,0x7ffc909efd34,35715314,0,0x0,8
tick,0x7ffc909efd34,35731679,0,0x0,8
tick,0x7ffc909efd34,35747466,0,0x0,8
tick,0x7ffc909efd34,35763515,0,0x0,8
tick,0x7ffc909efd34,35778756,0,0x0,8
tick,0x7ffc909efd34,35794533,0,0x0,8
tick,0x7ffc909efd34,35810272,0,0x0,8
tick,0x7ffc909efd34,35825559,0,0x0,8
tick,0x7ffc909efd34,35840667,0,0x0,8
tick,0x7ffc909efd34,35856313,0,0x0,8
tick,0x7ffc909efd34,35872418,0,0x0,8
tick,0x7ffc909efd34,35887605,0,0x0,8
tick,0x7ffc909efd34,35902685,0,0x0,8
tick,0x7ffc909efd34,35918630,0,0x0,8
tick,0x7ffc909efd34,35933303,0,0x0,8
tick,0x7ffc909efd34,35948840,0,0x0,8
tick,0x7ffc909efd34,35964357,0,0x0,8
tick,0x7ffc909efd34,35980437,0,0x0,8
tick,0x7ffc909efd34,35996301,0,0x0,8
tick,0x7ffc909efd34,36012220,0,0x0,8
tick,0x7ffc909efd34,36027636,0,0x0,8
tick,0x7ffc909efd34,36043344,0,0x0,8
tick,0x7ffc909efd34,36059678,0,0x0,8
tick,0x7ffc909efd34,36075523,0,0x0,8
tick,0x7ffc909efd34,36091063,0,0x0,8
tick,0x7ffc909efd34,36106136,0,0x0,8
tick,0x7ffc909efd34,36122125,0,0x0,8
tick,0x7ffc909efd34,36137361,0,0x0,8
tick,0x7ffc909efd34,36153334,0,0x0,8
tick,0x7ffc909efd34,36169237,0,0x0,8
tick,0x7ffc909efd34,36185285,0,0x0,8
tick,0x7ffc909efd34,36201320,0,0x0,8
tick,0x7ffc909efd34,36216319,0,0x0,8
tick,0x7ffc909efd34,36231187,0,0x0,8
tick,0x7ffc909efd34,36246764,0,0x0,8
tick,0x7ffc909efd34,36262204,0,0x0,8
tick,0x7ffc909efd34,36278254,0,0x0,8
tick,0x7ffc909efd34,36293069,0,0x0,8
tick,0x7ffc909efd34,36307931,0,0x0,8
tick,0x7ffc909efd34,36323549,0,0x0,8
tick,0x7ffc909efd34,36339352,0,0x0,8
tick,0x7ffc909efd34,36355545,0,0x0,8
tick,0x7ffc909efd34,36371355,0,0x0,8
tick,0x7ffc909efd34,36387182,0,0x0,8
tick,0x7ffc909efd34,36402556,0,0x0,8
tick,0x7ffc909efd34,36418711,0,0x0,8
tick,0x7ffc909efd34,36434646,0,0x0,8
tick,0x7ffc909efd34,36449567,0,0x0,8
tick,0x7ffc909efd34,36464536,0,0x0,8
tick,0x7ffc909efd34,36480029,0,0x0,8
tick,0x7ffc909efd34,36495785,0,0x0,8
tick,0x7ffc909efd34,36511119,0,0x0,8
tick,0x7ffc909efd34,36526668,0,0x0,8
tick,0x7ffc909efd34,36542131,0,0x0,8
tick,0x7ffc909efd34,36558333,0,0x0,8
tick,0x7ffc909efd34,36573878,0,0x0,8
tick,0x7ffc909efd34,36589096,0,0x0,8
tick,0x7ffc909efd34,36605158,0,0x0,8
tick,0x7ffc909efd34,36620453,0,0x0,8
tick,0x7ffc909efd34,36635908,0,0x0,8
tick,0x7ffc909efd34,36652092,0,0x0,8
tick,0x7ffc909efd34,36668701,0,0x0,8
tick,0x7ffc909efd34,36682837,0,0x0,8
tick,0x7ffc909efd34,36698203,0,0x0,8
tick,0x7ffc909efd34,36713447,0,0x0,8
tick,0x7ffc909efd34,36728645,0,0x0,8
tick,0x7ffc909efd34,36744095,0,0x0,8
tick,0x7ffc909efd34,36760803,0,0x0,8
tick,0x7ffc909efd34,36781190,0,0x0,8
tick,0x7ffc909efd34,36792233,0,0x0,8
tick,0x7ffc909efd34,36807244,0,0x0,8
tick,0x7ffc909efd34,36823245,0,0x0,8
tick,0x7ffc909efd34,36839414,0,0x0,8
tick,0x7ffc909efd34,36855133,0,0x0,8
tick,0x7ffc909efd34,36874117,0,0x0,8
tick,0x7ffc909efd34,36887275,0,0x0,8
tick,0x7ffc909efd34,36903945,0,0x0,8
tick,0x7ffc909efd34,36919645,0,0x0,8
tick,0x7ffc909efd34,36935770,0,0x0,8
tick,0x7ffc909efd34,36948864,0,0x0,8
tick,0x7ffc909efd34,36964378,0,0x0,8
tick,0x7ffc909efd34,36980428,0,0x0,8
tick,0x7ffc909efd34,36995493,0,0x0,8
tick,0x7ffc909efd34,37010675,0,0x0,8
tick,0x7ffc909efd34,37025725,0,0x0,8
tick,0x7ffc909efd34,37041040,0,0x0,8
tick,0x7ffc909efd34,37056777,0,0x0,8
tick,0x7ffc909efd34,37072340,0,0x0,8
tick,0x7ffc909efd34,37087131,0,0x0,8
tick,0x7ffc909efd34,37103510,0,0x0,8
tick,0x7ffc909efd34,37119521,0,0x0,8
tick,0x7ffc909efd34,37135879,0,0x0,8
tick,0x7ffc909efd34,37149753,0,0x0,8
tick,0x7ffc909efd34,37165841,0,0x0,8
tick,0x7ffc909efd34,37182120,0,0x0,8
tick,0x7ffc909efd34,37197965,0,0x0,8
tick,0x7ffc909efd34,37213018,0,0x0,8
tick,0x7ffc909efd34,37228305,0,0x0,8
tick,0x7ffc909efd34,37243933,0,0x0,8
tick,0x7ffc909efd34,37259888,0,0x0,8
tick,0x7ffc909efd34,37275060,0,0x0,8
tick,0x7ffc909efd34,37291202,0,0x0,8
tick,0x7ffc909efd34,37306562,0,0x0,8
tick,0x7ffc909efd34,37321780,0,0x0,8
tick,0x7ffc909efd34,37337642,0,0x0,8
tick,0x7ffc909efd34,37353880,0,0x0,8
tick,0x7ffc909efd34,37370295,0,0x0,8
tick,0x7ffc909efd34,37386618,0,0x0,8
tick,0x7ffc909efd34,37402771,0,0x0,8
tick,0x7ffc909efd34,37416216,0,0x0,8
tick,0x7ffc909efd34,37431056,0,0x0,8
tick,0x7ffc909efd34,37446455,0,0x0,8
tick,0x7ffc909efd34,37462234,0,0x0,8
tick,0x7ffc909efd34,37478190,0,0x0,8
tick,0x7ffc909efd34,37493784,0,0x0,8
tick,0x7ffc909efd34,37510115,0,0x0,8
tick,0x7ffc909efd34,37525799,0,0x0,8
tick,0x7ffc909efd34,37540962,0,0x0,8
tick,0x7ffc909efd34,37556802,0,0x0,8
tick,0x7ffc909efd34,37572709,0,0x0,8
tick,0x7ffc909efd34,37588613,0,0x0,8
tick,0x7ffc909efd34,37604126,0,0x0,8
tick,0x7ffc909efd34,37619176,0,0x0,8
tick,0x7ffc909efd34,37634944,0,0x0,8
tick,0x7ffc909efd34,37650712,0,0x0,8
tick,0x7ffc909efd34,37667071,0,0x0,8
tick,0x7ffc909efd34,37682239,0,0x0,8
tick,0x7ffc909efd34,37697571,0,0x0,8
tick,0x7ffc909efd34,37713098,0,0x0,8
tick,0x7ffc909efd34,37729095,0,0x0,8
tick,0x7ffc909efd34,37744458,0,0x0,8
tick,0x7ffc909efd34,37760244,0,0x0,8
tick,0x7ffc909efd34,37776313,0,0x0,8
tick,0x7ffc909efd34,37792297,0,0x0,8
tick,0x7ffc909efd34,37807784,0,0x0,8
tick,0x7ffc909efd34,37823194,0,0x0,8
tick,0x7ffc909efd34,37838691,0,0x0,8
tick,0x7ffc909efd34,37854422,0,0x0,8
tick,0x7ffc909efd34,37869603,0,0x0,8
tick,0x7ffc909efd34,37885028,0,0x0,8
tick,0x7ffc909efd34,37900593,0,0x0,8
tick,0x7ffc909efd34,37915839,0,0x0,8
tick,0x7ffc909efd34,37931766,0,0x0,8
tick,0x7ffc909efd34,37947439,0,0x0,8
tick,0x7ffc909efd34,37962736,0,0x0,8
tick,0x7ffc909efd34,37978109,0,0x0,8
tick,0x7ffc909efd34,37993988,0,0x0,8
tick,0x7ffc909efd34,38010319,0,0x0,8
tick,0x7ffc909efd34,38026074,0,0x0,8
tick,0x7ffc909efd34,38041500,0,0x0,8
tick,0x7ffc909efd34,38056845,0,0x0,8
tick,0x7ffc909efd34,38072394,0,0x0,8
tick,0x7ffc909efd34,38088318,0,0x0,8
tick,0x7ffc909efd34,38103257,0,0x0,8
tick,0x7ffc909efd34,38118425,0,0x0,8
tick,0x7ffc909efd34,38134326,0,0x0,8
tick,0x7ffc909efd34,38149596,0,0x0,8
tick,0x7ffc909efd34,38164988,0,0x0,8
tick,0x7ffc909efd34,38180961,0,0x0,8
tick,0x7ffc909efd34,38196697,0,0x0,8
tick,0x7ffc909efd34,38212569,0,0x0,8
tick,0x7ffc909efd34,38227761,0,0x0,8
tick,0x7ffc909efd34,38242695,0,0x0,8
tick,0x7ffc909efd34,38258630,0,0x0,8
tick,0x7ffc909efd34,38273938,0,0x0,8
tick,0x7ffc909efd34,38289416,0,0x0,8
tick,0x7ffc909efd34,38304738,0,0x0,8
tick,0x7ffc909efd34,38320323,0,0x0,8
tick,0x7ffc909efd34,38336354,0,0x0,8
tick,0x7ffc909efd34,38352323,0,0x0,8
tick,0x7ffc909efd34,38368322,0,0x0,8
tick,0x7ffc909efd34,38384213,0,0x0,8
tick,0x7ffc909efd34,38399528,0,0x0,8
tick,0x7ffc909efd34,38414206,0,0x0,8
tick,0x7ffc909efd34,38429753,0,0x0,8
tick,0x7ffc909efd34,38445321,0,0x0,8
tick,0x7ffc909efd34,38460586,0,0x0,8
tick,0x7ffc909efd34,38476303,0,0x0,8
tick,0x7ffc909efd34,38491773,0,0x0,8
tick,0x7ffc909efd34,38507957,0,0x0,8
tick,0x7ffc909efd34,38523968,0,0x0,8
tick,0x7ffc909efd34,38539322,0,0x0,8
tick,0x7ffc909efd34,38554372,0,0x0,8
tick,0x7ffc909efd34,38570249,0,0x0,8
tick,0x7ffc909efd34,38585878,0,0x0,8
tick,0x7ffc909efd34,38601432,0,0x0,8
tick,0x7ffc909efd34,38617362,0,0x0,8
tick,0x7ffc909efd34,38632184,0,0x0,8
tick,0x7ffc909efd34,38647174,0,0x0,8
tick,0x7ffc909efd34,38662895,0,0x0,8
tick,0x7ffc909efd34,38678490,0,0x0,8
tick,0x7ffc909efd34,38693833,0,0x0,8
tick,0x7ffc909efd34,38709610,0,0x0,8
tick,0x7ffc909efd34,38725729,0,0x0,8
tick,0x7ffc909efd34,38741144,0,0x0,8
tick,0x7ffc909efd34,38756575,0,0x0,8
tick,0x7ffc909efd34,38772567,0,0x0,8
tick,0x7ffc909efd34,38788520,0,0x0,8
tick,0x7ffc909efd34,38804237,0,0x0,8
tick,0x7ffc909efd34,38819658,0,0x0,8
tick,0x7ffc909efd34,38835521,0,0x0,8
tick,0x7ffc909efd34,38850620,0,0x0,8
tick,0x7ffc909efd34,38866259,0,0x0,8
tick,0x7ffc909efd34,38881824,0,0x0,8
tick,0x7ffc909efd34,38897566,0,0x0,8
tick,0x7ffc909efd34,38913012,0,0x0,8
tick,0x7ffc909efd34,38928407,0,0x0,8
tick,0x7ffc909efd34,38944396,0,0x0,8
tick,0x7ffc909efd34,38959872,0,0x0,8
tick,0x7ffc909efd34,38975560,0,0x0,8
tick,0x7ffc909efd34,38991183,0,0x0,8
tick,0x7ffc909efd34,39007238,0,0x0,8
tick,0x7ffc909efd34,39022844,0,0x0,8
tick,0x7ffc909efd34,39038358,0,0x0,8
tick,0x7ffc909efd34,39054333,0,0x0,8
tick,0x7ffc909efd34,39069497,0,0x0,8
tick,0x7ffc909efd34,39085535,0,0x0,8
tick,0x7ffc909efd34,39101240,0,0x0,8
tick,0x7ffc909efd34,39116777,0,0x0,8
tick,0x7ffc909efd34,39132429,0,0x0,8
tick,0x7ffc909efd34,39147637,0,0x0,8
tick,0x7ffc909efd34,39163384,0,0x0,8
tick,0x7ffc909efd34,39179160,0,0x0,8
tick,0x7ffc909efd34,39193950,0,0x0,8
tick,0x7ffc909efd34,39208941,0,0x0,8
tick,0x7ffc909efd34,39224064,0,0x0,8
tick,0x7ffc909efd34,39239594,0,0x0,8
tick,0x7ffc909efd34,39255766,0,0x0,8
tick,0x7ffc909efd34,39271190,0,0x0,8
tick,0x7ffc909efd34,39286385,0,0x0,8
tick,0x7ffc909efd34,39302177,0,0x0,8
tick,0x7ffc909efd34,39317450,0,0x0,8
tick,0x7ffc909efd34,39333566,0,0x0,8
tick,0x7ffc909efd34,39348951,0,0x0,8
tick,0x7ffc909efd34,39364344,0,0x0,8
tick,0x7ffc909efd34,39379918,0,0x0,8
tick,0x7ffc909efd34,39395522,0,0x0,8
tick,0x7ffc909efd34,39411445,0,0x0,8
tick,0x7ffc909efd34,39426858,0,0x0,8
tick,0x7ffc909efd34,39442377,0,0x0,8
tick,0x7ffc909efd34,39458409,0,0x0,8
tick,0x7ffc909efd34,39474072,0,0x0,8
tick,0x7ffc909efd34,39489944,0,0x0,8
tick,0x7ffc909efd34,39505791,0,0x0,8
tick,0x7ffc909efd34,39520840,0,0x0,8
tick,0x7ffc909efd34,39536635,0,0x0,8
tick,0x7ffc909efd34,39552865,0,0x0,8
tick,0x7ffc909efd34,39567804,0,0x0,8
tick,0x7ffc909efd34,39583319,0,0x0,8
tick,0x7ffc909efd34,39598365,0,0x0,8
tick,0x7ffc909efd34,39613305,0,0x0,8
tick,0x7ffc909efd34,39628473,0,0x0,8
tick,0x7ffc909efd34,39643803,0,0x0,8
tick,0x7ffc909efd34,39659641,0,0x0,8
tick,0x7ffc909efd34,39675334,0,0x0,8
tick,0x7ffc909efd34,39690710,0,0x0,8
tick,0x7ffc909efd34,39706531,0,0x0,8
tick,0x7ffc909efd34,39722020,0,0x0,8
tick,0x7ffc909efd34,39737913,0,0x0,8
tick,0x7ffc909efd34,39753350,0,0x0,8
tick,0x7ffc909efd34,39768706,0,0x0,8
tick,0x7ffc909efd34,39784343,0,0x0,8
tick,0x7ffc909efd34,39799849,0,0x0,8
tick,0x7ffc909efd34,39815829,0,0x0,8
tick,0x7ffc909efd34,39830906,0,0x0,8
tick,0x7ffc909efd34,39846508,0,0x0,8
tick,0x7ffc909efd34,39862030,0,0x0,8
tick,0x7ffc909efd34,39877455,0,0x0,8
tick,0x7ffc909efd34,39892929,0,0x0,8
tick,0x7ffc909efd34,39908201,0,0x0,8
tick,0x7ffc909efd34,39924565,0,0x0,8
tick,0x7ffc909efd34,39939436,0,0x0,8
tick,0x7ffc909efd34,39954966,0,0x0,8
tick,0x7ffc909efd34,39970162,0,0x0,8
tick,0x7ffc909efd34,39985551,0,0x0,8
tick,0x7ffc909efd34,40001675,0,0x0,8
tick,0x7ffc909efd34,40017121,0,0x0,8
tick,0x7ffc909efd34,40032807,0,0x0,8
tick,0x7ffc909efd34,40048154,0,0x0,8
tick,0x7ffc909efd34,40063852,0,0x0,8
tick,0x7ffc909efd34,40078802,0,0x0,8
tick,0x7ffc909efd34,40094608,0,0x0,8
tick,0x7ffc909efd34,40110688,0,0x0,8
tick,0x7ffc909efd34,40126323,0,0x0,8
tick,0x7ffc909efd34,40141410,0,0x0,8
tick,0x7ffc909efd34,40156614,0,0x0,8
tick,0x7ffc909efd34,40172042,0,0x0,8
tick,0x7ffc909efd34,40187505,0,0x0,8
tick,0x7ffc909efd34,40202660,0,0x0,8
tick,0x7ffc909efd34,40218285,0,0x0,8
tick,0x7ffc909efd34,40234437,0,0x0,8
tick,0x7ffc909efd34,40250019,0,0x0,8
tick,0x7ffc909efd34,40265328,0,0x0,8
tick,0x7ffc909efd34,40280963,0,0x0,8
tick,0x7ffc909efd34,40296385,0,0x0,8
tick,0x7ffc909efd34,40312238,0,0x0,8
tick,0x7ffc909efd34,40327383,0,0x0,8
tick,0x7ffc909efd34,40342725,0,0x0,8
tick,0x7ffc909efd34,40357883,0,0x0,8
tick,0x7ffc909efd34,40374029,0,0x0,8
tick,0x7ffc909efd34,40389657,0,0x0,8
tick,0x7ffc909efd34,40405019,0,0x0,8
tick,0x7ffc909efd34,40420202,0,0x0,8
tick,0x7ffc909efd34,40436093,0,0x0,8
tick,0x7ffc909efd34,40451914,0,0x0,8
tick,0x7ffc909efd34,40468042,0,0x0,8
tick,0x7ffc909efd34,40484239,0,0x0,8
tick,0x7ffc909efd34,40499676,0,0x0,8
tick,0x7ffc909efd34,40514733,0,0x0,8
tick,0x7ffc909efd34,40529967,0,0x0,8
tick,0x7ffc909efd34,40545586,0,0x0,8
tick,0x7ffc909efd34,40561597,0,0x0,8
tick,0x7ffc909efd34,40577385,0,0x0,8
tick,0x7ffc909efd34,40592884,0,0x0,8
tick,0x7ffc909efd34,40608622,0,0x0,8
tick,0x7ffc909efd34,40624217,0,0x0,8
tick,0x7ffc909efd34,40639520,0,0x0,8
tick,0x7ffc909efd34,40655335,0,0x0,8
tick,0x7ffc909efd34,40670542,0,0x0,8
tick,0x7ffc909efd34,40686615,0,0x0,8
tick,0x7ffc909efd34,40702187,0,0x0,8
tick,0x7ffc909efd34,40718463,0,0x0,8
tick,0x7ffc909efd34,40733808,0,0x0,8
tick,0x7ffc909efd34,40749218,0,0x0,8
tick,0x7ffc909efd34,40764665,0,0x0,8
tick,0x7ffc909efd34,40779885,0,0x0,8
tick,0x7ffc909efd34,40795625,0,0x0,8
tick,0x7ffc909efd34,40811712,0,0x0,8
tick,0x7ffc909efd34,40826794,0,0x0,8
tick,0x7ffc909efd34,40842804,0,0x0,8
tick,0x7ffc909efd34,40858311,0,0x0,8
tick,0x7ffc909efd34,40874122,0,0x0,8
tick,0x7ffc909efd34,40889350,0,0x0,8
tick,0x7ffc909efd34,40904778,0,0x0,8
tick,0x7ffc909efd34,40920387,0,0x0,8
tick,0x7ffc909efd34,40935413,0,0x0,8
tick,0x7ffc909efd34,40951359,0,0x0,8
tick,0x7ffc909efd34,40967495,0,0x0,8
tick,0x7ffc909efd34,40983220,0,0x0,8
tick,0x7ffc909efd34,40998667,0,0x0,8
tick,0x7ffc909efd34,41014206,0,0x0,8
tick,0x7ffc909efd34,41030422,0,0x0,8
tick,0x7ffc909efd34,41046293,0,0x0,8
tick,0x7ffc909efd34,41062656,0,0x0,8
tick,0x7ffc909efd34,41078512,0,0x0,8
tick,0x7ffc909efd34,41094355,0,0x0,8
tick,0x7ffc909efd34,41110562,0,0x0,8
tick,0x7ffc909efd34,41125871,0,0x0,8
tick,0x7ffc909efd34,41141683,0,0x0,8
tick,0x7ffc909efd34,41157526,0,0x0,8
tick,0x7ffc909efd34,41172577,0,0x0,8
tick,0x7ffc909efd34,41188547,0,0x0,8
tick,0x7ffc909efd34,41204154,0,0x0,8
tick,0x7ffc909efd34,41219551,0,0x0,8
tick,0x7ffc909efd34,41235143,0,0x0,8
tick,0x7ffc909efd34,41250458,0,0x0,8
tick,0x7ffc909efd34,41266371,0,0x0,8
tick,0x7ffc909efd34,41282083,0,0x0,8
tick,0x7ffc909efd34,41297823,0,0x0,8
tick,0x7ffc909efd34,41313262,0,0x0,8
tick,0x7ffc909efd34,41329038,0,0x0,8
tick,0x7ffc909efd34,41344783,0,0x0,8
tick,0x7ffc909efd34,41360263,0,0x0,8
tick,0x7ffc909efd34,41376038,0,0x0,8
tick,0x7ffc909efd34,41391363,0,0x0,8
tick,0x7ffc909efd34,41406615,0,0x0,8
tick,0x7ffc909efd34,41422740,0,0x0,8
tick,0x7ffc909efd34,41438240,0,0x0,8
tick,0x7ffc909efd34,41453971,0,0x0,8
tick,0x7ffc909efd34,41469377,0,0x0,8
tick,0x7ffc909efd34,41485504,0,0x0,8
tick,0x7ffc909efd34,41501258,0,0x0,8
tick,0x7ffc909efd34,41516492,0,0x0,8
tick,0x7ffc909efd34,41531704,0,0x0,8
tick,0x7ffc909efd34,41547187,0,0x0,8
tick,0x7ffc909efd34,41562643,0,0x0,8
tick,0x7ffc909efd34,41578562,0,0x0,8
tick,0x7ffc909efd34,41594477,0,0x0,8
tick,0x7ffc909efd34,41609851,0,0x0,8
tick,0x7ffc909efd34,41625543,0,0x0,8
tick,0x7ffc909efd34,41640890,0,0x0,8
tick,0x7ffc909efd34,41656973,0,0x0,8
tick,0x7ffc909efd34,41672592,0,0x0,8
tick,0x7ffc909efd34,41688349,0,0x0,8
tick,0x7ffc909efd34,41703627,0,0x0,8
tick,0x7ffc909efd34,41719562,0,0x0,8
tick,0x7ffc909efd34,41735652,0,0x0,8
tick,0x7ffc909efd34,41751360,0,0x0,8
tick,0x7ffc909efd34,41766651,0,0x0,8
tick,0x7ffc909efd34,41782339,0,0x0,8
tick,0x7ffc909efd34,41797804,0,0x0,8
tick,0x7ffc909efd34,41813605,0,0x0,8
tick,0x7ffc909efd34,41828504,0,0x0,8
tick,0x7ffc909efd34,41844262,0,0x0,8
tick,0x7ffc909efd34,41860410,0,0x0,8
tick,0x7ffc909efd34,41876182,0,0x0,8
tick,0x7ffc909efd34,41891514,0,0x0,8
tick,0x7ffc909efd34,41906937,0,0x0,8
tick,0x7ffc909efd34,41922502,0,0x0,8
tick,0x7ffc909efd34,41938088,0,0x0,8
tick,0x7ffc909efd34,41953584,0,0x0,8
tick,0x7ffc909efd34,41968916,0,0x0,8
tick,0x7ffc909efd34,41984219,0,0x0,8
tick,0x7ffc909efd34,41999738,0,0x0,8
tick,0x7ffc909efd34,42015087,0,0x0,8
tick,0x7ffc909efd34,42031193,0,0x0,8
tick,0x7ffc909efd34,42046769,0,0x0,8
tick,0x7ffc909efd34,42062444,0,0x0,8
tick,0x7ffc909efd34,42078370,0,0x0,8
tick,0x7ffc909efd34,42093757,0,0x0,8
tick,0x7ffc909efd34,42110063,0,0x0,8
tick,0x7ffc909efd34,42126111,0,0x0,8
tick,0x7ffc909efd34,42141591,0,0x0,8
tick,0x7ffc909efd34,42156385,0,0x0,8
tick,0x7ffc909efd34,42171442,0,0x0,8
tick,0x7ffc909efd34,42187368,0,0x0,8
tick,0x7ffc909efd34,42203142,0,0x0,8
tick,0x7ffc909efd34,42219295,0,0x0,8
tick,0x7ffc909efd34,42234590,0,0x0,8
tick,0x7ffc909efd34,42250404,0,0x0,8
tick,0x7ffc909efd34,42266030,0,0x0,8
tick,0x7ffc909efd34,42281440,0,0x0,8
tick,0x7ffc909efd34,42296904,0,0x0,8
tick,0x7ffc909efd34,42313193,0,0x0,8
tick,0x7ffc909efd34,42328462,0,0x0,8
tick,0x7ffc909efd34,42344174,0,0x0,8
tick,0x7ffc909efd34,42359836,0,0x0,8
tick,0x7ffc909efd34,42375019,0,0x0,8
tick,0x7ffc909efd34,42390338,0,0x0,8
tick,0x7ffc909efd34,42406168,0,0x0,8
tick,0x7ffc909efd34,42421975,0,0x0,8
tick,0x7ffc909efd34,42437948,0,0x0,8
tick,0x7ffc909efd34,42453420,0,0x0,8
tick,0x7ffc909efd34,42468847,0,0x0,8
tick,0x7ffc909efd34,42484004,0,0x0,8
tick,0x7ffc909efd34,42499759,0,0x0,8
tick,0x7ffc909efd34,42515995,0,0x0,8
tick,0x7ffc909efd34,42530996,0,0x0,8
tick,0x7ffc909efd34,42546379,0,0x0,8
tick,0x7ffc909efd34,42561823,0,0x0,8
tick,0x7ffc909efd34,42576970,0,0x0,8
tick,0x7ffc909efd34,42592213,0,0x0,8
tick,0x7ffc909efd34,42608438,0,0x0,8
tick,0x7ffc909efd34,42623622,0,0x0,8
tick,0x7ffc909efd34,42639004,0,0x0,8
tick,0x7ffc909efd34,42655136,0,0x0,8
tick,0x7ffc909efd34,42670326,0,0x0,8
tick,0x7ffc909efd34,42685698,0,0x0,8
tick,0x7ffc909efd34,42701690,0,0x0,8
tick,0x7ffc909efd34,42717524,0,0x0,8
tick,0x7ffc909efd34,42733031,0,0x0,8
tick,0x7ffc909efd34,42747880,0,0x0,8
tick,0x7ffc909efd34,42763244,0,0x0,8
tick,0x7ffc909efd34,42779182,0,0x0,8
tick,0x7ffc909efd34,42795087,0,0x0,8
tick,0x7ffc909efd34,42811156,0,0x0,8
tick,0x7ffc909efd34,42826243,0,0x0,8
tick,0x7ffc909efd34,42842382,0,0x0,8
tick,0x7ffc909efd34,42857294,0,0x0,8
tick,0x7ffc909efd34,42873888,0,0x0,8
tick,0x7ffc909efd34,42888765,0,0x0,8
tick,0x7ffc909efd34,42904499,0,0x0,8
tick,0x7ffc909efd34,42920878,0,0x0,8
tick,0x7ffc909efd34,42935871,0,0x0,8
tick,0x7ffc909efd34,42951242,0,0x0,8
tick,0x7ffc909efd34,42966865,0,0x0,8
tick,0x7ffc909efd34,42982758,0,0x0,8
tick,0x7ffc909efd34,42998766,0,0x0,8
tick,0x7ffc909efd34,43014616,0,0x0,8
tick,0x7ffc909efd34,43030030,0,0x0,8
tick,0x7ffc909efd34,43045876,0,0x0,8
tick,0x7ffc909efd34,43061987,0,0x0,8
tick,0x7ffc909efd34,43077239,0,0x0,8
tick,0x7ffc909efd34,43092352,0,0x0,8
tick,0x7ffc909efd34,43107597,0,0x0,8
tick,0x7ffc909efd34,43123274,0,0x0,8
tick,0x7ffc909efd34,43139334,0,0x0,8
tick,0x7ffc909efd34,43155041,0,0x0,8
tick,0x7ffc909efd34,43170531,0,0x0,8
tick,0x7ffc909efd34,43185756,0,0x0,8
tick,0x7ffc909efd34,43201523,0,0x0,8
tick,0x7ffc909efd34,43217637,0,0x0,8
tick,0x7ffc909efd34,43233317,0,0x0,8
tick,0x7ffc909efd34,43247573,0,0x0,8
tick,0x7ffc909efd34,43263188,0,0x0,8
tick,0x7ffc909efd34,43278952,0,0x0,8
tick,0x7ffc909efd34,43294409,0,0x0,8
tick,0x7ffc909efd34,43310090,0,0x0,8
tick,0x7ffc909efd34,43326109,0,0x0,8
tick,0x7ffc909efd34,43342019,0,0x0,8
tick,0x7ffc909efd34,43357069,0,0x0,8
tick,0x7ffc909efd34,43372045,0,0x0,8
tick,0x7ffc909efd34,43387943,0,0x0,8
tick,0x7ffc909efd34,43403407,0,0x0,8
tick,0x7ffc909efd34,43418250,0,0x0,8
tick,0x7ffc909efd34,43433817,0,0x0,8
tick,0x7ffc909efd34,43450443,0,0x0,8
tick,0x7ffc909efd34,43464400,0,0x0,8
tick,0x7ffc909efd34,43479977,0,0x0,8
tick,0x7ffc909efd34,43495270,0,0x0,8
tick,0x7ffc909efd34,43511281,0,0x0,8
tick,0x7ffc909efd34,43527272,0,0x0,8
tick,0x7ffc909efd34,43541983,0,0x0,8
tick,0x7ffc909efd34,43556883,0,0x0,8
tick,0x7ffc909efd34,43572210,0,0x0,8
tick,0x7ffc909efd34,43587752,0,0x0,8
tick,0x7ffc909efd34,43602639,0,0x0,8
tick,0x7ffc909efd34,43617378,0,0x0,8
tick,0x7ffc909efd34,43633342,0,0x0,8
tick,0x7ffc909efd34,43649364,0,0x0,8
tick,0x7ffc909efd34,43664439,0,0x0,8
tick,0x7ffc909efd34,43680393,0,0x0,8
tick,0x7ffc909efd34,43695617,0,0x0,8
tick,0x7ffc909efd34,43710874,0,0x0,8
tick,0x7ffc909efd34,43726353,0,0x0,8
tick,0x7ffc909efd34,43741892,0,0x0,8
tick,0x7ffc909efd34,43757324,0,0x0,8
tick,0x7ffc909efd34,43772878,0,0x0,8
tick,0x7ffc909efd34,43788535,0,0x0,8
tick,0x7ffc909efd34,43804500,0,0x0,8
tick,0x7ffc909efd34,43820542,0,0x0,8
tick,0x7ffc909efd34,43836492,0,0x0,8
tick,0x7ffc909efd34,43851788,0,0x0,8
tick,0x7ffc909efd34,43867819,0,0x0,8
tick,0x7ffc909efd34,43883274,0,0x0,8
tick,0x7ffc909efd34,43899351,0,0x0,8
tick,0x7ffc909efd34,43914943,0,0x0,8
tick,0x7ffc909efd34,43930962,0,0x0,8
tick,0x7ffc909efd34,43947031,0,0x0,8
tick,0x7ffc909efd34,43962003,0,0x0,8
tick,0x7ffc909efd34,43977023,0,0x0,8
tick,0x7ffc909efd34,43992544,0,0x0,8
tick,0x7ffc909efd34,44008093,0,0x0,8
tick,0x7ffc909efd34,44023949,0,0x0,8
tick,0x7ffc909efd34,44039317,0,0x0,8
tick,0x7ffc909efd34,44054825,0,0x0,8
tick,0x7ffc909efd34,44070914,0,0x0,8
tick,0x7ffc909efd34,44086225,0,0x0,8
tick,0x7ffc909efd34,44101363,0,0x0,8
tick,0x7ffc909efd34,44116796,0,0x0,8
tick,0x7ffc909efd34,44131938,0,0x0,8
tick,0x7ffc909efd34,44147983,0,0x0,8
tick,0x7ffc909efd34,44163323,0,0x0,8
tick,0x7ffc909efd34,44179705,0,0x0,8
tick,0x7ffc909efd34,44195409,0,0x0,8
tick,0x7ffc909efd34,44211434,0,0x0,8
tick,0x7ffc909efd34,44227369,0,0x0,8
tick,0x7ffc909efd34,44243389,0,0x0,8
tick,0x7ffc909efd34,44259347,0,0x0,8
tick,0x7ffc909efd34,44275361,0,0x0,8
tick,0x7ffc909efd34,44290456,0,0x0,8
tick,0x7ffc909efd34,44305739,0,0x0,8
tick,0x7ffc909efd34,44321820,0,0x0,8
tick,0x7ffc909efd34,44337696,0,0x0,8
tick,0x7ffc909efd34,44353077,0,0x0,8
tick,0x7ffc909efd34,44368324,0,0x0,8
tick,0x7ffc909efd34,44384293,0,0x0,8
tick,0x7ffc909efd34,44400226,0,0x0,8
tick,0x7ffc909efd34,44416051,0,0x0,8
tick,0x7ffc909efd34,44431478,0,0x0,8
tick,0x7ffc909efd34,44447192,0,0x0,8
tick,0x7ffc909efd34,44462509,0,0x0,8
tick,0x7ffc909efd34,44477878,0,0x0,8
tick,0x7ffc909efd34,44493333,0,0x0,8
tick,0x7ffc909efd34,44508564,0,0x0,8
tick,0x7ffc909efd34,44523966,0,0x0,8
tick,0x7ffc909efd34,44540158,0,0x0,8
tick,0x7ffc909efd34,44555376,0,0x0,8
tick,0x7ffc909efd34,44571434,0,0x0,8
tick,0x7ffc909efd34,44587633,0,0x0,8
tick,0x7ffc909efd34,44602695,0,0x0,8
tick,0x7ffc909efd34,44619179,0,0x0,8
tick,0x7ffc909efd34,44634530,0,0x0,8
tick,0x7ffc909efd34,44650241,0,0x0,8
tick,0x7ffc909efd34,44665937,0,0x0,8
tick,0x7ffc909efd34,44681540,0,0x0,8
tick,0x7ffc909efd34,44696177,0,0x0,8
tick,0x7ffc909efd34,44711174,0,0x0,8
tick,0x7ffc909efd34,44726777,0,0x0,8
tick,0x7ffc909efd34,44742288,0,0x0,8
tick,0x7ffc909efd34,44757459,0,0x0,8
tick,0x7ffc909efd34,44773131,0,0x0,8
tick,0x7ffc909efd34,44788914,0,0x0,8
tick,0x7ffc909efd34,44804605,0,0x0,8
tick,0x7ffc909efd34,44820014,0,0x0,8
tick,0x7ffc909efd34,44835665,0,0x0,8
tick,0x7ffc909efd34,44850968,0,0x0,8
tick,0x7ffc909efd34,44866389,0,0x0,8
tick,0x7ffc909efd34,44882218,0,0x0,8
tick,0x7ffc909efd34,44897561,0,0x0,8
tick,0x7ffc909efd34,44912752,0,0x0,8
tick,0x7ffc909efd34,44928330,0,0x0,8
tick,0x7ffc909efd34,44944528,0,0x0,8
tick,0x7ffc909efd34,44959650,0,0x0,8
tick,0x7ffc909efd34,44975251,0,0x0,8
tick,0x7ffc909efd34,44991070,0,0x0,8
tick,0x7ffc909efd34,45006651,0,0x0,8
tick,0x7ffc909efd34,45022657,0,0x0,8
tick,0x7ffc909efd34,45037955,0,0x0,8
tick,0x7ffc909efd34,45053966,0,0x0,8
tick,0x7ffc909efd34,45069242,0,0x0,8
tick,0x7ffc909efd34,45085313,0,0x0,8
tick,0x7ffc909efd34,45100647,0,0x0,8
tick,0x7ffc909efd34,45116675,0,0x0,8
tick,0x7ffc909efd34,45132656,0,0x0,8
tick,0x7ffc909efd34,45148873,0,0x0,8
tick,0x7ffc909efd34,45163716,0,0x0,8
tick,0x7ffc909efd34,45179641,0,0x0,8
tick,0x7ffc909efd34,45195681,0,0x0,8
tick,0x7ffc909efd34,45211750,0,0x0,8
tick,0x7ffc909efd34,45227745,0,0x0,8
tick,0x7ffc909efd34,45243643,0,0x0,8
tick,0x7ffc909efd34,45259651,0,0x0,8
tick,0x7ffc909efd34,45275656,0,0x0,8
tick,0x7ffc909efd34,45291676,0,0x0,8
tick,0x7ffc909efd34,45311701,0,0x0,8
tick,0x7ffc909efd34,45324054,0,0x0,8
tick,0x7ffc909efd34,45342335,0,0x0,8
tick,0x7ffc909efd34,45355672,0,0x0,8
tick,0x7ffc909efd34,45376079,0,0x0,8
tick,0x7ffc909efd34,45387780,0,0x0,8
tick,0x7ffc909efd34,45414095,0,0x0,8
tick,0x7ffc909efd34,45426305,0,0x0,8
tick,0x7ffc909efd34,45436186,0,0x0,8
tick,0x7ffc909efd34,45455960,0,0x0,8
tick,0x7ffc909efd34,45468764,0,0x0,8
tick,0x7ffc909efd34,45492008,0,0x0,8
tick,0x7ffc909efd34,45501028,0,0x0,8
tick,0x7ffc909efd34,45516946,0,0x0,8
tick,0x7ffc909efd34,45533226,0,0x0,8
tick,0x7ffc909efd34,45551286,0,0x0,8
tick,0x7ffc909efd34,45562674,0,0x0,8
tick,0x7ffc909efd34,45577685,0,0x0,8
tick,0x7ffc909efd34,45593674,0,0x0,8
tick,0x7ffc909efd34,45609707,0,0x0,8
tick,0x7ffc909efd34,45625650,0,0x0,8
tick,0x7ffc909efd34,45641652,0,0x0,8
tick,0x7ffc909efd34,45657635,0,0x0,8
tick,0x7ffc909efd34,45673707,0,0x0,8
tick,0x7ffc909efd34,45689210,0,0x0,8
tick,0x7ffc909efd34,45704193,0,0x0,8
tick,0x7ffc909efd34,45719400,0,0x0,8
tick,0x7ffc909efd34,45734851,0,0x0,8
tick,0x7ffc909efd34,45750062,0,0x0,8
tick,0x7ffc909efd34,45765817,0,0x0,8
tick,0x7ffc909efd34,45780691,0,0x0,8
tick,0x7ffc909efd34,45796212,0,0x0,8
tick,0x7ffc909efd34,45812272,0,0x0,8
tick,0x7ffc909efd34,45827417,0,0x0,8
tick,0x7ffc909efd34,45843453,0,0x0,8
tick,0x7ffc909efd34,45858625,0,0x0,8
tick,0x7ffc909efd34,45874204,0,0x0,8
tick,0x7ffc909efd34,45889339,0,0x0,8
tick,0x7ffc909efd34,45904995,0,0x0,8
tick,0x7ffc909efd34,45920277,0,0x0,8
tick,0x7ffc909efd34,45936259,0,0x0,8
tick,0x7ffc909efd34,45951187,0,0x0,8
tick,0x7ffc909efd34,45966540,0,0x0,8
tick,0x7ffc909efd34,45981669,0,0x0,8
tick,0x7ffc909efd34,45997053,0,0x0,8
tick,0x7ffc909efd34,46012886,0,0x0,8
tick,0x7ffc909efd34,46028421,0,0x0,8
tick,0x7ffc909efd34,46044213,0,0x0,8
tick,0x7ffc909efd34,46059401,0,0x0,8
tick,0x7ffc909efd34,46075643,0,0x0,8
tick,0x7ffc909efd34,46090956,0,0x0,8
tick,0x7ffc909efd34,46106637,0,0x0,8
tick,0x7ffc909efd34,46121276,0,0x0,8
tick,0x7ffc909efd34,46137004,0,0x0,8
tick,0x7ffc909efd34,46152460,0,0x0,8
tick,0x7ffc909efd34,46167580,0,0x0,8
tick,0x7ffc909efd34,46182972,0,0x0,8
tick,0x7ffc909efd34,46199147,0,0x0,8
tick,0x7ffc909efd34,46213789,0,0x0,8
tick,0x7ffc909efd34,46229049,0,0x0,8
tick,0x7ffc909efd34,46244804,0,0x0,8
tick,0x7ffc909efd34,46259696,0,0x0,8
tick,0x7ffc909efd34,46274767,0,0x0,8
tick,0x7ffc909efd34,46290393,0,0x0,8
tick,0x7ffc909efd34,46306167,0,0x0,8
tick,0x7ffc909efd34,46322063,0,0x0,8
tick,0x7ffc909efd34,46338082,0,0x0,8
tick,0x7ffc909efd34,46353506,0,0x0,8
tick,0x7ffc909efd34,46368686,0,0x0,8
tick,0x7ffc909efd34,46383445,0,0x0,8
tick,0x7ffc909efd34,46399390,0,0x0,8
tick,0x7ffc909efd34,46416243,0,0x0,8
tick,0x7ffc909efd34,46430568,0,0x0,8
tick,0x7ffc909efd34,46446210,0,0x0,8
tick,0x7ffc909efd34,46462253,0,0x0,8
tick,0x7ffc909efd34,46478078,0,0x0,8
tick,0x7ffc909efd34,46493709,0,0x0,8
tick,0x7ffc909efd34,46509557,0,0x0,8
tick,0x7ffc909efd34,46525026,0,0x0,8
tick,0x7ffc909efd34,46540668,0,0x0,8
tick,0x7ffc909efd34,46555922,0,0x0,8
tick,0x7ffc909efd34,46570904,0,0x0,8
tick,0x7ffc909efd34,46586012,0,0x0,8
tick,0x7ffc909efd34,46601820,0,0x0,8
tick,0x7ffc909efd34,46617203,0,0x0,8
tick,0x7ffc909efd34,46632681,0,0x0,8
tick,0x7ffc909efd34,46648084,0,0x0,8
tick,0x7ffc909efd34,46663469,0,0x0,8
tick,0x7ffc909efd34,46678752,0,0x0,8
tick,0x7ffc909efd34,46694569,0,0x0,8
tick,0x7ffc909efd34,46709866,0,0x0,8
tick,0x7ffc909efd34,46725078,0,0x0,8
tick,0x7ffc909efd34,46741388,0,0x0,8
tick,0x7ffc909efd34,46757140,0,0x0,8
tick,0x7ffc909efd34,46772928,0,0x0,8
tick,0x7ffc909efd34,46788050,0,0x0,8
tick,0x7ffc909efd34,46803437,0,0x0,8
tick,0x7ffc909efd34,46818277,0,0x0,8
tick,0x7ffc909efd34,46833158,0,0x0,8
tick,0x7ffc909efd34,46849185,0,0x0,8
tick,0x7ffc909efd34,46864308,0,0x0,8
tick,0x7ffc909efd34,46879686,0,0x0,8
tick,0x7ffc909efd34,46894934,0,0x0,8
tick,0x7ffc909efd34,46910086,0,0x0,8
tick,0x7ffc909efd34,46924953,0,0x0,8
tick,0x7ffc909efd34,46940097,0,0x0,8
tick,0x7ffc909efd34,46955950,0,0x0,8
tick,0x7ffc909efd34,46971283,0,0x0,8
tick,0x7ffc909efd34,46985791,0,0x0,8
tick,0x7ffc909efd34,47001167,0,0x0,8
tick,0x7ffc909efd34,47017034,0,0x0,8
tick,0x7ffc909efd34,47032541,0,0x0,8
tick,0x7ffc909efd34,47048480,0,0x0,8
tick,0x7ffc909efd34,47064587,0,0x0,8
tick,0x7ffc909efd34,47080607,0,0x0,8
tick,0x7ffc909efd34,47096618,0,0x0,8
tick,0x7ffc909efd34,47112674,0,0x0,8
tick,0x7ffc909efd34,47127774,0,0x0,8
tick,0x7ffc909efd34,47142976,0,0x0,8
tick,0x7ffc909efd34,47158419,0,0x0,8
tick,0x7ffc909efd34,47173984,0,0x0,8
tick,0x7ffc909efd34,47189476,0,0x0,8
tick,0x7ffc909efd34,47205327,0,0x0,8
tick,0x7ffc909efd34,47220478,0,0x0,8
tick,0x7ffc909efd34,47236200,0,0x0,8
tick,0x7ffc909efd34,47251332,0,0x0,8
tick,0x7ffc909efd34,47267419,0,0x0,8
tick,0x7ffc909efd34,47282740,0,0x0,8
tick,0x7ffc909efd34,47297830,0,0x0,8
tick,0x7ffc909efd34,47313236,0,0x0,8
tick,0x7ffc909efd34,47328669,0,0x0,8
tick,0x7ffc909efd34,47344354,0,0x0,8
tick,0x7ffc909efd34,47359695,0,0x0,8
tick,0x7ffc909efd34,47375011,0,0x0,8
tick,0x7ffc909efd34,47390408,0,0x0,8
tick,0x7ffc909efd34,47406006,0,0x0,8
tick,0x7ffc909efd34,47422112,0,0x0,8
tick,0x7ffc909efd34,47437442,0,0x0,8
tick,0x7ffc909efd34,47452769,0,0x0,8
tick,0x7ffc909efd34,47468702,0,0x0,8
tick,0x7ffc909efd34,47484196,0,0x0,8
tick,0x7ffc909efd34,47499389,0,0x0,8
tick,0x7ffc909efd34,47515405,0,0x0,8
tick,0x7ffc909efd34,47531758,0,0x0,8
tick,0x7ffc909efd34,47547119,0,0x0,8
tick,0x7ffc909efd34,47563367,0,0x0,8
tick,0x7ffc909efd34,47579499,0,0x0,8
tick,0x7ffc909efd34,47594959,0,0x0,8
tick,0x7ffc909efd34,47610268,0,0x0,8
tick,0x7ffc909efd34,47625772,0,0x0,8
tick,0x7ffc909efd34,47641237,0,0x0,8
tick,0x7ffc909efd34,47657242,0,0x0,8
tick,0x7ffc909efd34,47672606,0,0x0,8
tick,0x7ffc909efd34,47688331,0,0x0,8
tick,0x7ffc909efd34,47703600,0,0x0,8
tick,0x7ffc909efd34,47723082,0,0x0,8
tick,0x7ffc909efd34,47735863,0,0x0,8
tick,0x7ffc909efd34,47751997,0,0x0,8
tick,0x7ffc909efd34,47768528,0,0x0,8
tick,0x7ffc909efd34,47782775,0,0x0,8
tick,0x7ffc909efd34,47797675,0,0x0,8
tick,0x7ffc909efd34,47812693,0,0x0,8
tick,0x7ffc909efd34,47828750,0,0x0,8
tick,0x7ffc909efd34,47844687,0,0x0,8
tick,0x7ffc909efd34,47860626,0,0x0,8
tick,0x7ffc909efd34,47875758,0,0x0,8
tick,0x7ffc909efd34,47891808,0,0x0,8
tick,0x7ffc909efd34,47907435,0,0x0,8
tick,0x7ffc909efd34,47922815,0,0x0,8
tick,0x7ffc909efd34,47938385,0,0x0,8
tick,0x7ffc909efd34,47953389,0,0x0,8
tick,0x7ffc909efd34,47969390,0,0x0,8
tick,0x7ffc909efd34,47985069,0,0x0,8
tick,0x7ffc909efd34,48000524,0,0x0,8
tick,0x7ffc909efd34,48015851,0,0x0,8
tick,0x7ffc909efd34,48030967,0,0x0,8
tick,0x7ffc909efd34,48046355,0,0x0,8
tick,0x7ffc909efd34,48061565,0,0x0,8
tick,0x7ffc909efd34,48077069,0,0x0,8
tick,0x7ffc909efd34,48092680,0,0x0,8
tick,0x7ffc909efd34,48108489,0,0x0,8
tick,0x7ffc909efd34,48123733,0,0x0,8
tick,0x7ffc909efd34,48139339,0,0x0,8
tick,0x7ffc909efd34,48155026,0,0x0,8
tick,0x7ffc909efd34,48170812,0,0x0,8
tick,0x7ffc909efd34,48186408,0,0x0,8
tick,0x7ffc909efd34,48202087,0,0x0,8
tick,0x7ffc909efd34,48217925,0,0x0,8
tick,0x7ffc909efd34,48233463,0,0x0,8
tick,0x7ffc909efd34,48249219,0,0x0,8
tick,0x7ffc909efd34,48265145,0,0x0,8
tick,0x7ffc909efd34,48280912,0,0x0,8
tick,0x7ffc909efd34,48296708,0,0x0,8
tick,0x7ffc909efd34,48311991,0,0x0,8
tick,0x7ffc909efd34,48327862,0,0x0,8
tick,0x7ffc909efd34,48343357,0,0x0,8
tick,0x7ffc909efd34,48359490,0,0x0,8
tick,0x7ffc909efd34,48374357,0,0x0,8
tick,0x7ffc909efd34,48389663,0,0x0,8
tick,0x7ffc909efd34,48405009,0,0x0,8
tick,0x7ffc909efd34,48421224,0,0x0,8
tick,0x7ffc909efd34,48437319,0,0x0,8
tick,0x7ffc909efd34,48453261,0,0x0,8
tick,0x7ffc909efd34,48468207,0,0x0,8
tick,0x7ffc909efd34,48484303,0,0x0,8
tick,0x7ffc909efd34,48499239,0,0x0,8
tick,0x7ffc909efd34,48515025,0,0x0,8
tick,0x7ffc909efd34,48530079,0,0x0,8
tick,0x7ffc909efd34,48545252,0,0x0,8
tick,0x7ffc909efd34,48561241,0,0x0,8
tick,0x7ffc909efd34,48577239,0,0x0,8
tick,0x7ffc909efd34,48592360,0,0x0,8
tick,0x7ffc909efd34,48608160,0,0x0,8
tick,0x7ffc909efd34,48623191,0,0x0,8
tick,0x7ffc909efd34,48638070,0,0x0,8
tick,0x7ffc909efd34,48654048,0,0x0,8
tick,0x7ffc909efd34,48678959,0,0x0,8
tick,0x7ffc909efd34,48686052,0,0x0,8
tick,0x7ffc909efd34,48701082,0,0x0,8
tick,0x7ffc909efd34,48716074,0,0x0,8
tick,0x7ffc909efd34,48732113,0,0x0,8
tick,0x7ffc909efd34,48748163,0,0x0,8
tick,0x7ffc909efd34,48763399,0,0x0,8
tick,0x7ffc909efd34,48779277,0,0x0,8
tick,0x7ffc909efd34,48795086,0,0x0,8
tick,0x7ffc909efd34,48811270,0,0x0,8
tick,0x7ffc909efd34,48826601,0,0x0,8
tick,0x7ffc909efd34,48842115,0,0x0,8
tick,0x7ffc909efd34,48858115,0,0x0,8
tick,0x7ffc909efd34,48873731,0,0x0,8
tick,0x7ffc909efd34,48889353,0,0x0,8
tick,0x7ffc909efd34,48904942,0,0x0,8
tick,0x7ffc909efd34,48920027,0,0x0,8
tick,0x7ffc909efd34,48936160,0,0x0,8
tick,0x7ffc909efd34,48951005,0,0x0,8
tick,0x7ffc909efd34,48965759,0,0x0,8
tick,0x7ffc909efd34,48981908,0,0x0,8
tick,0x7ffc909efd34,48998375,0,0x0,8
tick,0x7ffc909efd34,49018742,0,0x0,8
tick,0x7ffc909efd34,49029807,0,0x0,8
tick,0x7ffc909efd34,49044972,0,0x0,8
tick,0x7ffc909efd34,49060916,0,0x0,8
tick,0x7ffc909efd34,49076870,0,0x0,8
tick,0x7ffc909efd34,49092259,0,0x0,8
tick,0x7ffc909efd34,49107463,0,0x0,8
tick,0x7ffc909efd34,49122959,0,0x0,8
tick,0x7ffc909efd34,49138911,0,0x0,8
tick,0x7ffc909efd34,49153881,0,0x0,8
tick,0x7ffc909efd34,49169543,0,0x0,8
tick,0x7ffc909efd34,49185225,0,0x0,8
tick,0x7ffc909efd34,49201096,0,0x0,8
tick,0x7ffc909efd34,49216881,0,0x0,8
tick,0x7ffc909efd34,49233212,0,0x0,8
tick,0x7ffc909efd34,49249222,0,0x0,8
tick,0x7ffc909efd34,49264938,0,0x0,8
tick,0x7ffc909efd34,49280780,0,0x0,8
tick,0x7ffc909efd34,49295451,0,0x0,8
tick,0x7ffc909efd34,49310755,0,0x0,8
tick,0x7ffc909efd34,49326391,0,0x0,8
tick,0x7ffc909efd34,49341637,0,0x0,8
tick,0x7ffc909efd34,49357001,0,0x0,8
tick,0x7ffc909efd34,49372540,0,0x0,8
tick,0x7ffc909efd34,49388153,0,0x0,8
tick,0x7ffc909efd34,49404414,0,0x0,8
tick,0x7ffc909efd34,49420219,0,0x0,8
tick,0x7ffc909efd34,49436662,0,0x0,8
tick,0x7ffc909efd34,49452123,0,0x0,8
tick,0x7ffc909efd34,49468186,0,0x0,8
tick,0x7ffc909efd34,49483220,0,0x0,8
tick,0x7ffc909efd34,49499109,0,0x0,8
tick,0x7ffc909efd34,49515707,0,0x0,8
tick,0x7ffc909efd34,49531946,0,0x0,8
tick,0x7ffc909efd34,49547202,0,0x0,8
tick,0x7ffc909efd34,49562225,0,0x0,8
tick,0x7ffc909efd34,49578229,0,0x0,8
tick,0x7ffc909efd34,49594321,0,0x0,8
tick,0x7ffc909efd34,49610521,0,0x0,8
tick,0x7ffc909efd34,49626119,0,0x0,8
tick,0x7ffc909efd34,49641734,0,0x0,8
tick,0x7ffc909efd34,49657649,0,0x0,8
tick,0x7ffc909efd34,49673112,0,0x0,8
tick,0x7ffc909efd34,49688881,0,0x0,8
tick,0x7ffc909efd34,49704464,0,0x0,8
tick,0x7ffc909efd34,49720628,0,0x0,8
tick,0x7ffc909efd34,49735936,0,0x0,8
tick,0x7ffc909efd34,49751591,0,0x0,8
tick,0x7ffc909efd34,49767616,0,0x0,8
tick,0x7ffc909efd34,49783354,0,0x0,8
tick,0x7ffc909efd34,49798725,0,0x0,8
tick,0x7ffc909efd34,49814229,0,0x0,8
tick,0x7ffc909efd34,49829924,0,0x0,8
tick,0x7ffc909efd34,49845142,0,0x0,8
tick,0x7ffc909efd34,49860400,0,0x0,8
tick,0x7ffc909efd34,49875882,0,0x0,8
tick,0x7ffc909efd34,49891491,0,0x0,8
tick,0x7ffc909efd34,49907248,0,0x0,8
tick,0x7ffc909efd34,49922438,0,0x0,8
tick,0x7ffc909efd34,49938429,0,0x0,8
tick,0x7ffc909efd34,49953625,0,0x0,8
tick,0x7ffc909efd34,49969634,0,0x0,8
tick,0x7ffc909efd34,49985290,0,0x0,8
tick,0x7ffc909efd34,50001303,0,0x0,8
tick,0x7ffc909efd34,50016968,0,0x0,8
tick,0x7ffc909efd34,50031845,0,0x0,8
tick,0x7ffc909efd34,50047300,0,0x0,8
tick,0x7ffc909efd34,50062661,0,0x0,8
tick,0x7ffc909efd34,50077986,0,0x0,8
tick,0x7ffc909efd34,50093555,0,0x0,8
tick,0x7ffc909efd34,50109573,0,0x0,8
tick,0x7ffc909efd34,50125190,0,0x0,8
tick,0x7ffc909efd34,50140332,0,0x0,8
tick,0x7ffc909efd34,50155440,0,0x0,8
tick,0x7ffc909efd34,50171463,0,0x0,8
tick,0x7ffc909efd34,50187424,0,0x0,8
tick,0x7ffc909efd34,50202686,0,0x0,8
tick,0x7ffc909efd34,50218021,0,0x0,8
tick,0x7ffc909efd34,50234022,0,0x0,8
tick,0x7ffc909efd34,50249893,0,0x0,8
tick,0x7ffc909efd34,50265204,0,0x0,8
tick,0x7ffc909efd34,50280373,0,0x0,8
tick,0x7ffc909efd34,50295677,0,0x0,8
tick,0x7ffc909efd34,50310976,0,0x0,8
tick,0x7ffc909efd34,50326627,0,0x0,8
tick,0x7ffc909efd34,50341749,0,0x0,8
tick,0x7ffc909efd34,50357774,0,0x0,8
tick,0x7ffc909efd34,50373276,0,0x0,8
tick,0x7ffc909efd34,50389363,0,0x0,8
tick,0x7ffc909efd34,50404681,0,0x0,8
tick,0x7ffc909efd34,50420355,0,0x0,8
tick,0x7ffc909efd34,50436193,0,0x0,8
tick,0x7ffc909efd34,50451502,0,0x0,8
tick,0x7ffc909efd34,50467529,0,0x0,8
tick,0x7ffc909efd34,50483363,0,0x0,8
tick,0x7ffc909efd34,50498524,0,0x0,8
tick,0x7ffc909efd34,50513815,0,0x0,8
tick,0x7ffc909efd34,50528936,0,0x0,8
tick,0x7ffc909efd34,50544554,0,0x0,8
tick,0x7ffc909efd34,50560343,0,0x0,8
tick,0x7ffc909efd34,50576291,0,0x0,8
tick,0x7ffc909efd34,50592277,0,0x0,8
tick,0x7ffc909efd34,50607587,0,0x0,8
tick,0x7ffc909efd34,50623206,0,0x0,8
tick,0x7ffc909efd34,50639500,0,0x0,8
tick,0x7ffc909efd34,50654920,0,0x0,8
tick,0x7ffc909efd34,50670910,0,0x0,8
tick,0x7ffc909efd34,50686437,0,0x0,8
tick,0x7ffc909efd34,50701628,0,0x0,8
tick,0x7ffc909efd34,50717416,0,0x0,8
tick,0x7ffc909efd34,50732652,0,0x0,8
tick,0x7ffc909efd34,50748430,0,0x0,8
tick,0x7ffc909efd34,50764526,0,0x0,8
tick,0x7ffc909efd34,50780372,0,0x0,8
tick,0x7ffc909efd34,50795535,0,0x0,8
tick,0x7ffc909efd34,50810788,0,0x0,8
tick,0x7ffc909efd34,50826307,0,0x0,8
tick,0x7ffc909efd34,50842676,0,0x0,8
tick,0x7ffc909efd34,50857991,0,0x0,8
tick,0x7ffc909efd34,50873655,0,0x0,8
tick,0x7ffc909efd34,50888961,0,0x0,8
tick,0x7ffc909efd34,50904394,0,0x0,8
tick,0x7ffc909efd34,50919997,0,0x0,8
tick,0x7ffc909efd34,50935965,0,0x0,8
tick,0x7ffc909efd34,50950964,0,0x0,8
tick,0x7ffc909efd34,50966310,0,0x0,8
tick,0x7ffc909efd34,50982291,0,0x0,8
tick,0x7ffc909efd34,50997710,0,0x0,8
tick,0x7ffc909efd34,51013655,0,0x0,8
tick,0x7ffc909efd34,51029345,0,0x0,8
tick,0x7ffc909efd34,51044939,0,0x0,8
tick,0x7ffc909efd34,51060435,0,0x0,8
tick,0x7ffc909efd34,51076112,0,0x0,8
tick,0x7ffc909efd34,51091843,0,0x0,8
tick,0x7ffc909efd34,51107363,0,0x0,8
tick,0x7ffc909efd34,51123178,0,0x0,8
tick,0x7ffc909efd34,51138615,0,0x0,8
tick,0x7ffc909efd34,51154595,0,0x0,8
tick,0x7ffc909efd34,51170782,0,0x0,8
tick,0x7ffc909efd34,51186260,0,0x0,8
tick,0x7ffc909efd34,51201739,0,0x0,8
tick,0x7ffc909efd34,51217104,0,0x0,8
tick,0x7ffc909efd34,51232351,0,0x0,8
tick,0x7ffc909efd34,51247687,0,0x0,8
tick,0x7ffc909efd34,51262977,0,0x0,8
tick,0x7ffc909efd34,51278270,0,0x0,8
tick,0x7ffc909efd34,51294275,0,0x0,8
tick,0x7ffc909efd34,51309763,0,0x0,8
tick,0x7ffc909efd34,51325371,0,0x0,8
tick,0x7ffc909efd34,51341448,0,0x0,8
tick,0x7ffc909efd34,51357013,0,0x0,8
tick,0x7ffc909efd34,51372589,0,0x0,8
tick,0x7ffc909efd34,51388218,0,0x0,8
tick,0x7ffc909efd34,51403868,0,0x0,8
tick,0x7ffc909efd34,51420179,0,0x0,8
tick,0x7ffc909efd34,51435367,0,0x0,8
tick,0x7ffc909efd34,51451373,0,0x0,8
tick,0x7ffc909efd34,51466612,0,0x0,8
tick,0x7ffc909efd34,51482629,0,0x0,8
tick,0x7ffc909efd34,51497809,0,0x0,8
tick,0x7ffc909efd34,51512994,0,0x0,8
tick,0x7ffc909efd34,51528635,0,0x0,8
tick,0x7ffc909efd34,51544289,0,0x0,8
tick,0x7ffc909efd34,51560111,0,0x0,8
tick,0x7ffc909efd34,51575443,0,0x0,8
tick,0x7ffc909efd34,51591486,0,0x0,8
tick,0x7ffc909efd34,51606668,0,0x0,8
tick,0x7ffc909efd34,51622089,0,0x0,8
tick,0x7ffc909efd34,51637601,0,0x0,8
tick,0x7ffc909efd34,51652901,0,0x0,8
tick,0x7ffc909efd34,51668982,0,0x0,8
tick,0x7ffc909efd34,51684618,0,0x0,8
tick,0x7ffc909efd34,51700607,0,0x0,8
tick,0x7ffc909efd34,51716343,0,0x0,8
tick,0x7ffc909efd34,51732329,0,0x0,8
tick,0x7ffc909efd34,51747443,0,0x0,8
tick,0x7ffc909efd34,51762896,0,0x0,8
tick,0x7ffc909efd34,51777592,0,0x0,8
tick,0x7ffc909efd34,51792696,0,0x0,8
tick,0x7ffc909efd34,51808425,0,0x0,8
tick,0x7ffc909efd34,51823998,0,0x0,8
tick,0x7ffc909efd34,51840315,0,0x0,8
tick,0x7ffc909efd34,51855415,0,0x0,8
tick,0x7ffc909efd34,51871015,0,0x0,8
tick,0x7ffc909efd34,51887278,0,0x0,8
tick,0x7ffc909efd34,51902529,0,0x0,8
tick,0x7ffc909efd34,51918465,0,0x0,8
tick,0x7ffc909efd34,51934135,0,0x0,8
tick,0x7ffc909efd34,51949294,0,0x0,8
tick,0x7ffc909efd34,51965075,0,0x0,8
tick,0x7ffc909efd34,51981127,0,0x0,8
tick,0x7ffc909efd34,51996474,0,0x0,8
tick,0x7ffc909efd34,52012177,0,0x0,8
tick,0x7ffc909efd34,52027417,0,0x0,8
tick,0x7ffc909efd34,52042850,0,0x0,8
tick,0x7ffc909efd34,52058013,0,0x0,8
tick,0x7ffc909efd34,52073751,0,0x0,8
tick,0x7ffc909efd34,52089643,0,0x0,8
tick,0x7ffc909efd34,52105331,0,0x0,8
tick,0x7ffc909efd34,52120601,0,0x0,8
tick,0x7ffc909efd34,52136131,0,0x0,8
tick,0x7ffc909efd34,52151690,0,0x0,8
tick,0x7ffc909efd34,52167125,0,0x0,8
tick,0x7ffc909efd34,52182604,0,0x0,8
tick,0x7ffc909efd34,52198191,0,0x0,8
tick,0x7ffc909efd34,52213385,0,0x0,8
tick,0x7ffc909efd34,52229000,0,0x0,8
tick,0x7ffc909efd34,52244601,0,0x0,8
tick,0x7ffc909efd34,52260212,0,0x0,8
tick,0x7ffc909efd34,52275742,0,0x0,8
tick,0x7ffc909efd34,52291250,0,0x0,8
tick,0x7ffc909efd34,52306753,0,0x0,8
tick,0x7ffc909efd34,52322291,0,0x0,8
tick,0x7ffc909efd34,52338269,0,0x0,8
tick,0x7ffc909efd34,52353642,0,0x0,8
tick,0x7ffc909efd34,52368954,0,0x0,8
tick,0x7ffc909efd34,52384398,0,0x0,8
tick,0x7ffc909efd34,52400496,0,0x0,8
tick,0x7ffc909efd34,52416278,0,0x0,8
tick,0x7ffc909efd34,52431804,0,0x0,8
tick,0x7ffc909efd34,52447593,0,0x0,8
tick,0x7ffc909efd34,52463209,0,0x0,8
tick,0x7ffc909efd34,52478451,0,0x0,8
tick,0x7ffc909efd34,52494126,0,0x0,8
tick,0x7ffc909efd34,52509527,0,0x0,8
tick,0x7ffc909efd34,52525280,0,0x0,8
tick,0x7ffc909efd34,52540833,0,0x0,8
tick,0x7ffc909efd34,52556485,0,0x0,8
tick,0x7ffc909efd34,52572403,0,0x0,8
tick,0x7ffc909efd34,52588232,0,0x0,8
tick,0x7ffc909efd34,52604590,0,0x0,8
tick,0x7ffc909efd34,52620048,0,0x0,8
tick,0x7ffc909efd34,52635412,0,0x0,8
tick,0x7ffc909efd34,52651574,0,0x0,8
tick,0x7ffc909efd34,52666975,0,0x0,8
tick,0x7ffc909efd34,52682704,0,0x0,8
tick,0x7ffc909efd34,52698090,0,0x0,8
tick,0x7ffc909efd34,52714118,0,0x0,8
tick,0x7ffc909efd34,52729332,0,0x0,8
tick,0x7ffc909efd34,52744781,0,0x0,8
tick,0x7ffc909efd34,52760906,0,0x0,8
tick,0x7ffc909efd34,52776769,0,0x0,8
tick,0x7ffc909efd34,52791965,0,0x0,8
tick,0x7ffc909efd34,52807887,0,0x0,8
tick,0x7ffc909efd34,52822697,0,0x0,8
tick,0x7ffc909efd34,52838499,0,0x0,8
tick,0x7ffc909efd34,52854246,0,0x0,8
tick,0x7ffc909efd34,52870190,0,0x0,8
tick,0x7ffc909efd34,52885986,0,0x0,8
tick,0x7ffc909efd34,52901564,0,0x0,8
tick,0x7ffc909efd34,52917361,0,0x0,8
tick,0x7ffc909efd34,52932668,0,0x0,8
tick,0x7ffc909efd34,52948946,0,0x0,8
tick,0x7ffc909efd34,52964353,0,0x0,8
tick,0x7ffc909efd34,52979302,0,0x0,8
tick,0x7ffc909efd34,52995250,0,0x0,8
tick,0x7ffc909efd34,53011550,0,0x0,8
tick,0x7ffc909efd34,53026944,0,0x0,8
tick,0x7ffc909efd34,53042276,0,0x0,8
tick,0x7ffc909efd34,53057540,0,0x0,8
tick,0x7ffc909efd34,53072756,0,0x0,8
tick,0x7ffc909efd34,53089158,0,0x0,8
tick,0x7ffc909efd34,53105219,0,0x0,8
tick,0x7ffc909efd34,53120536,0,0x0,8
tick,0x7ffc909efd34,53136032,0,0x0,8
tick,0x7ffc909efd34,53151857,0,0x0,8
tick,0x7ffc909efd34,53167156,0,0x0,8
tick,0x7ffc909efd34,53183154,0,0x0,8
tick,0x7ffc909efd34,53199842,0,0x0,8
tick,0x7ffc909efd34,53214165,0,0x0,8
tick,0x7ffc909efd34,53228981,0,0x0,8
tick,0x7ffc909efd34,53245087,0,0x0,8
tick,0x7ffc909efd34,53261074,0,0x0,8
tick,0x7ffc909efd34,53276898,0,0x0,8
tick,0x7ffc909efd34,53292155,0,0x0,8
tick,0x7ffc909efd34,53307333,0,0x0,8
tick,0x7ffc909efd34,53323130,0,0x0,8
tick,0x7ffc909efd34,53338571,0,0x0,8
tick,0x7ffc909efd34,53353898,0,0x0,8
tick,0x7ffc909efd34,53369620,0,0x0,8
tick,0x7ffc909efd34,53385201,0,0x0,8
tick,0x7ffc909efd34,53401096,0,0x0,8
tick,0x7ffc909efd34,53416188,0,0x0,8
tick,0x7ffc909efd34,53431840,0,0x0,8
tick,0x7ffc909efd34,53447557,0,0x0,8
tick,0x7ffc909efd34,53462596,0,0x0,8
tick,0x7ffc909efd34,53477714,0,0x0,8
tick,0x7ffc909efd34,53493740,0,0x0,8
tick,0x7ffc909efd34,53509378,0,0x0,8
tick,0x7ffc909efd34,53524882,0,0x0,8
tick,0x7ffc909efd34,53541084,0,0x0,8
tick,0x7ffc909efd34,53556247,0,0x0,8
tick,0x7ffc909efd34,53572358,0,0x0,8
tick,0x7ffc909efd34,53588627,0,0x0,8
tick,0x7ffc909efd34,53603097,0,0x0,8
tick,0x7ffc909efd34,53618008,0,0x0,8
tick,0x7ffc909efd34,53633999,0,0x0,8
tick,0x7ffc909efd34,53649523,0,0x0,8
tick,0x7ffc909efd34,53664992,0,0x0,8
tick,0x7ffc909efd34,53680867,0,0x0,8
tick,0x7ffc909efd34,53695694,0,0x0,8
tick,0x7ffc909efd34,53711314,0,0x0,8
tick,0x7ffc909efd34,53726951,0,0x0,8
tick,0x7ffc909efd34,53742525,0,0x0,8
tick,0x7ffc909efd34,53758000,0,0x0,8
tick,0x7ffc909efd34,53773087,0,0x0,8
tick,0x7ffc909efd34,53789328,0,0x0,8
tick,0x7ffc909efd34,53804581,0,0x0,8
tick,0x7ffc909efd34,53820379,0,0x0,8
tick,0x7ffc909efd34,53835744,0,0x0,8
tick,0x7ffc909efd34,53851541,0,0x0,8
tick,0x7ffc909efd34,53867072,0,0x0,8
tick,0x7ffc909efd34,53883032,0,0x0,8
tick,0x7ffc909efd34,53898403,0,0x0,8
tick,0x7ffc909efd34,53913771,0,0x0,8
tick,0x7ffc909efd34,53929731,0,0x0,8
tick,0x7ffc909efd34,53945413,0,0x0,8
tick,0x7ffc909efd34,53960787,0,0x0,8
tick,0x7ffc909efd34,53976301,0,0x0,8
tick,0x7ffc909efd34,53991948,0,0x0,8
tick,0x7ffc909efd34,54007355,0,0x0,8
tick,0x7ffc909efd34,54023267,0,0x0,8
tick,0x7ffc909efd34,54038417,0,0x0,8
tick,0x7ffc909efd34,54053997,0,0x0,8
tick,0x7ffc909efd34,54069352,0,0x0,8
tick,0x7ffc909efd34,54085374,0,0x0,8
tick,0x7ffc909efd34,54101550,0,0x0,8
tick,0x7ffc909efd34,54116980,0,0x0,8
tick,0x7ffc909efd34,54132750,0,0x0,8
tick,0x7ffc909efd34,54148259,0,0x0,8
tick,0x7ffc909efd34,54164236,0,0x0,8
tick,0x7ffc909efd34,54180089,0,0x0,8
tick,0x7ffc909efd34,54196129,0,0x0,8
tick,0x7ffc909efd34,54211663,0,0x0,8
tick,0x7ffc909efd34,54227273,0,0x0,8
tick,0x7ffc909efd34,54242365,0,0x0,8
tick,0x7ffc909efd34,54258387,0,0x0,8
tick,0x7ffc909efd34,54274151,0,0x0,8
tick,0x7ffc909efd34,54289542,0,0x0,8
tick,0x7ffc909efd34,54304867,0,0x0,8
tick,0x7ffc909efd34,54320423,0,0x0,8
tick,0x7ffc909efd34,54336298,0,0x0,8
tick,0x7ffc909efd34,54351807,0,0x0,8
tick,0x7ffc909efd34,54367110,0,0x0,8
tick,0x7ffc909efd34,54382569,0,0x0,8
tick,0x7ffc909efd34,54397974,0,0x0,8
tick,0x7ffc909efd34,54413565,0,0x0,8
tick,0x7ffc909efd34,54428828,0,0x0,8
tick,0x7ffc909efd34,54444454,0,0x0,8
tick,0x7ffc909efd34,54460193,0,0x0,8
tick,0x7ffc909efd34,54475624,0,0x0,8
tick,0x7ffc909efd34,54491286,0,0x0,8
tick,0x7ffc909efd34,54507301,0,0x0,8
tick,0x7ffc909efd34,54522498,0,0x0,8
tick,0x7ffc909efd34,54538134,0,0x0,8
tick,0x7ffc909efd34,54553803,0,0x0,8
tick,0x7ffc909efd34,54569366,0,0x0,8
tick,0x7ffc909efd34,54585063,0,0x0,8
tick,0x7ffc909efd34,54600567,0,0x0,8
tick,0x7ffc909efd34,54616510,0,0x0,8
tick,0x7ffc909efd34,54632537,0,0x0,8
tick,0x7ffc909efd34,54648199,0,0x0,8
tick,0x7ffc909efd34,54664030,0,0x0,8
tick,0x7ffc909efd34,54679229,0,0x0,8
tick,0x7ffc909efd34,54695143,0,0x0,8
tick,0x7ffc909efd34,54710758,0,0x0,8
tick,0x7ffc909efd34,54726384,0,0x0,8
tick,0x7ffc909efd34,54741691,0,0x0,8
tick,0x7ffc909efd34,54757092,0,0x0,8
tick,0x7ffc909efd34,54772718,0,0x0,8
tick,0x7ffc909efd34,54788551,0,0x0,8
tick,0x7ffc909efd34,54803922,0,0x0,8
tick,0x7ffc909efd34,54819266,0,0x0,8
tick,0x7ffc909efd34,54835432,0,0x0,8
tick,0x7ffc909efd34,54851267,0,0x0,8
tick,0x7ffc909efd34,54867492,0,0x0,8
tick,0x7ffc909efd34,54883551,0,0x0,8
tick,0x7ffc909efd34,54899099,0,0x0,8
tick,0x7ffc909efd34,54914917,0,0x0,8
tick,0x7ffc909efd34,54930876,0,0x0,8
tick,0x7ffc909efd34,54947161,0,0x0,8
tick,0x7ffc909efd34,54963543,0,0x0,8
tick,0x7ffc909efd34,54979312,0,0x0,8
tick,0x7ffc909efd34,54994322,0,0x0,8
tick,0x7ffc909efd34,55010354,0,0x0,8
tick,0x7ffc909efd34,55025665,0,0x0,8
tick,0x7ffc909efd34,55041119,0,0x0,8
tick,0x7ffc909efd34,55056604,0,0x0,8
tick,0x7ffc909efd34,55071853,0,0x0,8
tick,0x7ffc909efd34,55088120,0,0x0,8
tick,0x7ffc909efd34,55104421,0,0x0,8
tick,0x7ffc909efd34,55120347,0,0x0,8
tick,0x7ffc909efd34,55136331,0,0x0,8
tick,0x7ffc909efd34,55151819,0,0x0,8
tick,0x7ffc909efd34,55167222,0,0x0,8
tick,0x7ffc909efd34,55182213,0,0x0,8
tick,0x7ffc909efd34,55198312,0,0x0,8
tick,0x7ffc909efd34,55214116,0,0x0,8
tick,0x7ffc909efd34,55229507,0,0x0,8
tick,0x7ffc909efd34,55245653,0,0x0,8
tick,0x7ffc909efd34,55261095,0,0x0,8
tick,0x7ffc909efd34,55276761,0,0x0,8
tick,0x7ffc909efd34,55292377,0,0x0,8
tick,0x7ffc909efd34,55307554,0,0x0,8
tick,0x7ffc909efd34,55322880,0,0x0,8
tick,0x7ffc909efd34,55338868,0,0x0,8
tick,0x7ffc909efd34,55354341,0,0x0,8
tick,0x7ffc909efd34,55370635,0,0x0,8
tick,0x7ffc909efd34,55386346,0,0x0,8
tick,0x7ffc909efd34,55401559,0,0x0,8
tick,0x7ffc909efd34,55417161,0,0x0,8
tick,0x7ffc909efd34,55433214,0,0x0,8
tick,0x7ffc909efd34,55449252,0,0x0,8
tick,0x7ffc909efd34,55464721,0,0x0,8
tick,0x7ffc909efd34,55480486,0,0x0,8
tick,0x7ffc909efd34,55495530,0,0x0,8
tick,0x7ffc909efd34,55510692,0,0x0,8
tick,0x7ffc909efd34,55526049,0,0x0,8
tick,0x7ffc909efd34,55541188,0,0x0,8
tick,0x7ffc909efd34,55556792,0,0x0,8
tick,0x7ffc909efd34,55572769,0,0x0,8
tick,0x7ffc909efd34,55588014,0,0x0,8
tick,0x7ffc909efd34,55603254,0,0x0,8
tick,0x7ffc909efd34,55619210,0,0x0,8
tick,0x7ffc909efd34,55634797,0,0x0,8
tick,0x7ffc909efd34,55650190,0,0x0,8
tick,0x7ffc909efd34,55665435,0,0x0,8
tick,0x7ffc909efd34,55681396,0,0x0,8
tick,0x7ffc909efd34,55697365,0,0x0,8
tick,0x7ffc909efd34,55713492,0,0x0,8
tick,0x7ffc909efd34,55728549,0,0x0,8
tick,0x7ffc909efd34,55744424,0,0x0,8
tick,0x7ffc909efd34,55760064,0,0x0,8
tick,0x7ffc909efd34,55775798,0,0x0,8
tick,0x7ffc909efd34,55791831,0,0x0,8
tick,0x7ffc909efd34,55807540,0,0x0,8
tick,0x7ffc909efd34,55823026,0,0x0,8
tick,0x7ffc909efd34,55839322,0,0x0,8
tick,0x7ffc909efd34,55853908,0,0x0,8
tick,0x7ffc909efd34,55869518,0,0x0,8
tick,0x7ffc909efd34,55885375,0,0x0,8
tick,0x7ffc909efd34,55901054,0,0x0,8
tick,0x7ffc909efd34,55917339,0,0x0,8
tick,0x7ffc909efd34,55932793,0,0x0,8
tick,0x7ffc909efd34,55948556,0,0x0,8
tick,0x7ffc909efd34,55964218,0,0x0,8
tick,0x7ffc909efd34,55980235,0,0x0,8
tick,0x7ffc909efd34,55996331,0,0x0,8
tick,0x7ffc909efd34,56011611,0,0x0,8
tick,0x7ffc909efd34,56027387,0,0x0,8
tick,0x7ffc909efd34,56042900,0,0x0,8
tick,0x7ffc909efd34,56058439,0,0x0,8
tick,0x7ffc909efd34,56074207,0,0x0,8
tick,0x7ffc909efd34,56089797,0,0x0,8
tick,0x7ffc909efd34,56105366,0,0x0,8
tick,0x7ffc909efd34,56120642,0,0x0,8
tick,0x7ffc909efd34,56136369,0,0x0,8
tick,0x7ffc909efd34,56152073,0,0x0,8
tick,0x7ffc909efd34,56167455,0,0x0,8
tick,0x7ffc909efd34,56183132,0,0x0,8
tick,0x7ffc909efd34,56198565,0,0x0,8
tick,0x7ffc909efd34,56214333,0,0x0,8
tick,0x7ffc909efd34,56229524,0,0x0,8
tick,0x7ffc909efd34,56244849,0,0x0,8
tick,0x7ffc909efd34,56260857,0,0x0,8
tick,0x7ffc909efd34,56276434,0,0x0,8
tick,0x7ffc909efd34,56291880,0,0x0,8
tick,0x7ffc909efd34,56307402,0,0x0,8
tick,0x7ffc909efd34,56322862,0,0x0,8
tick,0x7ffc909efd34,56338304,0,0x0,8
tick,0x7ffc909efd34,56353825,0,0x0,8
tick,0x7ffc909efd34,56369295,0,0x0,8
tick,0x7ffc909efd34,56385092,0,0x0,8
tick,0x7ffc909efd34,56400879,0,0x0,8
tick,0x7ffc909efd34,56416504,0,0x0,8
tick,0x7ffc909efd34,56431966,0,0x0,8
tick,0x7ffc909efd34,56447575,0,0x0,8
tick,0x7ffc909efd34,56462497,0,0x0,8
tick,0x7ffc909efd34,56478254,0,0x0,8
tick,0x7ffc909efd34,56493873,0,0x0,8
tick,0x7ffc909efd34,56509618,0,0x0,8
tick,0x7ffc909efd34,56525705,0,0x0,8
tick,0x7ffc909efd34,56540872,0,0x0,8
tick,0x7ffc909efd34,56556492,0,0x0,8
tick,0x7ffc909efd34,56572035,0,0x0,8
tick,0x7ffc909efd34,56587565,0,0x0,8
tick,0x7ffc909efd34,56602836,0,0x0,8
tick,0x7ffc909efd34,56618529,0,0x0,8
tick,0x7ffc909efd34,56634371,0,0x0,8
tick,0x7ffc909efd34,56649784,0,0x0,8
tick,0x7ffc909efd34,56665876,0,0x0,8
tick,0x7ffc909efd34,56681587,0,0x0,8
tick,0x7ffc909efd34,56697234,0,0x0,8
tick,0x7ffc909efd34,56712388,0,0x0,8
tick,0x7ffc909efd34,56728256,0,0x0,8
tick,0x7ffc909efd34,56743882,0,0x0,8
tick,0x7ffc909efd34,56759022,0,0x0,8
tick,0x7ffc909efd34,56774573,0,0x0,8
tick,0x7ffc909efd34,56790953,0,0x0,8
tick,0x7ffc909efd34,56806419,0,0x0,8
tick,0x7ffc909efd34,56821557,0,0x0,8
tick,0x7ffc909efd34,56837180,0,0x0,8
tick,0x7ffc909efd34,56852396,0,0x0,8
tick,0x7ffc909efd34,56868797,0,0x0,8
tick,0x7ffc909efd34,56884353,0,0x0,8
tick,0x7ffc909efd34,56899897,0,0x0,8
tick,0x7ffc909efd34,56915584,0,0x0,8
tick,0x7ffc909efd34,56931380,0,0x0,8
tick,0x7ffc909efd34,56946876,0,0x0,8
tick,0x7ffc909efd34,56962149,0,0x0,8
tick,0x7ffc909efd34,56977800,0,0x0,8
tick,0x7ffc909efd34,56993504,0,0x0,8
tick,0x7ffc909efd34,57008350,0,0x0,8
tick,0x7ffc909efd34,57023226,0,0x0,8
tick,0x7ffc909efd34,57038781,0,0x0,8
tick,0x7ffc909efd34,57054704,0,0x0,8
tick,0x7ffc909efd34,57070742,0,0x0,8
tick,0x7ffc909efd34,57086309,0,0x0,8
tick,0x7ffc909efd34,57101834,0,0x0,8
tick,0x7ffc909efd34,57117548,0,0x0,8
tick,0x7ffc909efd34,57133104,0,0x0,8
tick,0x7ffc909efd34,57148684,0,0x0,8
tick,0x7ffc909efd34,57164327,0,0x0,8
tick,0x7ffc909efd34,57180090,0,0x0,8
tick,0x7ffc909efd34,57195497,0,0x0,8
tick,0x7ffc909efd34,57210854,0,0x0,8
tick,0x7ffc909efd34,57227171,0,0x0,8
tick,0x7ffc909efd34,57242809,0,0x0,8
tick,0x7ffc909efd34,57258491,0,0x0,8
tick,0x7ffc909efd34,57273818,0,0x0,8
tick,0x7ffc909efd34,57290214,0,0x0,8
tick,0x7ffc909efd34,57306295,0,0x0,8
tick,0x7ffc909efd34,57321833,0,0x0,8
tick,0x7ffc909efd34,57337134,0,0x0,8
tick,0x7ffc909efd34,57352636,0,0x0,8
tick,0x7ffc909efd34,57368556,0,0x0,8
tick,0x7ffc909efd34,57384291,0,0x0,8
tick,0x7ffc909efd34,57399676,0,0x0,8
tick,0x7ffc909efd34,57415165,0,0x0,8
tick,0x7ffc909efd34,57430577,0,0x0,8
tick,0x7ffc909efd34,57446083,0,0x0,8
tick,0x7ffc909efd34,57461526,0,0x0,8
tick,0x7ffc909efd34,57477108,0,0x0,8
tick,0x7ffc909efd34,57492643,0,0x0,8
tick,0x7ffc909efd34,57508200,0,0x0,8
tick,0x7ffc909efd34,57524347,0,0x0,8
tick,0x7ffc909efd34,57540699,0,0x0,8
tick,0x7ffc909efd34,57555910,0,0x0,8
tick,0x7ffc909efd34,57571244,0,0x0,8
tick,0x7ffc909efd34,57586737,0,0x0,8
tick,0x7ffc909efd34,57602180,0,0x0,8
tick,0x7ffc909efd34,57618118,0,0x0,8
tick,0x7ffc909efd34,57633513,0,0x0,8
tick,0x7ffc909efd34,57648542,0,0x0,8
tick,0x7ffc909efd34,57664249,0,0x0,8
tick,0x7ffc909efd34,57679195,0,0x0,8
tick,0x7ffc909efd34,57694053,0,0x0,8
tick,0x7ffc909efd34,57710323,0,0x0,8
tick,0x7ffc909efd34,57726232,0,0x0,8
tick,0x7ffc909efd34,57741608,0,0x0,8
tick,0x7ffc909efd34,57757258,0,0x0,8
tick,0x7ffc909efd34,57772899,0,0x0,8
tick,0x7ffc909efd34,57788393,0,0x0,8
tick,0x7ffc909efd34,57804689,0,0x0,8
tick,0x7ffc909efd34,57820203,0,0x0,8
tick,0x7ffc909efd34,57835689,0,0x0,8
tick,0x7ffc909efd34,57851412,0,0x0,8
tick,0x7ffc909efd34,57867234,0,0x0,8
tick,0x7ffc909efd34,57882995,0,0x0,8
tick,0x7ffc909efd34,57898325,0,0x0,8
tick,0x7ffc909efd34,57914060,0,0x0,8
tick,0x7ffc909efd34,57929211,0,0x0,8
tick,0x7ffc909efd34,57944552,0,0x0,8
tick,0x7ffc909efd34,57959784,0,0x0,8
tick,0x7ffc909efd34,57975465,0,0x0,8
tick,0x7ffc909efd34,57990769,0,0x0,8
tick,0x7ffc909efd34,58006056,0,0x0,8
tick,0x7ffc909efd34,58021318,0,0x0,8
tick,0x7ffc909efd34,58036817,0,0x0,8
tick,0x7ffc909efd34,58052095,0,0x0,8
tick,0x7ffc909efd34,58067918,0,0x0,8
tick,0x7ffc909efd34,58083890,0,0x0,8
tick,0x7ffc909efd34,58099300,0,0x0,8
tick,0x7ffc909efd34,58115207,0,0x0,8
tick,0x7ffc909efd34,58130475,0,0x0,8
tick,0x7ffc909efd34,58146302,0,0x0,8
tick,0x7ffc909efd34,58162535,0,0x0,8
tick,0x7ffc909efd34,58177765,0,0x0,8
tick,0x7ffc909efd34,58193398,0,0x0,8
tick,0x7ffc909efd34,58209405,0,0x0,8
tick,0x7ffc909efd34,58225025,0,0x0,8
tick,0x7ffc909efd34,58240440,0,0x0,8
tick,0x7ffc909efd34,58256050,0,0x0,8
tick,0x7ffc909efd34,58271465,0,0x0,8
tick,0x7ffc909efd34,58286854,0,0x0,8
tick,0x7ffc909efd34,58302343,0,0x0,8
tick,0x7ffc909efd34,58318207,0,0x0,8
tick,0x7ffc909efd34,58334145,0,0x0,8
tick,0x7ffc909efd34,58349450,0,0x0,8
tick,0x7ffc909efd34,58365127,0,0x0,8
tick,0x7ffc909efd34,58380505,0,0x0,8
tick,0x7ffc909efd34,58396338,0,0x0,8
tick,0x7ffc909efd34,58412718,0,0x0,8
tick,0x7ffc909efd34,58427825,0,0x0,8
tick,0x7ffc909efd34,58443355,0,0x0,8
tick,0x7ffc909efd34,58458746,0,0x0,8
tick,0x7ffc909efd34,58474350,0,0x0,8
tick,0x7ffc909efd34,58489633,0,0x0,8
tick,0x7ffc909efd34,58505835,0,0x0,8
tick,0x7ffc909efd34,58520764,0,0x0,8
tick,0x7ffc909efd34,58536107,0,0x0,8
tick,0x7ffc909efd34,58551244,0,0x0,8
tick,0x7ffc909efd34,58566878,0,0x0,8
tick,0x7ffc909efd34,58582033,0,0x0,8
tick,0x7ffc909efd34,58597785,0,0x0,8
tick,0x7ffc909efd34,58612971,0,0x0,8
tick,0x7ffc909efd34,58628177,0,0x0,8
tick,0x7ffc909efd34,58644042,0,0x0,8
tick,0x7ffc909efd34,58659523,0,0x0,8
tick,0x7ffc909efd34,58674967,0,0x0,8
tick,0x7ffc909efd34,58690131,0,0x0,8
tick,0x7ffc909efd34,58705375,0,0x0,8
tick,0x7ffc909efd34,58721479,0,0x0,8
tick,0x7ffc909efd34,58736972,0,0x0,8
tick,0x7ffc909efd34,58752946,0,0x0,8
tick,0x7ffc909efd34,58768454,0,0x0,8
tick,0x7ffc909efd34,58783818,0,0x0,8
tick,0x7ffc909efd34,58799467,0,0x0,8
tick,0x7ffc909efd34,58815562,0,0x0,8
tick,0x7ffc909efd34,58831545,0,0x0,8
tick,0x7ffc909efd34,58847062,0,0x0,8
tick,0x7ffc909efd34,58862930,0,0x0,8
tick,0x7ffc909efd34,58878201,0,0x0,8
tick,0x7ffc909efd34,58893938,0,0x0,8
tick,0x7ffc909efd34,58909206,0,0x0,8
tick,0x7ffc909efd34,58924614,0,0x0,8
tick,0x7ffc909efd34,58940126,0,0x0,8
tick,0x7ffc909efd34,58955887,0,0x0,8
tick,0x7ffc909efd34,58971284,0,0x0,8
tick,0x7ffc909efd34,58987362,0,0x0,8
tick,0x7ffc909efd34,59002972,0,0x0,8
tick,0x7ffc909efd34,59019067,0,0x0,8
tick,0x7ffc909efd34,59034708,0,0x0,8
tick,0x7ffc909efd34,59050096,0,0x0,8
tick,0x7ffc909efd34,59065861,0,0x0,8
tick,0x7ffc909efd34,59081430,0,0x0,8
tick,0x7ffc909efd34,59097676,0,0x0,8
tick,0x7ffc909efd34,59113868,0,0x0,8
tick,0x7ffc909efd34,59129366,0,0x0,8
tick,0x7ffc909efd34,59144611,0,0x0,8
tick,0x7ffc909efd34,59160262,0,0x0,8
tick,0x7ffc909efd34,59176133,0,0x0,8
tick,0x7ffc909efd34,59191545,0,0x0,8
tick,0x7ffc909efd34,59207072,0,0x0,8
tick,0x7ffc909efd34,59222704,0,0x0,8
tick,0x7ffc909efd34,59237817,0,0x0,8
tick,0x7ffc909efd34,59253508,0,0x0,8
tick,0x7ffc909efd34,59268647,0,0x0,8
tick,0x7ffc909efd34,59284158,0,0x0,8
tick,0x7ffc909efd34,59299510,0,0x0,8
tick,0x7ffc909efd34,59315121,0,0x0,8
tick,0x7ffc909efd34,59330397,0,0x0,8
tick,0x7ffc909efd34,59346165,0,0x0,8
tick,0x7ffc909efd34,59361489,0,0x0,8
tick,0x7ffc909efd34,59377662,0,0x0,8
tick,0x7ffc909efd34,59392558,0,0x0,8
tick,0x7ffc909efd34,59407315,0,0x0,8
tick,0x7ffc909efd34,59422803,0,0x0,8
tick,0x7ffc909efd34,59438682,0,0x0,8
tick,0x7ffc909efd34,59454359,0,0x0,8
tick,0x7ffc909efd34,59470027,0,0x0,8
tick,0x7ffc909efd34,59485539,0,0x0,8
tick,0x7ffc909efd34,59501126,0,0x0,8
tick,0x7ffc909efd34,59517075,0,0x0,8
tick,0x7ffc909efd34,59532939,0,0x0,8
tick,0x7ffc909efd34,59548603,0,0x0,8
tick,0x7ffc909efd34,59564032,0,0x0,8
tick,0x7ffc909efd34,59579577,0,0x0,8
tick,0x7ffc909efd34,59594852,0,0x0,8
tick,0x7ffc909efd34,59610577,0,0x0,8
tick,0x7ffc909efd34,59626593,0,0x0,8
tick,0x7ffc909efd34,59642365,0,0x0,8
tick,0x7ffc909efd34,59657658,0,0x0,8
tick,0x7ffc909efd34,59673465,0,0x0,8
tick,0x7ffc909efd34,59689504,0,0x0,8
tick,0x7ffc909efd34,59704865,0,0x0,8
tick,0x7ffc909efd34,59721339,0,0x0,8
tick,0x7ffc909efd34,59737080,0,0x0,8
tick,0x7ffc909efd34,59753273,0,0x0,8
tick,0x7ffc909efd34,59769307,0,0x0,8
tick,0x7ffc909efd34,59784851,0,0x0,8
tick,0x7ffc909efd34,59800405,0,0x0,8
tick,0x7ffc909efd34,59816789,0,0x0,8
tick,0x7ffc909efd34,59832208,0,0x0,8
tick,0x7ffc909efd34,59847498,0,0x0,8
tick,0x7ffc909efd34,59862722,0,0x0,8
tick,0x7ffc909efd34,59878003,0,0x0,8
tick,0x7ffc909efd34,59893728,0,0x0,8
tick,0x7ffc909efd34,59909436,0,0x0,8
tick,0x7ffc909efd34,59924862,0,0x0,8
tick,0x7ffc909efd34,59940339,0,0x0,8
tick,0x7ffc909efd34,59955683,0,0x0,8
tick,0x7ffc909efd34,59971244,0,0x0,8
tick,0x7ffc909efd34,59986683,0,0x0,8
tick,0x7ffc909efd34,60002280,0,0x0,8
tick,0x7ffc909efd34,60018141,0,0x0,8
tick,0x7ffc909efd34,60033669,0,0x0,8
tick,0x7ffc909efd34,60049020,0,0x0,8
tick,0x7ffc909efd34,60064289,0,0x0,8
tick,0x7ffc909efd34,60078988,0,0x0,8
tick,0x7ffc909efd34,60094432,0,0x0,8
tick,0x7ffc909efd34,60110016,0,0x0,8
tick,0x7ffc909efd34,60125812,0,0x0,8
tick,0x7ffc909efd34,60141502,0,0x0,8
tick,0x7ffc909efd34,60156919,0,0x0,8
tick,0x7ffc909efd34,60172428,0,0x0,8
tick,0x7ffc909efd34,60187775,0,0x0,8
tick,0x7ffc909efd34,60203488,0,0x0,8
tick,0x7ffc909efd34,60219024,0,0x0,8
tick,0x7ffc909efd34,60234907,0,0x0,8
tick,0x7ffc909efd34,60250465,0,0x0,8
tick,0x7ffc909efd34,60265848,0,0x0,8
tick,0x7ffc909efd34,60281216,0,0x0,8
tick,0x7ffc909efd34,60297060,0,0x0,8
tick,0x7ffc909efd34,60312349,0,0x0,8
tick,0x7ffc909efd34,60327554,0,0x0,8
tick,0x7ffc909efd34,60342782,0,0x0,8
tick,0x7ffc909efd34,60358588,0,0x0,8
tick,0x7ffc909efd34,60374564,0,0x0,8
tick,0x7ffc909efd34,60390139,0,0x0,8
tick,0x7ffc909efd34,60405819,0,0x0,8
tick,0x7ffc909efd34,60421259,0,0x0,8
tick,0x7ffc909efd34,60436741,0,0x0,8
tick,0x7ffc909efd34,60452331,0,0x0,8
tick,0x7ffc909efd34,60467953,0,0x0,8
tick,0x7ffc909efd34,60483880,0,0x0,8
tick,0x7ffc909efd34,60499394,0,0x0,8
tick,0x7ffc909efd34,60514872,0,0x0,8
tick,0x7ffc909efd34,60531154,0,0x0,8
tick,0x7ffc909efd34,60546349,0,0x0,8
tick,0x7ffc909efd34,60561663,0,0x0,8
tick,0x7ffc909efd34,60577049,0,0x0,8
tick,0x7ffc909efd34,60592699,0,0x0,8
tick,0x7ffc909efd34,60608602,0,0x0,8
tick,0x7ffc909efd34,60623954,0,0x0,8
tick,0x7ffc909efd34,60640271,0,0x0,8
tick,0x7ffc909efd34,60655842,0,0x0,8
tick,0x7ffc909efd34,60671080,0,0x0,8
tick,0x7ffc909efd34,60686637,0,0x0,8
tick,0x7ffc909efd34,60702245,0,0x0,8
tick,0x7ffc909efd34,60718102,0,0x0,8
tick,0x7ffc909efd34,60733661,0,0x0,8
tick,0x7ffc909efd34,60749075,0,0x0,8
tick,0x7ffc909efd34,60765019,0,0x0,8
tick,0x7ffc909efd34,60780412,0,0x0,8
tick,0x7ffc909efd34,60796126,0,0x0,8
tick,0x7ffc909efd34,60812480,0,0x0,8
tick,0x7ffc909efd34,60827706,0,0x0,8
tick,0x7ffc909efd34,60843675,0,0x0,8
tick,0x7ffc909efd34,60859310,0,0x0,8
tick,0x7ffc909efd34,60875246,0,0x0,8
tick,0x7ffc909efd34,60890796,0,0x0,8
tick,0x7ffc909efd34,60906733,0,0x0,8
tick,0x7ffc909efd34,60922206,0,0x0,8
tick,0x7ffc909efd34,60938149,0,0x0,8
tick,0x7ffc909efd34,60953775,0,0x0,8
tick,0x7ffc909efd34,60969380,0,0x0,8
tick,0x7ffc909efd34,60984630,0,0x0,8
tick,0x7ffc909efd34,61000176,0,0x0,8
tick,0x7ffc909efd34,61015758,0,0x0,8
tick,0x7ffc909efd34,61031153,0,0x0,8
tick,0x7ffc909efd34,61046361,0,0x0,8
tick,0x7ffc909efd34,61061544,0,0x0,8
tick,0x7ffc909efd34,61077215,0,0x0,8
tick,0x7ffc909efd34,61092889,0,0x0,8
tick,0x7ffc909efd34,61108697,0,0x0,8
tick,0x7ffc909efd34,61124620,0,0x0,8
tick,0x7ffc909efd34,61139972,0,0x0,8
tick,0x7ffc909efd34,61155486,0,0x0,8
tick,0x7ffc909efd34,61170853,0,0x0,8
tick,0x7ffc909efd34,61186290,0,0x0,8
tick,0x7ffc909efd34,61201893,0,0x0,8
tick,0x7ffc909efd34,61217473,0,0x0,8
tick,0x7ffc909efd34,61233455,0,0x0,8
tick,0x7ffc909efd34,61248960,0,0x0,8
tick,0x7ffc909efd34,61264496,0,0x0,8
tick,0x7ffc909efd34,61280478,0,0x0,8
tick,0x7ffc909efd34,61296039,0,0x0,8
tick,0x7ffc909efd34,61311925,0,0x0,8
tick,0x7ffc909efd34,61327192,0,0x0,8
tick,0x7ffc909efd34,61342768,0,0x0,8
tick,0x7ffc909efd34,61358044,0,0x0,8
tick,0x7ffc909efd34,61373800,0,0x0,8
tick,0x7ffc909efd34,61389452,0,0x0,8
tick,0x7ffc909efd34,61405165,0,0x0,8
tick,0x7ffc909efd34,61420367,0,0x0,8
tick,0x7ffc909efd34,61435606,0,0x0,8
tick,0x7ffc909efd34,61450922,0,0x0,8
tick,0x7ffc909efd34,61466330,0,0x0,8
tick,0x7ffc909efd34,61481826,0,0x0,8
tick,0x7ffc909efd34,61497334,0,0x0,8
tick,0x7ffc909efd34,61513293,0,0x0,8
tick,0x7ffc909efd34,61529087,0,0x0,8
tick,0x7ffc909efd34,61544728,0,0x0,8
tick,0x7ffc909efd34,61560540,0,0x0,8
tick,0x7ffc909efd34,61576548,0,0x0,8
tick,0x7ffc909efd34,61592259,0,0x0,8
tick,0x7ffc909efd34,61607509,0,0x0,8
tick,0x7ffc909efd34,61623335,0,0x0,8
tick,0x7ffc909efd34,61638977,0,0x0,8
tick,0x7ffc909efd34,61654428,0,0x0,8
tick,0x7ffc909efd34,61669874,0,0x0,8
tick,0x7ffc909efd34,61685759,0,0x0,8
tick,0x7ffc909efd34,61701449,0,0x0,8
tick,0x7ffc909efd34,61716982,0,0x0,8
tick,0x7ffc909efd34,61732414,0,0x0,8
tick,0x7ffc909efd34,61747829,0,0x0,8
tick,0x7ffc909efd34,61763767,0,0x0,8
tick,0x7ffc909efd34,61779552,0,0x0,8
tick,0x7ffc909efd34,61795130,0,0x0,8
tick,0x7ffc909efd34,61811067,0,0x0,8
tick,0x7ffc909efd34,61827136,0,0x0,8
tick,0x7ffc909efd34,61842427,0,0x0,8
tick,0x7ffc909efd34,61858036,0,0x0,8
tick,0x7ffc909efd34,61873207,0,0x0,8
tick,0x7ffc909efd34,61888523,0,0x0,8
tick,0x7ffc909efd34,61904148,0,0x0,8
tick,0x7ffc909efd34,61919349,0,0x0,8
tick,0x7ffc909efd34,61934892,0,0x0,8
tick,0x7ffc909efd34,61950380,0,0x0,8
tick,0x7ffc909efd34,61965843,0,0x0,8
tick,0x7ffc909efd34,61981383,0,0x0,8
tick,0x7ffc909efd34,61996800,0,0x0,8
tick,0x7ffc909efd34,62012532,0,0x0,8
tick,0x7ffc909efd34,62028107,0,0x0,8
tick,0x7ffc909efd34,62043927,0,0x0,8
tick,0x7ffc909efd34,62059195,0,0x0,8
tick,0x7ffc909efd34,62075376,0,0x0,8
tick,0x7ffc909efd34,62090766,0,0x0,8
tick,0x7ffc909efd34,62106180,0,0x0,8
tick,0x7ffc909efd34,62121881,0,0x0,8
tick,0x7ffc909efd34,62137266,0,0x0,8
tick,0x7ffc909efd34,62153524,0,0x0,8
tick,0x7ffc909efd34,62169170,0,0x0,8
tick,0x7ffc909efd34,62184715,0,0x0,8
tick,0x7ffc909efd34,62200008,0,0x0,8
tick,0x7ffc909efd34,62215709,0,0x0,8
tick,0x7ffc909efd34,62231069,0,0x0,8
tick,0x7ffc909efd34,62246548,0,0x0,8
tick,0x7ffc909efd34,62262075,0,0x0,8
tick,0x7ffc909efd34,62277341,0,0x0,8
tick,0x7ffc909efd34,62292910,0,0x0,8
tick,0x7ffc909efd34,62308742,0,0x0,8
tick,0x7ffc909efd34,62323662,0,0x0,8
tick,0x7ffc909efd34,62340021,0,0x0,8
tick,0x7ffc909efd34,62355536,0,0x0,8
tick,0x7ffc909efd34,62370828,0,0x0,8
tick,0x7ffc909efd34,62386087,0,0x0,8
tick,0x7ffc909efd34,62401316,0,0x0,8
tick,0x7ffc909efd34,62417173,0,0x0,8
tick,0x7ffc909efd34,62433259,0,0x0,8
tick,0x7ffc909efd34,62448809,0,0x0,8
tick,0x7ffc909efd34,62464223,0,0x0,8
tick,0x7ffc909efd34,62479803,0,0x0,8
tick,0x7ffc909efd34,62495065,0,0x0,8
tick,0x7ffc909efd34,62510938,0,0x0,8
tick,0x7ffc909efd34,62526441,0,0x0,8
tick,0x7ffc909efd34,62541819,0,0x0,8
tick,0x7ffc909efd34,62557475,0,0x0,8
tick,0x7ffc909efd34,62572498,0,0x0,8
tick,0x7ffc909efd34,62588080,0,0x0,8
tick,0x7ffc909efd34,62604092,0,0x0,8
tick,0x7ffc909efd34,62620401,0,0x0,8
tick,0x7ffc909efd34,62634751,0,0x0,8
tick,0x7ffc909efd34,62650837,0,0x0,8
tick,0x7ffc909efd34,62666324,0,0x0,8
tick,0x7ffc909efd34,62682351,0,0x0,8
tick,0x7ffc909efd34,62697553,0,0x0,8
tick,0x7ffc909efd34,62713018,0,0x0,8
tick,0x7ffc909efd34,62728987,0,0x0,8
tick,0x7ffc909efd34,62744093,0,0x0,8
tick,0x7ffc909efd34,62760028,0,0x0,8
tick,0x7ffc909efd34,62775565,0,0x0,8
tick,0x7ffc909efd34,62791402,0,0x0,8
tick,0x7ffc909efd34,62807029,0,0x0,8
tick,0x7ffc909efd34,62822415,0,0x0,8
tick,0x7ffc909efd34,62838135,0,0x0,8
tick,0x7ffc909efd34,62853433,0,0x0,8
tick,0x7ffc909efd34,62868938,0,0x0,8
tick,0x7ffc909efd34,62884459,0,0x0,8
tick,0x7ffc909efd34,62899964,0,0x0,8
tick,0x7ffc909efd34,62915588,0,0x0,8
tick,0x7ffc909efd34,62930889,0,0x0,8
tick,0x7ffc909efd34,62946507,0,0x0,8
tick,0x7ffc909efd34,62962081,0,0x0,8
tick,0x7ffc909efd34,62977407,0,0x0,8
tick,0x7ffc909efd34,62993125,0,0x0,8
tick,0x7ffc909efd34,63008609,0,0x0,8
tick,0x7ffc909efd34,63023981,0,0x0,8
tick,0x7ffc909efd34,63039497,0,0x0,8
tick,0x7ffc909efd34,63055153,0,0x0,8
tick,0x7ffc909efd34,63070798,0,0x0,8
tick,0x7ffc909efd34,63086415,0,0x0,8
tick,0x7ffc909efd34,63102037,0,0x0,8
tick,0x7ffc909efd34,63117576,0,0x0,8
tick,0x7ffc909efd34,63133400,0,0x0,8
tick,0x7ffc909efd34,63148912,0,0x0,8
tick,0x7ffc909efd34,63164472,0,0x0,8
tick,0x7ffc909efd34,63179767,0,0x0,8
tick,0x7ffc909efd34,63195036,0,0x0,8
tick,0x7ffc909efd34,63210221,0,0x0,8
tick,0x7ffc909efd34,63225711,0,0x0,8
tick,0x7ffc909efd34,63241813,0,0x0,8
tick,0x7ffc909efd34,63257003,0,0x0,8
tick,0x7ffc909efd34,63272364,0,0x0,8
tick,0x7ffc909efd34,63288453,0,0x0,8
tick,0x7ffc909efd34,63304083,0,0x0,8
tick,0x7ffc909efd34,63319474,0,0x0,8
tick,0x7ffc909efd34,63335398,0,0x0,8
tick,0x7ffc909efd34,63350727,0,0x0,8
tick,0x7ffc909efd34,63365969,0,0x0,8
tick,0x7ffc909efd34,63381644,0,0x0,8
tick,0x7ffc909efd34,63397215,0,0x0,8
tick,0x7ffc909efd34,63412780,0,0x0,8
tick,0x7ffc909efd34,63427977,0,0x0,8
tick,0x7ffc909efd34,63443581,0,0x0,8
tick,0x7ffc909efd34,63459131,0,0x0,8
tick,0x7ffc909efd34,63474489,0,0x0,8
tick,0x7ffc909efd34,63489837,0,0x0,8
tick,0x7ffc909efd34,63505518,0,0x0,8
tick,0x7ffc909efd34,63521630,0,0x0,8
tick,0x7ffc909efd34,63537167,0,0x0,8
tick,0x7ffc909efd34,63553307,0,0x0,8
tick,0x7ffc909efd34,63568881,0,0x0,8
tick,0x7ffc909efd34,63584384,0,0x0,8
tick,0x7ffc909efd34,63599817,0,0x0,8
tick,0x7ffc909efd34,63615607,0,0x0,8
tick,0x7ffc909efd34,63630785,0,0x0,8
tick,0x7ffc909efd34,63646208,0,0x0,8
tick,0x7ffc909efd34,63662282,0,0x0,8
tick,0x7ffc909efd34,63677399,0,0x0,8
tick,0x7ffc909efd34,63692443,0,0x0,8
tick,0x7ffc909efd34,63708069,0,0x0,8
tick,0x7ffc909efd34,63724092,0,0x0,8
tick,0x7ffc909efd34,63739424,0,0x0,8
tick,0x7ffc909efd34,63755112,0,0x0,8
tick,0x7ffc909efd34,63771529,0,0x0,8
tick,0x7ffc909efd34,63786833,0,0x0,8
tick,0x7ffc909efd34,63802032,0,0x0,8
tick,0x7ffc909efd34,63817389,0,0x0,8
tick,0x7ffc909efd34,63832873,0,0x0,8
tick,0x7ffc909efd34,63848229,0,0x0,8
tick,0x7ffc909efd34,63863171,0,0x0,8
tick,0x7ffc909efd34,63878099,0,0x0,8
tick,0x7ffc909efd34,63892862,0,0x0,8
tick,0x7ffc909efd34,63907841,0,0x0,8
tick,0x7ffc909efd34,63923525,0,0x0,8
tick,0x7ffc909efd34,63939331,0,0x0,8
tick,0x7ffc909efd34,63954902,0,0x0,8
tick,0x7ffc909efd34,63970793,0,0x0,8
tick,0x7ffc909efd34,63986229,0,0x0,8
tick,0x7ffc909efd34,64001668,0,0x0,8
tick,0x7ffc909efd34,64017132,0,0x0,8
tick,0x7ffc909efd34,64032558,0,0x0,8
tick,0x7ffc909efd34,64048093,0,0x0,8
tick,0x7ffc909efd34,64063097,0,0x0,8
tick,0x7ffc909efd34,64078636,0,0x0,8
tick,0x7ffc909efd34,64094255,0,0x0,8
tick,0x7ffc909efd34,64109968,0,0x0,8
tick,0x7ffc909efd34,64125766,0,0x0,8
tick,0x7ffc909efd34,64141001,0,0x0,8
tick,0x7ffc909efd34,64156833,0,0x0,8
tick,0x7ffc909efd34,64172624,0,0x0,8
tick,0x7ffc909efd34,64188054,0,0x0,8
tick,0x7ffc909efd34,64203778,0,0x0,8
tick,0x7ffc909efd34,64220108,0,0x0,8
tick,0x7ffc909efd34,64236003,0,0x0,8
tick,0x7ffc909efd34,64250838,0,0x0,8
tick,0x7ffc909efd34,64266513,0,0x0,8
tick,0x7ffc909efd34,64282267,0,0x0,8
tick,0x7ffc909efd34,64297555,0,0x0,8
tick,0x7ffc909efd34,64313049,0,0x0,8
tick,0x7ffc909efd34,64328469,0,0x0,8
tick,0x7ffc909efd34,64343653,0,0x0,8
tick,0x7ffc909efd34,64359875,0,0x0,8
tick,0x7ffc909efd34,64375649,0,0x0,8
tick,0x7ffc909efd34,64391448,0,0x0,8
tick,0x7ffc909efd34,64407120,0,0x0,8
tick,0x7ffc909efd34,64422277,0,0x0,8
tick,0x7ffc909efd34,64437493,0,0x0,8
tick,0x7ffc909efd34,64452836,0,0x0,8
tick,0x7ffc909efd34,64468368,0,0x0,8
tick,0x7ffc909efd34,64483977,0,0x0,8
tick,0x7ffc909efd34,64499158,0,0x0,8
tick,0x7ffc909efd34,64515297,0,0x0,8
tick,0x7ffc909efd34,64531252,0,0x0,8
tick,0x7ffc909efd34,64546501,0,0x0,8
tick,0x7ffc909efd34,64562557,0,0x0,8
tick,0x7ffc909efd34,64578735,0,0x0,8
tick,0x7ffc909efd34,64594237,0,0x0,8
tick,0x7ffc909efd34,64609641,0,0x0,8
tick,0x7ffc909efd34,64625127,0,0x0,8
tick,0x7ffc909efd34,64641299,0,0x0,8
tick,0x7ffc909efd34,64656456,0,0x0,8
tick,0x7ffc909efd34,64671996,0,0x0,8
tick,0x7ffc909efd34,64687510,0,0x0,8
tick,0x7ffc909efd34,64703087,0,0x0,8
tick,0x7ffc909efd34,64719348,0,0x0,8
tick,0x7ffc909efd34,64735414,0,0x0,8
tick,0x7ffc909efd34,64751013,0,0x0,8
tick,0x7ffc909efd34,64766610,0,0x0,8
tick,0x7ffc909efd34,64782303,0,0x0,8
tick,0x7ffc909efd34,64797715,0,0x0,8
tick,0x7ffc909efd34,64813881,0,0x0,8
tick,0x7ffc909efd34,64829247,0,0x0,8
tick,0x7ffc909efd34,64845655,0,0x0,8
tick,0x7ffc909efd34,64860556,0,0x0,8
tick,0x7ffc909efd34,64875984,0,0x0,8
tick,0x7ffc909efd34,64891224,0,0x0,8
tick,0x7ffc909efd34,64907071,0,0x0,8
tick,0x7ffc909efd34,64922419,0,0x0,8
tick,0x7ffc909efd34,64938185,0,0x0,8
tick,0x7ffc909efd34,64953957,0,0x0,8
tick,0x7ffc909efd34,64969432,0,0x0,8
tick,0x7ffc909efd34,64985425,0,0x0,8
tick,0x7ffc909efd34,65000705,0,0x0,8
tick,0x7ffc909efd34,65016193,0,0x0,8
tick,0x7ffc909efd34,65031968,0,0x0,8
tick,0x7ffc909efd34,65047949,0,0x0,8
tick,0x7ffc909efd34,65063314,0,0x0,8
tick,0x7ffc909efd34,65078851,0,0x0,8
tick,0x7ffc909efd34,65095352,0,0x0,8
tick,0x7ffc909efd34,65110112,0,0x0,8
tick,0x7ffc909efd34,65125362,0,0x0,8
tick,0x7ffc909efd34,65141496,0,0x0,8
tick,0x7ffc909efd34,65157572,0,0x0,8
tick,0x7ffc909efd34,65172904,0,0x0,8
tick,0x7ffc909efd34,65188876,0,0x0,8
tick,0x7ffc909efd34,65204893,0,0x0,8
tick,0x7ffc909efd34,65220329,0,0x0,8
tick,0x7ffc909efd34,65236630,0,0x0,8
tick,0x7ffc909efd34,65252026,0,0x0,8
tick,0x7ffc909efd34,65268151,0,0x0,8
tick,0x7ffc909efd34,65283330,0,0x0,8
tick,0x7ffc909efd34,65299304,0,0x0,8
tick,0x7ffc909efd34,65314884,0,0x0,8
tick,0x7ffc909efd34,65330398,0,0x0,8
tick,0x7ffc909efd34,65346637,0,0x0,8
tick,0x7ffc909efd34,65362126,0,0x0,8
tick,0x7ffc909efd34,65377770,0,0x0,8
tick,0x7ffc909efd34,65392973,0,0x0,8
tick,0x7ffc909efd34,65408762,0,0x0,8
tick,0x7ffc909efd34,65424603,0,0x0,8
tick,0x7ffc909efd34,65440954,0,0x0,8
tick,0x7ffc909efd34,65456344,0,0x0,8
tick,0x7ffc909efd34,65471436,0,0x0,8
tick,0x7ffc909efd34,65486799,0,0x0,8
tick,0x7ffc909efd34,65502022,0,0x0,8
tick,0x7ffc909efd34,65517660,0,0x0,8
tick,0x7ffc909efd34,65533069,0,0x0,8
tick,0x7ffc909efd34,65548957,0,0x0,8
tick,0x7ffc909efd34,65564640,0,0x0,8
tick,0x7ffc909efd34,65580153,0,0x0,8
tick,0x7ffc909efd34,65595639,0,0x0,8
tick,0x7ffc909efd34,65611693,0,0x0,8
tick,0x7ffc909efd34,65627340,0,0x0,8
tick,0x7ffc909efd34,65642819,0,0x0,8
tick,0x7ffc909efd34,65658077,0,0x0,8
tick,0x7ffc909efd34,65673588,0,0x0,8
tick,0x7ffc909efd34,65689141,0,0x0,8
tick,0x7ffc909efd34,65704910,0,0x0,8
tick,0x7ffc909efd34,65720781,0,0x0,8
tick,0x7ffc909efd34,65736326,0,0x0,8
tick,0x7ffc909efd34,65751855,0,0x0,8
tick,0x7ffc909efd34,65766667,0,0x0,8
tick,0x7ffc909efd34,65782450,0,0x0,8
tick,0x7ffc909efd34,65798460,0,0x0,8
tick,0x7ffc909efd34,65814795,0,0x0,8
tick,0x7ffc909efd34,65830031,0,0x0,8
tick,0x7ffc909efd34,65845346,0,0x0,8
tick,0x7ffc909efd34,65861413,0,0x0,8
tick,0x7ffc909efd34,65877072,0,0x0,8
tick,0x7ffc909efd34,65892493,0,0x0,8
tick,0x7ffc909efd34,65908142,0,0x0,8
tick,0x7ffc909efd34,65923508,0,0x0,8
tick,0x7ffc909efd34,65939801,0,0x0,8
tick,0x7ffc909efd34,65955804,0,0x0,8
tick,0x7ffc909efd34,65971088,0,0x0,8
tick,0x7ffc909efd34,65986464,0,0x0,8
tick,0x7ffc909efd34,66002190,0,0x0,8
tick,0x7ffc909efd34,66017656,0,0x0,8
tick,0x7ffc909efd34,66033533,0,0x0,8
tick,0x7ffc909efd34,66049485,0,0x0,8
tick,0x7ffc909efd34,66064744,0,0x0,8
tick,0x7ffc909efd34,66080134,0,0x0,8
tick,0x7ffc909efd34,66095628,0,0x0,8
tick,0x7ffc909efd34,66111350,0,0x0,8
tick,0x7ffc909efd34,66127426,0,0x0,8
tick,0x7ffc909efd34,66142897,0,0x0,8
tick,0x7ffc909efd34,66158323,0,0x0,8
tick,0x7ffc909efd34,66174161,0,0x0,8
tick,0x7ffc909efd34,66189333,0,0x0,8
tick,0x7ffc909efd34,66205024,0,0x0,8
tick,0x7ffc909efd34,66220889,0,0x0,8
tick,0x7ffc909efd34,66236242,0,0x0,8
tick,0x7ffc909efd34,66251799,0,0x0,8
tick,0x7ffc909efd34,66267959,0,0x0,8
tick,0x7ffc909efd34,66283651,0,0x0,8
tick,0x7ffc909efd34,66299091,0,0x0,8
tick,0x7ffc909efd34,66314653,0,0x0,8
tick,0x7ffc909efd34,66329554,0,0x0,8
tick,0x7ffc909efd34,66344956,0,0x0,8
tick,0x7ffc909efd34,66360817,0,0x0,8
tick,0x7ffc909efd34,66376410,0,0x0,8
tick,0x7ffc909efd34,66392117,0,0x0,8
tick,0x7ffc909efd34,66407498,0,0x0,8
tick,0x7ffc909efd34,66423434,0,0x0,8
tick,0x7ffc909efd34,66438711,0,0x0,8
tick,0x7ffc909efd34,66454317,0,0x0,8
tick,0x7ffc909efd34,66470678,0,0x0,8
tick,0x7ffc909efd34,66486324,0,0x0,8
tick,0x7ffc909efd34,66501915,0,0x0,8
tick,0x7ffc909efd34,66517563,0,0x0,8
tick,0x7ffc909efd34,66533360,0,0x0,8
tick,0x7ffc909efd34,66549277,0,0x0,8
tick,0x7ffc909efd34,66565383,0,0x0,8
tick,0x7ffc909efd34,66580970,0,0x0,8
tick,0x7ffc909efd34,66596954,0,0x0,8
tick,0x7ffc909efd34,66612657,0,0x0,8
tick,0x7ffc909efd34,66628144,0,0x0,8
tick,0x7ffc909efd34,66643902,0,0x0,8
tick,0x7ffc909efd34,66659362,0,0x0,8
tick,0x7ffc909efd34,66675213,0,0x0,8
tick,0x7ffc909efd34,66690908,0,0x0,8
tick,0x7ffc909efd34,66706963,0,0x0,8
tick,0x7ffc909efd34,66722605,0,0x0,8
tick,0x7ffc909efd34,66737965,0,0x0,8
tick,0x7ffc909efd34,66753233,0,0x0,8
tick,0x7ffc909efd34,66769394,0,0x0,8
tick,0x7ffc909efd34,66785199,0,0x0,8
tick,0x7ffc909efd34,66800703,0,0x0,8
tick,0x7ffc909efd34,66816682,0,0x0,8
tick,0x7ffc909efd34,66831940,0,0x0,8
tick,0x7ffc909efd34,66847914,0,0x0,8
tick,0x7ffc909efd34,66863909,0,0x0,8
tick,0x7ffc909efd34,66879247,0,0x0,8
tick,0x7ffc909efd34,66895014,0,0x0,8
tick,0x7ffc909efd34,66910741,0,0x0,8
tick,0x7ffc909efd34,66926911,0,0x0,8
tick,0x7ffc909efd34,66943068,0,0x0,8
tick,0x7ffc909efd34,66958278,0,0x0,8
tick,0x7ffc909efd34,66973545,0,0x0,8
tick,0x7ffc909efd34,66989153,0,0x0,8
tick,0x7ffc909efd34,67004445,0,0x0,8
tick,0x7ffc909efd34,67020228,0,0x0,8
tick,0x7ffc909efd34,67036128,0,0x0,8
tick,0x7ffc909efd34,67051601,0,0x0,8
tick,0x7ffc909efd34,67066716,0,0x0,8
tick,0x7ffc909efd34,67082054,0,0x0,8
tick,0x7ffc909efd34,67097362,0,0x0,8
tick,0x7ffc909efd34,67113372,0,0x0,8
tick,0x7ffc909efd34,67129106,0,0x0,8
tick,0x7ffc909efd34,67144674,0,0x0,8
tick,0x7ffc909efd34,67160020,0,0x0,8
tick,0x7ffc909efd34,67175810,0,0x0,8
tick,0x7ffc909efd34,67191214,0,0x0,8
tick,0x7ffc909efd34,67207340,0,0x0,8
tick,0x7ffc909efd34,67221963,0,0x0,8
tick,0x7ffc909efd34,67236967,0,0x0,8
tick,0x7ffc909efd34,67252478,0,0x0,8
tick,0x7ffc909efd34,67268538,0,0x0,8
tick,0x7ffc909efd34,67283835,0,0x0,8
tick,0x7ffc909efd34,67299537,0,0x0,8
tick,0x7ffc909efd34,67314781,0,0x0,8
tick,0x7ffc909efd34,67330839,0,0x0,8
tick,0x7ffc909efd34,67346830,0,0x0,8
tick,0x7ffc909efd34,67362787,0,0x0,8
tick,0x7ffc909efd34,67378233,0,0x0,8
tick,0x7ffc909efd34,67394031,0,0x0,8
tick,0x7ffc909efd34,67409895,0,0x0,8
tick,0x7ffc909efd34,67425557,0,0x0,8
tick,0x7ffc909efd34,67440877,0,0x0,8
tick,0x7ffc909efd34,67456488,0,0x0,8
tick,0x7ffc909efd34,67471846,0,0x0,8
tick,0x7ffc909efd34,67487273,0,0x0,8
tick,0x7ffc909efd34,67502697,0,0x0,8
tick,0x7ffc909efd34,67518732,0,0x0,8
tick,0x7ffc909efd34,67534702,0,0x0,8
tick,0x7ffc909efd34,67550258,0,0x0,8
tick,0x7ffc909efd34,67565774,0,0x0,8
tick,0x7ffc909efd34,67580904,0,0x0,8
tick,0x7ffc909efd34,67596395,0,0x0,8
tick,0x7ffc909efd34,67612344,0,0x0,8
tick,0x7ffc909efd34,67627996,0,0x0,8
tick,0x7ffc909efd34,67643207,0,0x0,8
tick,0x7ffc909efd34,67658927,0,0x0,8
tick,0x7ffc909efd34,67674672,0,0x0,8
tick,0x7ffc909efd34,67690149,0,0x0,8
tick,0x7ffc909efd34,67705893,0,0x0,8
tick,0x7ffc909efd34,67721105,0,0x0,8
tick,0x7ffc909efd34,67736883,0,0x0,8
tick,0x7ffc909efd34,67752489,0,0x0,8
tick,0x7ffc909efd34,67768578,0,0x0,8
tick,0x7ffc909efd34,67784012,0,0x0,8
tick,0x7ffc909efd34,67800090,0,0x0,8
tick,0x7ffc909efd34,67815501,0,0x0,8
tick,0x7ffc909efd34,67830523,0,0x0,8
tick,0x7ffc909efd34,67846556,0,0x0,8
tick,0x7ffc909efd34,67861949,0,0x0,8
tick,0x7ffc909efd34,67878247,0,0x0,8
tick,0x7ffc909efd34,67893056,0,0x0,8
tick,0x7ffc909efd34,67909314,0,0x0,8
tick,0x7ffc909efd34,67924854,0,0x0,8
tick,0x7ffc909efd34,67941093,0,0x0,8
tick,0x7ffc909efd34,67956698,0,0x0,8
tick,0x7ffc909efd34,67972168,0,0x0,8
tick,0x7ffc909efd34,67987533,0,0x0,8
tick,0x7ffc909efd34,68003170,0,0x0,8
tick,0x7ffc909efd34,68018477,0,0x0,8
tick,0x7ffc909efd34,68034754,0,0x0,8
tick,0x7ffc909efd34,68050465,0,0x0,8
tick,0x7ffc909efd34,68066299,0,0x0,8
tick,0x7ffc909efd34,68081543,0,0x0,8
tick,0x7ffc909efd34,68097011,0,0x0,8
tick,0x7ffc909efd34,68112978,0,0x0,8
tick,0x7ffc909efd34,68128649,0,0x0,8
tick,0x7ffc909efd34,68144384,0,0x0,8
tick,0x7ffc909efd34,68159509,0,0x0,8
tick,0x7ffc909efd34,68174916,0,0x0,8
tick,0x7ffc909efd34,68190563,0,0x0,8
tick,0x7ffc909efd34,68206612,0,0x0,8
tick,0x7ffc909efd34,68222398,0,0x0,8
tick,0x7ffc909efd34,68237651,0,0x0,8
tick,0x7ffc909efd34,68253378,0,0x0,8
tick,0x7ffc909efd34,68269230,0,0x0,8
tick,0x7ffc909efd34,68284681,0,0x0,8
tick,0x7ffc909efd34,68301035,0,0x0,8
tick,0x7ffc909efd34,68316496,0,0x0,8
tick,0x7ffc909efd34,68332551,0,0x0,8
tick,0x7ffc909efd34,68348332,0,0x0,8
tick,0x7ffc909efd34,68363810,0,0x0,8
tick,0x7ffc909efd34,68378940,0,0x0,8
tick,0x7ffc909efd34,68394517,0,0x0,8
tick,0x7ffc909efd34,68409737,0,0x0,8
tick,0x7ffc909efd34,68425172,0,0x0,8
tick,0x7ffc909efd34,68440734,0,0x0,8
tick,0x7ffc909efd34,68456051,0,0x0,8
tick,0x7ffc909efd34,68471275,0,0x0,8
tick,0x7ffc909efd34,68487130,0,0x0,8
tick,0x7ffc909efd34,68502979,0,0x0,8
tick,0x7ffc909efd34,68518336,0,0x0,8
tick,0x7ffc909efd34,68533542,0,0x0,8
tick,0x7ffc909efd34,68548892,0,0x0,8
tick,0x7ffc909efd34,68564487,0,0x0,8
tick,0x7ffc909efd34,68580677,0,0x0,8
tick,0x7ffc909efd34,68596551,0,0x0,8
tick,0x7ffc909efd34,68612245,0,0x0,8
tick,0x7ffc909efd34,68627736,0,0x0,8
tick,0x7ffc909efd34,68642847,0,0x0,8
tick,0x7ffc909efd34,68659022,0,0x0,8
tick,0x7ffc909efd34,68674611,0,0x0,8
tick,0x7ffc909efd34,68689896,0,0x0,8
tick,0x7ffc909efd34,68705831,0,0x0,8
tick,0x7ffc909efd34,68721288,0,0x0,8
tick,0x7ffc909efd34,68736411,0,0x0,8
tick,0x7ffc909efd34,68751967,0,0x0,8
tick,0x7ffc909efd34,68767568,0,0x0,8
tick,0x7ffc909efd34,68783190,0,0x0,8
tick,0x7ffc909efd34,68799044,0,0x0,8
tick,0x7ffc909efd34,68814516,0,0x0,8
tick,0x7ffc909efd34,68829686,0,0x0,8
tick,0x7ffc909efd34,68845109,0,0x0,8
tick,0x7ffc909efd34,68860268,0,0x0,8
tick,0x7ffc909efd34,68875670,0,0x0,8
tick,0x7ffc909efd34,68891787,0,0x0,8
tick,0x7ffc909efd34,68907336,0,0x0,8
tick,0x7ffc909efd34,68922155,0,0x0,8
tick,0x7ffc909efd34,68937663,0,0x0,8
tick,0x7ffc909efd34,68953093,0,0x0,8
tick,0x7ffc909efd34,68968619,0,0x0,8
tick,0x7ffc909efd34,68983995,0,0x0,8
tick,0x7ffc909efd34,68999783,0,0x0,8
tick,0x7ffc909efd34,69015729,0,0x0,8
tick,0x7ffc909efd34,69031317,0,0x0,8
tick,0x7ffc909efd34,69046859,0,0x0,8
tick,0x7ffc909efd34,69062493,0,0x0,8
tick,0x7ffc909efd34,69077808,0,0x0,8
tick,0x7ffc909efd34,69093714,0,0x0,8
tick,0x7ffc909efd34,69109509,0,0x0,8
tick,0x7ffc909efd34,69124948,0,0x0,8
tick,0x7ffc909efd34,69140647,0,0x0,8
tick,0x7ffc909efd34,69156711,0,0x0,8
tick,0x7ffc909efd34,69172082,0,0x0,8
tick,0x7ffc909efd34,69187461,0,0x0,8
tick,0x7ffc909efd34,69202686,0,0x0,8
tick,0x7ffc909efd34,69218501,0,0x0,8
tick,0x7ffc909efd34,69234490,0,0x0,8
tick,0x7ffc909efd34,69249949,0,0x0,8
tick,0x7ffc909efd34,69265424,0,0x0,8
tick,0x7ffc909efd34,69280892,0,0x0,8
tick,0x7ffc909efd34,69296235,0,0x0,8
tick,0x7ffc909efd34,69312244,0,0x0,8
tick,0x7ffc909efd34,69327646,0,0x0,8
tick,0x7ffc909efd34,69343606,0,0x0,8
tick,0x7ffc909efd34,69359139,0,0x0,8
tick,0x7ffc909efd34,69374850,0,0x0,8
tick,0x7ffc909efd34,69390146,0,0x0,8
tick,0x7ffc909efd34,69405633,0,0x0,8
tick,0x7ffc909efd34,69420976,0,0x0,8
tick,0x7ffc909efd34,69436549,0,0x0,8
tick,0x7ffc909efd34,69452250,0,0x0,8
tick,0x7ffc909efd34,69468195,0,0x0,8
tick,0x7ffc909efd34,69483497,0,0x0,8
tick,0x7ffc909efd34,69499473,0,0x0,8
tick,0x7ffc909efd34,69515362,0,0x0,8
tick,0x7ffc909efd34,69530938,0,0x0,8
tick,0x7ffc909efd34,69545959,0,0x0,8
tick,0x7ffc909efd34,69561792,0,0x0,8
tick,0x7ffc909efd34,69576764,0,0x0,8
tick,0x7ffc909efd34,69592607,0,0x0,8
tick,0x7ffc909efd34,69608048,0,0x0,8
tick,0x7ffc909efd34,69623135,0,0x0,8
tick,0x7ffc909efd34,69638742,0,0x0,8
tick,0x7ffc909efd34,69654738,0,0x0,8
tick,0x7ffc909efd34,69670346,0,0x0,8
tick,0x7ffc909efd34,69685756,0,0x0,8
tick,0x7ffc909efd34,69701333,0,0x0,8
tick,0x7ffc909efd34,69717304,0,0x0,8
tick,0x7ffc909efd34,69733372,0,0x0,8
tick,0x7ffc909efd34,69748940,0,0x0,8
tick,0x7ffc909efd34,69764014,0,0x0,8
tick,0x7ffc909efd34,69779876,0,0x0,8
tick,0x7ffc909efd34,69795869,0,0x0,8
tick,0x7ffc909efd34,69811246,0,0x0,8
tick,0x7ffc909efd34,69828340,0,0x0,8
tick,0x7ffc909efd34,69842142,0,0x0,8
tick,0x7ffc909efd34,69858192,0,0x0,8
tick,0x7ffc909efd34,69873630,0,0x0,8
tick,0x7ffc909efd34,69889613,0,0x0,8
tick,0x7ffc909efd34,69905272,0,0x0,8
tick,0x7ffc909efd34,69921139,0,0x0,8
tick,0x7ffc909efd34,69937152,0,0x0,8
tick,0x7ffc909efd34,69952343,0,0x0,8
tick,0x7ffc909efd34,69968019,0,0x0,8
tick,0x7ffc909efd34,69983606,0,0x0,8
tick,0x7ffc909efd34,69999452,0,0x0,8
tick,0x7ffc909efd34,70015437,0,0x0,8
tick,0x7ffc909efd34,70031308,0,0x0,8
tick,0x7ffc909efd34,70047089,0,0x0,8
tick,0x7ffc909efd34,70063069,0,0x0,8
tick,0x7ffc909efd34,70078665,0,0x0,8
tick,0x7ffc909efd34,70093600,0,0x0,8
tick,0x7ffc909efd34,70109435,0,0x0,8
tick,0x7ffc909efd34,70124787,0,0x0,8
tick,0x7ffc909efd34,70140340,0,0x0,8
tick,0x7ffc909efd34,70156425,0,0x0,8
tick,0x7ffc909efd34,70171958,0,0x0,8
tick,0x7ffc909efd34,70187630,0,0x0,8
tick,0x7ffc909efd34,70203403,0,0x0,8
tick,0x7ffc909efd34,70219545,0,0x0,8
tick,0x7ffc909efd34,70235139,0,0x0,8
tick,0x7ffc909efd34,70250683,0,0x0,8
tick,0x7ffc909efd34,70266674,0,0x0,8
tick,0x7ffc909efd34,70282231,0,0x0,8
tick,0x7ffc909efd34,70298314,0,0x0,8
tick,0x7ffc909efd34,70313719,0,0x0,8
tick,0x7ffc909efd34,70329926,0,0x0,8
tick,0x7ffc909efd34,70345734,0,0x0,8
tick,0x7ffc909efd34,70362029,0,0x0,8
tick,0x7ffc909efd34,70375771,0,0x0,8
tick,0x7ffc909efd34,70391616,0,0x0,8
tick,0x7ffc909efd34,70407097,0,0x0,8
tick,0x7ffc909efd34,70422273,0,0x0,8
tick,0x7ffc909efd34,70437632,0,0x0,8
tick,0x7ffc909efd34,70453074,0,0x0,8
tick,0x7ffc909efd34,70468442,0,0x0,8
tick,0x7ffc909efd34,70483934,0,0x0,8
tick,0x7ffc909efd34,70499287,0,0x0,8
tick,0x7ffc909efd34,70515452,0,0x0,8
tick,0x7ffc909efd34,70531117,0,0x0,8
tick,0x7ffc909efd34,70546827,0,0x0,8
tick,0x7ffc909efd34,70561879,0,0x0,8
tick,0x7ffc909efd34,70577679,0,0x0,8
tick,0x7ffc909efd34,70592941,0,0x0,8
tick,0x7ffc909efd34,70608622,0,0x0,8
tick,0x7ffc909efd34,70624145,0,0x0,8
tick,0x7ffc909efd34,70639659,0,0x0,8
tick,0x7ffc909efd34,70655540,0,0x0,8
tick,0x7ffc909efd34,70670790,0,0x0,8
tick,0x7ffc909efd34,70686284,0,0x0,8
tick,0x7ffc909efd34,70702159,0,0x0,8
tick,0x7ffc909efd34,70717645,0,0x0,8
tick,0x7ffc909efd34,70733358,0,0x0,8
tick,0x7ffc909efd34,70749220,0,0x0,8
tick,0x7ffc909efd34,70764727,0,0x0,8
tick,0x7ffc909efd34,70780696,0,0x0,8
tick,0x7ffc909efd34,70796698,0,0x0,8
tick,0x7ffc909efd34,70811863,0,0x0,8
tick,0x7ffc909efd34,70827490,0,0x0,8
tick,0x7ffc909efd34,70842541,0,0x0,8
tick,0x7ffc909efd34,70858481,0,0x0,8
tick,0x7ffc909efd34,70874050,0,0x0,8
tick,0x7ffc909efd34,70890250,0,0x0,8
tick,0x7ffc909efd34,70905949,0,0x0,8
tick,0x7ffc909efd34,70922280,0,0x0,8
tick,0x7ffc909efd34,70937580,0,0x0,8
tick,0x7ffc909efd34,70953301,0,0x0,8
tick,0x7ffc909efd34,70968834,0,0x0,8
tick,0x7ffc909efd34,70984292,0,0x0,8
tick,0x7ffc909efd34,70999706,0,0x0,8
tick,0x7ffc909efd34,71015092,0,0x0,8
tick,0x7ffc909efd34,71030970,0,0x0,8
tick,0x7ffc909efd34,71046263,0,0x0,8
tick,0x7ffc909efd34,71061538,0,0x0,8
tick,0x7ffc909efd34,71077540,0,0x0,8
tick,0x7ffc909efd34,71092855,0,0x0,8
tick,0x7ffc909efd34,71108160,0,0x0,8
tick,0x7ffc909efd34,71123578,0,0x0,8
tick,0x7ffc909efd34,71138922,0,0x0,8
tick,0x7ffc909efd34,71154377,0,0x0,8
tick,0x7ffc909efd34,71169881,0,0x0,8
tick,0x7ffc909efd34,71185618,0,0x0,8
tick,0x7ffc909efd34,71201119,0,0x0,8
tick,0x7ffc909efd34,71216252,0,0x0,8
tick,0x7ffc909efd34,71231588,0,0x0,8
tick,0x7ffc909efd34,71246813,0,0x0,8
tick,0x7ffc909efd34,71262123,0,0x0,8
tick,0x7ffc909efd34,71277280,0,0x0,8
tick,0x7ffc909efd34,71293306,0,0x0,8
tick,0x7ffc909efd34,71309017,0,0x0,8
tick,0x7ffc909efd34,71324372,0,0x0,8
tick,0x7ffc909efd34,71340394,0,0x0,8
tick,0x7ffc909efd34,71355835,0,0x0,8
tick,0x7ffc909efd34,71371181,0,0x0,8
tick,0x7ffc909efd34,71386338,0,0x0,8
tick,0x7ffc909efd34,71401672,0,0x0,8
tick,0x7ffc909efd34,71417868,0,0x0,8
tick,0x7ffc909efd34,71433002,0,0x0,8
tick,0x7ffc909efd34,71449108,0,0x0,8
tick,0x7ffc909efd34,71464651,0,0x0,8
tick,0x7ffc909efd34,71480381,0,0x0,8
tick,0x7ffc909efd34,71495662,0,0x0,8
tick,0x7ffc909efd34,71511386,0,0x0,8
tick,0x7ffc909efd34,71527106,0,0x0,8
tick,0x7ffc909efd34,71542114,0,0x0,8
tick,0x7ffc909efd34,71557687,0,0x0,8
tick,0x7ffc909efd34,71573209,0,0x0,8
tick,0x7ffc909efd34,71589094,0,0x0,8
tick,0x7ffc909efd34,71604590,0,0x0,8
tick,0x7ffc909efd34,71620037,0,0x0,8
tick,0x7ffc909efd34,71636071,0,0x0,8
tick,0x7ffc909efd34,71651330,0,0x0,8
tick,0x7ffc909efd34,71666979,0,0x0,8
tick,0x7ffc909efd34,71681973,0,0x0,8
tick,0x7ffc909efd34,71697340,0,0x0,8
tick,0x7ffc909efd34,71713046,0,0x0,8
tick,0x7ffc909efd34,71728271,0,0x0,8
tick,0x7ffc909efd34,71743758,0,0x0,8
tick,0x7ffc909efd34,71759081,0,0x0,8
tick,0x7ffc909efd34,71774582,0,0x0,8
tick,0x7ffc909efd34,71790620,0,0x0,8
tick,0x7ffc909efd34,71806083,0,0x0,8
tick,0x7ffc909efd34,71821544,0,0x0,8
tick,0x7ffc909efd34,71836433,0,0x0,8
tick,0x7ffc909efd34,71851729,0,0x0,8
tick,0x7ffc909efd34,71867181,0,0x0,8
tick,0x7ffc909efd34,71882457,0,0x0,8
tick,0x7ffc909efd34,71897700,0,0x0,8
tick,0x7ffc909efd34,71913138,0,0x0,8
tick,0x7ffc909efd34,71928507,0,0x0,8
tick,0x7ffc909efd34,71943855,0,0x0,8
tick,0x7ffc909efd34,71959328,0,0x0,8
tick,0x7ffc909efd34,71974761,0,0x0,8
tick,0x7ffc909efd34,71990006,0,0x0,8
tick,0x7ffc909efd34,72005661,0,0x0,8
tick,0x7ffc909efd34,72022033,0,0x0,8
tick,0x7ffc909efd34,72037337,0,0x0,8
tick,0x7ffc909efd34,72052644,0,0x0,8
tick,0x7ffc909efd34,72068095,0,0x0,8
tick,0x7ffc909efd34,72083301,0,0x0,8
tick,0x7ffc909efd34,72099321,0,0x0,8
tick,0x7ffc909efd34,72114533,0,0x0,8
tick,0x7ffc909efd34,72130213,0,0x0,8
tick,0x7ffc909efd34,72146017,0,0x0,8
tick,0x7ffc909efd34,72161247,0,0x0,8
tick,0x7ffc909efd34,72176985,0,0x0,8
tick,0x7ffc909efd34,72192494,0,0x0,8
tick,0x7ffc909efd34,72207962,0,0x0,8
tick,0x7ffc909efd34,72223505,0,0x0,8
tick,0x7ffc909efd34,72239252,0,0x0,8
tick,0x7ffc909efd34,72255069,0,0x0,8
tick,0x7ffc909efd34,72271002,0,0x0,8
tick,0x7ffc909efd34,72286606,0,0x0,8
tick,0x7ffc909efd34,72302050,0,0x0,8
tick,0x7ffc909efd34,72317227,0,0x0,8
tick,0x7ffc909efd34,72332761,0,0x0,8
tick,0x7ffc909efd34,72348883,0,0x0,8
tick,0x7ffc909efd34,72364890,0,0x0,8
tick,0x7ffc909efd34,72380610,0,0x0,8
tick,0x7ffc909efd34,72396504,0,0x0,8
tick,0x7ffc909efd34,72412289,0,0x0,8
tick,0x7ffc909efd34,72427834,0,0x0,8
tick,0x7ffc909efd34,72443309,0,0x0,8
tick,0x7ffc909efd34,72458696,0,0x0,8
tick,0x7ffc909efd34,72474506,0,0x0,8
tick,0x7ffc909efd34,72490203,0,0x0,8
tick,0x7ffc909efd34,72505893,0,0x0,8
tick,0x7ffc909efd34,72521296,0,0x0,8
tick,0x7ffc909efd34,72536838,0,0x0,8
tick,0x7ffc909efd34,72552400,0,0x0,8
tick,0x7ffc909efd34,72568075,0,0x0,8
tick,0x7ffc909efd34,72583813,0,0x0,8
tick,0x7ffc909efd34,72599781,0,0x0,8
tick,0x7ffc909efd34,72615399,0,0x0,8
tick,0x7ffc909efd34,72630648,0,0x0,8
tick,0x7ffc909efd34,72646186,0,0x0,8
tick,0x7ffc909efd34,72662353,0,0x0,8
tick,0x7ffc909efd34,72678169,0,0x0,8
tick,0x7ffc909efd34,72693723,0,0x0,8
tick,0x7ffc909efd34,72709643,0,0x0,8
tick,0x7ffc909efd34,72724857,0,0x0,8
tick,0x7ffc909efd34,72740088,0,0x0,8
tick,0x7ffc909efd34,72756110,0,0x0,8
tick,0x7ffc909efd34,72771771,0,0x0,8
tick,0x7ffc909efd34,72787160,0,0x0,8
tick,0x7ffc909efd34,72802833,0,0x0,8
tick,0x7ffc909efd34,72818133,0,0x0,8
tick,0x7ffc909efd34,72833691,0,0x0,8
tick,0x7ffc909efd34,72849223,0,0x0,8
tick,0x7ffc909efd34,72864862,0,0x0,8
tick,0x7ffc909efd34,72880027,0,0x0,8
tick,0x7ffc909efd34,72895883,0,0x0,8
tick,0x7ffc909efd34,72911751,0,0x0,8
tick,0x7ffc909efd34,72927070,0,0x0,8
tick,0x7ffc909efd34,72942653,0,0x0,8
tick,0x7ffc909efd34,72957862,0,0x0,8
tick,0x7ffc909efd34,72973153,0,0x0,8
tick,0x7ffc909efd34,72988592,0,0x0,8
tick,0x7ffc909efd34,73004338,0,0x0,8
tick,0x7ffc909efd34,73019598,0,0x0,8
tick,0x7ffc909efd34,73035172,0,0x0,8
tick,0x7ffc909efd34,73050441,0,0x0,8
tick,0x7ffc909efd34,73066028,0,0x0,8
tick,0x7ffc909efd34,73082025,0,0x0,8
tick,0x7ffc909efd34,73098082,0,0x0,8
tick,0x7ffc909efd34,73113686,0,0x0,8
tick,0x7ffc909efd34,73129369,0,0x0,8
tick,0x7ffc909efd34,73145416,0,0x0,8
tick,0x7ffc909efd34,73161196,0,0x0,8
tick,0x7ffc909efd34,73176888,0,0x0,8
tick,0x7ffc909efd34,73192014,0,0x0,8
tick,0x7ffc909efd34,73207741,0,0x0,8
tick,0x7ffc909efd34,73223753,0,0x0,8
tick,0x7ffc909efd34,73239346,0,0x0,8
tick,0x7ffc909efd34,73254932,0,0x0,8
tick,0x7ffc909efd34,73271007,0,0x0,8
tick,0x7ffc909efd34,73285993,0,0x0,8
tick,0x7ffc909efd34,73301086,0,0x0,8
tick,0x7ffc909efd34,73317082,0,0x0,8
tick,0x7ffc909efd34,73332377,0,0x0,8
tick,0x7ffc909efd34,73348027,0,0x0,8
tick,0x7ffc909efd34,73363175,0,0x0,8
tick,0x7ffc909efd34,73379258,0,0x0,8
tick,0x7ffc909efd34,73395345,0,0x0,8
tick,0x7ffc909efd34,73411525,0,0x0,8
tick,0x7ffc909efd34,73427356,0,0x0,8
tick,0x7ffc909efd34,73442520,0,0x0,8
tick,0x7ffc909efd34,73458509,0,0x0,8
tick,0x7ffc909efd34,73473853,0,0x0,8
tick,0x7ffc909efd34,73489572,0,0x0,8
tick,0x7ffc909efd34,73505335,0,0x0,8
tick,0x7ffc909efd34,73520721,0,0x0,8
tick,0x7ffc909efd34,73536981,0,0x0,8
tick,0x7ffc909efd34,73552165,0,0x0,8
tick,0x7ffc909efd34,73567517,0,0x0,8
tick,0x7ffc909efd34,73583218,0,0x0,8
tick,0x7ffc909efd34,73599607,0,0x0,8
tick,0x7ffc909efd34,73615121,0,0x0,8
tick,0x7ffc909efd34,73631361,0,0x0,8
tick,0x7ffc909efd34,73647092,0,0x0,8
tick,0x7ffc909efd34,73661842,0,0x0,8
tick,0x7ffc909efd34,73676148,0,0x0,8
tick,0x7ffc909efd34,73692231,0,0x0,8
tick,0x7ffc909efd34,73707159,0,0x0,8
tick,0x7ffc909efd34,73723061,0,0x0,8
tick,0x7ffc909efd34,73738247,0,0x0,8
tick,0x7ffc909efd34,73754122,0,0x0,8
tick,0x7ffc909efd34,73769166,0,0x0,8
tick,0x7ffc909efd34,73784110,0,0x0,8
tick,0x7ffc909efd34,73800107,0,0x0,8
tick,0x7ffc909efd34,73816311,0,0x0,8
tick,0x7ffc909efd34,73832180,0,0x0,8
tick,0x7ffc909efd34,73848904,0,0x0,8
tick,0x7ffc909efd34,73865863,0,0x0,8
tick,0x7ffc909efd34,73879530,0,0x0,8
tick,0x7ffc909efd34,73895465,0,0x0,8
tick,0x7ffc909efd34,73911635,0,0x0,8
tick,0x7ffc909efd34,73928115,0,0x0,8
tick,0x7ffc909efd34,73941164,0,0x0,8
tick,0x7ffc909efd34,73957052,0,0x0,8
tick,0x7ffc909efd34,73995077,0,0x0,8
tick,0x7ffc909efd34,74022226,0,0x0,8
tick,0x7ffc909efd34,74035058,0,0x0,8
tick,0x7ffc909efd34,74049171,0,0x0,8
tick,0x7ffc909efd34,74065145,0,0x0,8
tick,0x7ffc909efd34,74081155,0,0x0,8
tick,0x7ffc909efd34,74097148,0,0x0,8
tick,0x7ffc909efd34,74113144,0,0x0,8
tick,0x7ffc909efd34,74128244,0,0x0,8
tick,0x7ffc909efd34,74144061,0,0x0,8
tick,0x7ffc909efd34,74159459,0,0x0,8
tick,0x7ffc909efd34,74175335,0,0x0,8
tick,0x7ffc909efd34,74190936,0,0x0,8
tick,0x7ffc909efd34,74206631,0,0x0,8
tick,0x7ffc909efd34,74222605,0,0x0,8
tick,0x7ffc909efd34,74237911,0,0x0,8
tick,0x7ffc909efd34,74253320,0,0x0,8
tick,0x7ffc909efd34,74269267,0,0x0,8
tick,0x7ffc909efd34,74285367,0,0x0,8
tick,0x7ffc909efd34,74300687,0,0x0,8
tick,0x7ffc909efd34,74316104,0,0x0,8
tick,0x7ffc909efd34,74330948,0,0x0,8
tick,0x7ffc909efd34,74346324,0,0x0,8
tick,0x7ffc909efd34,74361593,0,0x0,8
tick,0x7ffc909efd34,74377377,0,0x0,8
tick,0x7ffc909efd34,74392126,0,0x0,8
tick,0x7ffc909efd34,74407751,0,0x0,8
tick,0x7ffc909efd34,74422970,0,0x0,8
tick,0x7ffc909efd34,74438221,0,0x0,8
tick,0x7ffc909efd34,74453632,0,0x0,8
tick,0x7ffc909efd34,74468914,0,0x0,8
tick,0x7ffc909efd34,74484373,0,0x0,8
tick,0x7ffc909efd34,74499812,0,0x0,8
tick,0x7ffc909efd34,74514914,0,0x0,8
tick,0x7ffc909efd34,74530309,0,0x0,8
tick,0x7ffc909efd34,74546396,0,0x0,8
tick,0x7ffc909efd34,74561870,0,0x0,8
tick,0x7ffc909efd34,74577864,0,0x0,8
tick,0x7ffc909efd34,74593406,0,0x0,8
tick,0x7ffc909efd34,74608287,0,0x0,8
tick,0x7ffc909efd34,74623748,0,0x0,8
tick,0x7ffc909efd34,74638948,0,0x0,8
tick,0x7ffc909efd34,74654083,0,0x0,8
tick,0x7ffc909efd34,74670075,0,0x0,8
tick,0x7ffc909efd34,74685296,0,0x0,8
tick,0x7ffc909efd34,74701439,0,0x0,8
tick,0x7ffc909efd34,74717350,0,0x0,8
tick,0x7ffc909efd34,74733508,0,0x0,8
tick,0x7ffc909efd34,74749423,0,0x0,8
tick,0x7ffc909efd34,74764506,0,0x0,8
tick,0x7ffc909efd34,74780587,0,0x0,8
tick,0x7ffc909efd34,74796249,0,0x0,8
tick,0x7ffc909efd34,74812027,0,0x0,8
tick,0x7ffc909efd34,74827352,0,0x0,8
tick,0x7ffc909efd34,74843434,0,0x0,8
tick,0x7ffc909efd34,74858470,0,0x0,8
tick,0x7ffc909efd34,74874330,0,0x0,8
tick,0x7ffc909efd34,74889695,0,0x0,8
tick,0x7ffc909efd34,74905005,0,0x0,8
tick,0x7ffc909efd34,74920428,0,0x0,8
tick,0x7ffc909efd34,74936173,0,0x0,8
tick,0x7ffc909efd34,74951786,0,0x0,8
tick,0x7ffc909efd34,74967622,0,0x0,8
tick,0x7ffc909efd34,74983171,0,0x0,8
tick,0x7ffc909efd34,74998303,0,0x0,8
tick,0x7ffc909efd34,75014136,0,0x0,8
tick,0x7ffc909efd34,75029473,0,0x0,8
tick,0x7ffc909efd34,75044863,0,0x0,8
tick,0x7ffc909efd34,75060070,0,0x0,8
tick,0x7ffc909efd34,75076047,0,0x0,8
tick,0x7ffc909efd34,75091770,0,0x0,8
tick,0x7ffc909efd34,75106585,0,0x0,8
tick,0x7ffc909efd34,75122209,0,0x0,8
tick,0x7ffc909efd34,75138237,0,0x0,8
tick,0x7ffc909efd34,75153603,0,0x0,8
tick,0x7ffc909efd34,75169954,0,0x0,8
tick,0x7ffc909efd34,75185159,0,0x0,8
tick,0x7ffc909efd34,75200642,0,0x0,8
tick,0x7ffc909efd34,75216005,0,0x0,8
tick,0x7ffc909efd34,75231923,0,0x0,8
tick,0x7ffc909efd34,75247944,0,0x0,8
tick,0x7ffc909efd34,75263746,0,0x0,8
tick,0x7ffc909efd34,75279885,0,0x0,8
tick,0x7ffc909efd34,75295841,0,0x0,8
tick,0x7ffc909efd34,75311932,0,0x0,8
tick,0x7ffc909efd34,75327923,0,0x0,8
tick,0x7ffc909efd34,75346381,0,0x0,8
tick,0x7ffc909efd34,75362946,0,0x0,8
tick,0x7ffc909efd34,75380047,0,0x0,8
tick,0x7ffc909efd34,75392220,0,0x0,8
tick,0x7ffc909efd34,75407763,0,0x0,8
tick,0x7ffc909efd34,75423736,0,0x0,8
tick,0x7ffc909efd34,75440794,0,0x0,8
tick,0x7ffc909efd34,75455377,0,0x0,8
tick,0x7ffc909efd34,75472660,0,0x0,8
tick,0x7ffc909efd34,75485016,0,0x0,8
tick,0x7ffc909efd34,75500916,0,0x0,8
tick,0x7ffc909efd34,75517227,0,0x0,8
tick,0x7ffc909efd34,75532791,0,0x0,8
tick,0x7ffc909efd34,75550592,0,0x0,8
tick,0x7ffc909efd34,75564269,0,0x0,8
tick,0x7ffc909efd34,75578791,0,0x0,8
tick,0x7ffc909efd34,75594542,0,0x0,8
tick,0x7ffc909efd34,75610266,0,0x0,8
tick,0x7ffc909efd34,75625917,0,0x0,8
tick,0x7ffc909efd34,75641877,0,0x0,8
tick,0x7ffc909efd34,75658125,0,0x0,8
tick,0x7ffc909efd34,75673889,0,0x0,8
tick,0x7ffc909efd34,75688810,0,0x0,8
tick,0x7ffc909efd34,75703759,0,0x0,8
tick,0x7ffc909efd34,75719757,0,0x0,8
tick,0x7ffc909efd34,75735811,0,0x0,8
tick,0x7ffc909efd34,75751847,0,0x0,8
tick,0x7ffc909efd34,75767866,0,0x0,8
tick,0x7ffc909efd34,75782842,0,0x0,8
tick,0x7ffc909efd34,75798844,0,0x0,8
tick,0x7ffc909efd34,75814989,0,0x0,8
tick,0x7ffc909efd34,75830831,0,0x0,8
tick,0x7ffc909efd34,75846959,0,0x0,8
tick,0x7ffc909efd34,75862864,0,0x0,8
tick,0x7ffc909efd34,75880501,0,0x0,8
tick,0x7ffc909efd34,75895860,0,0x0,8
tick,0x7ffc909efd34,75911229,0,0x0,8
tick,0x7ffc909efd34,75926934,0,0x0,8
tick,0x7ffc909efd34,75943519,0,0x0,8
tick,0x7ffc909efd34,75959050,0,0x0,8
tick,0x7ffc909efd34,75974884,0,0x0,8
tick,0x7ffc909efd34,75990836,0,0x0,8
tick,0x7ffc909efd34,76007053,0,0x0,8
tick,0x7ffc909efd34,76022778,0,0x0,8
tick,0x7ffc909efd34,76038941,0,0x0,8
tick,0x7ffc909efd34,76054990,0,0x0,8
tick,0x7ffc909efd34,76071088,0,0x0,8
tick,0x7ffc909efd34,76086969,0,0x0,8
tick,0x7ffc909efd34,76102791,0,0x0,8
tick,0x7ffc909efd34,76118014,0,0x0,8
tick,0x7ffc909efd34,76133489,0,0x0,8
tick,0x7ffc909efd34,76149801,0,0x0,8
tick,0x7ffc909efd34,76163993,0,0x0,8
tick,0x7ffc909efd34,76179451,0,0x0,8
tick,0x7ffc909efd34,76195783,0,0x0,8
tick,0x7ffc909efd34,76211130,0,0x0,8
tick,0x7ffc909efd34,76227238,0,0x0,8
tick,0x7ffc909efd34,76243538,0,0x0,8
tick,0x7ffc909efd34,76258647,0,0x0,8
tick,0x7ffc909efd34,76273985,0,0x0,8
tick,0x7ffc909efd34,76289369,0,0x0,8
tick,0x7ffc909efd34,76304433,0,0x0,8
tick,0x7ffc909efd34,76319863,0,0x0,8
tick,0x7ffc909efd34,76335417,0,0x0,8
tick,0x7ffc909efd34,76351477,0,0x0,8
tick,0x7ffc909efd34,76366467,0,0x0,8
tick,0x7ffc909efd34,76381975,0,0x0,8
tick,0x7ffc909efd34,76397679,0,0x0,8
tick,0x7ffc909efd34,76413216,0,0x0,8
tick,0x7ffc909efd34,76428791,0,0x0,8
tick,0x7ffc909efd34,76444931,0,0x0,8
tick,0x7ffc909efd34,76460571,0,0x0,8
tick,0x7ffc909efd34,76475604,0,0x0,8
tick,0x7ffc909efd34,76491200,0,0x0,8
tick,0x7ffc909efd34,76506626,0,0x0,8
tick,0x7ffc909efd34,76521702,0,0x0,8
tick,0x7ffc909efd34,76537607,0,0x0,8
tick,0x7ffc909efd34,76553444,0,0x0,8
tick,0x7ffc909efd34,76568429,0,0x0,8
tick,0x7ffc909efd34,76583754,0,0x0,8
tick,0x7ffc909efd34,76599690,0,0x0,8
tick,0x7ffc909efd34,76615594,0,0x0,8
tick,0x7ffc909efd34,76631401,0,0x0,8
tick,0x7ffc909efd34,76646971,0,0x0,8
tick,0x7ffc909efd34,76662302,0,0x0,8
tick,0x7ffc909efd34,76677650,0,0x0,8
tick,0x7ffc909efd34,76693732,0,0x0,8
tick,0x7ffc909efd34,76709399,0,0x0,8
tick,0x7ffc909efd34,76724901,0,0x0,8
tick,0x7ffc909efd34,76740234,0,0x0,8
tick,0x7ffc909efd34,76756082,0,0x0,8
tick,0x7ffc909efd34,76771268,0,0x0,8
tick,0x7ffc909efd34,76786662,0,0x0,8
tick,0x7ffc909efd34,76801990,0,0x0,8
tick,0x7ffc909efd34,76817556,0,0x0,8
tick,0x7ffc909efd34,76833123,0,0x0,8
tick,0x7ffc909efd34,76848763,0,0x0,8
tick,0x7ffc909efd34,76864450,0,0x0,8
tick,0x7ffc909efd34,76879818,0,0x0,8
tick,0x7ffc909efd34,76895201,0,0x0,8
tick,0x7ffc909efd34,76910724,0,0x0,8
tick,0x7ffc909efd34,76926305,0,0x0,8
tick,0x7ffc909efd34,76941600,0,0x0,8
tick,0x7ffc909efd34,76956907,0,0x0,8
tick,0x7ffc909efd34,76972485,0,0x0,8
tick,0x7ffc909efd34,76987769,0,0x0,8
tick,0x7ffc909efd34,77003120,0,0x0,8
tick,0x7ffc909efd34,77019136,0,0x0,8
tick,0x7ffc909efd34,77035041,0,0x0,8
tick,0x7ffc909efd34,77050280,0,0x0,8
tick,0x7ffc909efd34,77065827,0,0x0,8
tick,0x7ffc909efd34,77081170,0,0x0,8
tick,0x7ffc909efd34,77096914,0,0x0,8
tick,0x7ffc909efd34,77112467,0,0x0,8
tick,0x7ffc909efd34,77127872,0,0x0,8
tick,0x7ffc909efd34,77143129,0,0x0,8
tick,0x7ffc909efd34,77158446,0,0x0,8
tick,0x7ffc909efd34,77173564,0,0x0,8
tick,0x7ffc909efd34,77189229,0,0x0,8
tick,0x7ffc909efd34,77204916,0,0x0,8
tick,0x7ffc909efd34,77220109,0,0x0,8
tick,0x7ffc909efd34,77235698,0,0x0,8
tick,0x7ffc909efd34,77251178,0,0x0,8
tick,0x7ffc909efd34,77266151,0,0x0,8
tick,0x7ffc909efd34,77281477,0,0x0,8
tick,0x7ffc909efd34,77296930,0,0x0,8
tick,0x7ffc909efd34,77312285,0,0x0,8
tick,0x7ffc909efd34,77328232,0,0x0,8
tick,0x7ffc909efd34,77343906,0,0x0,8
tick,0x7ffc909efd34,77359383,0,0x0,8
tick,0x7ffc909efd34,77375201,0,0x0,8
tick,0x7ffc909efd34,77390979,0,0x0,8
tick,0x7ffc909efd34,77406705,0,0x0,8
tick,0x7ffc909efd34,77422370,0,0x0,8
tick,0x7ffc909efd34,77438020,0,0x0,8
tick,0x7ffc909efd34,77453618,0,0x0,8
tick,0x7ffc909efd34,77469264,0,0x0,8
tick,0x7ffc909efd34,77484809,0,0x0,8
tick,0x7ffc909efd34,77500264,0,0x0,8
tick,0x7ffc909efd34,77515837,0,0x0,8
tick,0x7ffc909efd34,77531412,0,0x0,8
tick,0x7ffc909efd34,77546941,0,0x0,8
tick,0x7ffc909efd34,77562819,0,0x0,8
tick,0x7ffc909efd34,77578404,0,0x0,8
tick,0x7ffc909efd34,77594466,0,0x0,8
tick,0x7ffc909efd34,77609786,0,0x0,8
tick,0x7ffc909efd34,77625284,0,0x0,8
tick,0x7ffc909efd34,77641120,0,0x0,8
tick,0x7ffc909efd34,77656576,0,0x0,8
tick,0x7ffc909efd34,77672573,0,0x0,8
tick,0x7ffc909efd34,77688045,0,0x0,8
tick,0x7ffc909efd34,77703631,0,0x0,8
tick,0x7ffc909efd34,77719461,0,0x0,8
tick,0x7ffc909efd34,77735187,0,0x0,8
tick,0x7ffc909efd34,77750586,0,0x0,8
tick,0x7ffc909efd34,77765931,0,0x0,8
tick,0x7ffc909efd34,77780947,0,0x0,8
tick,0x7ffc909efd34,77796830,0,0x0,8
tick,0x7ffc909efd34,77812549,0,0x0,8
tick,0x7ffc909efd34,77828624,0,0x0,8
tick,0x7ffc909efd34,77843819,0,0x0,8
tick,0x7ffc909efd34,77859354,0,0x0,8
tick,0x7ffc909efd34,77874419,0,0x0,8
tick,0x7ffc909efd34,77889673,0,0x0,8
tick,0x7ffc909efd34,77905028,0,0x0,8
tick,0x7ffc909efd34,77920484,0,0x0,8
tick,0x7ffc909efd34,77936132,0,0x0,8
tick,0x7ffc909efd34,77951267,0,0x0,8
tick,0x7ffc909efd34,77966881,0,0x0,8
tick,0x7ffc909efd34,77982342,0,0x0,8
tick,0x7ffc909efd34,77998364,0,0x0,8
tick,0x7ffc909efd34,78013885,0,0x0,8
tick,0x7ffc909efd34,78029364,0,0x0,8
tick,0x7ffc909efd34,78044477,0,0x0,8
tick,0x7ffc909efd34,78059958,0,0x0,8
tick,0x7ffc909efd34,78075826,0,0x0,8
tick,0x7ffc909efd34,78090555,0,0x0,8
tick,0x7ffc909efd34,78105800,0,0x0,8
tick,0x7ffc909efd34,78121515,0,0x0,8
tick,0x7ffc909efd34,78137104,0,0x0,8
tick,0x7ffc909efd34,78152749,0,0x0,8
tick,0x7ffc909efd34,78168410,0,0x0,8
tick,0x7ffc909efd34,78183937,0,0x0,8
tick,0x7ffc909efd34,78199855,0,0x0,8
tick,0x7ffc909efd34,78215750,0,0x0,8
tick,0x7ffc909efd34,78231288,0,0x0,8
tick,0x7ffc909efd34,78246797,0,0x0,8
tick,0x7ffc909efd34,78262077,0,0x0,8
tick,0x7ffc909efd34,78277324,0,0x0,8
tick,0x7ffc909efd34,78293763,0,0x0,8
tick,0x7ffc909efd34,78309139,0,0x0,8
tick,0x7ffc909efd34,78325050,0,0x0,8
tick,0x7ffc909efd34,78340699,0,0x0,8
tick,0x7ffc909efd34,78356337,0,0x0,8
tick,0x7ffc909efd34,78371609,0,0x0,8
tick,0x7ffc909efd34,78387325,0,0x0,8
tick,0x7ffc909efd34,78403478,0,0x0,8
tick,0x7ffc909efd34,78418927,0,0x0,8
tick,0x7ffc909efd34,78434694,0,0x0,8
tick,0x7ffc909efd34,78449959,0,0x0,8
tick,0x7ffc909efd34,78465530,0,0x0,8
tick,0x7ffc909efd34,78481173,0,0x0,8
tick,0x7ffc909efd34,78495970,0,0x0,8
tick,0x7ffc909efd34,78511719,0,0x0,8
tick,0x7ffc909efd34,78526738,0,0x0,8
tick,0x7ffc909efd34,78542815,0,0x0,8
tick,0x7ffc909efd34,78558697,0,0x0,8
tick,0x7ffc909efd34,78574454,0,0x0,8
tick,0x7ffc909efd34,78589794,0,0x0,8
tick,0x7ffc909efd34,78605114,0,0x0,8
tick,0x7ffc909efd34,78621256,0,0x0,8
tick,0x7ffc909efd34,78636786,0,0x0,8
tick,0x7ffc909efd34,78652563,0,0x0,8
tick,0x7ffc909efd34,78668691,0,0x0,8
tick,0x7ffc909efd34,78684393,0,0x0,8
tick,0x7ffc909efd34,78700102,0,0x0,8
tick,0x7ffc909efd34,78715585,0,0x0,8
tick,0x7ffc909efd34,78731107,0,0x0,8
tick,0x7ffc909efd34,78746309,0,0x0,8
tick,0x7ffc909efd34,78761566,0,0x0,8
tick,0x7ffc909efd34,78777054,0,0x0,8
tick,0x7ffc909efd34,78792744,0,0x0,8
tick,0x7ffc909efd34,78808882,0,0x0,8
tick,0x7ffc909efd34,78824394,0,0x0,8
tick,0x7ffc909efd34,78840853,0,0x0,8
tick,0x7ffc909efd34,78856285,0,0x0,8
tick,0x7ffc909efd34,78871949,0,0x0,8
tick,0x7ffc909efd34,78887233,0,0x0,8
tick,0x7ffc909efd34,78902967,0,0x0,8
tick,0x7ffc909efd34,78918193,0,0x0,8
tick,0x7ffc909efd34,78933715,0,0x0,8
tick,0x7ffc909efd34,78950046,0,0x0,8
tick,0x7ffc909efd34,78965075,0,0x0,8
tick,0x7ffc909efd34,78980920,0,0x0,8
tick,0x7ffc909efd34,78996469,0,0x0,8
tick,0x7ffc909efd34,79012159,0,0x0,8
tick,0x7ffc909efd34,79027844,0,0x0,8
tick,0x7ffc909efd34,79043350,0,0x0,8
tick,0x7ffc909efd34,79059297,0,0x0,8
tick,0x7ffc909efd34,79074575,0,0x0,8
tick,0x7ffc909efd34,79090131,0,0x0,8
tick,0x7ffc909efd34,79105104,0,0x0,8
tick,0x7ffc909efd34,79120208,0,0x0,8
tick,0x7ffc909efd34,79136162,0,0x0,8
tick,0x7ffc909efd34,79151437,0,0x0,8
tick,0x7ffc909efd34,79166956,0,0x0,8
tick,0x7ffc909efd34,79182472,0,0x0,8
tick,0x7ffc909efd34,79198066,0,0x0,8
tick,0x7ffc909efd34,79213997,0,0x0,8
tick,0x7ffc909efd34,79229552,0,0x0,8
tick,0x7ffc909efd34,79245347,0,0x0,8
tick,0x7ffc909efd34,79261535,0,0x0,8
tick,0x7ffc909efd34,79276532,0,0x0,8
tick,0x7ffc909efd34,79291894,0,0x0,8
tick,0x7ffc909efd34,79307262,0,0x0,8
tick,0x7ffc909efd34,79322725,0,0x0,8
tick,0x7ffc909efd34,79338478,0,0x0,8
tick,0x7ffc909efd34,79353497,0,0x0,8
tick,0x7ffc909efd34,79368459,0,0x0,8
tick,0x7ffc909efd34,79384153,0,0x0,8
tick,0x7ffc909efd34,79399852,0,0x0,8
tick,0x7ffc909efd34,79415579,0,0x0,8
tick,0x7ffc909efd34,79431015,0,0x0,8
tick,0x7ffc909efd34,79446665,0,0x0,8
tick,0x7ffc909efd34,79461934,0,0x0,8
tick,0x7ffc909efd34,79477316,0,0x0,8
tick,0x7ffc909efd34,79493282,0,0x0,8
tick,0x7ffc909efd34,79508827,0,0x0,8
tick,0x7ffc909efd34,79524078,0,0x0,8
tick,0x7ffc909efd34,79539867,0,0x0,8
tick,0x7ffc909efd34,79555645,0,0x0,8
tick,0x7ffc909efd34,79570973,0,0x0,8
tick,0x7ffc909efd34,79586599,0,0x0,8
tick,0x7ffc909efd34,79602420,0,0x0,8
tick,0x7ffc909efd34,79618498,0,0x0,8
tick,0x7ffc909efd34,79634309,0,0x0,8
tick,0x7ffc909efd34,79650589,0,0x0,8
tick,0x7ffc909efd34,79665854,0,0x0,8
tick,0x7ffc909efd34,79681224,0,0x0,8
tick,0x7ffc909efd34,79696931,0,0x0,8
tick,0x7ffc909efd34,79713126,0,0x0,8
tick,0x7ffc909efd34,79729236,0,0x0,8
tick,0x7ffc909efd34,79745216,0,0x0,8
tick,0x7ffc909efd34,79760050,0,0x0,8
tick,0x7ffc909efd34,79775992,0,0x0,8
tick,0x7ffc909efd34,79791005,0,0x0,8
tick,0x7ffc909efd34,79806443,0,0x0,8
tick,0x7ffc909efd34,79822038,0,0x0,8
tick,0x7ffc909efd34,79837527,0,0x0,8
tick,0x7ffc909efd34,79853213,0,0x0,8
tick,0x7ffc909efd34,79868920,0,0x0,8
tick,0x7ffc909efd34,79884378,0,0x0,8
tick,0x7ffc909efd34,79899781,0,0x0,8
tick,0x7ffc909efd34,79915467,0,0x0,8
tick,0x7ffc909efd34,79930917,0,0x0,8
tick,0x7ffc909efd34,79946331,0,0x0,8
tick,0x7ffc909efd34,79962053,0,0x0,8
tick,0x7ffc909efd34,79977562,0,0x0,8
tick,0x7ffc909efd34,79993268,0,0x0,8
tick,0x7ffc909efd34,80008969,0,0x0,8
tick,0x7ffc909efd34,80024732,0,0x0,8
tick,0x7ffc909efd34,80040263,0,0x0,8
tick,0x7ffc909efd34,80056038,0,0x0,8
tick,0x7ffc909efd34,80071337,0,0x0,8
tick,0x7ffc909efd34,80087213,0,0x0,8
tick,0x7ffc909efd34,80102388,0,0x0,8
tick,0x7ffc909efd34,80117727,0,0x0,8
tick,0x7ffc909efd34,80133166,0,0x0,8
tick,0x7ffc909efd34,80148732,0,0x0,8
tick,0x7ffc909efd34,80163842,0,0x0,8
tick,0x7ffc909efd34,80179808,0,0x0,8
tick,0x7ffc909efd34,80195383,0,0x0,8
tick,0x7ffc909efd34,80211146,0,0x0,8
tick,0x7ffc909efd34,80226730,0,0x0,8
tick,0x7ffc909efd34,80242115,0,0x0,8
tick,0x7ffc909efd34,80257516,0,0x0,8
tick,0x7ffc909efd34,80272817,0,0x0,8
tick,0x7ffc909efd34,80288842,0,0x0,8
tick,0x7ffc909efd34,80304412,0,0x0,8
tick,0x7ffc909efd34,80320696,0,0x0,8
tick,0x7ffc909efd34,80336757,0,0x0,8
tick,0x7ffc909efd34,80352248,0,0x0,8
tick,0x7ffc909efd34,80368157,0,0x0,8
tick,0x7ffc909efd34,80383634,0,0x0,8
tick,0x7ffc909efd34,80399597,0,0x0,8
tick,0x7ffc909efd34,80415213,0,0x0,8
tick,0x7ffc909efd34,80430667,0,0x0,8
tick,0x7ffc909efd34,80446330,0,0x0,8
tick,0x7ffc909efd34,80461622,0,0x0,8
tick,0x7ffc909efd34,80477370,0,0x0,8
tick,0x7ffc909efd34,80493337,0,0x0,8
tick,0x7ffc909efd34,80508865,0,0x0,8
tick,0x7ffc909efd34,80524505,0,0x0,8
tick,0x7ffc909efd34,80539681,0,0x0,8
tick,0x7ffc909efd34,80555680,0,0x0,8
tick,0x7ffc909efd34,80571256,0,0x0,8
tick,0x7ffc909efd34,80586646,0,0x0,8
tick,0x7ffc909efd34,80602392,0,0x0,8
tick,0x7ffc909efd34,80618048,0,0x0,8
tick,0x7ffc909efd34,80633514,0,0x0,8
tick,0x7ffc909efd34,80648918,0,0x0,8
tick,0x7ffc909efd34,80664617,0,0x0,8
tick,0x7ffc909efd34,80680112,0,0x0,8
tick,0x7ffc909efd34,80695708,0,0x0,8
tick,0x7ffc909efd34,80711497,0,0x0,8
tick,0x7ffc909efd34,80727080,0,0x0,8
tick,0x7ffc909efd34,80743039,0,0x0,8
tick,0x7ffc909efd34,80758698,0,0x0,8
tick,0x7ffc909efd34,80774318,0,0x0,8
tick,0x7ffc909efd34,80788894,0,0x0,8
tick,0x7ffc909efd34,80804848,0,0x0,8
tick,0x7ffc909efd34,80820776,0,0x0,8
tick,0x7ffc909efd34,80836661,0,0x0,8
tick,0x7ffc909efd34,80851775,0,0x0,8
tick,0x7ffc909efd34,80867379,0,0x0,8
tick,0x7ffc909efd34,80883132,0,0x0,8
tick,0x7ffc909efd34,80898345,0,0x0,8
tick,0x7ffc909efd34,80913955,0,0x0,8
tick,0x7ffc909efd34,80929395,0,0x0,8
tick,0x7ffc909efd34,80945717,0,0x0,8
tick,0x7ffc909efd34,80961434,0,0x0,8
tick,0x7ffc909efd34,80976609,0,0x0,8
tick,0x7ffc909efd34,80992177,0,0x0,8
tick,0x7ffc909efd34,81007662,0,0x0,8
tick,0x7ffc909efd34,81022963,0,0x0,8
tick,0x7ffc909efd34,81038495,0,0x0,8
tick,0x7ffc909efd34,81054129,0,0x0,8
tick,0x7ffc909efd34,81069510,0,0x0,8
tick,0x7ffc909efd34,81085095,0,0x0,8
tick,0x7ffc909efd34,81100621,0,0x0,8
tick,0x7ffc909efd34,81116376,0,0x0,8
tick,0x7ffc909efd34,81131561,0,0x0,8
tick,0x7ffc909efd34,81147052,0,0x0,8
tick,0x7ffc909efd34,81162742,0,0x0,8
tick,0x7ffc909efd34,81178627,0,0x0,8
tick,0x7ffc909efd34,81194674,0,0x0,8
tick,0x7ffc909efd34,81210596,0,0x0,8
tick,0x7ffc909efd34,81225986,0,0x0,8
tick,0x7ffc909efd34,81242535,0,0x0,8
tick,0x7ffc909efd34,81256679,0,0x0,8
tick,0x7ffc909efd34,81272455,0,0x0,8
tick,0x7ffc909efd34,81287745,0,0x0,8
tick,0x7ffc909efd34,81303599,0,0x0,8
tick,0x7ffc909efd34,81319363,0,0x0,8
tick,0x7ffc909efd34,81335103,0,0x0,8
tick,0x7ffc909efd34,81350866,0,0x0,8
tick,0x7ffc909efd34,81366549,0,0x0,8
tick,0x7ffc909efd34,81382062,0,0x0,8
tick,0x7ffc909efd34,81398246,0,0x0,8
tick,0x7ffc909efd34,81413846,0,0x0,8
tick,0x7ffc909efd34,81429203,0,0x0,8
tick,0x7ffc909efd34,81445204,0,0x0,8
tick,0x7ffc909efd34,81460536,0,0x0,8
tick,0x7ffc909efd34,81476558,0,0x0,8
tick,0x7ffc909efd34,81492098,0,0x0,8
tick,0x7ffc909efd34,81507830,0,0x0,8
tick,0x7ffc909efd34,81523409,0,0x0,8
tick,0x7ffc909efd34,81539936,0,0x0,8
tick,0x7ffc909efd34,81556092,0,0x0,8
tick,0x7ffc909efd34,81571456,0,0x0,8
tick,0x7ffc909efd34,81586731,0,0x0,8
tick,0x7ffc909efd34,81601990,0,0x0,8
tick,0x7ffc909efd34,81617973,0,0x0,8
tick,0x7ffc909efd34,81633958,0,0x0,8
tick,0x7ffc909efd34,81649372,0,0x0,8
tick,0x7ffc909efd34,81665484,0,0x0,8
tick,0x7ffc909efd34,81680922,0,0x0,8
tick,0x7ffc909efd34,81696886,0,0x0,8
tick,0x7ffc909efd34,81712142,0,0x0,8
tick,0x7ffc909efd34,81727733,0,0x0,8
tick,0x7ffc909efd34,81743134,0,0x0,8
tick,0x7ffc909efd34,81758522,0,0x0,8
tick,0x7ffc909efd34,81773801,0,0x0,8
tick,0x7ffc909efd34,81789231,0,0x0,8
tick,0x7ffc909efd34,81804897,0,0x0,8
tick,0x7ffc909efd34,81820729,0,0x0,8
tick,0x7ffc909efd34,81836150,0,0x0,8
tick,0x7ffc909efd34,81852076,0,0x0,8
tick,0x7ffc909efd34,81868477,0,0x0,8
tick,0x7ffc909efd34,81883656,0,0x0,8
tick,0x7ffc909efd34,81899278,0,0x0,8
tick,0x7ffc909efd34,81915002,0,0x0,8
tick,0x7ffc909efd34,81930566,0,0x0,8
tick,0x7ffc909efd34,81946024,0,0x0,8
tick,0x7ffc909efd34,81961274,0,0x0,8
tick,0x7ffc909efd34,81976509,0,0x0,8
tick,0x7ffc909efd34,81992019,0,0x0,8
tick,0x7ffc909efd34,82006780,0,0x0,8
tick,0x7ffc909efd34,82021918,0,0x0,8
tick,0x7ffc909efd34,82037860,0,0x0,8
tick,0x7ffc909efd34,82053479,0,0x0,8
tick,0x7ffc909efd34,82069310,0,0x0,8
tick,0x7ffc909efd34,82084577,0,0x0,8
tick,0x7ffc909efd34,82100406,0,0x0,8
tick,0x7ffc909efd34,82115780,0,0x0,8
tick,0x7ffc909efd34,82131258,0,0x0,8
tick,0x7ffc909efd34,82147196,0,0x0,8
tick,0x7ffc909efd34,82162512,0,0x0,8
tick,0x7ffc909efd34,82178008,0,0x0,8
tick,0x7ffc909efd34,82194009,0,0x0,8
tick,0x7ffc909efd34,82209537,0,0x0,8
tick,0x7ffc909efd34,82225711,0,0x0,8
tick,0x7ffc909efd34,82240822,0,0x0,8
tick,0x7ffc909efd34,82255955,0,0x0,8
tick,0x7ffc909efd34,82271362,0,0x0,8
tick,0x7ffc909efd34,82286800,0,0x0,8
tick,0x7ffc909efd34,82302186,0,0x0,8
tick,0x7ffc909efd34,82317103,0,0x0,8
tick,0x7ffc909efd34,82332119,0,0x0,8
tick,0x7ffc909efd34,82347532,0,0x0,8
tick,0x7ffc909efd34,82363167,0,0x0,8
tick,0x7ffc909efd34,82378672,0,0x0,8
tick,0x7ffc909efd34,82394863,0,0x0,8
tick,0x7ffc909efd34,82410675,0,0x0,8
tick,0x7ffc909efd34,82426132,0,0x0,8
tick,0x7ffc909efd34,82442410,0,0x0,8
tick,0x7ffc909efd34,82457200,0,0x0,8
tick,0x7ffc909efd34,82472742,0,0x0,8
tick,0x7ffc909efd34,82487992,0,0x0,8
tick,0x7ffc909efd34,82503783,0,0x0,8
tick,0x7ffc909efd34,82519762,0,0x0,8
tick,0x7ffc909efd34,82535100,0,0x0,8
tick,0x7ffc909efd34,82551234,0,0x0,8
tick,0x7ffc909efd34,82566878,0,0x0,8
tick,0x7ffc909efd34,82582515,0,0x0,8
tick,0x7ffc909efd34,82598196,0,0x0,8
tick,0x7ffc909efd34,82614215,0,0x0,8
tick,0x7ffc909efd34,82629507,0,0x0,8
tick,0x7ffc909efd34,82645625,0,0x0,8
tick,0x7ffc909efd34,82661185,0,0x0,8
tick,0x7ffc909efd34,82676959,0,0x0,8
tick,0x7ffc909efd34,82692649,0,0x0,8
tick,0x7ffc909efd34,82708569,0,0x0,8
tick,0x7ffc909efd34,82724869,0,0x0,8
tick,0x7ffc909efd34,82740777,0,0x0,8
tick,0x7ffc909efd34,82755660,0,0x0,8
tick,0x7ffc909efd34,82770641,0,0x0,8
tick,0x7ffc909efd34,82786614,0,0x0,8
tick,0x7ffc909efd34,82802695,0,0x0,8
tick,0x7ffc909efd34,82818694,0,0x0,8
tick,0x7ffc909efd34,82834718,0,0x0,8
tick,0x7ffc909efd34,82850700,0,0x0,8
tick,0x7ffc909efd34,82866811,0,0x0,8
tick,0x7ffc909efd34,82882771,0,0x0,8
tick,0x7ffc909efd34,82898708,0,0x0,8
tick,0x7ffc909efd34,82914753,0,0x0,8
tick,0x7ffc909efd34,82930460,0,0x0,8
tick,0x7ffc909efd34,82946446,0,0x0,8
tick,0x7ffc909efd34,82962269,0,0x0,8
tick,0x7ffc909efd34,82978431,0,0x0,8
tick,0x7ffc909efd34,82994440,0,0x0,8
tick,0x7ffc909efd34,83010300,0,0x0,8
tick,0x7ffc909efd34,83026440,0,0x0,8
tick,0x7ffc909efd34,83042272,0,0x0,8
tick,0x7ffc909efd34,83058285,0,0x0,8
tick,0x7ffc909efd34,83074694,0,0x0,8
tick,0x7ffc909efd34,83090415,0,0x0,8
tick,0x7ffc909efd34,83106361,0,0x0,8
tick,0x7ffc909efd34,83122444,0,0x0,8
tick,0x7ffc909efd34,83138321,0,0x0,8
tick,0x7ffc909efd34,83154311,0,0x0,8
tick,0x7ffc909efd34,83170296,0,0x0,8
tick,0x7ffc909efd34,83186384,0,0x0,8
tick,0x7ffc909efd34,83202315,0,0x0,8
tick,0x7ffc909efd34,83218500,0,0x0,8
tick,0x7ffc909efd34,83234353,0,0x0,8
tick,0x7ffc909efd34,83250394,0,0x0,8
tick,0x7ffc909efd34,83266257,0,0x0,8
tick,0x7ffc909efd34,83282331,0,0x0,8
tick,0x7ffc909efd34,83298407,0,0x0,8
tick,0x7ffc909efd34,83314245,0,0x0,8
tick,0x7ffc909efd34,83329280,0,0x0,8
tick,0x7ffc909efd34,83345188,0,0x0,8
tick,0x7ffc909efd34,83360535,0,0x0,8
tick,0x7ffc909efd34,83376625,0,0x0,8
tick,0x7ffc909efd34,83392980,0,0x0,8
tick,0x7ffc909efd34,83408451,0,0x0,8
tick,0x7ffc909efd34,83424454,0,0x0,8
tick,0x7ffc909efd34,83439545,0,0x0,8
tick,0x7ffc909efd34,83454454,0,0x0,8
tick,0x7ffc909efd34,83470379,0,0x0,8
tick,0x7ffc909efd34,83485411,0,0x0,8
tick,0x7ffc909efd34,83500479,0,0x0,8
tick,0x7ffc909efd34,83516369,0,0x0,8
tick,0x7ffc909efd34,83532569,0,0x0,8
tick,0x7ffc909efd34,83553347,0,0x0,8
tick,0x7ffc909efd34,83564523,0,0x0,8
tick,0x7ffc909efd34,83581411,0,0x0,8
tick,0x7ffc909efd34,83596398,0,0x0,8
tick,0x7ffc909efd34,83612389,0,0x0,8
tick,0x7ffc909efd34,83628791,0,0x0,8
tick,0x7ffc909efd34,83644401,0,0x0,8
tick,0x7ffc909efd34,83660511,0,0x0,8
tick,0x7ffc909efd34,83676433,0,0x0,8
tick,0x7ffc909efd34,83693254,0,0x0,8
tick,0x7ffc909efd34,83708493,0,0x0,8
tick,0x7ffc909efd34,83723452,0,0x0,8
tick,0x7ffc909efd34,83739486,0,0x0,8
tick,0x7ffc909efd34,83755440,0,0x0,8
tick,0x7ffc909efd34,83770427,0,0x0,8
tick,0x7ffc909efd34,83785472,0,0x0,8
tick,0x7ffc909efd34,83801563,0,0x0,8
tick,0x7ffc909efd34,83817484,0,0x0,8
tick,0x7ffc909efd34,83833425,0,0x0,8
tick,0x7ffc909efd34,83849391,0,0x0,8
tick,0x7ffc909efd34,83865493,0,0x0,8
tick,0x7ffc909efd34,83881597,0,0x0,8
tick,0x7ffc909efd34,83897443,0,0x0,8
tick,0x7ffc909efd34,83914215,0,0x0,8
tick,0x7ffc909efd34,83929291,0,0x0,8
tick,0x7ffc909efd34,83944264,0,0x0,8
tick,0x7ffc909efd34,83959289,0,0x0,8
tick,0x7ffc909efd34,83975314,0,0x0,8
tick,0x7ffc909efd34,83990785,0,0x0,8
tick,0x7ffc909efd34,84006728,0,0x0,8
tick,0x7ffc909efd34,84022611,0,0x0,8
tick,0x7ffc909efd34,84038685,0,0x0,8
tick,0x7ffc909efd34,84054961,0,0x0,8
tick,0x7ffc909efd34,84070757,0,0x0,8
tick,0x7ffc909efd34,84087289,0,0x0,8
tick,0x7ffc909efd34,84103382,0,0x0,8
tick,0x7ffc909efd34,84118792,0,0x0,8
tick,0x7ffc909efd34,84134805,0,0x0,8
tick,0x7ffc909efd34,84150809,0,0x0,8
tick,0x7ffc909efd34,84166857,0,0x0,8
tick,0x7ffc909efd34,84182197,0,0x0,8
tick,0x7ffc909efd34,84197351,0,0x0,8
tick,0x7ffc909efd34,84212941,0,0x0,8
tick,0x7ffc909efd34,84228453,0,0x0,8
tick,0x7ffc909efd34,84244473,0,0x0,8
tick,0x7ffc909efd34,84259162,0,0x0,8
tick,0x7ffc909efd34,84274180,0,0x0,8
tick,0x7ffc909efd34,84289599,0,0x0,8
tick,0x7ffc909efd34,84305220,0,0x0,8
tick,0x7ffc909efd34,84321432,0,0x0,8
tick,0x7ffc909efd34,84336895,0,0x0,8
tick,0x7ffc909efd34,84352692,0,0x0,8
tick,0x7ffc909efd34,84369115,0,0x0,8
tick,0x7ffc909efd34,84384207,0,0x0,8
tick,0x7ffc909efd34,84399864,0,0x0,8
tick,0x7ffc909efd34,84415426,0,0x0,8
tick,0x7ffc909efd34,84430801,0,0x0,8
tick,0x7ffc909efd34,84446874,0,0x0,8
tick,0x7ffc909efd34,84462254,0,0x0,8
tick,0x7ffc909efd34,84477741,0,0x0,8
tick,0x7ffc909efd34,84493536,0,0x0,8
tick,0x7ffc909efd34,84508857,0,0x0,8
tick,0x7ffc909efd34,84524509,0,0x0,8
tick,0x7ffc909efd34,84539973,0,0x0,8
tick,0x7ffc909efd34,84555385,0,0x0,8
tick,0x7ffc909efd34,84571376,0,0x0,8
tick,0x7ffc909efd34,84587051,0,0x0,8
tick,0x7ffc909efd34,84602808,0,0x0,8
tick,0x7ffc909efd34,84618126,0,0x0,8
tick,0x7ffc909efd34,84633791,0,0x0,8
tick,0x7ffc909efd34,84649551,0,0x0,8
tick,0x7ffc909efd34,84665114,0,0x0,8
tick,0x7ffc909efd34,84681181,0,0x0,8
tick,0x7ffc909efd34,84696586,0,0x0,8
tick,0x7ffc909efd34,84712290,0,0x0,8
tick,0x7ffc909efd34,84727798,0,0x0,8
tick,0x7ffc909efd34,84743447,0,0x0,8
tick,0x7ffc909efd34,84758926,0,0x0,8
tick,0x7ffc909efd34,84774838,0,0x0,8
tick,0x7ffc909efd34,84790707,0,0x0,8
tick,0x7ffc909efd34,84805980,0,0x0,8
tick,0x7ffc909efd34,84821594,0,0x0,8
tick,0x7ffc909efd34,84837067,0,0x0,8
tick,0x7ffc909efd34,84853110,0,0x0,8
tick,0x7ffc909efd34,84868373,0,0x0,8
tick,0x7ffc909efd34,84884618,0,0x0,8
tick,0x7ffc909efd34,84900329,0,0x0,8
tick,0x7ffc909efd34,84916222,0,0x0,8
tick,0x7ffc909efd34,84931559,0,0x0,8
tick,0x7ffc909efd34,84947247,0,0x0,8
tick,0x7ffc909efd34,84962655,0,0x0,8
tick,0x7ffc909efd34,84978468,0,0x0,8
tick,0x7ffc909efd34,84993787,0,0x0,8
tick,0x7ffc909efd34,85009493,0,0x0,8
tick,0x7ffc909efd34,85024763,0,0x0,8
tick,0x7ffc909efd34,85040176,0,0x0,8
tick,0x7ffc909efd34,85055787,0,0x0,8
tick,0x7ffc909efd34,85071204,0,0x0,8
tick,0x7ffc909efd34,85086628,0,0x0,8
tick,0x7ffc909efd34,85102257,0,0x0,8
tick,0x7ffc909efd34,85117629,0,0x0,8
tick,0x7ffc909efd34,85133453,0,0x0,8
tick,0x7ffc909efd34,85149112,0,0x0,8
tick,0x7ffc909efd34,85164923,0,0x0,8
tick,0x7ffc909efd34,85180197,0,0x0,8
tick,0x7ffc909efd34,85195846,0,0x0,8
tick,0x7ffc909efd34,85210973,0,0x0,8
tick,0x7ffc909efd34,85226557,0,0x0,8
tick,0x7ffc909efd34,85242522,0,0x0,8
tick,0x7ffc909efd34,85258328,0,0x0,8
tick,0x7ffc909efd34,85273807,0,0x0,8
tick,0x7ffc909efd34,85289431,0,0x0,8
tick,0x7ffc909efd34,85304824,0,0x0,8
tick,0x7ffc909efd34,85320697,0,0x0,8
tick,0x7ffc909efd34,85336154,0,0x0,8
tick,0x7ffc909efd34,85351456,0,0x0,8
tick,0x7ffc909efd34,85367071,0,0x0,8
tick,0x7ffc909efd34,85382601,0,0x0,8
tick,0x7ffc909efd34,85398107,0,0x0,8
tick,0x7ffc909efd34,85414004,0,0x0,8
tick,0x7ffc909efd34,85430224,0,0x0,8
tick,0x7ffc909efd34,85445528,0,0x0,8
tick,0x7ffc909efd34,85460855,0,0x0,8
tick,0x7ffc909efd34,85476419,0,0x0,8
tick,0x7ffc909efd34,85491948,0,0x0,8
tick,0x7ffc909efd34,85507530,0,0x0,8
tick,0x7ffc909efd34,85523121,0,0x0,8
tick,0x7ffc909efd34,85539076,0,0x0,8
tick,0x7ffc909efd34,85554982,0,0x0,8
tick,0x7ffc909efd34,85570954,0,0x0,8
tick,0x7ffc909efd34,85586159,0,0x0,8
tick,0x7ffc909efd34,85601517,0,0x0,8
tick,0x7ffc909efd34,85617062,0,0x0,8
tick,0x7ffc909efd34,85632765,0,0x0,8
tick,0x7ffc909efd34,85648011,0,0x0,8
tick,0x7ffc909efd34,85663551,0,0x0,8
tick,0x7ffc909efd34,85679889,0,0x0,8
tick,0x7ffc909efd34,85695633,0,0x0,8
tick,0x7ffc909efd34,85710862,0,0x0,8
tick,0x7ffc909efd34,85726321,0,0x0,8
tick,0x7ffc909efd34,85742380,0,0x0,8
tick,0x7ffc909efd34,85757777,0,0x0,8
tick,0x7ffc909efd34,85772934,0,0x0,8
tick,0x7ffc909efd34,85788819,0,0x0,8
tick,0x7ffc909efd34,85804425,0,0x0,8
tick,0x7ffc909efd34,85820308,0,0x0,8
tick,0x7ffc909efd34,85835982,0,0x0,8
tick,0x7ffc909efd34,85851424,0,0x0,8
tick,0x7ffc909efd34,85866968,0,0x0,8
tick,0x7ffc909efd34,85882573,0,0x0,8
tick,0x7ffc909efd34,85898377,0,0x0,8
tick,0x7ffc909efd34,85913996,0,0x0,8
tick,0x7ffc909efd34,85929524,0,0x0,8
tick,0x7ffc909efd34,85945111,0,0x0,8
tick,0x7ffc909efd34,85960303,0,0x0,8
tick,0x7ffc909efd34,85975927,0,0x0,8
tick,0x7ffc909efd34,85991202,0,0x0,8
tick,0x7ffc909efd34,86006429,0,0x0,8
tick,0x7ffc909efd34,86022197,0,0x0,8
tick,0x7ffc909efd34,86037971,0,0x0,8
tick,0x7ffc909efd34,86053596,0,0x0,8
tick,0x7ffc909efd34,86069468,0,0x0,8
tick,0x7ffc909efd34,86085052,0,0x0,8
tick,0x7ffc909efd34,86100598,0,0x0,8
tick,0x7ffc909efd34,86117031,0,0x0,8
tick,0x7ffc909efd34,86132434,0,0x0,8
tick,0x7ffc909efd34,86147991,0,0x0,8
tick,0x7ffc909efd34,86163104,0,0x0,8
tick,0x7ffc909efd34,86179435,0,0x0,8
tick,0x7ffc909efd34,86194988,0,0x0,8
tick,0x7ffc909efd34,86210967,0,0x0,8
tick,0x7ffc909efd34,86225818,0,0x0,8
tick,0x7ffc909efd34,86241204,0,0x0,8
tick,0x7ffc909efd34,86256535,0,0x0,8
tick,0x7ffc909efd34,86271874,0,0x0,8
tick,0x7ffc909efd34,86287533,0,0x0,8
tick,0x7ffc909efd34,86303405,0,0x0,8
tick,0x7ffc909efd34,86319104,0,0x0,8
tick,0x7ffc909efd34,86334997,0,0x0,8
tick,0x7ffc909efd34,86350567,0,0x0,8
tick,0x7ffc909efd34,86366086,0,0x0,8
tick,0x7ffc909efd34,86382006,0,0x0,8
tick,0x7ffc909efd34,86397708,0,0x0,8
tick,0x7ffc909efd34,86413518,0,0x0,8
tick,0x7ffc909efd34,86429175,0,0x0,8
tick,0x7ffc909efd34,86444603,0,0x0,8
tick,0x7ffc909efd34,86459972,0,0x0,8
tick,0x7ffc909efd34,86475490,0,0x0,8
tick,0x7ffc909efd34,86490981,0,0x0,8
tick,0x7ffc909efd34,86506529,0,0x0,8
tick,0x7ffc909efd34,86521984,0,0x0,8
tick,0x7ffc909efd34,86537352,0,0x0,8
tick,0x7ffc909efd34,86552843,0,0x0,8
tick,0x7ffc909efd34,86568722,0,0x0,8
tick,0x7ffc909efd34,86584548,0,0x0,8
tick,0x7ffc909efd34,86600037,0,0x0,8
tick,0x7ffc909efd34,86615892,0,0x0,8
tick,0x7ffc909efd34,86631213,0,0x0,8
tick,0x7ffc909efd34,86646474,0,0x0,8
tick,0x7ffc909efd34,86661807,0,0x0,8
tick,0x7ffc909efd34,86677162,0,0x0,8
tick,0x7ffc909efd34,86693163,0,0x0,8
tick,0x7ffc909efd34,86708524,0,0x0,8
tick,0x7ffc909efd34,86724420,0,0x0,8
tick,0x7ffc909efd34,86739522,0,0x0,8
tick,0x7ffc909efd34,86755157,0,0x0,8
tick,0x7ffc909efd34,86770779,0,0x0,8
tick,0x7ffc909efd34,86786384,0,0x0,8
tick,0x7ffc909efd34,86802456,0,0x0,8
tick,0x7ffc909efd34,86818527,0,0x0,8
tick,0x7ffc909efd34,86834222,0,0x0,8
tick,0x7ffc909efd34,86850450,0,0x0,8
tick,0x7ffc909efd34,86866616,0,0x0,8
tick,0x7ffc909efd34,86882131,0,0x0,8
tick,0x7ffc909efd34,86897366,0,0x0,8
tick,0x7ffc909efd34,86912911,0,0x0,8
tick,0x7ffc909efd34,86928574,0,0x0,8
tick,0x7ffc909efd34,86944394,0,0x0,8
tick,0x7ffc909efd34,86959621,0,0x0,8
tick,0x7ffc909efd34,86975017,0,0x0,8
tick,0x7ffc909efd34,86990797,0,0x0,8
tick,0x7ffc909efd34,87005777,0,0x0,8
tick,0x7ffc909efd34,87020956,0,0x0,8
tick,0x7ffc909efd34,87036562,0,0x0,8
tick,0x7ffc909efd34,87052288,0,0x0,8
tick,0x7ffc909efd34,87067697,0,0x0,8
tick,0x7ffc909efd34,87082870,0,0x0,8
tick,0x7ffc909efd34,87098551,0,0x0,8
tick,0x7ffc909efd34,87114608,0,0x0,8
tick,0x7ffc909efd34,87130509,0,0x0,8
tick,0x7ffc909efd34,87146098,0,0x0,8
tick,0x7ffc909efd34,87161556,0,0x0,8
tick,0x7ffc909efd34,87177769,0,0x0,8
tick,0x7ffc909efd34,87193158,0,0x0,8
tick,0x7ffc909efd34,87208618,0,0x0,8
tick,0x7ffc909efd34,87224399,0,0x0,8
tick,0x7ffc909efd34,87240202,0,0x0,8
tick,0x7ffc909efd34,87255463,0,0x0,8
tick,0x7ffc909efd34,87271199,0,0x0,8
tick,0x7ffc909efd34,87286619,0,0x0,8
tick,0x7ffc909efd34,87302430,0,0x0,8
tick,0x7ffc909efd34,87317146,0,0x0,8
tick,0x7ffc909efd34,87332685,0,0x0,8
tick,0x7ffc909efd34,87348393,0,0x0,8
tick,0x7ffc909efd34,87364461,0,0x0,8
tick,0x7ffc909efd34,87379888,0,0x0,8
tick,0x7ffc909efd34,87395256,0,0x0,8
tick,0x7ffc909efd34,87410697,0,0x0,8
tick,0x7ffc909efd34,87426466,0,0x0,8
tick,0x7ffc909efd34,87442518,0,0x0,8
tick,0x7ffc909efd34,87457842,0,0x0,8
tick,0x7ffc909efd34,87473486,0,0x0,8
tick,0x7ffc909efd34,87488829,0,0x0,8
tick,0x7ffc909efd34,87504602,0,0x0,8
tick,0x7ffc909efd34,87520257,0,0x0,8
tick,0x7ffc909efd34,87535704,0,0x0,8
tick,0x7ffc909efd34,87551056,0,0x0,8
tick,0x7ffc909efd34,87566618,0,0x0,8
tick,0x7ffc909efd34,87582007,0,0x0,8
tick,0x7ffc909efd34,87597668,0,0x0,8
tick,0x7ffc909efd34,87613090,0,0x0,8
tick,0x7ffc909efd34,87628806,0,0x0,8
tick,0x7ffc909efd34,87644000,0,0x0,8
tick,0x7ffc909efd34,87659317,0,0x0,8
tick,0x7ffc909efd34,87675371,0,0x0,8
tick,0x7ffc909efd34,87691181,0,0x0,8
tick,0x7ffc909efd34,87707010,0,0x0,8
tick,0x7ffc909efd34,87722241,0,0x0,8
tick,0x7ffc909efd34,87737977,0,0x0,8
tick,0x7ffc909efd34,87753482,0,0x0,8
tick,0x7ffc909efd34,87769110,0,0x0,8
tick,0x7ffc909efd34,87784906,0,0x0,8
tick,0x7ffc909efd34,87800690,0,0x0,8
tick,0x7ffc909efd34,87816366,0,0x0,8
tick,0x7ffc909efd34,87831570,0,0x0,8
tick,0x7ffc909efd34,87847299,0,0x0,8
tick,0x7ffc909efd34,87862395,0,0x0,8
tick,0x7ffc909efd34,87878761,0,0x0,8
tick,0x7ffc909efd34,87894468,0,0x0,8
tick,0x7ffc909efd34,87910823,0,0x0,8
tick,0x7ffc909efd34,87926698,0,0x0,8
tick,0x7ffc909efd34,87942742,0,0x0,8
tick,0x7ffc909efd34,87958357,0,0x0,8
tick,0x7ffc909efd34,87973866,0,0x0,8
tick,0x7ffc909efd34,87989697,0,0x0,8
tick,0x7ffc909efd34,88005246,0,0x0,8
tick,0x7ffc909efd34,88020827,0,0x0,8
tick,0x7ffc909efd34,88036404,0,0x0,8
tick,0x7ffc909efd34,88051948,0,0x0,8
tick,0x7ffc909efd34,88067413,0,0x0,8
tick,0x7ffc909efd34,88082984,0,0x0,8
tick,0x7ffc909efd34,88099062,0,0x0,8
tick,0x7ffc909efd34,88114807,0,0x0,8
tick,0x7ffc909efd34,88131142,0,0x0,8
tick,0x7ffc909efd34,88146553,0,0x0,8
tick,0x7ffc909efd34,88161989,0,0x0,8
tick,0x7ffc909efd34,88177407,0,0x0,8
tick,0x7ffc909efd34,88193166,0,0x0,8
tick,0x7ffc909efd34,88209260,0,0x0,8
tick,0x7ffc909efd34,88225158,0,0x0,8
tick,0x7ffc909efd34,88241167,0,0x0,8
tick,0x7ffc909efd34,88256708,0,0x0,8
tick,0x7ffc909efd34,88271870,0,0x0,8
tick,0x7ffc909efd34,88287383,0,0x0,8
tick,0x7ffc909efd34,88302824,0,0x0,8
tick,0x7ffc909efd34,88318611,0,0x0,8
tick,0x7ffc909efd34,88334168,0,0x0,8
tick,0x7ffc909efd34,88349435,0,0x0,8
tick,0x7ffc909efd34,88364905,0,0x0,8
tick,0x7ffc909efd34,88380989,0,0x0,8
tick,0x7ffc909efd34,88396409,0,0x0,8
tick,0x7ffc909efd34,88412504,0,0x0,8
tick,0x7ffc909efd34,88428554,0,0x0,8
tick,0x7ffc909efd34,88443611,0,0x0,8
tick,0x7ffc909efd34,88459610,0,0x0,8
tick,0x7ffc909efd34,88475219,0,0x0,8
tick,0x7ffc909efd34,88491122,0,0x0,8
tick,0x7ffc909efd34,88506426,0,0x0,8
tick,0x7ffc909efd34,88522025,0,0x0,8
tick,0x7ffc909efd34,88537822,0,0x0,8
tick,0x7ffc909efd34,88553408,0,0x0,8
tick,0x7ffc909efd34,88569152,0,0x0,8
tick,0x7ffc909efd34,88585445,0,0x0,8
tick,0x7ffc909efd34,88601417,0,0x0,8
tick,0x7ffc909efd34,88617356,0,0x0,8
tick,0x7ffc909efd34,88632988,0,0x0,8
tick,0x7ffc909efd34,88648769,0,0x0,8
tick,0x7ffc909efd34,88664174,0,0x0,8
tick,0x7ffc909efd34,88679869,0,0x0,8
tick,0x7ffc909efd34,88695405,0,0x0,8
tick,0x7ffc909efd34,88711051,0,0x0,8
tick,0x7ffc909efd34,88727227,0,0x0,8
tick,0x7ffc909efd34,88743404,0,0x0,8
tick,0x7ffc909efd34,88758544,0,0x0,8
tick,0x7ffc909efd34,88774998,0,0x0,8
tick,0x7ffc909efd34,88790095,0,0x0,8
tick,0x7ffc909efd34,88805536,0,0x0,8
tick,0x7ffc909efd34,88820613,0,0x0,8
tick,0x7ffc909efd34,88836128,0,0x0,8
tick,0x7ffc909efd34,88852428,0,0x0,8
tick,0x7ffc909efd34,88867828,0,0x0,8
tick,0x7ffc909efd34,88883956,0,0x0,8
tick,0x7ffc909efd34,88900105,0,0x0,8
tick,0x7ffc909efd34,88915370,0,0x0,8
tick,0x7ffc909efd34,88931047,0,0x0,8
tick,0x7ffc909efd34,88946102,0,0x0,8
tick,0x7ffc909efd34,88961373,0,0x0,8
tick,0x7ffc909efd34,88977318,0,0x0,8
tick,0x7ffc909efd34,88993643,0,0x0,8
tick,0x7ffc909efd34,89008174,0,0x0,8
tick,0x7ffc909efd34,89024221,0,0x0,8
tick,0x7ffc909efd34,89039646,0,0x0,8
tick,0x7ffc909efd34,89054956,0,0x0,8
tick,0x7ffc909efd34,89070963,0,0x0,8
tick,0x7ffc909efd34,89086253,0,0x0,8
tick,0x7ffc909efd34,89102575,0,0x0,8
tick,0x7ffc909efd34,89118109,0,0x0,8
tick,0x7ffc909efd34,89133815,0,0x0,8
tick,0x7ffc909efd34,89149852,0,0x0,8
tick,0x7ffc909efd34,89165451,0,0x0,8
tick,0x7ffc909efd34,89181368,0,0x0,8
tick,0x7ffc909efd34,89197491,0,0x0,8
tick,0x7ffc909efd34,89213445,0,0x0,8
tick,0x7ffc909efd34,89228944,0,0x0,8
tick,0x7ffc909efd34,89244885,0,0x0,8
tick,0x7ffc909efd34,89260072,0,0x0,8
tick,0x7ffc909efd34,89275406,0,0x0,8
tick,0x7ffc909efd34,89291267,0,0x0,8
tick,0x7ffc909efd34,89306363,0,0x0,8
tick,0x7ffc909efd34,89321943,0,0x0,8
tick,0x7ffc909efd34,89337399,0,0x0,8
tick,0x7ffc909efd34,89353216,0,0x0,8
tick,0x7ffc909efd34,89368460,0,0x0,8
tick,0x7ffc909efd34,89383944,0,0x0,8
tick,0x7ffc909efd34,89399595,0,0x0,8
tick,0x7ffc909efd34,89415489,0,0x0,8
tick,0x7ffc909efd34,89430720,0,0x0,8
tick,0x7ffc909efd34,89446926,0,0x0,8
tick,0x7ffc909efd34,89462284,0,0x0,8
tick,0x7ffc909efd34,89477538,0,0x0,8
tick,0x7ffc909efd34,89493127,0,0x0,8
tick,0x7ffc909efd34,89509165,0,0x0,8
tick,0x7ffc909efd34,89524649,0,0x0,8
tick,0x7ffc909efd34,89540876,0,0x0,8
tick,0x7ffc909efd34,89556515,0,0x0,8
tick,0x7ffc909efd34,89572510,0,0x0,8
tick,0x7ffc909efd34,89588491,0,0x0,8
tick,0x7ffc909efd34,89604349,0,0x0,8
tick,0x7ffc909efd34,89619960,0,0x0,8
tick,0x7ffc909efd34,89635506,0,0x0,8
tick,0x7ffc909efd34,89651585,0,0x0,8
tick,0x7ffc909efd34,89667003,0,0x0,8
tick,0x7ffc909efd34,89682404,0,0x0,8
tick,0x7ffc909efd34,89697670,0,0x0,8
tick,0x7ffc909efd34,89713181,0,0x0,8
tick,0x7ffc909efd34,89728990,0,0x0,8
tick,0x7ffc909efd34,89744273,0,0x0,8
tick,0x7ffc909efd34,89759556,0,0x0,8
tick,0x7ffc909efd34,89775254,0,0x0,8
tick,0x7ffc909efd34,89790634,0,0x0,8
tick,0x7ffc909efd34,89806044,0,0x0,8
tick,0x7ffc909efd34,89821530,0,0x0,8
tick,0x7ffc909efd34,89837008,0,0x0,8
tick,0x7ffc909efd34,89852206,0,0x0,8
tick,0x7ffc909efd34,89868219,0,0x0,8
tick,0x7ffc909efd34,89884295,0,0x0,8
tick,0x7ffc909efd34,89900543,0,0x0,8
tick,0x7ffc909efd34,89916258,0,0x0,8
tick,0x7ffc909efd34,89932378,0,0x0,8
tick,0x7ffc909efd34,89948426,0,0x0,8
tick,0x7ffc909efd34,89964466,0,0x0,8
tick,0x7ffc909efd34,89980379,0,0x0,8
tick,0x7ffc909efd34,89996117,0,0x0,8
tick,0x7ffc909efd34,90011419,0,0x0,8
tick,0x7ffc909efd34,90026822,0,0x0,8
tick,0x7ffc909efd34,90042055,0,0x0,8
tick,0x7ffc909efd34,90057973,0,0x0,8
tick,0x7ffc909efd34,90073096,0,0x0,8
tick,0x7ffc909efd34,90088234,0,0x0,8
tick,0x7ffc909efd34,90103549,0,0x0,8
tick,0x7ffc909efd34,90119777,0,0x0,8
tick,0x7ffc909efd34,90135040,0,0x0,8
tick,0x7ffc909efd34,90150283,0,0x0,8
tick,0x7ffc909efd34,90169169,0,0x0,8
tick,0x7ffc909efd34,90182014,0,0x0,8
tick,0x7ffc909efd34,90198019,0,0x0,8
tick,0x7ffc909efd34,90214008,0,0x0,8
tick,0x7ffc909efd34,90230076,0,0x0,8
tick,0x7ffc909efd34,90246025,0,0x0,8
tick,0x7ffc909efd34,90261987,0,0x0,8
tick,0x7ffc909efd34,90277973,0,0x0,8
tick,0x7ffc909efd34,90293993,0,0x0,8
tick,0x7ffc909efd34,90310113,0,0x0,8
tick,0x7ffc909efd34,90326618,0,0x0,8
tick,0x7ffc909efd34,90342166,0,0x0,8
tick,0x7ffc909efd34,90357139,0,0x0,8
tick,0x7ffc909efd34,90372249,0,0x0,8
tick,0x7ffc909efd34,90388153,0,0x0,8
tick,0x7ffc909efd34,90403633,0,0x0,8
tick,0x7ffc909efd34,90418729,0,0x0,8
tick,0x7ffc909efd34,90434193,0,0x0,8
tick,0x7ffc909efd34,90449904,0,0x0,8
tick,0x7ffc909efd34,90464731,0,0x0,8
tick,0x7ffc909efd34,90481081,0,0x0,8
tick,0x7ffc909efd34,90497057,0,0x0,8
tick,0x7ffc909efd34,90512223,0,0x0,8
tick,0x7ffc909efd34,90527589,0,0x0,8
tick,0x7ffc909efd34,90542817,0,0x0,8
tick,0x7ffc909efd34,90558077,0,0x0,8
tick,0x7ffc909efd34,90573986,0,0x0,8
tick,0x7ffc909efd34,90589015,0,0x0,8
tick,0x7ffc909efd34,90604887,0,0x0,8
tick,0x7ffc909efd34,90620616,0,0x0,8
tick,0x7ffc909efd34,90636196,0,0x0,8
tick,0x7ffc909efd34,90652350,0,0x0,8
tick,0x7ffc909efd34,90668492,0,0x0,8
tick,0x7ffc909efd34,90684033,0,0x0,8
tick,0x7ffc909efd34,90700172,0,0x0,8
tick,0x7ffc909efd34,90715442,0,0x0,8
tick,0x7ffc909efd34,90730797,0,0x0,8
tick,0x7ffc909efd34,90746441,0,0x0,8
tick,0x7ffc909efd34,90762324,0,0x0,8
tick,0x7ffc909efd34,90778166,0,0x0,8
tick,0x7ffc909efd34,90794038,0,0x0,8
tick,0x7ffc909efd34,90810161,0,0x0,8
tick,0x7ffc909efd34,90826213,0,0x0,8
tick,0x7ffc909efd34,90841809,0,0x0,8
tick,0x7ffc909efd34,90857800,0,0x0,8
tick,0x7ffc909efd34,90873699,0,0x0,8
tick,0x7ffc909efd34,90889137,0,0x0,8
tick,0x7ffc909efd34,90904810,0,0x0,8
tick,0x7ffc909efd34,90921053,0,0x0,8
tick,0x7ffc909efd34,90936409,0,0x0,8
tick,0x7ffc909efd34,90952385,0,0x0,8
tick,0x7ffc909efd34,90967394,0,0x0,8
tick,0x7ffc909efd34,90982828,0,0x0,8
tick,0x7ffc909efd34,90998268,0,0x0,8
tick,0x7ffc909efd34,91013628,0,0x0,8
tick,0x7ffc909efd34,91029101,0,0x0,8
tick,0x7ffc909efd34,91044523,0,0x0,8
tick,0x7ffc909efd34,91060937,0,0x0,8
tick,0x7ffc909efd34,91076954,0,0x0,8
tick,0x7ffc909efd34,91093064,0,0x0,8
tick,0x7ffc909efd34,91108413,0,0x0,8
tick,0x7ffc909efd34,91124432,0,0x0,8
tick,0x7ffc909efd34,91139545,0,0x0,8
tick,0x7ffc909efd34,91155862,0,0x0,8
tick,0x7ffc909efd34,91171143,0,0x0,8
tick,0x7ffc909efd34,91187302,0,0x0,8
tick,0x7ffc909efd34,91202460,0,0x0,8
tick,0x7ffc909efd34,91217725,0,0x0,8
tick,0x7ffc909efd34,91233416,0,0x0,8
tick,0x7ffc909efd34,91249363,0,0x0,8
tick,0x7ffc909efd34,91265028,0,0x0,8
tick,0x7ffc909efd34,91280824,0,0x0,8
tick,0x7ffc909efd34,91296017,0,0x0,8
tick,0x7ffc909efd34,91311296,0,0x0,8
tick,0x7ffc909efd34,91327572,0,0x0,8
tick,0x7ffc909efd34,91343151,0,0x0,8
tick,0x7ffc909efd34,91358491,0,0x0,8
tick,0x7ffc909efd34,91374286,0,0x0,8
tick,0x7ffc909efd34,91390284,0,0x0,8
tick,0x7ffc909efd34,91406040,0,0x0,8
tick,0x7ffc909efd34,91421465,0,0x0,8
tick,0x7ffc909efd34,91436809,0,0x0,8
tick,0x7ffc909efd34,91452666,0,0x0,8
tick,0x7ffc909efd34,91468395,0,0x0,8
tick,0x7ffc909efd34,91484591,0,0x0,8
tick,0x7ffc909efd34,91499767,0,0x0,8
tick,0x7ffc909efd34,91515418,0,0x0,8
tick,0x7ffc909efd34,91531449,0,0x0,8
tick,0x7ffc909efd34,91546918,0,0x0,8
tick,0x7ffc909efd34,91562400,0,0x0,8
tick,0x7ffc909efd34,91577971,0,0x0,8
tick,0x7ffc909efd34,91593924,0,0x0,8
tick,0x7ffc909efd34,91609368,0,0x0,8
tick,0x7ffc909efd34,91624870,0,0x0,8
tick,0x7ffc909efd34,91640228,0,0x0,8
tick,0x7ffc909efd34,91655749,0,0x0,8
tick,0x7ffc909efd34,91671324,0,0x0,8
tick,0x7ffc909efd34,91686640,0,0x0,8
tick,0x7ffc909efd34,91701739,0,0x0,8
tick,0x7ffc909efd34,91717201,0,0x0,8
tick,0x7ffc909efd34,91732662,0,0x0,8
tick,0x7ffc909efd34,91748355,0,0x0,8
tick,0x7ffc909efd34,91763703,0,0x0,8
tick,0x7ffc909efd34,91778926,0,0x0,8
tick,0x7ffc909efd34,91794679,0,0x0,8
tick,0x7ffc909efd34,91810915,0,0x0,8
tick,0x7ffc909efd34,91826750,0,0x0,8
tick,0x7ffc909efd34,91842030,0,0x0,8
tick,0x7ffc909efd34,91857483,0,0x0,8
tick,0x7ffc909efd34,91873388,0,0x0,8
tick,0x7ffc909efd34,91888715,0,0x0,8
tick,0x7ffc909efd34,91904274,0,0x0,8
tick,0x7ffc909efd34,91919571,0,0x0,8
tick,0x7ffc909efd34,91934801,0,0x0,8
tick,0x7ffc909efd34,91950405,0,0x0,8
tick,0x7ffc909efd34,91966820,0,0x0,8
tick,0x7ffc909efd34,91982268,0,0x0,8
tick,0x7ffc909efd34,91998722,0,0x0,8
tick,0x7ffc909efd34,92014564,0,0x0,8
tick,0x7ffc909efd34,92030620,0,0x0,8
tick,0x7ffc909efd34,92046213,0,0x0,8
tick,0x7ffc909efd34,92061608,0,0x0,8
tick,0x7ffc909efd34,92077729,0,0x0,8
tick,0x7ffc909efd34,92092620,0,0x0,8
tick,0x7ffc909efd34,92107889,0,0x0,8
tick,0x7ffc909efd34,92123365,0,0x0,8
tick,0x7ffc909efd34,92138622,0,0x0,8
tick,0x7ffc909efd34,92153939,0,0x0,8
tick,0x7ffc909efd34,92169444,0,0x0,8
tick,0x7ffc909efd34,92184785,0,0x0,8
tick,0x7ffc909efd34,92201163,0,0x0,8
tick,0x7ffc909efd34,92216675,0,0x0,8
tick,0x7ffc909efd34,92232219,0,0x0,8
tick,0x7ffc909efd34,92247795,0,0x0,8
tick,0x7ffc909efd34,92263751,0,0x0,8
tick,0x7ffc909efd34,92279189,0,0x0,8
tick,0x7ffc909efd34,92294542,0,0x0,8
tick,0x7ffc909efd34,92310850,0,0x0,8
tick,0x7ffc909efd34,92326353,0,0x0,8
tick,0x7ffc909efd34,92341720,0,0x0,8
tick,0x7ffc909efd34,92357228,0,0x0,8
tick,0x7ffc909efd34,92373294,0,0x0,8
tick,0x7ffc909efd34,92388770,0,0x0,8
tick,0x7ffc909efd34,92404366,0,0x0,8
tick,0x7ffc909efd34,92419928,0,0x0,8
tick,0x7ffc909efd34,92435232,0,0x0,8
tick,0x7ffc909efd34,92451606,0,0x0,8
tick,0x7ffc909efd34,92467428,0,0x0,8
tick,0x7ffc909efd34,92482651,0,0x0,8
tick,0x7ffc909efd34,92498072,0,0x0,8
tick,0x7ffc909efd34,92513726,0,0x0,8
tick,0x7ffc909efd34,92529750,0,0x0,8
tick,0x7ffc909efd34,92545071,0,0x0,8
tick,0x7ffc909efd34,92560549,0,0x0,8
tick,0x7ffc909efd34,92576304,0,0x0,8
tick,0x7ffc909efd34,92592153,0,0x0,8
tick,0x7ffc909efd34,92607343,0,0x0,8
tick,0x7ffc909efd34,92623221,0,0x0,8
tick,0x7ffc909efd34,92638350,0,0x0,8
tick,0x7ffc909efd34,92653773,0,0x0,8
tick,0x7ffc909efd34,92669451,0,0x0,8
tick,0x7ffc909efd34,92685218,0,0x0,8
tick,0x7ffc909efd34,92700679,0,0x0,8
tick,0x7ffc909efd34,92716308,0,0x0,8
tick,0x7ffc909efd34,92732249,0,0x0,8
tick,0x7ffc909efd34,92747736,0,0x0,8
tick,0x7ffc909efd34,92763317,0,0x0,8
tick,0x7ffc909efd34,92779233,0,0x0,8
tick,0x7ffc909efd34,92794720,0,0x0,8
tick,0x7ffc909efd34,92810740,0,0x0,8
tick,0x7ffc909efd34,92826287,0,0x0,8
tick,0x7ffc909efd34,92842221,0,0x0,8
tick,0x7ffc909efd34,92857893,0,0x0,8
tick,0x7ffc909efd34,92874164,0,0x0,8
tick,0x7ffc909efd34,92889079,0,0x0,8
tick,0x7ffc909efd34,92904074,0,0x0,8
tick,0x7ffc909efd34,92919002,0,0x0,8
tick,0x7ffc909efd34,92933926,0,0x0,8
tick,0x7ffc909efd34,92950112,0,0x0,8
tick,0x7ffc909efd34,92965680,0,0x0,8
tick,0x7ffc909efd34,92980977,0,0x0,8
tick,0x7ffc909efd34,92996626,0,0x0,8
tick,0x7ffc909efd34,93012044,0,0x0,8
tick,0x7ffc909efd34,93028109,0,0x0,8
tick,0x7ffc909efd34,93042931,0,0x0,8
tick,0x7ffc909efd34,93057769,0,0x0,8
tick,0x7ffc909efd34,93073335,0,0x0,8
tick,0x7ffc909efd34,93088809,0,0x0,8
tick,0x7ffc909efd34,93104480,0,0x0,8
tick,0x7ffc909efd34,93119541,0,0x0,8
tick,0x7ffc909efd34,93135082,0,0x0,8
tick,0x7ffc909efd34,93151468,0,0x0,8
tick,0x7ffc909efd34,93167086,0,0x0,8
tick,0x7ffc909efd34,93183064,0,0x0,8
tick,0x7ffc909efd34,93198553,0,0x0,8
tick,0x7ffc909efd34,93213698,0,0x0,8
tick,0x7ffc909efd34,93229251,0,0x0,8
tick,0x7ffc909efd34,93244765,0,0x0,8
tick,0x7ffc909efd34,93260191,0,0x0,8
tick,0x7ffc909efd34,93275577,0,0x0,8
tick,0x7ffc909efd34,93290859,0,0x0,8
tick,0x7ffc909efd34,93306420,0,0x0,8
tick,0x7ffc909efd34,93321993,0,0x0,8
tick,0x7ffc909efd34,93337497,0,0x0,8
tick,0x7ffc909efd34,93353541,0,0x0,8
tick,0x7ffc909efd34,93368607,0,0x0,8
tick,0x7ffc909efd34,93383283,0,0x0,8
tick,0x7ffc909efd34,93398852,0,0x0,8
tick,0x7ffc909efd34,93414888,0,0x0,8
tick,0x7ffc909efd34,93430294,0,0x0,8
tick,0x7ffc909efd34,93446024,0,0x0,8
tick,0x7ffc909efd34,93461376,0,0x0,8
tick,0x7ffc909efd34,93476690,0,0x0,8
tick,0x7ffc909efd34,93492283,0,0x0,8
tick,0x7ffc909efd34,93507975,0,0x0,8
tick,0x7ffc909efd34,93524244,0,0x0,8
tick,0x7ffc909efd34,93539949,0,0x0,8
tick,0x7ffc909efd34,93555102,0,0x0,8
tick,0x7ffc909efd34,93570577,0,0x0,8
tick,0x7ffc909efd34,93586584,0,0x0,8
tick,0x7ffc909efd34,93601864,0,0x0,8
tick,0x7ffc909efd34,93617457,0,0x0,8
tick,0x7ffc909efd34,93633211,0,0x0,8
tick,0x7ffc909efd34,93648740,0,0x0,8
tick,0x7ffc909efd34,93664204,0,0x0,8
tick,0x7ffc909efd34,93679486,0,0x0,8
tick,0x7ffc909efd34,93695299,0,0x0,8
tick,0x7ffc909efd34,93710634,0,0x0,8
tick,0x7ffc909efd34,93726224,0,0x0,8
tick,0x7ffc909efd34,93741488,0,0x0,8
tick,0x7ffc909efd34,93757182,0,0x0,8
tick,0x7ffc909efd34,93772872,0,0x0,8
tick,0x7ffc909efd34,93788223,0,0x0,8
tick,0x7ffc909efd34,93803779,0,0x0,8
tick,0x7ffc909efd34,93819439,0,0x0,8
tick,0x7ffc909efd34,93835117,0,0x0,8
tick,0x7ffc909efd34,93850548,0,0x0,8
tick,0x7ffc909efd34,93866090,0,0x0,8
tick,0x7ffc909efd34,93882426,0,0x0,8
tick,0x7ffc909efd34,93897892,0,0x0,8
tick,0x7ffc909efd34,93913762,0,0x0,8
tick,0x7ffc909efd34,93929007,0,0x0,8
tick,0x7ffc909efd34,93944664,0,0x0,8
tick,0x7ffc909efd34,93960516,0,0x0,8
tick,0x7ffc909efd34,93975818,0,0x0,8
tick,0x7ffc909efd34,93991534,0,0x0,8
tick,0x7ffc909efd34,94007090,0,0x0,8
tick,0x7ffc909efd34,94022977,0,0x0,8
tick,0x7ffc909efd34,94038186,0,0x0,8
tick,0x7ffc909efd34,94053345,0,0x0,8
tick,0x7ffc909efd34,94068887,0,0x0,8
tick,0x7ffc909efd34,94084645,0,0x0,8
tick,0x7ffc909efd34,94100999,0,0x0,8
tick,0x7ffc909efd34,94116628,0,0x0,8
tick,0x7ffc909efd34,94132153,0,0x0,8
tick,0x7ffc909efd34,94147161,0,0x0,8
tick,0x7ffc909efd34,94162755,0,0x0,8
tick,0x7ffc909efd34,94178367,0,0x0,8
tick,0x7ffc909efd34,94194439,0,0x0,8
tick,0x7ffc909efd34,94210704,0,0x0,8
tick,0x7ffc909efd34,94226529,0,0x0,8
tick,0x7ffc909efd34,94242579,0,0x0,8
tick,0x7ffc909efd34,94258415,0,0x0,8
tick,0x7ffc909efd34,94274638,0,0x0,8
tick,0x7ffc909efd34,94290236,0,0x0,8
tick,0x7ffc909efd34,94305742,0,0x0,8
tick,0x7ffc909efd34,94321287,0,0x0,8
tick,0x7ffc909efd34,94336814,0,0x0,8
tick,0x7ffc909efd34,94352355,0,0x0,8
tick,0x7ffc909efd34,94367881,0,0x0,8
tick,0x7ffc909efd34,94383564,0,0x0,8
tick,0x7ffc909efd34,94399802,0,0x0,8
tick,0x7ffc909efd34,94414974,0,0x0,8
tick,0x7ffc909efd34,94430239,0,0x0,8
tick,0x7ffc909efd34,94445932,0,0x0,8
tick,0x7ffc909efd34,94461375,0,0x0,8
tick,0x7ffc909efd34,94476869,0,0x0,8
tick,0x7ffc909efd34,94492391,0,0x0,8
tick,0x7ffc909efd34,94507705,0,0x0,8
tick,0x7ffc909efd34,94523135,0,0x0,8
tick,0x7ffc909efd34,94539545,0,0x0,8
tick,0x7ffc909efd34,94554797,0,0x0,8
tick,0x7ffc909efd34,94570400,0,0x0,8
tick,0x7ffc909efd34,94586202,0,0x0,8
tick,0x7ffc909efd34,94600966,0,0x0,8
tick,0x7ffc909efd34,94616128,0,0x0,8
tick,0x7ffc909efd34,94631341,0,0x0,8
tick,0x7ffc909efd34,94646784,0,0x0,8
tick,0x7ffc909efd34,94661999,0,0x0,8
tick,0x7ffc909efd34,94677422,0,0x0,8
tick,0x7ffc909efd34,94692670,0,0x0,8
tick,0x7ffc909efd34,94708851,0,0x0,8
tick,0x7ffc909efd34,94724329,0,0x0,8
tick,0x7ffc909efd34,94739642,0,0x0,8
tick,0x7ffc909efd34,94755421,0,0x0,8
tick,0x7ffc909efd34,94770678,0,0x0,8
tick,0x7ffc909efd34,94786572,0,0x0,8
tick,0x7ffc909efd34,94801903,0,0x0,8
tick,0x7ffc909efd34,94817464,0,0x0,8
tick,0x7ffc909efd34,94833177,0,0x0,8
tick,0x7ffc909efd34,94849045,0,0x0,8
tick,0x7ffc909efd34,94864369,0,0x0,8
tick,0x7ffc909efd34,94880747,0,0x0,8
tick,0x7ffc909efd34,94896389,0,0x0,8
tick,0x7ffc909efd34,94912297,0,0x0,8
tick,0x7ffc909efd34,94927323,0,0x0,8
tick,0x7ffc909efd34,94942865,0,0x0,8
tick,0x7ffc909efd34,94958283,0,0x0,8
tick,0x7ffc909efd34,94973959,0,0x0,8
tick,0x7ffc909efd34,94988879,0,0x0,8
tick,0x7ffc909efd34,95003914,0,0x0,8
tick,0x7ffc909efd34,95019390,0,0x0,8
tick,0x7ffc909efd34,95034743,0,0x0,8
tick,0x7ffc909efd34,95050607,0,0x0,8
tick,0x7ffc909efd34,95066041,0,0x0,8
tick,0x7ffc909efd34,95081526,0,0x0,8
tick,0x7ffc909efd34,95097127,0,0x0,8
tick,0x7ffc909efd34,95112836,0,0x0,8
tick,0x7ffc909efd34,95128618,0,0x0,8
tick,0x7ffc909efd34,95144237,0,0x0,8
tick,0x7ffc909efd34,95159769,0,0x0,8
tick,0x7ffc909efd34,95175127,0,0x0,8
tick,0x7ffc909efd34,95190309,0,0x0,8
tick,0x7ffc909efd34,95206123,0,0x0,8
tick,0x7ffc909efd34,95222539,0,0x0,8
tick,0x7ffc909efd34,95238168,0,0x0,8
tick,0x7ffc909efd34,95253603,0,0x0,8
tick,0x7ffc909efd34,95269055,0,0x0,8
tick,0x7ffc909efd34,95284776,0,0x0,8
tick,0x7ffc909efd34,95300719,0,0x0,8
tick,0x7ffc909efd34,95316226,0,0x0,8
tick,0x7ffc909efd34,95332082,0,0x0,8
tick,0x7ffc909efd34,95347340,0,0x0,8
tick,0x7ffc909efd34,95363096,0,0x0,8
tick,0x7ffc909efd34,95378595,0,0x0,8
tick,0x7ffc909efd34,95393851,0,0x0,8
tick,0x7ffc909efd34,95410176,0,0x0,8
tick,0x7ffc909efd34,95425708,0,0x0,8
tick,0x7ffc909efd34,95440951,0,0x0,8
tick,0x7ffc909efd34,95456772,0,0x0,8
tick,0x7ffc909efd34,95472774,0,0x0,8
tick,0x7ffc909efd34,95488022,0,0x0,8
tick,0x7ffc909efd34,95503407,0,0x0,8
tick,0x7ffc909efd34,95519155,0,0x0,8
tick,0x7ffc909efd34,95534437,0,0x0,8
tick,0x7ffc909efd34,95550041,0,0x0,8
tick,0x7ffc909efd34,95565705,0,0x0,8
tick,0x7ffc909efd34,95581799,0,0x0,8
tick,0x7ffc909efd34,95597514,0,0x0,8
tick,0x7ffc909efd34,95613120,0,0x0,8
tick,0x7ffc909efd34,95628694,0,0x0,8
tick,0x7ffc909efd34,95644392,0,0x0,8
tick,0x7ffc909efd34,95660657,0,0x0,8
tick,0x7ffc909efd34,95676934,0,0x0,8
tick,0x7ffc909efd34,95692551,0,0x0,8
tick,0x7ffc909efd34,95708047,0,0x0,8
tick,0x7ffc909efd34,95723343,0,0x0,8
tick,0x7ffc909efd34,95739243,0,0x0,8
tick,0x7ffc909efd34,95754232,0,0x0,8
tick,0x7ffc909efd34,95769908,0,0x0,8
tick,0x7ffc909efd34,95785563,0,0x0,8
tick,0x7ffc909efd34,95801652,0,0x0,8
tick,0x7ffc909efd34,95816353,0,0x0,8
tick,0x7ffc909efd34,95831871,0,0x0,8
tick,0x7ffc909efd34,95847588,0,0x0,8
tick,0x7ffc909efd34,95863008,0,0x0,8
tick,0x7ffc909efd34,95879295,0,0x0,8
tick,0x7ffc909efd34,95894581,0,0x0,8
tick,0x7ffc909efd34,95910174,0,0x0,8
tick,0x7ffc909efd34,95925645,0,0x0,8
tick,0x7ffc909efd34,95940927,0,0x0,8
tick,0x7ffc909efd34,95956668,0,0x0,8
tick,0x7ffc909efd34,95971955,0,0x0,8
tick,0x7ffc909efd34,95987713,0,0x0,8
tick,0x7ffc909efd34,96003000,0,0x0,8
tick,0x7ffc909efd34,96019031,0,0x0,8
tick,0x7ffc909efd34,96034423,0,0x0,8
tick,0x7ffc909efd34,96050113,0,0x0,8
tick,0x7ffc909efd34,96066377,0,0x0,8
tick,0x7ffc909efd34,96081246,0,0x0,8
tick,0x7ffc909efd34,96096499,0,0x0,8
tick,0x7ffc909efd34,96111604,0,0x0,8
tick,0x7ffc909efd34,96127290,0,0x0,8
tick,0x7ffc909efd34,96142851,0,0x0,8
tick,0x7ffc909efd34,96158587,0,0x0,8
tick,0x7ffc909efd34,96173886,0,0x0,8
tick,0x7ffc909efd34,96189293,0,0x0,8
tick,0x7ffc909efd34,96204637,0,0x0,8
tick,0x7ffc909efd34,96220559,0,0x0,8
tick,0x7ffc909efd34,96236239,0,0x0,8
tick,0x7ffc909efd34,96251368,0,0x0,8
tick,0x7ffc909efd34,96266946,0,0x0,8
tick,0x7ffc909efd34,96282134,0,0x0,8
tick,0x7ffc909efd34,96297880,0,0x0,8
tick,0x7ffc909efd34,96313208,0,0x0,8
tick,0x7ffc909efd34,96328856,0,0x0,8
tick,0x7ffc909efd34,96344632,0,0x0,8
tick,0x7ffc909efd34,96359949,0,0x0,8
tick,0x7ffc909efd34,96375821,0,0x0,8
tick,0x7ffc909efd34,96391135,0,0x0,8
tick,0x7ffc909efd34,96406763,0,0x0,8
tick,0x7ffc909efd34,96422338,0,0x0,8
tick,0x7ffc909efd34,96438013,0,0x0,8
tick,0x7ffc909efd34,96453297,0,0x0,8
tick,0x7ffc909efd34,96469385,0,0x0,8
tick,0x7ffc909efd34,96484770,0,0x0,8
tick,0x7ffc909efd34,96500411,0,0x0,8
tick,0x7ffc909efd34,96515650,0,0x0,8
tick,0x7ffc909efd34,96531261,0,0x0,8
tick,0x7ffc909efd34,96546713,0,0x0,8
tick,0x7ffc909efd34,96562353,0,0x0,8
tick,0x7ffc909efd34,96578506,0,0x0,8
tick,0x7ffc909efd34,96594089,0,0x0,8
tick,0x7ffc909efd34,96609241,0,0x0,8
tick,0x7ffc909efd34,96624757,0,0x0,8
tick,0x7ffc909efd34,96639894,0,0x0,8
tick,0x7ffc909efd34,96655722,0,0x0,8
tick,0x7ffc909efd34,96672249,0,0x0,8
tick,0x7ffc909efd34,96687552,0,0x0,8
tick,0x7ffc909efd34,96703529,0,0x0,8
tick,0x7ffc909efd34,96719163,0,0x0,8
tick,0x7ffc909efd34,96734697,0,0x0,8
tick,0x7ffc909efd34,96750669,0,0x0,8
tick,0x7ffc909efd34,96766278,0,0x0,8
tick,0x7ffc909efd34,96780963,0,0x0,8
tick,0x7ffc909efd34,96796531,0,0x0,8
tick,0x7ffc909efd34,96812046,0,0x0,8
tick,0x7ffc909efd34,96827744,0,0x0,8
tick,0x7ffc909efd34,96843759,0,0x0,8
tick,0x7ffc909efd34,96859567,0,0x0,8
tick,0x7ffc909efd34,96874906,0,0x0,8
tick,0x7ffc909efd34,96890570,0,0x0,8
tick,0x7ffc909efd34,96906814,0,0x0,8
tick,0x7ffc909efd34,96922531,0,0x0,8
tick,0x7ffc909efd34,96937751,0,0x0,8
tick,0x7ffc909efd34,96953478,0,0x0,8
tick,0x7ffc909efd34,96969272,0,0x0,8
tick,0x7ffc909efd34,96985059,0,0x0,8
tick,0x7ffc909efd34,97000586,0,0x0,8
tick,0x7ffc909efd34,97015921,0,0x0,8
tick,0x7ffc909efd34,97031382,0,0x0,8
tick,0x7ffc909efd34,97046675,0,0x0,8
tick,0x7ffc909efd34,97062446,0,0x0,8
tick,0x7ffc909efd34,97078095,0,0x0,8
tick,0x7ffc909efd34,97093616,0,0x0,8
tick,0x7ffc909efd34,97108934,0,0x0,8
tick,0x7ffc909efd34,97124385,0,0x0,8
tick,0x7ffc909efd34,97139720,0,0x0,8
tick,0x7ffc909efd34,97155949,0,0x0,8
tick,0x7ffc909efd34,97170786,0,0x0,8
tick,0x7ffc909efd34,97186886,0,0x0,8
tick,0x7ffc909efd34,97202481,0,0x0,8
tick,0x7ffc909efd34,97218083,0,0x0,8
tick,0x7ffc909efd34,97233629,0,0x0,8
tick,0x7ffc909efd34,97248796,0,0x0,8
tick,0x7ffc909efd34,97264012,0,0x0,8
tick,0x7ffc909efd34,97279960,0,0x0,8
tick,0x7ffc909efd34,97296166,0,0x0,8
tick,0x7ffc909efd34,97311875,0,0x0,8
tick,0x7ffc909efd34,97327014,0,0x0,8
tick,0x7ffc909efd34,97342497,0,0x0,8
tick,0x7ffc909efd34,97358199,0,0x0,8
tick,0x7ffc909efd34,97373683,0,0x0,8
tick,0x7ffc909efd34,97388987,0,0x0,8
tick,0x7ffc909efd34,97404879,0,0x0,8
tick,0x7ffc909efd34,97420466,0,0x0,8
tick,0x7ffc909efd34,97436811,0,0x0,8
tick,0x7ffc909efd34,97452322,0,0x0,8
tick,0x7ffc909efd34,97468354,0,0x0,8
tick,0x7ffc909efd34,97483851,0,0x0,8
tick,0x7ffc909efd34,97498857,0,0x0,8
tick,0x7ffc909efd34,97514742,0,0x0,8
tick,0x7ffc909efd34,97530703,0,0x0,8
tick,0x7ffc909efd34,97546727,0,0x0,8
tick,0x7ffc909efd34,97563012,0,0x0,8
tick,0x7ffc909efd34,97578920,0,0x0,8
tick,0x7ffc909efd34,97594854,0,0x0,8
tick,0x7ffc909efd34,97610788,0,0x0,8
tick,0x7ffc909efd34,97625773,0,0x0,8
tick,0x7ffc909efd34,97641941,0,0x0,8
tick,0x7ffc909efd34,97656981,0,0x0,8
tick,0x7ffc909efd34,97673134,0,0x0,8
tick,0x7ffc909efd34,97688829,0,0x0,8
tick,0x7ffc909efd34,97705046,0,0x0,8
tick,0x7ffc909efd34,97720946,0,0x0,8
tick,0x7ffc909efd34,97737022,0,0x0,8
tick,0x7ffc909efd34,97752920,0,0x0,8
tick,0x7ffc909efd34,97769039,0,0x0,8
tick,0x7ffc909efd34,97785166,0,0x0,8
tick,0x7ffc909efd34,97799873,0,0x0,8
tick,0x7ffc909efd34,97815413,0,0x0,8
tick,0x7ffc909efd34,97831687,0,0x0,8
tick,0x7ffc909efd34,97847678,0,0x0,8
tick,0x7ffc909efd34,97863450,0,0x0,8
tick,0x7ffc909efd34,97879621,0,0x0,8
tick,0x7ffc909efd34,97895568,0,0x0,8
tick,0x7ffc909efd34,97911529,0,0x0,8
tick,0x7ffc909efd34,97927490,0,0x0,8
tick,0x7ffc909efd34,97943449,0,0x0,8
tick,0x7ffc909efd34,97959561,0,0x0,8
tick,0x7ffc909efd34,97975575,0,0x0,8
tick,0x7ffc909efd34,97991708,0,0x0,8
tick,0x7ffc909efd34,98007471,0,0x0,8
tick,0x7ffc909efd34,98023488,0,0x0,8
tick,0x7ffc909efd34,98039468,0,0x0,8
tick,0x7ffc909efd34,98055482,0,0x0,8
tick,0x7ffc909efd34,98070916,0,0x0,8
tick,0x7ffc909efd34,98085549,0,0x0,8
tick,0x7ffc909efd34,98100986,0,0x0,8
tick,0x7ffc909efd34,98116987,0,0x0,8
tick,0x7ffc909efd34,98132886,0,0x0,8
tick,0x7ffc909efd34,98148847,0,0x0,8
tick,0x7ffc909efd34,98164814,0,0x0,8
tick,0x7ffc909efd34,98180907,0,0x0,8
tick,0x7ffc909efd34,98196900,0,0x0,8
tick,0x7ffc909efd34,98213060,0,0x0,8
tick,0x7ffc909efd34,98227894,0,0x0,8
tick,0x7ffc909efd34,98242842,0,0x0,8
tick,0x7ffc909efd34,98258825,0,0x0,8
tick,0x7ffc909efd34,98274923,0,0x0,8
tick,0x7ffc909efd34,98291182,0,0x0,8
tick,0x7ffc909efd34,98306744,0,0x0,8
tick,0x7ffc909efd34,98322778,0,0x0,8
tick,0x7ffc909efd34,98338751,0,0x0,8
tick,0x7ffc909efd34,98354806,0,0x0,8
tick,0x7ffc909efd34,98370798,0,0x0,8
tick,0x7ffc909efd34,98385799,0,0x0,8
tick,0x7ffc909efd34,98401341,0,0x0,8
tick,0x7ffc909efd34,98416941,0,0x0,8
tick,0x7ffc909efd34,98432910,0,0x0,8
tick,0x7ffc909efd34,98448940,0,0x0,8
tick,0x7ffc909efd34,98464003,0,0x0,8
tick,0x7ffc909efd34,98478911,0,0x0,8
tick,0x7ffc909efd34,98493717,0,0x0,8
tick,0x7ffc909efd34,98509738,0,0x0,8
tick,0x7ffc909efd34,98525137,0,0x0,8
tick,0x7ffc909efd34,98541102,0,0x0,8
tick,0x7ffc909efd34,98557024,0,0x0,8
tick,0x7ffc909efd34,98573135,0,0x0,8
tick,0x7ffc909efd34,98589072,0,0x0,8
tick,0x7ffc909efd34,98605245,0,0x0,8
tick,0x7ffc909efd34,98621188,0,0x0,8
tick,0x7ffc909efd34,98637145,0,0x0,8
tick,0x7ffc909efd34,98653147,0,0x0,8
tick,0x7ffc909efd34,98669044,0,0x0,8
tick,0x7ffc909efd34,98685202,0,0x0,8
tick,0x7ffc909efd34,98701156,0,0x0,8
tick,0x7ffc909efd34,98717141,0,0x0,8
tick,0x7ffc909efd34,98733930,0,0x0,8
tick,0x7ffc909efd34,98748813,0,0x0,8
tick,0x7ffc909efd34,98764297,0,0x0,8
tick,0x7ffc909efd34,98780459,0,0x0,8
tick,0x7ffc909efd34,98796225,0,0x0,8
tick,0x7ffc909efd34,98812606,0,0x0,8
tick,0x7ffc909efd34,98828119,0,0x0,8
tick,0x7ffc909efd34,98844213,0,0x0,8
tick,0x7ffc909efd34,98860133,0,0x0,8
tick,0x7ffc909efd34,98876507,0,0x0,8
tick,0x7ffc909efd34,98903386,0,0x0,8
tick,0x7ffc909efd34,98919691,0,0x0,8
tick,0x7ffc909efd34,98939004,0,0x0,8
tick,0x7ffc909efd34,98954830,0,0x0,8
tick,0x7ffc909efd34,98971905,0,0x0,8
tick,0x7ffc909efd34,98986156,0,0x0,8
tick,0x7ffc909efd34,99001878,0,0x0,8
tick,0x7ffc909efd34,99017836,0,0x0,8
tick,0x7ffc909efd34,99033823,0,0x0,8
tick,0x7ffc909efd34,99049887,0,0x0,8
tick,0x7ffc909efd34,99065416,0,0x0,8
tick,0x7ffc909efd34,99081807,0,0x0,8
tick,0x7ffc909efd34,99096961,0,0x0,8
tick,0x7ffc909efd34,99112609,0,0x0,8
tick,0x7ffc909efd34,99127934,0,0x0,8
tick,0x7ffc909efd34,99143532,0,0x0,8
tick,0x7ffc909efd34,99159848,0,0x0,8
tick,0x7ffc909efd34,99175634,0,0x0,8
tick,0x7ffc909efd34,99191020,0,0x0,8
tick,0x7ffc909efd34,99206338,0,0x0,8
tick,0x7ffc909efd34,99221844,0,0x0,8
tick,0x7ffc909efd34,99237131,0,0x0,8
tick,0x7ffc909efd34,99252938,0,0x0,8
tick,0x7ffc909efd34,99268613,0,0x0,8
tick,0x7ffc909efd34,99283860,0,0x0,8
tick,0x7ffc909efd34,99300051,0,0x0,8
tick,0x7ffc909efd34,99315641,0,0x0,8
tick,0x7ffc909efd34,99330841,0,0x0,8
tick,0x7ffc909efd34,99346396,0,0x0,8
tick,0x7ffc909efd34,99361939,0,0x0,8
tick,0x7ffc909efd34,99378125,0,0x0,8
tick,0x7ffc909efd34,99393272,0,0x0,8
tick,0x7ffc909efd34,99408588,0,0x0,8
tick,0x7ffc909efd34,99424130,0,0x0,8
tick,0x7ffc909efd34,99439682,0,0x0,8
tick,0x7ffc909efd34,99455189,0,0x0,8
tick,0x7ffc909efd34,99470184,0,0x0,8
tick,0x7ffc909efd34,99485674,0,0x0,8
tick,0x7ffc909efd34,99500733,0,0x0,8
tick,0x7ffc909efd34,99516403,0,0x0,8
tick,0x7ffc909efd34,99532650,0,0x0,8
tick,0x7ffc909efd34,99547745,0,0x0,8
tick,0x7ffc909efd34,99563700,0,0x0,8
tick,0x7ffc909efd34,99579504,0,0x0,8
tick,0x7ffc909efd34,99595184,0,0x0,8
tick,0x7ffc909efd34,99610685,0,0x0,8
tick,0x7ffc909efd34,99626277,0,0x0,8
tick,0x7ffc909efd34,99641929,0,0x0,8
tick,0x7ffc909efd34,99657309,0,0x0,8
tick,0x7ffc909efd34,99672587,0,0x0,8
tick,0x7ffc909efd34,99688446,0,0x0,8
tick,0x7ffc909efd34,99703397,0,0x0,8
tick,0x7ffc909efd34,99719201,0,0x0,8
tick,0x7ffc909efd34,99735028,0,0x0,8
tick,0x7ffc909efd34,99750553,0,0x0,8
tick,0x7ffc909efd34,99766587,0,0x0,8
tick,0x7ffc909efd34,99781883,0,0x0,8
tick,0x7ffc909efd34,99797729,0,0x0,8
tick,0x7ffc909efd34,99813182,0,0x0,8
tick,0x7ffc909efd34,99829028,0,0x0,8
tick,0x7ffc909efd34,99844498,0,0x0,8
tick,0x7ffc909efd34,99860166,0,0x0,8
tick,0x7ffc909efd34,99875741,0,0x0,8
tick,0x7ffc909efd34,99891259,0,0x0,8
tick,0x7ffc909efd34,99907270,0,0x0,8
tick,0x7ffc909efd34,99922912,0,0x0,8
tick,0x7ffc909efd34,99938633,0,0x0,8
tick,0x7ffc909efd34,99954310,0,0x0,8
tick,0x7ffc909efd34,99969546,0,0x0,8
tick,0x7ffc909efd34,99985425,0,0x0,8
tick,0x7ffc909efd34,100000834,0,0x0,8
tick,0x7ffc909efd34,100016435,0,0x0,8
tick,0x7ffc909efd34,100032124,0,0x0,8
tick,0x7ffc909efd34,100048133,0,0x0,8
tick,0x7ffc909efd34,100063767,0,0x0,8
tick,0x7ffc909efd34,100080226,0,0x0,8
tick,0x7ffc909efd34,100095264,0,0x0,8
tick,0x7ffc909efd34,100110595,0,0x0,8
tick,0x7ffc909efd34,100126581,0,0x0,8
tick,0x7ffc909efd34,100142156,0,0x0,8
tick,0x7ffc909efd34,100157671,0,0x0,8
tick,0x7ffc909efd34,100173291,0,0x0,8
tick,0x7ffc909efd34,100188589,0,0x0,8
tick,0x7ffc909efd34,100204028,0,0x0,8
tick,0x7ffc909efd34,100219763,0,0x0,8
tick,0x7ffc909efd34,100234942,0,0x0,8
tick,0x7ffc909efd34,100251301,0,0x0,8
tick,0x7ffc909efd34,100265707,0,0x0,8
tick,0x7ffc909efd34,100281105,0,0x0,8
tick,0x7ffc909efd34,100296696,0,0x0,8
tick,0x7ffc909efd34,100312372,0,0x0,8
tick,0x7ffc909efd34,100327470,0,0x0,8
tick,0x7ffc909efd34,100343042,0,0x0,8
tick,0x7ffc909efd34,100358648,0,0x0,8
tick,0x7ffc909efd34,100373772,0,0x0,8
tick,0x7ffc909efd34,100389144,0,0x0,8
tick,0x7ffc909efd34,100404812,0,0x0,8
tick,0x7ffc909efd34,100420078,0,0x0,8
tick,0x7ffc909efd34,100435671,0,0x0,8
tick,0x7ffc909efd34,100450873,0,0x0,8
tick,0x7ffc909efd34,100466541,0,0x0,8
tick,0x7ffc909efd34,100482674,0,0x0,8
tick,0x7ffc909efd34,100498839,0,0x0,8
tick,0x7ffc909efd34,100514469,0,0x0,8
tick,0x7ffc909efd34,100530320,0,0x0,8
tick,0x7ffc909efd34,100545959,0,0x0,8
tick,0x7ffc909efd34,100561266,0,0x0,8
tick,0x7ffc909efd34,100576708,0,0x0,8
tick,0x7ffc909efd34,100592145,0,0x0,8
tick,0x7ffc909efd34,100607554,0,0x0,8
tick,0x7ffc909efd34,100623066,0,0x0,8
tick,0x7ffc909efd34,100638351,0,0x0,8
tick,0x7ffc909efd34,100654038,0,0x0,8
tick,0x7ffc909efd34,100669513,0,0x0,8
tick,0x7ffc909efd34,100684923,0,0x0,8
tick,0x7ffc909efd34,100700476,0,0x0,8
tick,0x7ffc909efd34,100716340,0,0x0,8
tick,0x7ffc909efd34,100731903,0,0x0,8
tick,0x7ffc909efd34,100747233,0,0x0,8
tick,0x7ffc909efd34,100762977,0,0x0,8
tick,0x7ffc909efd34,100778614,0,0x0,8
tick,0x7ffc909efd34,100793945,0,0x0,8
tick,0x7ffc909efd34,100809253,0,0x0,8
tick,0x7ffc909efd34,100824333,0,0x0,8
tick,0x7ffc909efd34,100839959,0,0x0,8
tick,0x7ffc909efd34,100855216,0,0x0,8
tick,0x7ffc909efd34,100870407,0,0x0,8
tick,0x7ffc909efd34,100886067,0,0x0,8
tick,0x7ffc909efd34,100901648,0,0x0,8
tick,0x7ffc909efd34,100917157,0,0x0,8
tick,0x7ffc909efd34,100932760,0,0x0,8
tick,0x7ffc909efd34,100948249,0,0x0,8
tick,0x7ffc909efd34,100963588,0,0x0,8
tick,0x7ffc909efd34,100978738,0,0x0,8
tick,0x7ffc909efd34,100994335,0,0x0,8
tick,0x7ffc909efd34,101009694,0,0x0,8
tick,0x7ffc909efd34,101025975,0,0x0,8
tick,0x7ffc909efd34,101041471,0,0x0,8
tick,0x7ffc909efd34,101057018,0,0x0,8
tick,0x7ffc909efd34,101072266,0,0x0,8
tick,0x7ffc909efd34,101087674,0,0x0,8
tick,0x7ffc909efd34,101103070,0,0x0,8
tick,0x7ffc909efd34,101119011,0,0x0,8
tick,0x7ffc909efd34,101134812,0,0x0,8
tick,0x7ffc909efd34,101151227,0,0x0,8
tick,0x7ffc909efd34,101166833,0,0x0,8
tick,0x7ffc909efd34,101182455,0,0x0,8
tick,0x7ffc909efd34,101197817,0,0x0,8
tick,0x7ffc909efd34,101213578,0,0x0,8
tick,0x7ffc909efd34,101229354,0,0x0,8
tick,0x7ffc909efd34,101244886,0,0x0,8
tick,0x7ffc909efd34,101260392,0,0x0,8
tick,0x7ffc909efd34,101276017,0,0x0,8
tick,0x7ffc909efd34,101291791,0,0x0,8
tick,0x7ffc909efd34,101307355,0,0x0,8
tick,0x7ffc909efd34,101323465,0,0x0,8
tick,0x7ffc909efd34,101339007,0,0x0,8
tick,0x7ffc909efd34,101354818,0,0x0,8
tick,0x7ffc909efd34,101370232,0,0x0,8
tick,0x7ffc909efd34,101386176,0,0x0,8
tick,0x7ffc909efd34,101401383,0,0x0,8
tick,0x7ffc909efd34,101417004,0,0x0,8
tick,0x7ffc909efd34,101432134,0,0x0,8
tick,0x7ffc909efd34,101448251,0,0x0,8
tick,0x7ffc909efd34,101463948,0,0x0,8
tick,0x7ffc909efd34,101480235,0,0x0,8
tick,0x7ffc909efd34,101495535,0,0x0,8
tick,0x7ffc909efd34,101510816,0,0x0,8
tick,0x7ffc909efd34,101526465,0,0x0,8
tick,0x7ffc909efd34,101541748,0,0x0,8
tick,0x7ffc909efd34,101557319,0,0x0,8
tick,0x7ffc909efd34,101573304,0,0x0,8
tick,0x7ffc909efd34,101588852,0,0x0,8
tick,0x7ffc909efd34,101604806,0,0x0,8
tick,0x7ffc909efd34,101620060,0,0x0,8
tick,0x7ffc909efd34,101635860,0,0x0,8
tick,0x7ffc909efd34,101651255,0,0x0,8
tick,0x7ffc909efd34,101666887,0,0x0,8
tick,0x7ffc909efd34,101682608,0,0x0,8
tick,0x7ffc909efd34,101697785,0,0x0,8
tick,0x7ffc909efd34,101713793,0,0x0,8
tick,0x7ffc909efd34,101728736,0,0x0,8
tick,0x7ffc909efd34,101744358,0,0x0,8
tick,0x7ffc909efd34,101760637,0,0x0,8
tick,0x7ffc909efd34,101776232,0,0x0,8
tick,0x7ffc909efd34,101791814,0,0x0,8
tick,0x7ffc909efd34,101807622,0,0x0,8
tick,0x7ffc909efd34,101823253,0,0x0,8
tick,0x7ffc909efd34,101839002,0,0x0,8
tick,0x7ffc909efd34,101854833,0,0x0,8
tick,0x7ffc909efd34,101869679,0,0x0,8
tick,0x7ffc909efd34,101885458,0,0x0,8
tick,0x7ffc909efd34,101900943,0,0x0,8
tick,0x7ffc909efd34,101916538,0,0x0,8
tick,0x7ffc909efd34,101931850,0,0x0,8
tick,0x7ffc909efd34,101947237,0,0x0,8
tick,0x7ffc909efd34,101963062,0,0x0,8
tick,0x7ffc909efd34,101978257,0,0x0,8
tick,0x7ffc909efd34,101993675,0,0x0,8
tick,0x7ffc909efd34,102010039,0,0x0,8
tick,0x7ffc909efd34,102025326,0,0x0,8
tick,0x7ffc909efd34,102040493,0,0x0,8
tick,0x7ffc909efd34,102056445,0,0x0,8
tick,0x7ffc909efd34,102072177,0,0x0,8
tick,0x7ffc909efd34,102088157,0,0x0,8
tick,0x7ffc909efd34,102103711,0,0x0,8
tick,0x7ffc909efd34,102119098,0,0x0,8
tick,0x7ffc909efd34,102134868,0,0x0,8
tick,0x7ffc909efd34,102151261,0,0x0,8
tick,0x7ffc909efd34,102165878,0,0x0,8
tick,0x7ffc909efd34,102181262,0,0x0,8
tick,0x7ffc909efd34,102196810,0,0x0,8
tick,0x7ffc909efd34,102212420,0,0x0,8
tick,0x7ffc909efd34,102227962,0,0x0,8
tick,0x7ffc909efd34,102243869,0,0x0,8
tick,0x7ffc909efd34,102259408,0,0x0,8
tick,0x7ffc909efd34,102274994,0,0x0,8
tick,0x7ffc909efd34,102290519,0,0x0,8
tick,0x7ffc909efd34,102306273,0,0x0,8
tick,0x7ffc909efd34,102322228,0,0x0,8
tick,0x7ffc909efd34,102337956,0,0x0,8
tick,0x7ffc909efd34,102353326,0,0x0,8
tick,0x7ffc909efd34,102368936,0,0x0,8
tick,0x7ffc909efd34,102384693,0,0x0,8
tick,0x7ffc909efd34,102400093,0,0x0,8
tick,0x7ffc909efd34,102415735,0,0x0,8
tick,0x7ffc909efd34,102430958,0,0x0,8
tick,0x7ffc909efd34,102446275,0,0x0,8
tick,0x7ffc909efd34,102462013,0,0x0,8
tick,0x7ffc909efd34,102477486,0,0x0,8
tick,0x7ffc909efd34,102492924,0,0x0,8
tick,0x7ffc909efd34,102508096,0,0x0,8
tick,0x7ffc909efd34,102523186,0,0x0,8
tick,0x7ffc909efd34,102538697,0,0x0,8
tick,0x7ffc909efd34,102554657,0,0x0,8
tick,0x7ffc909efd34,102569906,0,0x0,8
tick,0x7ffc909efd34,102585963,0,0x0,8
tick,0x7ffc909efd34,102601252,0,0x0,8
tick,0x7ffc909efd34,102616886,0,0x0,8
tick,0x7ffc909efd34,102632455,0,0x0,8
tick,0x7ffc909efd34,102647891,0,0x0,8
tick,0x7ffc909efd34,102663539,0,0x0,8
tick,0x7ffc909efd34,102679531,0,0x0,8
tick,0x7ffc909efd34,102695176,0,0x0,8
tick,0x7ffc909efd34,102710893,0,0x0,8
tick,0x7ffc909efd34,102726667,0,0x0,8
tick,0x7ffc909efd34,102742166,0,0x0,8
tick,0x7ffc909efd34,102757747,0,0x0,8
tick,0x7ffc909efd34,102773138,0,0x0,8
tick,0x7ffc909efd34,102788727,0,0x0,8
tick,0x7ffc909efd34,102804663,0,0x0,8
tick,0x7ffc909efd34,102819965,0,0x0,8
tick,0x7ffc909efd34,102835511,0,0x0,8
tick,0x7ffc909efd34,102850964,0,0x0,8
tick,0x7ffc909efd34,102866982,0,0x0,8
tick,0x7ffc909efd34,102882978,0,0x0,8
tick,0x7ffc909efd34,102897767,0,0x0,8
tick,0x7ffc909efd34,102913305,0,0x0,8
tick,0x7ffc909efd34,102929364,0,0x0,8
tick,0x7ffc909efd34,102944228,0,0x0,8
tick,0x7ffc909efd34,102959382,0,0x0,8
tick,0x7ffc909efd34,102974586,0,0x0,8
tick,0x7ffc909efd34,102990175,0,0x0,8
tick,0x7ffc909efd34,103005269,0,0x0,8
tick,0x7ffc909efd34,103021514,0,0x0,8
tick,0x7ffc909efd34,103036182,0,0x0,8
tick,0x7ffc909efd34,103051535,0,0x0,8
tick,0x7ffc909efd34,103067208,0,0x0,8
tick,0x7ffc909efd34,103083535,0,0x0,8
tick,0x7ffc909efd34,103099329,0,0x0,8
tick,0x7ffc909efd34,103115172,0,0x0,8
tick,0x7ffc909efd34,103130283,0,0x0,8
tick,0x7ffc909efd34,103145626,0,0x0,8
tick,0x7ffc909efd34,103161354,0,0x0,8
tick,0x7ffc909efd34,103177120,0,0x0,8
tick,0x7ffc909efd34,103192250,0,0x0,8
tick,0x7ffc909efd34,103207543,0,0x0,8
tick,0x7ffc909efd34,103223034,0,0x0,8
tick,0x7ffc909efd34,103238838,0,0x0,8
tick,0x7ffc909efd34,103254802,0,0x0,8
tick,0x7ffc909efd34,103270009,0,0x0,8
tick,0x7ffc909efd34,103285453,0,0x0,8
tick,0x7ffc909efd34,103301196,0,0x0,8
tick,0x7ffc909efd34,103316464,0,0x0,8
tick,0x7ffc909efd34,103331864,0,0x0,8
tick,0x7ffc909efd34,103347382,0,0x0,8
tick,0x7ffc909efd34,103362663,0,0x0,8
tick,0x7ffc909efd34,103378613,0,0x0,8
tick,0x7ffc909efd34,103393538,0,0x0,8
tick,0x7ffc909efd34,103409018,0,0x0,8
tick,0x7ffc909efd34,103424735,0,0x0,8
tick,0x7ffc909efd34,103440498,0,0x0,8
tick,0x7ffc909efd34,103455861,0,0x0,8
tick,0x7ffc909efd34,103471166,0,0x0,8
tick,0x7ffc909efd34,103486438,0,0x0,8
tick,0x7ffc909efd34,103502170,0,0x0,8
tick,0x7ffc909efd34,103517278,0,0x0,8
tick,0x7ffc909efd34,103532667,0,0x0,8
tick,0x7ffc909efd34,103547899,0,0x0,8
tick,0x7ffc909efd34,103563313,0,0x0,8
tick,0x7ffc909efd34,103579531,0,0x0,8
tick,0x7ffc909efd34,103594726,0,0x0,8
tick,0x7ffc909efd34,103610573,0,0x0,8
tick,0x7ffc909efd34,103626234,0,0x0,8
tick,0x7ffc909efd34,103641864,0,0x0,8
tick,0x7ffc909efd34,103657401,0,0x0,8
tick,0x7ffc909efd34,103673505,0,0x0,8
tick,0x7ffc909efd34,103689274,0,0x0,8
tick,0x7ffc909efd34,103705020,0,0x0,8
tick,0x7ffc909efd34,103721500,0,0x0,8
tick,0x7ffc909efd34,103736252,0,0x0,8
tick,0x7ffc909efd34,103751816,0,0x0,8
tick,0x7ffc909efd34,103767204,0,0x0,8
tick,0x7ffc909efd34,103782609,0,0x0,8
tick,0x7ffc909efd34,103798038,0,0x0,8
tick,0x7ffc909efd34,103813244,0,0x0,8
tick,0x7ffc909efd34,103828293,0,0x0,8
tick,0x7ffc909efd34,103844682,0,0x0,8
tick,0x7ffc909efd34,103860007,0,0x0,8
tick,0x7ffc909efd34,103875416,0,0x0,8
tick,0x7ffc909efd34,103890881,0,0x0,8
tick,0x7ffc909efd34,103906692,0,0x0,8
tick,0x7ffc909efd34,103921947,0,0x0,8
tick,0x7ffc909efd34,103937747,0,0x0,8
tick,0x7ffc909efd34,103953558,0,0x0,8
tick,0x7ffc909efd34,103969600,0,0x0,8
tick,0x7ffc909efd34,103984921,0,0x0,8
tick,0x7ffc909efd34,104000438,0,0x0,8
tick,0x7ffc909efd34,104016532,0,0x0,8
tick,0x7ffc909efd34,104031491,0,0x0,8
tick,0x7ffc909efd34,104046329,0,0x0,8
tick,0x7ffc909efd34,104062404,0,0x0,8
tick,0x7ffc909efd34,104078004,0,0x0,8
tick,0x7ffc909efd34,104093782,0,0x0,8
tick,0x7ffc909efd34,104109200,0,0x0,8
tick,0x7ffc909efd34,104124578,0,0x0,8
tick,0x7ffc909efd34,104139857,0,0x0,8
tick,0x7ffc909efd34,104155229,0,0x0,8
tick,0x7ffc909efd34,104170547,0,0x0,8
tick,0x7ffc909efd34,104186307,0,0x0,8
tick,0x7ffc909efd34,104201469,0,0x0,8
tick,0x7ffc909efd34,104217190,0,0x0,8
tick,0x7ffc909efd34,104232835,0,0x0,8
tick,0x7ffc909efd34,104248191,0,0x0,8
tick,0x7ffc909efd34,104264162,0,0x0,8
tick,0x7ffc909efd34,104280248,0,0x0,8
tick,0x7ffc909efd34,104295802,0,0x0,8
tick,0x7ffc909efd34,104311687,0,0x0,8
tick,0x7ffc909efd34,104327289,0,0x0,8
tick,0x7ffc909efd34,104342826,0,0x0,8
tick,0x7ffc909efd34,104358522,0,0x0,8
tick,0x7ffc909efd34,104374357,0,0x0,8
tick,0x7ffc909efd34,104389780,0,0x0,8
tick,0x7ffc909efd34,104405121,0,0x0,8
tick,0x7ffc909efd34,104421375,0,0x0,8
tick,0x7ffc909efd34,104435913,0,0x0,8
tick,0x7ffc909efd34,104451568,0,0x0,8
tick,0x7ffc909efd34,104466957,0,0x0,8
tick,0x7ffc909efd34,104482294,0,0x0,8
tick,0x7ffc909efd34,104497725,0,0x0,8
tick,0x7ffc909efd34,104513481,0,0x0,8
tick,0x7ffc909efd34,104529214,0,0x0,8
tick,0x7ffc909efd34,104544914,0,0x0,8
tick,0x7ffc909efd34,104560493,0,0x0,8
tick,0x7ffc909efd34,104575788,0,0x0,8
tick,0x7ffc909efd34,104591119,0,0x0,8
tick,0x7ffc909efd34,104606441,0,0x0,8
tick,0x7ffc909efd34,104621672,0,0x0,8
tick,0x7ffc909efd34,104637421,0,0x0,8
tick,0x7ffc909efd34,104653072,0,0x0,8
tick,0x7ffc909efd34,104669329,0,0x0,8
tick,0x7ffc909efd34,104685135,0,0x0,8
tick,0x7ffc909efd34,104701290,0,0x0,8
tick,0x7ffc909efd34,104716918,0,0x0,8
tick,0x7ffc909efd34,104732315,0,0x0,8
tick,0x7ffc909efd34,104747947,0,0x0,8
tick,0x7ffc909efd34,104764001,0,0x0,8
tick,0x7ffc909efd34,104779211,0,0x0,8
tick,0x7ffc909efd34,104794488,0,0x0,8
tick,0x7ffc909efd34,104810435,0,0x0,8
tick,0x7ffc909efd34,104826066,0,0x0,8
tick,0x7ffc909efd34,104841473,0,0x0,8
tick,0x7ffc909efd34,104857347,0,0x0,8
tick,0x7ffc909efd34,104872126,0,0x0,8
tick,0x7ffc909efd34,104887567,0,0x0,8
tick,0x7ffc909efd34,104903239,0,0x0,8
tick,0x7ffc909efd34,104919428,0,0x0,8
tick,0x7ffc909efd34,104934496,0,0x0,8
tick,0x7ffc909efd34,104950822,0,0x0,8
tick,0x7ffc909efd34,104965422,0,0x0,8
tick,0x7ffc909efd34,104980825,0,0x0,8
tick,0x7ffc909efd34,104996329,0,0x0,8
tick,0x7ffc909efd34,105011974,0,0x0,8
tick,0x7ffc909efd34,105027413,0,0x0,8
tick,0x7ffc909efd34,105042784,0,0x0,8
tick,0x7ffc909efd34,105058304,0,0x0,8
tick,0x7ffc909efd34,105073754,0,0x0,8
tick,0x7ffc909efd34,105089313,0,0x0,8
tick,0x7ffc909efd34,105105254,0,0x0,8
tick,0x7ffc909efd34,105120763,0,0x0,8
tick,0x7ffc909efd34,105136728,0,0x0,8
tick,0x7ffc909efd34,105152736,0,0x0,8
tick,0x7ffc909efd34,105168687,0,0x0,8
tick,0x7ffc909efd34,105184509,0,0x0,8
tick,0x7ffc909efd34,105199725,0,0x0,8
tick,0x7ffc909efd34,105215596,0,0x0,8
tick,0x7ffc909efd34,105231268,0,0x0,8
tick,0x7ffc909efd34,105246917,0,0x0,8
tick,0x7ffc909efd34,105262427,0,0x0,8
tick,0x7ffc909efd34,105277620,0,0x0,8
tick,0x7ffc909efd34,105293325,0,0x0,8
tick,0x7ffc909efd34,105308700,0,0x0,8
tick,0x7ffc909efd34,105324190,0,0x0,8
tick,0x7ffc909efd34,105339489,0,0x0,8
tick,0x7ffc909efd34,105354749,0,0x0,8
tick,0x7ffc909efd34,105370733,0,0x0,8
tick,0x7ffc909efd34,105386644,0,0x0,8
tick,0x7ffc909efd34,105402218,0,0x0,8
tick,0x7ffc909efd34,105417721,0,0x0,8
tick,0x7ffc909efd34,105433332,0,0x0,8
tick,0x7ffc909efd34,105449668,0,0x0,8
tick,0x7ffc909efd34,105464751,0,0x0,8
tick,0x7ffc909efd34,105480247,0,0x0,8
tick,0x7ffc909efd34,105495901,0,0x0,8
tick,0x7ffc909efd34,105511517,0,0x0,8
tick,0x7ffc909efd34,105527145,0,0x0,8
tick,0x7ffc909efd34,105542232,0,0x0,8
tick,0x7ffc909efd34,105557804,0,0x0,8
tick,0x7ffc909efd34,105573288,0,0x0,8
tick,0x7ffc909efd34,105588400,0,0x0,8
tick,0x7ffc909efd34,105604220,0,0x0,8
tick,0x7ffc909efd34,105620540,0,0x0,8
tick,0x7ffc909efd34,105635723,0,0x0,8
tick,0x7ffc909efd34,105651538,0,0x0,8
tick,0x7ffc909efd34,105666788,0,0x0,8
tick,0x7ffc909efd34,105682244,0,0x0,8
tick,0x7ffc909efd34,105697719,0,0x0,8
tick,0x7ffc909efd34,105713207,0,0x0,8
tick,0x7ffc909efd34,105729439,0,0x0,8
tick,0x7ffc909efd34,105745029,0,0x0,8
tick,0x7ffc909efd34,105760535,0,0x0,8
tick,0x7ffc909efd34,105776148,0,0x0,8
tick,0x7ffc909efd34,105792185,0,0x0,8
tick,0x7ffc909efd34,105807578,0,0x0,8
tick,0x7ffc909efd34,105823733,0,0x0,8
tick,0x7ffc909efd34,105839383,0,0x0,8
tick,0x7ffc909efd34,105855196,0,0x0,8
tick,0x7ffc909efd34,105870804,0,0x0,8
tick,0x7ffc909efd34,105886178,0,0x0,8
tick,0x7ffc909efd34,105900778,0,0x0,8
tick,0x7ffc909efd34,105916446,0,0x0,8
tick,0x7ffc909efd34,105932162,0,0x0,8
tick,0x7ffc909efd34,105948367,0,0x0,8
tick,0x7ffc909efd34,105963717,0,0x0,8
tick,0x7ffc909efd34,105979251,0,0x0,8
tick,0x7ffc909efd34,105995011,0,0x0,8
tick,0x7ffc909efd34,106010411,0,0x0,8
tick,0x7ffc909efd34,106025830,0,0x0,8
tick,0x7ffc909efd34,106041253,0,0x0,8
tick,0x7ffc909efd34,106056651,0,0x0,8
tick,0x7ffc909efd34,106072086,0,0x0,8
tick,0x7ffc909efd34,106088282,0,0x0,8
tick,0x7ffc909efd34,106104152,0,0x0,8
tick,0x7ffc909efd34,106119369,0,0x0,8
tick,0x7ffc909efd34,106134745,0,0x0,8
tick,0x7ffc909efd34,106150308,0,0x0,8
tick,0x7ffc909efd34,106166293,0,0x0,8
tick,0x7ffc909efd34,106182025,0,0x0,8
tick,0x7ffc909efd34,106197758,0,0x0,8
tick,0x7ffc909efd34,106213005,0,0x0,8
tick,0x7ffc909efd34,106228538,0,0x0,8
tick,0x7ffc909efd34,106243803,0,0x0,8
tick,0x7ffc909efd34,106259737,0,0x0,8
tick,0x7ffc909efd34,106275141,0,0x0,8
tick,0x7ffc909efd34,106290681,0,0x0,8
tick,0x7ffc909efd34,106306046,0,0x0,8
tick,0x7ffc909efd34,106322326,0,0x0,8
tick,0x7ffc909efd34,106337909,0,0x0,8
tick,0x7ffc909efd34,106353010,0,0x0,8
tick,0x7ffc909efd34,106368850,0,0x0,8
tick,0x7ffc909efd34,106384342,0,0x0,8
tick,0x7ffc909efd34,106399904,0,0x0,8
tick,0x7ffc909efd34,106415636,0,0x0,8
tick,0x7ffc909efd34,106431320,0,0x0,8
tick,0x7ffc909efd34,106446917,0,0x0,8
tick,0x7ffc909efd34,106462566,0,0x0,8
tick,0x7ffc909efd34,106477720,0,0x0,8
tick,0x7ffc909efd34,106493358,0,0x0,8
tick,0x7ffc909efd34,106509130,0,0x0,8
tick,0x7ffc909efd34,106524217,0,0x0,8
tick,0x7ffc909efd34,106540020,0,0x0,8
tick,0x7ffc909efd34,106555441,0,0x0,8
tick,0x7ffc909efd34,106570712,0,0x0,8
tick,0x7ffc909efd34,106586535,0,0x0,8
tick,0x7ffc909efd34,106602010,0,0x0,8
tick,0x7ffc909efd34,106617871,0,0x0,8
tick,0x7ffc909efd34,106633075,0,0x0,8
tick,0x7ffc909efd34,106649443,0,0x0,8
tick,0x7ffc909efd34,106664896,0,0x0,8
tick,0x7ffc909efd34,106681083,0,0x0,8
tick,0x7ffc909efd34,106696714,0,0x0,8
tick,0x7ffc909efd34,106712295,0,0x0,8
tick,0x7ffc909efd34,106728143,0,0x0,8
tick,0x7ffc909efd34,106743542,0,0x0,8
tick,0x7ffc909efd34,106759931,0,0x0,8
tick,0x7ffc909efd34,106775792,0,0x0,8
tick,0x7ffc909efd34,106791418,0,0x0,8
tick,0x7ffc909efd34,106806993,0,0x0,8
tick,0x7ffc909efd34,106822724,0,0x0,8
tick,0x7ffc909efd34,106838090,0,0x0,8
tick,0x7ffc909efd34,106853315,0,0x0,8
tick,0x7ffc909efd34,106869394,0,0x0,8
tick,0x7ffc909efd34,106885640,0,0x0,8
tick,0x7ffc909efd34,106900808,0,0x0,8
tick,0x7ffc909efd34,106916326,0,0x0,8
tick,0x7ffc909efd34,106931380,0,0x0,8
tick,0x7ffc909efd34,106946952,0,0x0,8
tick,0x7ffc909efd34,106963020,0,0x0,8
tick,0x7ffc909efd34,106978749,0,0x0,8
tick,0x7ffc909efd34,106993668,0,0x0,8
tick,0x7ffc909efd34,107009405,0,0x0,8
tick,0x7ffc909efd34,107025217,0,0x0,8
tick,0x7ffc909efd34,107041087,0,0x0,8
tick,0x7ffc909efd34,107056870,0,0x0,8
tick,0x7ffc909efd34,107072080,0,0x0,8
tick,0x7ffc909efd34,107087457,0,0x0,8
tick,0x7ffc909efd34,107103144,0,0x0,8
tick,0x7ffc909efd34,107118725,0,0x0,8
tick,0x7ffc909efd34,107134114,0,0x0,8
tick,0x7ffc909efd34,107149629,0,0x0,8
tick,0x7ffc909efd34,107165319,0,0x0,8
tick,0x7ffc909efd34,107180862,0,0x0,8
tick,0x7ffc909efd34,107196782,0,0x0,8
tick,0x7ffc909efd34,107212591,0,0x0,8
tick,0x7ffc909efd34,107228020,0,0x0,8
tick,0x7ffc909efd34,107243553,0,0x0,8
tick,0x7ffc909efd34,107259244,0,0x0,8
tick,0x7ffc909efd34,107275342,0,0x0,8
tick,0x7ffc909efd34,107290688,0,0x0,8
tick,0x7ffc909efd34,107306373,0,0x0,8
tick,0x7ffc909efd34,107321677,0,0x0,8
tick,0x7ffc909efd34,107337044,0,0x0,8
tick,0x7ffc909efd34,107353110,0,0x0,8
tick,0x7ffc909efd34,107368481,0,0x0,8
tick,0x7ffc909efd34,107383892,0,0x0,8
tick,0x7ffc909efd34,107399038,0,0x0,8
tick,0x7ffc909efd34,107414484,0,0x0,8
tick,0x7ffc909efd34,107429910,0,0x0,8
tick,0x7ffc909efd34,107445197,0,0x0,8
tick,0x7ffc909efd34,107460908,0,0x0,8
tick,0x7ffc909efd34,107476473,0,0x0,8
tick,0x7ffc909efd34,107492215,0,0x0,8
tick,0x7ffc909efd34,107507465,0,0x0,8
tick,0x7ffc909efd34,107522904,0,0x0,8
tick,0x7ffc909efd34,107538453,0,0x0,8
tick,0x7ffc909efd34,107554487,0,0x0,8
tick,0x7ffc909efd34,107570228,0,0x0,8
tick,0x7ffc909efd34,107585402,0,0x0,8
tick,0x7ffc909efd34,107601011,0,0x0,8
tick,0x7ffc909efd34,107616490,0,0x0,8
tick,0x7ffc909efd34,107631877,0,0x0,8
tick,0x7ffc909efd34,107647715,0,0x0,8
tick,0x7ffc909efd34,107662801,0,0x0,8
tick,0x7ffc909efd34,107678844,0,0x0,8
tick,0x7ffc909efd34,107694401,0,0x0,8
tick,0x7ffc909efd34,107709770,0,0x0,8
tick,0x7ffc909efd34,107725242,0,0x0,8
tick,0x7ffc909efd34,107741068,0,0x0,8
tick,0x7ffc909efd34,107757243,0,0x0,8
tick,0x7ffc909efd34,107773040,0,0x0,8
tick,0x7ffc909efd34,107788792,0,0x0,8
tick,0x7ffc909efd34,107804696,0,0x0,8
tick,0x7ffc909efd34,107820382,0,0x0,8
tick,0x7ffc909efd34,107835535,0,0x0,8
tick,0x7ffc909efd34,107851073,0,0x0,8
tick,0x7ffc909efd34,107866623,0,0x0,8
tick,0x7ffc909efd34,107882086,0,0x0,8
tick,0x7ffc909efd34,107897269,0,0x0,8
tick,0x7ffc909efd34,107912539,0,0x0,8
tick,0x7ffc909efd34,107927991,0,0x0,8
tick,0x7ffc909efd34,107943394,0,0x0,8
tick,0x7ffc909efd34,107958821,0,0x0,8
tick,0x7ffc909efd34,107974387,0,0x0,8
tick,0x7ffc909efd34,107989733,0,0x0,8
tick,0x7ffc909efd34,108005759,0,0x0,8
tick,0x7ffc909efd34,108021308,0,0x0,8
tick,0x7ffc909efd34,108036941,0,0x0,8
tick,0x7ffc909efd34,108052382,0,0x0,8
tick,0x7ffc909efd34,108067928,0,0x0,8
tick,0x7ffc909efd34,108083442,0,0x0,8
tick,0x7ffc909efd34,108099296,0,0x0,8
tick,0x7ffc909efd34,108114723,0,0x0,8
tick,0x7ffc909efd34,108131043,0,0x0,8
tick,0x7ffc909efd34,108145742,0,0x0,8
tick,0x7ffc909efd34,108161001,0,0x0,8
tick,0x7ffc909efd34,108176037,0,0x0,8
tick,0x7ffc909efd34,108191707,0,0x0,8
tick,0x7ffc909efd34,108207196,0,0x0,8
tick,0x7ffc909efd34,108222542,0,0x0,8
tick,0x7ffc909efd34,108238016,0,0x0,8
tick,0x7ffc909efd34,108253613,0,0x0,8
tick,0x7ffc909efd34,108268764,0,0x0,8
tick,0x7ffc909efd34,108284331,0,0x0,8
tick,0x7ffc909efd34,108300114,0,0x0,8
tick,0x7ffc909efd34,108315923,0,0x0,8
tick,0x7ffc909efd34,108331230,0,0x0,8
tick,0x7ffc909efd34,108347430,0,0x0,8
tick,0x7ffc909efd34,108362907,0,0x0,8
tick,0x7ffc909efd34,108378412,0,0x0,8
tick,0x7ffc909efd34,108393605,0,0x0,8
tick,0x7ffc909efd34,108409160,0,0x0,8
tick,0x7ffc909efd34,108424243,0,0x0,8
tick,0x7ffc909efd34,108439940,0,0x0,8
tick,0x7ffc909efd34,108455696,0,0x0,8
tick,0x7ffc909efd34,108471815,0,0x0,8
tick,0x7ffc909efd34,108487116,0,0x0,8
tick,0x7ffc909efd34,108502452,0,0x0,8
tick,0x7ffc909efd34,108518284,0,0x0,8
tick,0x7ffc909efd34,108534054,0,0x0,8
tick,0x7ffc909efd34,108549597,0,0x0,8
tick,0x7ffc909efd34,108565858,0,0x0,8
tick,0x7ffc909efd34,108580613,0,0x0,8
tick,0x7ffc909efd34,108596152,0,0x0,8
tick,0x7ffc909efd34,108611631,0,0x0,8
tick,0x7ffc909efd34,108627063,0,0x0,8
tick,0x7ffc909efd34,108642894,0,0x0,8
tick,0x7ffc909efd34,108658552,0,0x0,8
tick,0x7ffc909efd34,108673960,0,0x0,8
tick,0x7ffc909efd34,108689476,0,0x0,8
tick,0x7ffc909efd34,108705278,0,0x0,8
tick,0x7ffc909efd34,108721218,0,0x0,8
tick,0x7ffc909efd34,108737013,0,0x0,8
tick,0x7ffc909efd34,108752472,0,0x0,8
tick,0x7ffc909efd34,108768315,0,0x0,8
tick,0x7ffc909efd34,108783912,0,0x0,8
tick,0x7ffc909efd34,108800058,0,0x0,8
tick,0x7ffc909efd34,108815390,0,0x0,8
tick,0x7ffc909efd34,108830657,0,0x0,8
tick,0x7ffc909efd34,108845888,0,0x0,8
tick,0x7ffc909efd34,108861025,0,0x0,8
tick,0x7ffc909efd34,108876952,0,0x0,8
tick,0x7ffc909efd34,108892237,0,0x0,8
tick,0x7ffc909efd34,108908330,0,0x0,8
tick,0x7ffc909efd34,108924003,0,0x0,8
tick,0x7ffc909efd34,108939234,0,0x0,8
tick,0x7ffc909efd34,108955209,0,0x0,8
tick,0x7ffc909efd34,108971050,0,0x0,8
tick,0x7ffc909efd34,108986300,0,0x0,8
tick,0x7ffc909efd34,109001912,0,0x0,8
tick,0x7ffc909efd34,109017671,0,0x0,8
tick,0x7ffc909efd34,109033577,0,0x0,8
tick,0x7ffc909efd34,109048572,0,0x0,8
tick,0x7ffc909efd34,109064284,0,0x0,8
tick,0x7ffc909efd34,109080313,0,0x0,8
tick,0x7ffc909efd34,109095471,0,0x0,8
tick,0x7ffc909efd34,109110709,0,0x0,8
tick,0x7ffc909efd34,109126757,0,0x0,8
tick,0x7ffc909efd34,109142741,0,0x0,8
tick,0x7ffc909efd34,109158079,0,0x0,8
tick,0x7ffc909efd34,109173208,0,0x0,8
tick,0x7ffc909efd34,109188766,0,0x0,8
tick,0x7ffc909efd34,109204262,0,0x0,8
tick,0x7ffc909efd34,109220341,0,0x0,8
tick,0x7ffc909efd34,109235859,0,0x0,8
tick,0x7ffc909efd34,109251411,0,0x0,8
tick,0x7ffc909efd34,109267044,0,0x0,8
tick,0x7ffc909efd34,109283296,0,0x0,8
tick,0x7ffc909efd34,109298752,0,0x0,8
tick,0x7ffc909efd34,109314212,0,0x0,8
tick,0x7ffc909efd34,109329375,0,0x0,8
tick,0x7ffc909efd34,109344737,0,0x0,8
tick,0x7ffc909efd34,109360282,0,0x0,8
tick,0x7ffc909efd34,109375564,0,0x0,8
tick,0x7ffc909efd34,109390819,0,0x0,8
tick,0x7ffc909efd34,109406145,0,0x0,8
tick,0x7ffc909efd34,109421598,0,0x0,8
tick,0x7ffc909efd34,109437414,0,0x0,8
tick,0x7ffc909efd34,109453654,0,0x0,8
tick,0x7ffc909efd34,109469301,0,0x0,8
tick,0x7ffc909efd34,109484706,0,0x0,8
tick,0x7ffc909efd34,109500423,0,0x0,8
tick,0x7ffc909efd34,109515844,0,0x0,8
tick,0x7ffc909efd34,109531162,0,0x0,8
tick,0x7ffc909efd34,109546230,0,0x0,8
tick,0x7ffc909efd34,109562053,0,0x0,8
tick,0x7ffc909efd34,109578097,0,0x0,8
tick,0x7ffc909efd34,109593842,0,0x0,8
tick,0x7ffc909efd34,109609242,0,0x0,8
tick,0x7ffc909efd34,109625284,0,0x0,8
tick,0x7ffc909efd34,109641324,0,0x0,8
tick,0x7ffc909efd34,109656329,0,0x0,8
tick,0x7ffc909efd34,109671957,0,0x0,8
tick,0x7ffc909efd34,109687386,0,0x0,8
tick,0x7ffc909efd34,109703244,0,0x0,8
tick,0x7ffc909efd34,109718374,0,0x0,8
tick,0x7ffc909efd34,109733539,0,0x0,8
tick,0x7ffc909efd34,109748895,0,0x0,8
tick,0x7ffc909efd34,109764443,0,0x0,8
tick,0x7ffc909efd34,109780065,0,0x0,8
tick,0x7ffc909efd34,109795951,0,0x0,8
tick,0x7ffc909efd34,109811228,0,0x0,8
tick,0x7ffc909efd34,109826278,0,0x0,8
tick,0x7ffc909efd34,109841959,0,0x0,8
tick,0x7ffc909efd34,109857082,0,0x0,8
tick,0x7ffc909efd34,109873079,0,0x0,8
tick,0x7ffc909efd34,109889443,0,0x0,8
tick,0x7ffc909efd34,109905264,0,0x0,8
tick,0x7ffc909efd34,109920604,0,0x0,8
tick,0x7ffc909efd34,109935805,0,0x0,8
tick,0x7ffc909efd34,109951857,0,0x0,8
tick,0x7ffc909efd34,109967396,0,0x0,8
tick,0x7ffc909efd34,109983703,0,0x0,8
tick,0x7ffc909efd34,109999237,0,0x0,8
tick,0x7ffc909efd34,110014588,0,0x0,8
tick,0x7ffc909efd34,110030530,0,0x0,8
tick,0x7ffc909efd34,110046296,0,0x0,8
tick,0x7ffc909efd34,110061279,0,0x0,8
tick,0x7ffc909efd34,110076660,0,0x0,8
tick,0x7ffc909efd34,110092255,0,0x0,8
tick,0x7ffc909efd34,110107786,0,0x0,8
tick,0x7ffc909efd34,110123011,0,0x0,8
tick,0x7ffc909efd34,110138687,0,0x0,8
tick,0x7ffc909efd34,110153850,0,0x0,8
tick,0x7ffc909efd34,110169406,0,0x0,8
tick,0x7ffc909efd34,110184803,0,0x0,8
tick,0x7ffc909efd34,110200549,0,0x0,8
tick,0x7ffc909efd34,110216486,0,0x0,8
tick,0x7ffc909efd34,110231757,0,0x0,8
tick,0x7ffc909efd34,110247137,0,0x0,8
tick,0x7ffc909efd34,110262768,0,0x0,8
tick,0x7ffc909efd34,110278038,0,0x0,8
tick,0x7ffc909efd34,110293765,0,0x0,8
tick,0x7ffc909efd34,110309074,0,0x0,8
tick,0x7ffc909efd34,110324768,0,0x0,8
tick,0x7ffc909efd34,110340133,0,0x0,8
tick,0x7ffc909efd34,110355569,0,0x0,8
tick,0x7ffc909efd34,110371244,0,0x0,8
tick,0x7ffc909efd34,110386468,0,0x0,8
tick,0x7ffc909efd34,110402370,0,0x0,8
tick,0x7ffc909efd34,110417791,0,0x0,8
tick,0x7ffc909efd34,110432976,0,0x0,8
tick,0x7ffc909efd34,110448490,0,0x0,8
tick,0x7ffc909efd34,110464268,0,0x0,8
tick,0x7ffc909efd34,110479582,0,0x0,8
tick,0x7ffc909efd34,110495304,0,0x0,8
tick,0x7ffc909efd34,110511378,0,0x0,8
tick,0x7ffc909efd34,110526857,0,0x0,8
tick,0x7ffc909efd34,110542397,0,0x0,8
tick,0x7ffc909efd34,110558283,0,0x0,8
tick,0x7ffc909efd34,110574024,0,0x0,8
tick,0x7ffc909efd34,110589635,0,0x0,8
tick,0x7ffc909efd34,110605102,0,0x0,8
tick,0x7ffc909efd34,110620526,0,0x0,8
tick,0x7ffc909efd34,110636586,0,0x0,8
tick,0x7ffc909efd34,110652174,0,0x0,8
tick,0x7ffc909efd34,110667356,0,0x0,8
tick,0x7ffc909efd34,110682946,0,0x0,8
tick,0x7ffc909efd34,110698601,0,0x0,8
tick,0x7ffc909efd34,110714179,0,0x0,8
tick,0x7ffc909efd34,110729795,0,0x0,8
tick,0x7ffc909efd34,110745703,0,0x0,8
tick,0x7ffc909efd34,110761135,0,0x0,8
tick,0x7ffc909efd34,110776526,0,0x0,8
tick,0x7ffc909efd34,110792047,0,0x0,8
tick,0x7ffc909efd34,110808202,0,0x0,8
tick,0x7ffc909efd34,110823665,0,0x0,8
tick,0x7ffc909efd34,110840039,0,0x0,8
tick,0x7ffc909efd34,110856184,0,0x0,8
tick,0x7ffc909efd34,110871656,0,0x0,8
tick,0x7ffc909efd34,110887076,0,0x0,8
tick,0x7ffc909efd34,110903015,0,0x0,8
tick,0x7ffc909efd34,110918936,0,0x0,8
tick,0x7ffc909efd34,110934585,0,0x0,8
tick,0x7ffc909efd34,110950442,0,0x0,8
tick,0x7ffc909efd34,110966195,0,0x0,8
tick,0x7ffc909efd34,110981420,0,0x0,8
tick,0x7ffc909efd34,110996594,0,0x0,8
tick,0x7ffc909efd34,111012126,0,0x0,8
tick,0x7ffc909efd34,111027685,0,0x0,8
tick,0x7ffc909efd34,111043013,0,0x0,8
tick,0x7ffc909efd34,111058547,0,0x0,8
tick,0x7ffc909efd34,111073954,0,0x0,8
tick,0x7ffc909efd34,111089595,0,0x0,8
tick,0x7ffc909efd34,111104860,0,0x0,8
tick,0x7ffc909efd34,111120521,0,0x0,8
tick,0x7ffc909efd34,111135856,0,0x0,8
tick,0x7ffc909efd34,111151355,0,0x0,8
tick,0x7ffc909efd34,111166779,0,0x0,8
tick,0x7ffc909efd34,111182401,0,0x0,8
tick,0x7ffc909efd34,111197997,0,0x0,8
tick,0x7ffc909efd34,111213845,0,0x0,8
tick,0x7ffc909efd34,111229121,0,0x0,8
tick,0x7ffc909efd34,111244723,0,0x0,8
tick,0x7ffc909efd34,111260422,0,0x0,8
tick,0x7ffc909efd34,111276337,0,0x0,8
tick,0x7ffc909efd34,111291734,0,0x0,8
tick,0x7ffc909efd34,111307876,0,0x0,8
tick,0x7ffc909efd34,111323387,0,0x0,8
tick,0x7ffc909efd34,111338825,0,0x0,8
tick,0x7ffc909efd34,111354474,0,0x0,8
tick,0x7ffc909efd34,111369905,0,0x0,8
tick,0x7ffc909efd34,111385185,0,0x0,8
tick,0x7ffc909efd34,111400715,0,0x0,8
tick,0x7ffc909efd34,111416341,0,0x0,8
tick,0x7ffc909efd34,111431532,0,0x0,8
tick,0x7ffc909efd34,111447138,0,0x0,8
tick,0x7ffc909efd34,111462697,0,0x0,8
tick,0x7ffc909efd34,111477813,0,0x0,8
tick,0x7ffc909efd34,111493231,0,0x0,8
tick,0x7ffc909efd34,111508997,0,0x0,8
tick,0x7ffc909efd34,111524586,0,0x0,8
tick,0x7ffc909efd34,111540811,0,0x0,8
tick,0x7ffc909efd34,111555442,0,0x0,8
tick,0x7ffc909efd34,111570879,0,0x0,8
tick,0x7ffc909efd34,111586315,0,0x0,8
tick,0x7ffc909efd34,111601391,0,0x0,8
tick,0x7ffc909efd34,111615865,0,0x0,8
tick,0x7ffc909efd34,111631246,0,0x0,8
tick,0x7ffc909efd34,111646571,0,0x0,8
tick,0x7ffc909efd34,111662356,0,0x0,8
tick,0x7ffc909efd34,111678060,0,0x0,8
tick,0x7ffc909efd34,111693638,0,0x0,8
tick,0x7ffc909efd34,111709057,0,0x0,8
tick,0x7ffc909efd34,111724369,0,0x0,8
tick,0x7ffc909efd34,111740201,0,0x0,8
tick,0x7ffc909efd34,111756470,0,0x0,8
tick,0x7ffc909efd34,111772337,0,0x0,8
tick,0x7ffc909efd34,111787948,0,0x0,8
tick,0x7ffc909efd34,111803764,0,0x0,8
tick,0x7ffc909efd34,111819597,0,0x0,8
tick,0x7ffc909efd34,111834712,0,0x0,8
tick,0x7ffc909efd34,111850242,0,0x0,8
tick,0x7ffc909efd34,111865550,0,0x0,8
tick,0x7ffc909efd34,111881025,0,0x0,8
tick,0x7ffc909efd34,111896551,0,0x0,8
tick,0x7ffc909efd34,111912020,0,0x0,8
tick,0x7ffc909efd34,111928110,0,0x0,8
tick,0x7ffc909efd34,111943511,0,0x0,8
tick,0x7ffc909efd34,111958777,0,0x0,8
tick,0x7ffc909efd34,111974345,0,0x0,8
tick,0x7ffc909efd34,111989783,0,0x0,8
tick,0x7ffc909efd34,112005445,0,0x0,8
tick,0x7ffc909efd34,112021199,0,0x0,8
tick,0x7ffc909efd34,112036958,0,0x0,8
tick,0x7ffc909efd34,112052870,0,0x0,8
tick,0x7ffc909efd34,112068098,0,0x0,8
tick,0x7ffc909efd34,112083459,0,0x0,8
tick,0x7ffc909efd34,112098777,0,0x0,8
tick,0x7ffc909efd34,112114342,0,0x0,8
tick,0x7ffc909efd34,112129727,0,0x0,8
tick,0x7ffc909efd34,112145735,0,0x0,8
tick,0x7ffc909efd34,112161055,0,0x0,8
tick,0x7ffc909efd34,112176872,0,0x0,8
tick,0x7ffc909efd34,112192134,0,0x0,8
tick,0x7ffc909efd34,112208041,0,0x0,8
tick,0x7ffc909efd34,112223815,0,0x0,8
tick,0x7ffc909efd34,112239173,0,0x0,8
tick,0x7ffc909efd34,112255127,0,0x0,8
tick,0x7ffc909efd34,112270937,0,0x0,8
tick,0x7ffc909efd34,112286357,0,0x0,8
tick,0x7ffc909efd34,112302183,0,0x0,8
tick,0x7ffc909efd34,112317550,0,0x0,8
tick,0x7ffc909efd34,112333170,0,0x0,8
tick,0x7ffc909efd34,112348636,0,0x0,8
tick,0x7ffc909efd34,112364078,0,0x0,8
tick,0x7ffc909efd34,112379608,0,0x0,8
tick,0x7ffc909efd34,112395564,0,0x0,8
tick,0x7ffc909efd34,112410802,0,0x0,8
tick,0x7ffc909efd34,112426231,0,0x0,8
tick,0x7ffc909efd34,112441734,0,0x0,8
tick,0x7ffc909efd34,112457500,0,0x0,8
tick,0x7ffc909efd34,112473312,0,0x0,8
tick,0x7ffc909efd34,112488763,0,0x0,8
tick,0x7ffc909efd34,112504834,0,0x0,8
tick,0x7ffc909efd34,112520487,0,0x0,8
tick,0x7ffc909efd34,112536181,0,0x0,8
tick,0x7ffc909efd34,112552869,0,0x0,8
tick,0x7ffc909efd34,112567750,0,0x0,8
tick,0x7ffc909efd34,112583355,0,0x0,8
tick,0x7ffc909efd34,112598783,0,0x0,8
tick,0x7ffc909efd34,112614637,0,0x0,8
tick,0x7ffc909efd34,112630171,0,0x0,8
tick,0x7ffc909efd34,112645780,0,0x0,8
tick,0x7ffc909efd34,112661538,0,0x0,8
tick,0x7ffc909efd34,112677245,0,0x0,8
tick,0x7ffc909efd34,112693098,0,0x0,8
tick,0x7ffc909efd34,112709054,0,0x0,8
tick,0x7ffc909efd34,112724762,0,0x0,8
tick,0x7ffc909efd34,112740581,0,0x0,8
tick,0x7ffc909efd34,112755815,0,0x0,8
tick,0x7ffc909efd34,112771560,0,0x0,8
tick,0x7ffc909efd34,112786997,0,0x0,8
tick,0x7ffc909efd34,112802786,0,0x0,8
tick,0x7ffc909efd34,112817025,0,0x0,8
tick,0x7ffc909efd34,112832220,0,0x0,8
tick,0x7ffc909efd34,112847658,0,0x0,8
tick,0x7ffc909efd34,112863696,0,0x0,8
tick,0x7ffc909efd34,112879560,0,0x0,8
tick,0x7ffc909efd34,112895161,0,0x0,8
tick,0x7ffc909efd34,112911261,0,0x0,8
tick,0x7ffc909efd34,112926955,0,0x0,8
tick,0x7ffc909efd34,112942583,0,0x0,8
tick,0x7ffc909efd34,112958257,0,0x0,8
tick,0x7ffc909efd34,112973537,0,0x0,8
tick,0x7ffc909efd34,112990050,0,0x0,8
tick,0x7ffc909efd34,113005052,0,0x0,8
tick,0x7ffc909efd34,113020432,0,0x0,8
tick,0x7ffc909efd34,113036560,0,0x0,8
tick,0x7ffc909efd34,113051858,0,0x0,8
tick,0x7ffc909efd34,113066471,0,0x0,8
tick,0x7ffc909efd34,113081514,0,0x0,8
tick,0x7ffc909efd34,113097085,0,0x0,8
tick,0x7ffc909efd34,113112622,0,0x0,8
tick,0x7ffc909efd34,113128428,0,0x0,8
tick,0x7ffc909efd34,113143845,0,0x0,8
tick,0x7ffc909efd34,113159565,0,0x0,8
tick,0x7ffc909efd34,113174687,0,0x0,8
tick,0x7ffc909efd34,113190079,0,0x0,8
tick,0x7ffc909efd34,113205900,0,0x0,8
tick,0x7ffc909efd34,113221716,0,0x0,8
tick,0x7ffc909efd34,113237066,0,0x0,8
tick,0x7ffc909efd34,113254140,0,0x0,8
tick,0x7ffc909efd34,113267949,0,0x0,8
tick,0x7ffc909efd34,113283068,0,0x0,8
tick,0x7ffc909efd34,113298702,0,0x0,8
tick,0x7ffc909efd34,113314703,0,0x0,8
tick,0x7ffc909efd34,113330081,0,0x0,8
tick,0x7ffc909efd34,113345703,0,0x0,8
tick,0x7ffc909efd34,113361288,0,0x0,8
tick,0x7ffc909efd34,113377249,0,0x0,8
tick,0x7ffc909efd34,113392552,0,0x0,8
tick,0x7ffc909efd34,113408245,0,0x0,8
tick,0x7ffc909efd34,113423089,0,0x0,8
tick,0x7ffc909efd34,113437808,0,0x0,8
tick,0x7ffc909efd34,113454088,0,0x0,8
tick,0x7ffc909efd34,113469909,0,0x0,8
tick,0x7ffc909efd34,113484280,0,0x0,8
tick,0x7ffc909efd34,113499920,0,0x0,8
tick,0x7ffc909efd34,113515654,0,0x0,8
tick,0x7ffc909efd34,113531289,0,0x0,8
tick,0x7ffc909efd34,113546645,0,0x0,8
tick,0x7ffc909efd34,113562217,0,0x0,8
tick,0x7ffc909efd34,113577460,0,0x0,8
tick,0x7ffc909efd34,113592725,0,0x0,8
tick,0x7ffc909efd34,113608267,0,0x0,8
tick,0x7ffc909efd34,113623934,0,0x0,8
tick,0x7ffc909efd34,113640449,0,0x0,8
tick,0x7ffc909efd34,113655769,0,0x0,8
tick,0x7ffc909efd34,113671582,0,0x0,8
tick,0x7ffc909efd34,113686989,0,0x0,8
tick,0x7ffc909efd34,113702935,0,0x0,8
tick,0x7ffc909efd34,113718628,0,0x0,8
tick,0x7ffc909efd34,113734051,0,0x0,8
tick,0x7ffc909efd34,113749969,0,0x0,8
tick,0x7ffc909efd34,113765748,0,0x0,8
tick,0x7ffc909efd34,113782001,0,0x0,8
tick,0x7ffc909efd34,113797530,0,0x0,8
tick,0x7ffc909efd34,113813284,0,0x0,8
tick,0x7ffc909efd34,113829166,0,0x0,8
tick,0x7ffc909efd34,113844615,0,0x0,8
tick,0x7ffc909efd34,113859476,0,0x0,8
tick,0x7ffc909efd34,113874994,0,0x0,8
tick,0x7ffc909efd34,113891026,0,0x0,8
tick,0x7ffc909efd34,113906633,0,0x0,8
tick,0x7ffc909efd34,113922528,0,0x0,8
tick,0x7ffc909efd34,113938616,0,0x0,8
tick,0x7ffc909efd34,113953788,0,0x0,8
tick,0x7ffc909efd34,113969473,0,0x0,8
tick,0x7ffc909efd34,113984797,0,0x0,8
tick,0x7ffc909efd34,114000745,0,0x0,8
tick,0x7ffc909efd34,114016283,0,0x0,8
tick,0x7ffc909efd34,114031872,0,0x0,8
tick,0x7ffc909efd34,114047117,0,0x0,8
tick,0x7ffc909efd34,114062391,0,0x0,8
tick,0x7ffc909efd34,114078671,0,0x0,8
tick,0x7ffc909efd34,114094140,0,0x0,8
tick,0x7ffc909efd34,114110181,0,0x0,8
tick,0x7ffc909efd34,114125379,0,0x0,8
tick,0x7ffc909efd34,114141661,0,0x0,8
tick,0x7ffc909efd34,114157184,0,0x0,8
tick,0x7ffc909efd34,114173140,0,0x0,8
tick,0x7ffc909efd34,114189152,0,0x0,8
tick,0x7ffc909efd34,114205084,0,0x0,8
tick,0x7ffc909efd34,114220385,0,0x0,8
tick,0x7ffc909efd34,114236275,0,0x0,8
tick,0x7ffc909efd34,114251641,0,0x0,8
tick,0x7ffc909efd34,114266913,0,0x0,8
tick,0x7ffc909efd34,114282145,0,0x0,8
tick,0x7ffc909efd34,114297847,0,0x0,8
tick,0x7ffc909efd34,114313552,0,0x0,8
tick,0x7ffc909efd34,114329197,0,0x0,8
tick,0x7ffc909efd34,114345028,0,0x0,8
tick,0x7ffc909efd34,114360540,0,0x0,8
tick,0x7ffc909efd34,114376007,0,0x0,8
tick,0x7ffc909efd34,114391592,0,0x0,8
tick,0x7ffc909efd34,114407423,0,0x0,8
tick,0x7ffc909efd34,114423321,0,0x0,8
tick,0x7ffc909efd34,114438540,0,0x0,8
tick,0x7ffc909efd34,114454499,0,0x0,8
tick,0x7ffc909efd34,114470336,0,0x0,8
tick,0x7ffc909efd34,114485633,0,0x0,8
tick,0x7ffc909efd34,114501507,0,0x0,8
tick,0x7ffc909efd34,114516870,0,0x0,8
tick,0x7ffc909efd34,114532254,0,0x0,8
tick,0x7ffc909efd34,114548078,0,0x0,8
tick,0x7ffc909efd34,114563477,0,0x0,8
tick,0x7ffc909efd34,114579092,0,0x0,8
tick,0x7ffc909efd34,114594734,0,0x0,8
tick,0x7ffc909efd34,114610085,0,0x0,8
tick,0x7ffc909efd34,114625579,0,0x0,8
tick,0x7ffc909efd34,114641067,0,0x0,8
tick,0x7ffc909efd34,114656662,0,0x0,8
tick,0x7ffc909efd34,114672614,0,0x0,8
tick,0x7ffc909efd34,114688377,0,0x0,8
tick,0x7ffc909efd34,114704389,0,0x0,8
tick,0x7ffc909efd34,114720205,0,0x0,8
tick,0x7ffc909efd34,114735815,0,0x0,8
tick,0x7ffc909efd34,114750829,0,0x0,8
tick,0x7ffc909efd34,114766765,0,0x0,8
tick,0x7ffc909efd34,114782233,0,0x0,8
tick,0x7ffc909efd34,114797785,0,0x0,8
tick,0x7ffc909efd34,114813239,0,0x0,8
tick,0x7ffc909efd34,114829605,0,0x0,8
tick,0x7ffc909efd34,114845276,0,0x0,8
tick,0x7ffc909efd34,114860745,0,0x0,8
tick,0x7ffc909efd34,114876260,0,0x0,8
tick,0x7ffc909efd34,114891594,0,0x0,8
tick,0x7ffc909efd34,114907477,0,0x0,8
tick,0x7ffc909efd34,114923103,0,0x0,8
tick,0x7ffc909efd34,114939067,0,0x0,8
tick,0x7ffc909efd34,114955359,0,0x0,8
tick,0x7ffc909efd34,114970854,0,0x0,8
tick,0x7ffc909efd34,114986363,0,0x0,8
tick,0x7ffc909efd34,115001793,0,0x0,8
tick,0x7ffc909efd34,115017196,0,0x0,8
tick,0x7ffc909efd34,115032884,0,0x0,8
tick,0x7ffc909efd34,115048650,0,0x0,8
tick,0x7ffc909efd34,115063808,0,0x0,8
tick,0x7ffc909efd34,115079596,0,0x0,8
tick,0x7ffc909efd34,115095127,0,0x0,8
tick,0x7ffc909efd34,115110668,0,0x0,8
tick,0x7ffc909efd34,115126299,0,0x0,8
tick,0x7ffc909efd34,115141820,0,0x0,8
tick,0x7ffc909efd34,115157430,0,0x0,8
tick,0x7ffc909efd34,115172765,0,0x0,8
tick,0x7ffc909efd34,115188456,0,0x0,8
tick,0x7ffc909efd34,115204459,0,0x0,8
tick,0x7ffc909efd34,115219609,0,0x0,8
tick,0x7ffc909efd34,115235757,0,0x0,8
tick,0x7ffc909efd34,115250579,0,0x0,8
tick,0x7ffc909efd34,115266288,0,0x0,8
tick,0x7ffc909efd34,115281788,0,0x0,8
tick,0x7ffc909efd34,115297332,0,0x0,8
tick,0x7ffc909efd34,115313013,0,0x0,8
tick,0x7ffc909efd34,115328818,0,0x0,8
tick,0x7ffc909efd34,115344065,0,0x0,8
tick,0x7ffc909efd34,115360358,0,0x0,8
tick,0x7ffc909efd34,115375418,0,0x0,8
tick,0x7ffc909efd34,115391371,0,0x0,8
tick,0x7ffc909efd34,115407461,0,0x0,8
tick,0x7ffc909efd34,115423337,0,0x0,8
tick,0x7ffc909efd34,115438351,0,0x0,8
tick,0x7ffc909efd34,115454393,0,0x0,8
tick,0x7ffc909efd34,115469711,0,0x0,8
tick,0x7ffc909efd34,115485602,0,0x0,8
tick,0x7ffc909efd34,115501020,0,0x0,8
tick,0x7ffc909efd34,115516268,0,0x0,8
tick,0x7ffc909efd34,115531882,0,0x0,8
tick,0x7ffc909efd34,115547640,0,0x0,8
tick,0x7ffc909efd34,115563079,0,0x0,8
tick,0x7ffc909efd34,115579404,0,0x0,8
tick,0x7ffc909efd34,115594854,0,0x0,8
tick,0x7ffc909efd34,115611308,0,0x0,8
tick,0x7ffc909efd34,115626943,0,0x0,8
tick,0x7ffc909efd34,115642376,0,0x0,8
tick,0x7ffc909efd34,115658453,0,0x0,8
tick,0x7ffc909efd34,115673707,0,0x0,8
tick,0x7ffc909efd34,115689928,0,0x0,8
tick,0x7ffc909efd34,115705149,0,0x0,8
tick,0x7ffc909efd34,115721077,0,0x0,8
tick,0x7ffc909efd34,115736647,0,0x0,8
tick,0x7ffc909efd34,115752165,0,0x0,8
tick,0x7ffc909efd34,115767409,0,0x0,8
tick,0x7ffc909efd34,115783051,0,0x0,8
tick,0x7ffc909efd34,115799347,0,0x0,8
tick,0x7ffc909efd34,115815207,0,0x0,8
tick,0x7ffc909efd34,115830535,0,0x0,8
tick,0x7ffc909efd34,115846092,0,0x0,8
tick,0x7ffc909efd34,115861624,0,0x0,8
tick,0x7ffc909efd34,115876868,0,0x0,8
tick,0x7ffc909efd34,115892567,0,0x0,8
tick,0x7ffc909efd34,115908276,0,0x0,8
tick,0x7ffc909efd34,115923905,0,0x0,8
tick,0x7ffc909efd34,115939762,0,0x0,8
tick,0x7ffc909efd34,115955758,0,0x0,8
tick,0x7ffc909efd34,115970336,0,0x0,8
tick,0x7ffc909efd34,115986382,0,0x0,8
tick,0x7ffc909efd34,116002169,0,0x0,8
tick,0x7ffc909efd34,116017313,0,0x0,8
tick,0x7ffc909efd34,116033129,0,0x0,8
tick,0x7ffc909efd34,116048505,0,0x0,8
tick,0x7ffc909efd34,116064319,0,0x0,8
tick,0x7ffc909efd34,116079771,0,0x0,8
tick,0x7ffc909efd34,116095516,0,0x0,8
tick,0x7ffc909efd34,116110910,0,0x0,8
tick,0x7ffc909efd34,116126508,0,0x0,8
tick,0x7ffc909efd34,116141981,0,0x0,8
tick,0x7ffc909efd34,116158211,0,0x0,8
tick,0x7ffc909efd34,116173550,0,0x0,8
tick,0x7ffc909efd34,116188632,0,0x0,8
tick,0x7ffc909efd34,116203911,0,0x0,8
tick,0x7ffc909efd34,116219896,0,0x0,8
tick,0x7ffc909efd34,116235787,0,0x0,8
tick,0x7ffc909efd34,116251501,0,0x0,8
tick,0x7ffc909efd34,116266877,0,0x0,8
tick,0x7ffc909efd34,116282239,0,0x0,8
tick,0x7ffc909efd34,116297472,0,0x0,8
tick,0x7ffc909efd34,116312798,0,0x0,8
tick,0x7ffc909efd34,116328850,0,0x0,8
tick,0x7ffc909efd34,116343935,0,0x0,8
tick,0x7ffc909efd34,116359757,0,0x0,8
tick,0x7ffc909efd34,116375406,0,0x0,8
tick,0x7ffc909efd34,116390608,0,0x0,8
tick,0x7ffc909efd34,116405532,0,0x0,8
tick,0x7ffc909efd34,116420638,0,0x0,8
tick,0x7ffc909efd34,116436138,0,0x0,8
tick,0x7ffc909efd34,116452033,0,0x0,8
tick,0x7ffc909efd34,116467196,0,0x0,8
tick,0x7ffc909efd34,116482970,0,0x0,8
tick,0x7ffc909efd34,116498403,0,0x0,8
tick,0x7ffc909efd34,116514088,0,0x0,8
tick,0x7ffc909efd34,116529403,0,0x0,8
tick,0x7ffc909efd34,116544692,0,0x0,8
tick,0x7ffc909efd34,116559843,0,0x0,8
tick,0x7ffc909efd34,116575200,0,0x0,8
tick,0x7ffc909efd34,116590551,0,0x0,8
tick,0x7ffc909efd34,116606041,0,0x0,8
tick,0x7ffc909efd34,116621353,0,0x0,8
tick,0x7ffc909efd34,116637252,0,0x0,8
tick,0x7ffc909efd34,116652556,0,0x0,8
tick,0x7ffc909efd34,116668012,0,0x0,8
tick,0x7ffc909efd34,116683852,0,0x0,8
tick,0x7ffc909efd34,116699404,0,0x0,8
tick,0x7ffc909efd34,116715278,0,0x0,8
tick,0x7ffc909efd34,116730751,0,0x0,8
tick,0x7ffc909efd34,116746192,0,0x0,8
tick,0x7ffc909efd34,116761570,0,0x0,8
tick,0x7ffc909efd34,116777050,0,0x0,8
tick,0x7ffc909efd34,116792701,0,0x0,8
tick,0x7ffc909efd34,116808238,0,0x0,8
tick,0x7ffc909efd34,116823778,0,0x0,8
tick,0x7ffc909efd34,116839719,0,0x0,8
tick,0x7ffc909efd34,116855305,0,0x0,8
tick,0x7ffc909efd34,116871171,0,0x0,8
tick,0x7ffc909efd34,116886334,0,0x0,8
tick,0x7ffc909efd34,116901844,0,0x0,8
tick,0x7ffc909efd34,116917076,0,0x0,8
tick,0x7ffc909efd34,116932961,0,0x0,8
tick,0x7ffc909efd34,116948538,0,0x0,8
tick,0x7ffc909efd34,116963779,0,0x0,8
tick,0x7ffc909efd34,116979598,0,0x0,8
tick,0x7ffc909efd34,116995215,0,0x0,8
tick,0x7ffc909efd34,117011348,0,0x0,8
tick,0x7ffc909efd34,117026940,0,0x0,8
tick,0x7ffc909efd34,117042264,0,0x0,8
tick,0x7ffc909efd34,117058040,0,0x0,8
tick,0x7ffc909efd34,117073411,0,0x0,8
tick,0x7ffc909efd34,117089422,0,0x0,8
tick,0x7ffc909efd34,117105425,0,0x0,8
tick,0x7ffc909efd34,117120981,0,0x0,8
tick,0x7ffc909efd34,117136267,0,0x0,8
tick,0x7ffc909efd34,117151830,0,0x0,8
tick,0x7ffc909efd34,117167131,0,0x0,8
tick,0x7ffc909efd34,117182582,0,0x0,8
tick,0x7ffc909efd34,117198419,0,0x0,8
tick,0x7ffc909efd34,117213655,0,0x0,8
tick,0x7ffc909efd34,117229467,0,0x0,8
tick,0x7ffc909efd34,117245176,0,0x0,8
tick,0x7ffc909efd34,117261118,0,0x0,8
tick,0x7ffc909efd34,117276850,0,0x0,8
tick,0x7ffc909efd34,117292277,0,0x0,8
tick,0x7ffc909efd34,117307638,0,0x0,8
tick,0x7ffc909efd34,117323076,0,0x0,8
tick,0x7ffc909efd34,117338172,0,0x0,8
tick,0x7ffc909efd34,117354202,0,0x0,8
tick,0x7ffc909efd34,117370332,0,0x0,8
tick,0x7ffc909efd34,117385121,0,0x0,8
tick,0x7ffc909efd34,117400107,0,0x0,8
tick,0x7ffc909efd34,117415957,0,0x0,8
tick,0x7ffc909efd34,117431525,0,0x0,8
tick,0x7ffc909efd34,117446977,0,0x0,8
tick,0x7ffc909efd34,117462365,0,0x0,8
tick,0x7ffc909efd34,117477856,0,0x0,8
tick,0x7ffc909efd34,117493358,0,0x0,8
tick,0x7ffc909efd34,117509148,0,0x0,8
tick,0x7ffc909efd34,117525094,0,0x0,8
tick,0x7ffc909efd34,117540699,0,0x0,8
tick,0x7ffc909efd34,117556352,0,0x0,8
tick,0x7ffc909efd34,117572299,0,0x0,8
tick,0x7ffc909efd34,117587591,0,0x0,8
tick,0x7ffc909efd34,117602879,0,0x0,8
tick,0x7ffc909efd34,117618304,0,0x0,8
tick,0x7ffc909efd34,117633952,0,0x0,8
tick,0x7ffc909efd34,117649780,0,0x0,8
tick,0x7ffc909efd34,117665861,0,0x0,8
tick,0x7ffc909efd34,117681555,0,0x0,8
tick,0x7ffc909efd34,117697130,0,0x0,8
tick,0x7ffc909efd34,117713002,0,0x0,8
tick,0x7ffc909efd34,117728241,0,0x0,8
tick,0x7ffc909efd34,117744112,0,0x0,8
tick,0x7ffc909efd34,117759947,0,0x0,8
tick,0x7ffc909efd34,117775480,0,0x0,8
tick,0x7ffc909efd34,117791104,0,0x0,8
tick,0x7ffc909efd34,117806798,0,0x0,8
tick,0x7ffc909efd34,117822930,0,0x0,8
tick,0x7ffc909efd34,117838415,0,0x0,8
tick,0x7ffc909efd34,117853815,0,0x0,8
tick,0x7ffc909efd34,117869017,0,0x0,8
tick,0x7ffc909efd34,117884913,0,0x0,8
tick,0x7ffc909efd34,117899975,0,0x0,8
tick,0x7ffc909efd34,117915345,0,0x0,8
tick,0x7ffc909efd34,117930794,0,0x0,8
tick,0x7ffc909efd34,117946453,0,0x0,8
tick,0x7ffc909efd34,117962035,0,0x0,8
tick,0x7ffc909efd34,117977736,0,0x0,8
tick,0x7ffc909efd34,117993424,0,0x0,8
tick,0x7ffc909efd34,118009602,0,0x0,8
tick,0x7ffc909efd34,118024996,0,0x0,8
tick,0x7ffc909efd34,118040565,0,0x0,8
tick,0x7ffc909efd34,118055745,0,0x0,8
tick,0x7ffc909efd34,118071014,0,0x0,8
tick,0x7ffc909efd34,118086207,0,0x0,8
tick,0x7ffc909efd34,118100904,0,0x0,8
tick,0x7ffc909efd34,118116170,0,0x0,8
tick,0x7ffc909efd34,118131469,0,0x0,8
tick,0x7ffc909efd34,118147110,0,0x0,8
tick,0x7ffc909efd34,118162757,0,0x0,8
tick,0x7ffc909efd34,118178174,0,0x0,8
tick,0x7ffc909efd34,118193754,0,0x0,8
tick,0x7ffc909efd34,118210094,0,0x0,8
tick,0x7ffc909efd34,118225460,0,0x0,8
tick,0x7ffc909efd34,118241092,0,0x0,8
tick,0x7ffc909efd34,118256874,0,0x0,8
tick,0x7ffc909efd34,118272543,0,0x0,8
tick,0x7ffc909efd34,118288128,0,0x0,8
tick,0x7ffc909efd34,118303632,0,0x0,8
tick,0x7ffc909efd34,118318980,0,0x0,8
tick,0x7ffc909efd34,118335045,0,0x0,8
tick,0x7ffc909efd34,118349997,0,0x0,8
tick,0x7ffc909efd34,118365073,0,0x0,8
tick,0x7ffc909efd34,118381124,0,0x0,8
tick,0x7ffc909efd34,118395759,0,0x0,8
tick,0x7ffc909efd34,118411130,0,0x0,8
tick,0x7ffc909efd34,118426587,0,0x0,8
tick,0x7ffc909efd34,118442042,0,0x0,8
tick,0x7ffc909efd34,118457654,0,0x0,8
tick,0x7ffc909efd34,118472884,0,0x0,8
tick,0x7ffc909efd34,118488494,0,0x0,8
tick,0x7ffc909efd34,118504709,0,0x0,8
tick,0x7ffc909efd34,118520363,0,0x0,8
tick,0x7ffc909efd34,118535542,0,0x0,8
tick,0x7ffc909efd34,118551723,0,0x0,8
tick,0x7ffc909efd34,118566712,0,0x0,8
tick,0x7ffc909efd34,118582267,0,0x0,8
tick,0x7ffc909efd34,118597814,0,0x0,8
tick,0x7ffc909efd34,118613104,0,0x0,8
tick,0x7ffc909efd34,118628523,0,0x0,8
tick,0x7ffc909efd34,118644583,0,0x0,8
tick,0x7ffc909efd34,118660618,0,0x0,8
tick,0x7ffc909efd34,118676045,0,0x0,8
tick,0x7ffc909efd34,118692347,0,0x0,8
tick,0x7ffc909efd34,118708388,0,0x0,8
tick,0x7ffc909efd34,118723892,0,0x0,8
tick,0x7ffc909efd34,118739389,0,0x0,8
tick,0x7ffc909efd34,118754802,0,0x0,8
tick,0x7ffc909efd34,118770286,0,0x0,8
tick,0x7ffc909efd34,118785077,0,0x0,8
tick,0x7ffc909efd34,118800815,0,0x0,8
tick,0x7ffc909efd34,118815994,0,0x0,8
tick,0x7ffc909efd34,118831655,0,0x0,8
tick,0x7ffc909efd34,118847641,0,0x0,8
tick,0x7ffc909efd34,118863121,0,0x0,8
tick,0x7ffc909efd34,118878755,0,0x0,8
tick,0x7ffc909efd34,118894319,0,0x0,8
tick,0x7ffc909efd34,118910355,0,0x0,8
tick,0x7ffc909efd34,118925899,0,0x0,8
tick,0x7ffc909efd34,118941252,0,0x0,8
tick,0x7ffc909efd34,118956312,0,0x0,8
tick,0x7ffc909efd34,118971856,0,0x0,8
tick,0x7ffc909efd34,118987294,0,0x0,8
tick,0x7ffc909efd34,119002435,0,0x0,8
tick,0x7ffc909efd34,119018124,0,0x0,8
tick,0x7ffc909efd34,119033272,0,0x0,8
tick,0x7ffc909efd34,119049479,0,0x0,8
tick,0x7ffc909efd34,119064831,0,0x0,8
tick,0x7ffc909efd34,119080162,0,0x0,8
tick,0x7ffc909efd34,119095929,0,0x0,8
tick,0x7ffc909efd34,119111824,0,0x0,8
tick,0x7ffc909efd34,119127381,0,0x0,8
tick,0x7ffc909efd34,119142779,0,0x0,8
tick,0x7ffc909efd34,119158455,0,0x0,8
tick,0x7ffc909efd34,119174123,0,0x0,8
tick,0x7ffc909efd34,119189297,0,0x0,8
tick,0x7ffc909efd34,119205345,0,0x0,8
tick,0x7ffc909efd34,119220613,0,0x0,8
tick,0x7ffc909efd34,119236357,0,0x0,8
tick,0x7ffc909efd34,119251563,0,0x0,8
tick,0x7ffc909efd34,119267395,0,0x0,8
tick,0x7ffc909efd34,119282845,0,0x0,8
tick,0x7ffc909efd34,119298620,0,0x0,8
tick,0x7ffc909efd34,119314044,0,0x0,8
tick,0x7ffc909efd34,119329414,0,0x0,8
tick,0x7ffc909efd34,119344975,0,0x0,8
tick,0x7ffc909efd34,119360561,0,0x0,8
tick,0x7ffc909efd34,119376344,0,0x0,8
tick,0x7ffc909efd34,119392108,0,0x0,8
tick,0x7ffc909efd34,119407224,0,0x0,8
tick,0x7ffc909efd34,119422491,0,0x0,8
tick,0x7ffc909efd34,119438261,0,0x0,8
tick,0x7ffc909efd34,119453892,0,0x0,8
tick,0x7ffc909efd34,119469101,0,0x0,8
tick,0x7ffc909efd34,119484248,0,0x0,8
tick,0x7ffc909efd34,119500244,0,0x0,8
tick,0x7ffc909efd34,119515610,0,0x0,8
tick,0x7ffc909efd34,119530835,0,0x0,8
tick,0x7ffc909efd34,119546385,0,0x0,8
tick,0x7ffc909efd34,119561877,0,0x0,8
tick,0x7ffc909efd34,119577251,0,0x0,8
tick,0x7ffc909efd34,119592967,0,0x0,8
tick,0x7ffc909efd34,119608809,0,0x0,8
tick,0x7ffc909efd34,119624450,0,0x0,8
tick,0x7ffc909efd34,119640751,0,0x0,8
tick,0x7ffc909efd34,119656378,0,0x0,8
tick,0x7ffc909efd34,119671768,0,0x0,8
tick,0x7ffc909efd34,119687206,0,0x0,8
tick,0x7ffc909efd34,119702822,0,0x0,8
tick,0x7ffc909efd34,119718526,0,0x0,8
tick,0x7ffc909efd34,119734233,0,0x0,8
tick,0x7ffc909efd34,119749543,0,0x0,8
tick,0x7ffc909efd34,119765471,0,0x0,8
tick,0x7ffc909efd34,119781128,0,0x0,8
tick,0x7ffc909efd34,119796754,0,0x0,8
tick,0x7ffc909efd34,119812692,0,0x0,8
tick,0x7ffc909efd34,119828138,0,0x0,8
tick,0x7ffc909efd34,119843983,0,0x0,8
tick,0x7ffc909efd34,119859210,0,0x0,8
tick,0x7ffc909efd34,119874685,0,0x0,8
tick,0x7ffc909efd34,119891048,0,0x0,8
tick,0x7ffc909efd34,119907332,0,0x0,8
tick,0x7ffc909efd34,119923284,0,0x0,8
tick,0x7ffc909efd34,119938608,0,0x0,8
tick,0x7ffc909efd34,119954388,0,0x0,8
tick,0x7ffc909efd34,119970265,0,0x0,8
tick,0x7ffc909efd34,119985907,0,0x0,8
tick,0x7ffc909efd34,120001328,0,0x0,8
tick,0x7ffc909efd34,120016475,0,0x0,8
tick,0x7ffc909efd34,120032273,0,0x0,8
tick,0x7ffc909efd34,120047453,0,0x0,8
tick,0x7ffc909efd34,120063191,0,0x0,8
tick,0x7ffc909efd34,120078440,0,0x0,8
tick,0x7ffc909efd34,120094191,0,0x0,8
tick,0x7ffc909efd34,120109760,0,0x0,8
tick,0x7ffc909efd34,120125518,0,0x0,8
tick,0x7ffc909efd34,120140891,0,0x0,8
tick,0x7ffc909efd34,120156483,0,0x0,8
tick,0x7ffc909efd34,120171802,0,0x0,8
tick,0x7ffc909efd34,120188170,0,0x0,8
tick,0x7ffc909efd34,120203079,0,0x0,8
tick,0x7ffc909efd34,120219416,0,0x0,8
tick,0x7ffc909efd34,120234528,0,0x0,8
tick,0x7ffc909efd34,120249861,0,0x0,8
tick,0x7ffc909efd34,120265024,0,0x0,8
tick,0x7ffc909efd34,120280638,0,0x0,8
tick,0x7ffc909efd34,120296498,0,0x0,8
tick,0x7ffc909efd34,120312119,0,0x0,8
tick,0x7ffc909efd34,120327892,0,0x0,8
tick,0x7ffc909efd34,120343623,0,0x0,8
tick,0x7ffc909efd34,120358802,0,0x0,8
tick,0x7ffc909efd34,120374022,0,0x0,8
tick,0x7ffc909efd34,120389481,0,0x0,8
tick,0x7ffc909efd34,120404686,0,0x0,8
tick,0x7ffc909efd34,120420517,0,0x0,8
tick,0x7ffc909efd34,120435667,0,0x0,8
tick,0x7ffc909efd34,120451281,0,0x0,8
tick,0x7ffc909efd34,120466602,0,0x0,8
tick,0x7ffc909efd34,120481997,0,0x0,8
tick,0x7ffc909efd34,120497509,0,0x0,8
tick,0x7ffc909efd34,120513248,0,0x0,8
tick,0x7ffc909efd34,120529632,0,0x0,8
tick,0x7ffc909efd34,120545372,0,0x0,8
tick,0x7ffc909efd34,120560662,0,0x0,8
tick,0x7ffc909efd34,120576266,0,0x0,8
tick,0x7ffc909efd34,120591816,0,0x0,8
tick,0x7ffc909efd34,120608011,0,0x0,8
tick,0x7ffc909efd34,120623349,0,0x0,8
tick,0x7ffc909efd34,120639557,0,0x0,8
tick,0x7ffc909efd34,120655719,0,0x0,8
tick,0x7ffc909efd34,120671129,0,0x0,8
tick,0x7ffc909efd34,120686703,0,0x0,8
tick,0x7ffc909efd34,120702597,0,0x0,8
tick,0x7ffc909efd34,120718397,0,0x0,8
tick,0x7ffc909efd34,120734668,0,0x0,8
tick,0x7ffc909efd34,120749717,0,0x0,8
tick,0x7ffc909efd34,120765502,0,0x0,8
tick,0x7ffc909efd34,120781141,0,0x0,8
tick,0x7ffc909efd34,120797236,0,0x0,8
tick,0x7ffc909efd34,120812935,0,0x0,8
tick,0x7ffc909efd34,120828530,0,0x0,8
tick,0x7ffc909efd34,120844209,0,0x0,8
tick,0x7ffc909efd34,120859466,0,0x0,8
tick,0x7ffc909efd34,120874991,0,0x0,8
tick,0x7ffc909efd34,120890459,0,0x0,8
tick,0x7ffc909efd34,120905966,0,0x0,8
tick,0x7ffc909efd34,120921769,0,0x0,8
tick,0x7ffc909efd34,120937195,0,0x0,8
tick,0x7ffc909efd34,120952650,0,0x0,8
tick,0x7ffc909efd34,120967848,0,0x0,8
tick,0x7ffc909efd34,120983894,0,0x0,8
tick,0x7ffc909efd34,120999775,0,0x0,8
tick,0x7ffc909efd34,121015028,0,0x0,8
tick,0x7ffc909efd34,121030888,0,0x0,8
tick,0x7ffc909efd34,121046694,0,0x0,8
tick,0x7ffc909efd34,121062407,0,0x0,8
tick,0x7ffc909efd34,121077766,0,0x0,8
tick,0x7ffc909efd34,121093468,0,0x0,8
tick,0x7ffc909efd34,121109184,0,0x0,8
tick,0x7ffc909efd34,121125047,0,0x0,8
tick,0x7ffc909efd34,121140409,0,0x0,8
tick,0x7ffc909efd34,121155769,0,0x0,8
tick,0x7ffc909efd34,121172012,0,0x0,8
tick,0x7ffc909efd34,121188335,0,0x0,8
tick,0x7ffc909efd34,121203959,0,0x0,8
tick,0x7ffc909efd34,121219711,0,0x0,8
tick,0x7ffc909efd34,121235935,0,0x0,8
tick,0x7ffc909efd34,121252152,0,0x0,8
tick,0x7ffc909efd34,121267813,0,0x0,8
tick,0x7ffc909efd34,121283311,0,0x0,8
tick,0x7ffc909efd34,121299225,0,0x0,8
tick,0x7ffc909efd34,121314793,0,0x0,8
tick,0x7ffc909efd34,121330072,0,0x0,8
tick,0x7ffc909efd34,121345729,0,0x0,8
tick,0x7ffc909efd34,121361010,0,0x0,8
tick,0x7ffc909efd34,121376551,0,0x0,8
tick,0x7ffc909efd34,121392062,0,0x0,8
tick,0x7ffc909efd34,121407551,0,0x0,8
tick,0x7ffc909efd34,121423344,0,0x0,8
tick,0x7ffc909efd34,121438747,0,0x0,8
tick,0x7ffc909efd34,121454117,0,0x0,8
tick,0x7ffc909efd34,121469835,0,0x0,8
tick,0x7ffc909efd34,121485717,0,0x0,8
tick,0x7ffc909efd34,121501455,0,0x0,8
tick,0x7ffc909efd34,121517090,0,0x0,8
tick,0x7ffc909efd34,121532708,0,0x0,8
tick,0x7ffc909efd34,121548514,0,0x0,8
tick,0x7ffc909efd34,121564047,0,0x0,8
tick,0x7ffc909efd34,121579791,0,0x0,8
tick,0x7ffc909efd34,121595651,0,0x0,8
tick,0x7ffc909efd34,121611040,0,0x0,8
tick,0x7ffc909efd34,121626647,0,0x0,8
tick,0x7ffc909efd34,121641925,0,0x0,8
tick,0x7ffc909efd34,121657464,0,0x0,8
tick,0x7ffc909efd34,121672879,0,0x0,8
tick,0x7ffc909efd34,121688359,0,0x0,8
tick,0x7ffc909efd34,121703987,0,0x0,8
tick,0x7ffc909efd34,121719402,0,0x0,8
tick,0x7ffc909efd34,121734712,0,0x0,8
tick,0x7ffc909efd34,121749989,0,0x0,8
tick,0x7ffc909efd34,121765530,0,0x0,8
tick,0x7ffc909efd34,121781015,0,0x0,8
tick,0x7ffc909efd34,121796765,0,0x0,8
tick,0x7ffc909efd34,121812031,0,0x0,8
tick,0x7ffc909efd34,121827405,0,0x0,8
tick,0x7ffc909efd34,121843036,0,0x0,8
tick,0x7ffc909efd34,121859056,0,0x0,8
tick,0x7ffc909efd34,121874334,0,0x0,8
tick,0x7ffc909efd34,121889829,0,0x0,8
tick,0x7ffc909efd34,121905227,0,0x0,8
tick,0x7ffc909efd34,121920499,0,0x0,8
tick,0x7ffc909efd34,121935686,0,0x0,8
tick,0x7ffc909efd34,121951616,0,0x0,8
tick,0x7ffc909efd34,121967362,0,0x0,8
tick,0x7ffc909efd34,121982760,0,0x0,8
tick,0x7ffc909efd34,121998332,0,0x0,8
tick,0x7ffc909efd34,122013828,0,0x0,8
tick,0x7ffc909efd34,122029805,0,0x0,8
tick,0x7ffc909efd34,122045059,0,0x0,8
tick,0x7ffc909efd34,122060449,0,0x0,8
tick,0x7ffc909efd34,122076006,0,0x0,8
tick,0x7ffc909efd34,122091842,0,0x0,8
tick,0x7ffc909efd34,122107330,0,0x0,8
tick,0x7ffc909efd34,122123195,0,0x0,8
tick,0x7ffc909efd34,122138737,0,0x0,8
tick,0x7ffc909efd34,122154197,0,0x0,8
tick,0x7ffc909efd34,122169458,0,0x0,8
tick,0x7ffc909efd34,122185229,0,0x0,8
tick,0x7ffc909efd34,122200357,0,0x0,8
tick,0x7ffc909efd34,122215627,0,0x0,8
tick,0x7ffc909efd34,122231032,0,0x0,8
tick,0x7ffc909efd34,122246921,0,0x0,8
tick,0x7ffc909efd34,122262762,0,0x0,8
tick,0x7ffc909efd34,122278198,0,0x0,8
tick,0x7ffc909efd34,122293808,0,0x0,8
tick,0x7ffc909efd34,122310566,0,0x0,8
tick,0x7ffc909efd34,122325492,0,0x0,8
tick,0x7ffc909efd34,122340603,0,0x0,8
tick,0x7ffc909efd34,122356226,0,0x0,8
tick,0x7ffc909efd34,122371352,0,0x0,8
tick,0x7ffc909efd34,122386823,0,0x0,8
tick,0x7ffc909efd34,122402132,0,0x0,8
tick,0x7ffc909efd34,122417576,0,0x0,8
tick,0x7ffc909efd34,122433157,0,0x0,8
tick,0x7ffc909efd34,122449373,0,0x0,8
tick,0x7ffc909efd34,122465201,0,0x0,8
tick,0x7ffc909efd34,122480591,0,0x0,8
tick,0x7ffc909efd34,122496270,0,0x0,8
tick,0x7ffc909efd34,122512545,0,0x0,8
tick,0x7ffc909efd34,122528016,0,0x0,8
tick,0x7ffc909efd34,122543694,0,0x0,8
tick,0x7ffc909efd34,122559078,0,0x0,8
tick,0x7ffc909efd34,122574730,0,0x0,8
tick,0x7ffc909efd34,122591110,0,0x0,8
tick,0x7ffc909efd34,122606659,0,0x0,8
tick,0x7ffc909efd34,122622169,0,0x0,8
tick,0x7ffc909efd34,122638049,0,0x0,8
tick,0x7ffc909efd34,122653508,0,0x0,8
tick,0x7ffc909efd34,122668996,0,0x0,8
tick,0x7ffc909efd34,122684486,0,0x0,8
tick,0x7ffc909efd34,122699966,0,0x0,8
tick,0x7ffc909efd34,122715900,0,0x0,8
tick,0x7ffc909efd34,122731352,0,0x0,8
tick,0x7ffc909efd34,122747156,0,0x0,8
tick,0x7ffc909efd34,122762406,0,0x0,8
tick,0x7ffc909efd34,122777877,0,0x0,8
tick,0x7ffc909efd34,122793876,0,0x0,8
tick,0x7ffc909efd34,122809390,0,0x0,8
tick,0x7ffc909efd34,122825304,0,0x0,8
tick,0x7ffc909efd34,122840730,0,0x0,8
tick,0x7ffc909efd34,122856704,0,0x0,8
tick,0x7ffc909efd34,122872284,0,0x0,8
tick,0x7ffc909efd34,122888257,0,0x0,8
tick,0x7ffc909efd34,122903967,0,0x0,8
tick,0x7ffc909efd34,122919294,0,0x0,8
tick,0x7ffc909efd34,122934783,0,0x0,8
tick,0x7ffc909efd34,122950510,0,0x0,8
tick,0x7ffc909efd34,122965840,0,0x0,8
tick,0x7ffc909efd34,122981420,0,0x0,8
tick,0x7ffc909efd34,122996727,0,0x0,8
tick,0x7ffc909efd34,123012171,0,0x0,8
tick,0x7ffc909efd34,123027755,0,0x0,8
tick,0x7ffc909efd34,123043314,0,0x0,8
tick,0x7ffc909efd34,123058568,0,0x0,8
tick,0x7ffc909efd34,123074176,0,0x0,8
tick,0x7ffc909efd34,123090604,0,0x0,8
tick,0x7ffc909efd34,123106166,0,0x0,8
tick,0x7ffc909efd34,123122248,0,0x0,8
tick,0x7ffc909efd34,123138204,0,0x0,8
tick,0x7ffc909efd34,123154027,0,0x0,8
tick,0x7ffc909efd34,123169505,0,0x0,8
tick,0x7ffc909efd34,123184219,0,0x0,8
tick,0x7ffc909efd34,123200068,0,0x0,8
tick,0x7ffc909efd34,123215152,0,0x0,8
tick,0x7ffc909efd34,123230355,0,0x0,8
tick,0x7ffc909efd34,123246674,0,0x0,8
tick,0x7ffc909efd34,123262189,0,0x0,8
tick,0x7ffc909efd34,123277763,0,0x0,8
tick,0x7ffc909efd34,123293005,0,0x0,8
tick,0x7ffc909efd34,123309294,0,0x0,8
tick,0x7ffc909efd34,123324428,0,0x0,8
tick,0x7ffc909efd34,123340442,0,0x0,8
tick,0x7ffc909efd34,123355783,0,0x0,8
tick,0x7ffc909efd34,123371220,0,0x0,8
tick,0x7ffc909efd34,123387227,0,0x0,8
tick,0x7ffc909efd34,123402763,0,0x0,8
tick,0x7ffc909efd34,123418332,0,0x0,8
tick,0x7ffc909efd34,123433820,0,0x0,8
tick,0x7ffc909efd34,123448857,0,0x0,8
tick,0x7ffc909efd34,123464706,0,0x0,8
tick,0x7ffc909efd34,123480041,0,0x0,8
tick,0x7ffc909efd34,123495720,0,0x0,8
tick,0x7ffc909efd34,123512199,0,0x0,8
tick,0x7ffc909efd34,123527910,0,0x0,8
tick,0x7ffc909efd34,123543100,0,0x0,8
tick,0x7ffc909efd34,123559409,0,0x0,8
tick,0x7ffc909efd34,123574520,0,0x0,8
tick,0x7ffc909efd34,123590216,0,0x0,8
tick,0x7ffc909efd34,123605931,0,0x0,8
tick,0x7ffc909efd34,123621759,0,0x0,8
tick,0x7ffc909efd34,123637182,0,0x0,8
tick,0x7ffc909efd34,123653189,0,0x0,8
tick,0x7ffc909efd34,123668435,0,0x0,8
tick,0x7ffc909efd34,123684053,0,0x0,8
tick,0x7ffc909efd34,123699198,0,0x0,8
tick,0x7ffc909efd34,123713979,0,0x0,8
tick,0x7ffc909efd34,123729095,0,0x0,8
tick,0x7ffc909efd34,123744099,0,0x0,8
tick,0x7ffc909efd34,123759383,0,0x0,8
tick,0x7ffc909efd34,123774845,0,0x0,8
tick,0x7ffc909efd34,123790749,0,0x0,8
tick,0x7ffc909efd34,123806781,0,0x0,8
tick,0x7ffc909efd34,123822840,0,0x0,8
tick,0x7ffc909efd34,123838714,0,0x0,8
tick,0x7ffc909efd34,123854334,0,0x0,8
tick,0x7ffc909efd34,123870404,0,0x0,8
tick,0x7ffc909efd34,123886256,0,0x0,8
tick,0x7ffc909efd34,123901552,0,0x0,8
tick,0x7ffc909efd34,123917515,0,0x0,8
tick,0x7ffc909efd34,123933252,0,0x0,8
tick,0x7ffc909efd34,123948900,0,0x0,8
tick,0x7ffc909efd34,123964959,0,0x0,8
tick,0x7ffc909efd34,123980160,0,0x0,8
tick,0x7ffc909efd34,123996263,0,0x0,8
tick,0x7ffc909efd34,124010842,0,0x0,8
tick,0x7ffc909efd34,124026036,0,0x0,8
tick,0x7ffc909efd34,124041428,0,0x0,8
tick,0x7ffc909efd34,124056733,0,0x0,8
tick,0x7ffc909efd34,124072848,0,0x0,8
tick,0x7ffc909efd34,124088135,0,0x0,8
tick,0x7ffc909efd34,124103682,0,0x0,8
tick,0x7ffc909efd34,124118950,0,0x0,8
tick,0x7ffc909efd34,124134976,0,0x0,8
tick,0x7ffc909efd34,124151494,0,0x0,8
tick,0x7ffc909efd34,124166173,0,0x0,8
tick,0x7ffc909efd34,124181598,0,0x0,8
tick,0x7ffc909efd34,124197221,0,0x0,8
tick,0x7ffc909efd34,124212987,0,0x0,8
tick,0x7ffc909efd34,124228589,0,0x0,8
tick,0x7ffc909efd34,124244132,0,0x0,8
tick,0x7ffc909efd34,124259377,0,0x0,8
tick,0x7ffc909efd34,124275122,0,0x0,8
tick,0x7ffc909efd34,124290321,0,0x0,8
tick,0x7ffc909efd34,124305754,0,0x0,8
tick,0x7ffc909efd34,124321024,0,0x0,8
tick,0x7ffc909efd34,124336821,0,0x0,8
tick,0x7ffc909efd34,124352808,0,0x0,8
tick,0x7ffc909efd34,124368838,0,0x0,8
tick,0x7ffc909efd34,124386406,0,0x0,8
tick,0x7ffc909efd34,124401304,0,0x0,8
tick,0x7ffc909efd34,124415632,0,0x0,8
tick,0x7ffc909efd34,124431687,0,0x0,8
tick,0x7ffc909efd34,124447259,0,0x0,8
tick,0x7ffc909efd34,124463222,0,0x0,8
tick,0x7ffc909efd34,124478968,0,0x0,8
tick,0x7ffc909efd34,124494348,0,0x0,8
tick,0x7ffc909efd34,124510356,0,0x0,8
tick,0x7ffc909efd34,124526364,0,0x0,8
tick,0x7ffc909efd34,124542073,0,0x0,8
tick,0x7ffc909efd34,124558137,0,0x0,8
tick,0x7ffc909efd34,124573314,0,0x0,8
tick,0x7ffc909efd34,124588827,0,0x0,8
tick,0x7ffc909efd34,124604884,0,0x0,8
tick,0x7ffc909efd34,124620237,0,0x0,8
tick,0x7ffc909efd34,124636098,0,0x0,8
tick,0x7ffc909efd34,124651213,0,0x0,8
tick,0x7ffc909efd34,124667420,0,0x0,8
tick,0x7ffc909efd34,124682613,0,0x0,8
tick,0x7ffc909efd34,124698017,0,0x0,8
tick,0x7ffc909efd34,124713359,0,0x0,8
tick,0x7ffc909efd34,124729349,0,0x0,8
tick,0x7ffc909efd34,124744568,0,0x0,8
tick,0x7ffc909efd34,124760281,0,0x0,8
tick,0x7ffc909efd34,124776296,0,0x0,8
tick,0x7ffc909efd34,124792068,0,0x0,8
tick,0x7ffc909efd34,124807541,0,0x0,8
tick,0x7ffc909efd34,124823001,0,0x0,8
tick,0x7ffc909efd34,124839178,0,0x0,8
tick,0x7ffc909efd34,124855105,0,0x0,8
tick,0x7ffc909efd34,124870582,0,0x0,8
tick,0x7ffc909efd34,124886298,0,0x0,8
tick,0x7ffc909efd34,124901990,0,0x0,8
tick,0x7ffc909efd34,124917339,0,0x0,8
tick,0x7ffc909efd34,124932261,0,0x0,8
tick,0x7ffc909efd34,124947399,0,0x0,8
tick,0x7ffc909efd34,124962989,0,0x0,8
tick,0x7ffc909efd34,124978848,0,0x0,8
tick,0x7ffc909efd34,124994425,0,0x0,8
tick,0x7ffc909efd34,125010590,0,0x0,8
tick,0x7ffc909efd34,125025909,0,0x0,8
tick,0x7ffc909efd34,125041627,0,0x0,8
tick,0x7ffc909efd34,125057295,0,0x0,8
tick,0x7ffc909efd34,125072207,0,0x0,8
tick,0x7ffc909efd34,125088400,0,0x0,8
tick,0x7ffc909efd34,125103698,0,0x0,8
tick,0x7ffc909efd34,125119334,0,0x0,8
tick,0x7ffc909efd34,125135493,0,0x0,8
tick,0x7ffc909efd34,125151466,0,0x0,8
tick,0x7ffc909efd34,125165622,0,0x0,8
tick,0x7ffc909efd34,125180916,0,0x0,8
tick,0x7ffc909efd34,125196688,0,0x0,8
tick,0x7ffc909efd34,125212207,0,0x0,8
tick,0x7ffc909efd34,125227851,0,0x0,8
tick,0x7ffc909efd34,125243404,0,0x0,8
tick,0x7ffc909efd34,125258884,0,0x0,8
tick,0x7ffc909efd34,125274514,0,0x0,8
tick,0x7ffc909efd34,125289944,0,0x0,8
tick,0x7ffc909efd34,125305353,0,0x0,8
tick,0x7ffc909efd34,125320109,0,0x0,8
tick,0x7ffc909efd34,125335027,0,0x0,8
tick,0x7ffc909efd34,125351035,0,0x0,8
tick,0x7ffc909efd34,125366056,0,0x0,8
tick,0x7ffc909efd34,125381387,0,0x0,8
tick,0x7ffc909efd34,125396814,0,0x0,8
tick,0x7ffc909efd34,125412490,0,0x0,8
tick,0x7ffc909efd34,125427986,0,0x0,8
tick,0x7ffc909efd34,125443380,0,0x0,8
tick,0x7ffc909efd34,125458635,0,0x0,8
tick,0x7ffc909efd34,125474505,0,0x0,8
tick,0x7ffc909efd34,125490374,0,0x0,8
tick,0x7ffc909efd34,125505388,0,0x0,8
tick,0x7ffc909efd34,125521171,0,0x0,8
tick,0x7ffc909efd34,125537292,0,0x0,8
tick,0x7ffc909efd34,125552954,0,0x0,8
tick,0x7ffc909efd34,125568259,0,0x0,8
tick,0x7ffc909efd34,125584234,0,0x0,8
tick,0x7ffc909efd34,125599607,0,0x0,8
tick,0x7ffc909efd34,125615974,0,0x0,8
tick,0x7ffc909efd34,125631536,0,0x0,8
tick,0x7ffc909efd34,125646737,0,0x0,8
tick,0x7ffc909efd34,125662225,0,0x0,8
tick,0x7ffc909efd34,125677535,0,0x0,8
tick,0x7ffc909efd34,125692916,0,0x0,8
tick,0x7ffc909efd34,125708907,0,0x0,8
tick,0x7ffc909efd34,125724244,0,0x0,8
tick,0x7ffc909efd34,125740057,0,0x0,8
tick,0x7ffc909efd34,125755008,0,0x0,8
tick,0x7ffc909efd34,125771133,0,0x0,8
tick,0x7ffc909efd34,125786715,0,0x0,8
tick,0x7ffc909efd34,125801873,0,0x0,8
tick,0x7ffc909efd34,125816953,0,0x0,8
tick,0x7ffc909efd34,125831892,0,0x0,8
tick,0x7ffc909efd34,125847484,0,0x0,8
tick,0x7ffc909efd34,125863565,0,0x0,8
tick,0x7ffc909efd34,125879172,0,0x0,8
tick,0x7ffc909efd34,125894810,0,0x0,8
tick,0x7ffc909efd34,125910093,0,0x0,8
tick,0x7ffc909efd34,125925642,0,0x0,8
tick,0x7ffc909efd34,125941121,0,0x0,8
tick,0x7ffc909efd34,125956278,0,0x0,8
tick,0x7ffc909efd34,125971798,0,0x0,8
tick,0x7ffc909efd34,125987714,0,0x0,8
tick,0x7ffc909efd34,126003081,0,0x0,8
tick,0x7ffc909efd34,126019428,0,0x0,8
tick,0x7ffc909efd34,126034673,0,0x0,8
tick,0x7ffc909efd34,126050366,0,0x0,8
tick,0x7ffc909efd34,126066519,0,0x0,8
tick,0x7ffc909efd34,126081853,0,0x0,8
tick,0x7ffc909efd34,126096916,0,0x0,8
tick,0x7ffc909efd34,126112547,0,0x0,8
tick,0x7ffc909efd34,126128207,0,0x0,8
tick,0x7ffc909efd34,126143717,0,0x0,8
tick,0x7ffc909efd34,126159089,0,0x0,8
tick,0x7ffc909efd34,126174844,0,0x0,8
tick,0x7ffc909efd34,126189753,0,0x0,8
tick,0x7ffc909efd34,126205352,0,0x0,8
tick,0x7ffc909efd34,126220842,0,0x0,8
tick,0x7ffc909efd34,126236436,0,0x0,8
tick,0x7ffc909efd34,126252232,0,0x0,8
tick,0x7ffc909efd34,126268220,0,0x0,8
tick,0x7ffc909efd34,126284418,0,0x0,8
tick,0x7ffc909efd34,126298580,0,0x0,8
tick,0x7ffc909efd34,126314095,0,0x0,8
tick,0x7ffc909efd34,126329465,0,0x0,8
tick,0x7ffc909efd34,126345116,0,0x0,8
tick,0x7ffc909efd34,126360252,0,0x0,8
tick,0x7ffc909efd34,126375554,0,0x0,8
tick,0x7ffc909efd34,126391123,0,0x0,8
tick,0x7ffc909efd34,126406984,0,0x0,8
tick,0x7ffc909efd34,126422408,0,0x0,8
tick,0x7ffc909efd34,126437918,0,0x0,8
tick,0x7ffc909efd34,126453626,0,0x0,8
tick,0x7ffc909efd34,126468993,0,0x0,8
tick,0x7ffc909efd34,126484329,0,0x0,8
tick,0x7ffc909efd34,126499641,0,0x0,8
tick,0x7ffc909efd34,126515329,0,0x0,8
tick,0x7ffc909efd34,126531301,0,0x0,8
tick,0x7ffc909efd34,126547570,0,0x0,8
tick,0x7ffc909efd34,126562974,0,0x0,8
tick,0x7ffc909efd34,126578135,0,0x0,8
tick,0x7ffc909efd34,126593242,0,0x0,8
tick,0x7ffc909efd34,126609122,0,0x0,8
tick,0x7ffc909efd34,126625119,0,0x0,8
tick,0x7ffc909efd34,126641161,0,0x0,8
tick,0x7ffc909efd34,126656910,0,0x0,8
tick,0x7ffc909efd34,126672320,0,0x0,8
tick,0x7ffc909efd34,126688358,0,0x0,8
tick,0x7ffc909efd34,126703786,0,0x0,8
tick,0x7ffc909efd34,126719691,0,0x0,8
tick,0x7ffc909efd34,126735402,0,0x0,8
tick,0x7ffc909efd34,126751107,0,0x0,8
tick,0x7ffc909efd34,126766896,0,0x0,8
tick,0x7ffc909efd34,126782440,0,0x0,8
tick,0x7ffc909efd34,126797833,0,0x0,8
tick,0x7ffc909efd34,126813815,0,0x0,8
tick,0x7ffc909efd34,126829314,0,0x0,8
tick,0x7ffc909efd34,126845074,0,0x0,8
tick,0x7ffc909efd34,126861187,0,0x0,8
tick,0x7ffc909efd34,126876817,0,0x0,8
tick,0x7ffc909efd34,126891576,0,0x0,8
tick,0x7ffc909efd34,126906712,0,0x0,8
tick,0x7ffc909efd34,126922235,0,0x0,8
tick,0x7ffc909efd34,126937812,0,0x0,8
tick,0x7ffc909efd34,126953349,0,0x0,8
tick,0x7ffc909efd34,126968559,0,0x0,8
tick,0x7ffc909efd34,126983698,0,0x0,8
tick,0x7ffc909efd34,126999565,0,0x0,8
tick,0x7ffc909efd34,127014860,0,0x0,8
tick,0x7ffc909efd34,127030244,0,0x0,8
tick,0x7ffc909efd34,127046345,0,0x0,8
tick,0x7ffc909efd34,127061506,0,0x0,8
tick,0x7ffc909efd34,127077315,0,0x0,8
tick,0x7ffc909efd34,127092701,0,0x0,8
tick,0x7ffc909efd34,127108163,0,0x0,8
tick,0x7ffc909efd34,127123583,0,0x0,8
tick,0x7ffc909efd34,127139829,0,0x0,8
tick,0x7ffc909efd34,127155209,0,0x0,8
tick,0x7ffc909efd34,127170988,0,0x0,8
tick,0x7ffc909efd34,127186498,0,0x0,8
tick,0x7ffc909efd34,127202400,0,0x0,8
tick,0x7ffc909efd34,127218284,0,0x0,8
tick,0x7ffc909efd34,127233773,0,0x0,8
tick,0x7ffc909efd34,127250115,0,0x0,8
tick,0x7ffc909efd34,127265316,0,0x0,8
tick,0x7ffc909efd34,127280556,0,0x0,8
tick,0x7ffc909efd34,127296011,0,0x0,8
tick,0x7ffc909efd34,127311818,0,0x0,8
tick,0x7ffc909efd34,127326889,0,0x0,8
tick,0x7ffc909efd34,127341982,0,0x0,8
tick,0x7ffc909efd34,127358180,0,0x0,8
tick,0x7ffc909efd34,127374146,0,0x0,8
tick,0x7ffc909efd34,127389999,0,0x0,8
tick,0x7ffc909efd34,127406430,0,0x0,8
tick,0x7ffc909efd34,127422121,0,0x0,8
tick,0x7ffc909efd34,127437899,0,0x0,8
tick,0x7ffc909efd34,127452897,0,0x0,8
tick,0x7ffc909efd34,127468782,0,0x0,8
tick,0x7ffc909efd34,127484860,0,0x0,8
tick,0x7ffc909efd34,127500785,0,0x0,8
tick,0x7ffc909efd34,127516874,0,0x0,8
tick,0x7ffc909efd34,127533129,0,0x0,8
tick,0x7ffc909efd34,127549156,0,0x0,8
tick,0x7ffc909efd34,127564909,0,0x0,8
tick,0x7ffc909efd34,127580452,0,0x0,8
tick,0x7ffc909efd34,127595946,0,0x0,8
tick,0x7ffc909efd34,127611287,0,0x0,8
tick,0x7ffc909efd34,127626349,0,0x0,8
tick,0x7ffc909efd34,127642054,0,0x0,8
tick,0x7ffc909efd34,127657454,0,0x0,8
tick,0x7ffc909efd34,127673047,0,0x0,8
tick,0x7ffc909efd34,127688587,0,0x0,8
tick,0x7ffc909efd34,127704001,0,0x0,8
tick,0x7ffc909efd34,127719353,0,0x0,8
tick,0x7ffc909efd34,127735333,0,0x0,8
tick,0x7ffc909efd34,127751118,0,0x0,8
tick,0x7ffc909efd34,127766530,0,0x0,8
tick,0x7ffc909efd34,127782214,0,0x0,8
tick,0x7ffc909efd34,127797884,0,0x0,8
tick,0x7ffc909efd34,127813030,0,0x0,8
tick,0x7ffc909efd34,127829131,0,0x0,8
tick,0x7ffc909efd34,127844244,0,0x0,8
tick,0x7ffc909efd34,127860506,0,0x0,8
tick,0x7ffc909efd34,127875666,0,0x0,8
tick,0x7ffc909efd34,127891351,0,0x0,8
tick,0x7ffc909efd34,127907273,0,0x0,8
tick,0x7ffc909efd34,127922789,0,0x0,8
tick,0x7ffc909efd34,127938177,0,0x0,8
tick,0x7ffc909efd34,127954221,0,0x0,8
tick,0x7ffc909efd34,127969945,0,0x0,8
tick,0x7ffc909efd34,127985424,0,0x0,8
tick,0x7ffc909efd34,128001359,0,0x0,8
tick,0x7ffc909efd34,128016978,0,0x0,8
tick,0x7ffc909efd34,128032596,0,0x0,8
tick,0x7ffc909efd34,128049106,0,0x0,8
tick,0x7ffc909efd34,128064157,0,0x0,8
tick,0x7ffc909efd34,128080231,0,0x0,8
tick,0x7ffc909efd34,128095985,0,0x0,8
tick,0x7ffc909efd34,128111403,0,0x0,8
tick,0x7ffc909efd34,128126958,0,0x0,8
tick,0x7ffc909efd34,128142547,0,0x0,8
tick,0x7ffc909efd34,128157778,0,0x0,8
tick,0x7ffc909efd34,128173258,0,0x0,8
tick,0x7ffc909efd34,128189642,0,0x0,8
tick,0x7ffc909efd34,128205076,0,0x0,8
tick,0x7ffc909efd34,128220320,0,0x0,8
tick,0x7ffc909efd34,128236320,0,0x0,8
tick,0x7ffc909efd34,128251579,0,0x0,8
tick,0x7ffc909efd34,128267371,0,0x0,8
tick,0x7ffc909efd34,128283025,0,0x0,8
tick,0x7ffc909efd34,128298532,0,0x0,8
tick,0x7ffc909efd34,128313753,0,0x0,8
tick,0x7ffc909efd34,128329717,0,0x0,8
tick,0x7ffc909efd34,128345050,0,0x0,8
tick,0x7ffc909efd34,128361162,0,0x0,8
tick,0x7ffc909efd34,128376173,0,0x0,8
tick,0x7ffc909efd34,128391529,0,0x0,8
tick,0x7ffc909efd34,128407144,0,0x0,8
tick,0x7ffc909efd34,128422544,0,0x0,8
tick,0x7ffc909efd34,128437831,0,0x0,8
tick,0x7ffc909efd34,128452851,0,0x0,8
tick,0x7ffc909efd34,128468244,0,0x0,8
tick,0x7ffc909efd34,128483597,0,0x0,8
tick,0x7ffc909efd34,128498928,0,0x0,8
tick,0x7ffc909efd34,128514284,0,0x0,8
tick,0x7ffc909efd34,128529596,0,0x0,8
tick,0x7ffc909efd34,128544392,0,0x0,8
tick,0x7ffc909efd34,128559624,0,0x0,8
tick,0x7ffc909efd34,128574988,0,0x0,8
tick,0x7ffc909efd34,128591218,0,0x0,8
tick,0x7ffc909efd34,128607237,0,0x0,8
tick,0x7ffc909efd34,128622489,0,0x0,8
tick,0x7ffc909efd34,128637979,0,0x0,8
tick,0x7ffc909efd34,128653652,0,0x0,8
tick,0x7ffc909efd34,128669186,0,0x0,8
tick,0x7ffc909efd34,128685247,0,0x0,8
tick,0x7ffc909efd34,128701708,0,0x0,8
tick,0x7ffc909efd34,128716878,0,0x0,8
tick,0x7ffc909efd34,128732975,0,0x0,8
tick,0x7ffc909efd34,128748283,0,0x0,8
tick,0x7ffc909efd34,128763538,0,0x0,8
tick,0x7ffc909efd34,128779449,0,0x0,8
tick,0x7ffc909efd34,128795174,0,0x0,8
tick,0x7ffc909efd34,128811264,0,0x0,8
tick,0x7ffc909efd34,128826765,0,0x0,8
tick,0x7ffc909efd34,128841999,0,0x0,8
tick,0x7ffc909efd34,128857862,0,0x0,8
tick,0x7ffc909efd34,128873316,0,0x0,8
tick,0x7ffc909efd34,128889305,0,0x0,8
tick,0x7ffc909efd34,128904706,0,0x0,8
tick,0x7ffc909efd34,128920466,0,0x0,8
tick,0x7ffc909efd34,128935908,0,0x0,8
tick,0x7ffc909efd34,128952286,0,0x0,8
tick,0x7ffc909efd34,128968303,0,0x0,8
tick,0x7ffc909efd34,128983718,0,0x0,8
tick,0x7ffc909efd34,128998996,0,0x0,8
tick,0x7ffc909efd34,129014430,0,0x0,8
tick,0x7ffc909efd34,129030082,0,0x0,8
tick,0x7ffc909efd34,129045908,0,0x0,8
tick,0x7ffc909efd34,129061842,0,0x0,8
tick,0x7ffc909efd34,129077811,0,0x0,8
tick,0x7ffc909efd34,129093411,0,0x0,8
tick,0x7ffc909efd34,129109655,0,0x0,8
tick,0x7ffc909efd34,129125552,0,0x0,8
tick,0x7ffc909efd34,129141041,0,0x0,8
tick,0x7ffc909efd34,129157049,0,0x0,8
tick,0x7ffc909efd34,129173106,0,0x0,8
tick,0x7ffc909efd34,129188823,0,0x0,8
tick,0x7ffc909efd34,129204663,0,0x0,8
tick,0x7ffc909efd34,129219987,0,0x0,8
tick,0x7ffc909efd34,129236045,0,0x0,8
tick,0x7ffc909efd34,129251690,0,0x0,8
tick,0x7ffc909efd34,129267246,0,0x0,8
tick,0x7ffc909efd34,129282842,0,0x0,8
tick,0x7ffc909efd34,129298136,0,0x0,8
tick,0x7ffc909efd34,129313928,0,0x0,8
tick,0x7ffc909efd34,129329322,0,0x0,8
tick,0x7ffc909efd34,129344943,0,0x0,8
tick,0x7ffc909efd34,129360802,0,0x0,8
tick,0x7ffc909efd34,129376271,0,0x0,8
tick,0x7ffc909efd34,129391925,0,0x0,8
tick,0x7ffc909efd34,129407644,0,0x0,8
tick,0x7ffc909efd34,129423228,0,0x0,8
tick,0x7ffc909efd34,129439098,0,0x0,8
tick,0x7ffc909efd34,129454778,0,0x0,8
tick,0x7ffc909efd34,129470828,0,0x0,8
tick,0x7ffc909efd34,129486371,0,0x0,8
tick,0x7ffc909efd34,129501274,0,0x0,8
tick,0x7ffc909efd34,129516302,0,0x0,8
tick,0x7ffc909efd34,129532031,0,0x0,8
tick,0x7ffc909efd34,129548006,0,0x0,8
tick,0x7ffc909efd34,129563345,0,0x0,8
tick,0x7ffc909efd34,129579255,0,0x0,8
tick,0x7ffc909efd34,129594791,0,0x0,8
tick,0x7ffc909efd34,129610085,0,0x0,8
tick,0x7ffc909efd34,129625402,0,0x0,8
tick,0x7ffc909efd34,129641136,0,0x0,8
tick,0x7ffc909efd34,129656623,0,0x0,8
tick,0x7ffc909efd34,129672044,0,0x0,8
tick,0x7ffc909efd34,129687948,0,0x0,8
tick,0x7ffc909efd34,129703405,0,0x0,8
tick,0x7ffc909efd34,129718677,0,0x0,8
tick,0x7ffc909efd34,129734455,0,0x0,8
tick,0x7ffc909efd34,129750170,0,0x0,8
tick,0x7ffc909efd34,129766225,0,0x0,8
tick,0x7ffc909efd34,129781240,0,0x0,8
tick,0x7ffc909efd34,129797032,0,0x0,8
tick,0x7ffc909efd34,129812983,0,0x0,8
tick,0x7ffc909efd34,129829253,0,0x0,8
tick,0x7ffc909efd34,129844904,0,0x0,8
tick,0x7ffc909efd34,129861083,0,0x0,8
tick,0x7ffc909efd34,129876832,0,0x0,8
tick,0x7ffc909efd34,129892478,0,0x0,8
tick,0x7ffc909efd34,129907927,0,0x0,8
tick,0x7ffc909efd34,129923993,0,0x0,8
tick,0x7ffc909efd34,129940307,0,0x0,8
tick,0x7ffc909efd34,129955966,0,0x0,8
tick,0x7ffc909efd34,129971469,0,0x0,8
tick,0x7ffc909efd34,129987075,0,0x0,8
tick,0x7ffc909efd34,130002183,0,0x0,8
tick,0x7ffc909efd34,130018519,0,0x0,8
tick,0x7ffc909efd34,130033580,0,0x0,8
tick,0x7ffc909efd34,130049461,0,0x0,8
tick,0x7ffc909efd34,130064285,0,0x0,8
tick,0x7ffc909efd34,130079496,0,0x0,8
tick,0x7ffc909efd34,130094818,0,0x0,8
tick,0x7ffc909efd34,130111152,0,0x0,8
tick,0x7ffc909efd34,130126790,0,0x0,8
tick,0x7ffc909efd34,130142546,0,0x0,8
tick,0x7ffc909efd34,130158255,0,0x0,8
tick,0x7ffc909efd34,130173940,0,0x0,8
tick,0x7ffc909efd34,130189714,0,0x0,8
tick,0x7ffc909efd34,130205234,0,0x0,8
tick,0x7ffc909efd34,130220421,0,0x0,8
tick,0x7ffc909efd34,130236133,0,0x0,8
tick,0x7ffc909efd34,130251466,0,0x0,8
tick,0x7ffc909efd34,130266711,0,0x0,8
tick,0x7ffc909efd34,130282602,0,0x0,8
tick,0x7ffc909efd34,130297848,0,0x0,8
tick,0x7ffc909efd34,130313422,0,0x0,8
tick,0x7ffc909efd34,130328385,0,0x0,8
tick,0x7ffc909efd34,130343751,0,0x0,8
tick,0x7ffc909efd34,130359919,0,0x0,8
tick,0x7ffc909efd34,130375732,0,0x0,8
tick,0x7ffc909efd34,130391234,0,0x0,8
tick,0x7ffc909efd34,130407098,0,0x0,8
tick,0x7ffc909efd34,130422699,0,0x0,8
tick,0x7ffc909efd34,130438340,0,0x0,8
tick,0x7ffc909efd34,130454243,0,0x0,8
tick,0x7ffc909efd34,130469505,0,0x0,8
tick,0x7ffc909efd34,130485184,0,0x0,8
tick,0x7ffc909efd34,130501269,0,0x0,8
tick,0x7ffc909efd34,130517543,0,0x0,8
tick,0x7ffc909efd34,130533246,0,0x0,8
tick,0x7ffc909efd34,130549312,0,0x0,8
tick,0x7ffc909efd34,130565152,0,0x0,8
tick,0x7ffc909efd34,130581324,0,0x0,8
tick,0x7ffc909efd34,130596532,0,0x0,8
tick,0x7ffc909efd34,130612194,0,0x0,8
tick,0x7ffc909efd34,130627463,0,0x0,8
tick,0x7ffc909efd34,130643085,0,0x0,8
tick,0x7ffc909efd34,130658629,0,0x0,8
tick,0x7ffc909efd34,130674316,0,0x0,8
tick,0x7ffc909efd34,130689549,0,0x0,8
tick,0x7ffc909efd34,130704984,0,0x0,8
tick,0x7ffc909efd34,130720436,0,0x0,8
tick,0x7ffc909efd34,130736293,0,0x0,8
tick,0x7ffc909efd34,130751760,0,0x0,8
tick,0x7ffc909efd34,130767096,0,0x0,8
tick,0x7ffc909efd34,130781845,0,0x0,8
tick,0x7ffc909efd34,130797307,0,0x0,8
tick,0x7ffc909efd34,130812867,0,0x0,8
tick,0x7ffc909efd34,130828687,0,0x0,8
tick,0x7ffc909efd34,130844175,0,0x0,8
tick,0x7ffc909efd34,130860033,0,0x0,8
tick,0x7ffc909efd34,130875575,0,0x0,8
tick,0x7ffc909efd34,130891665,0,0x0,8
tick,0x7ffc909efd34,130907279,0,0x0,8
tick,0x7ffc909efd34,130923222,0,0x0,8
tick,0x7ffc909efd34,130939230,0,0x0,8
tick,0x7ffc909efd34,130955724,0,0x0,8
tick,0x7ffc909efd34,130971174,0,0x0,8
tick,0x7ffc909efd34,130987244,0,0x0,8
tick,0x7ffc909efd34,131003436,0,0x0,8
tick,0x7ffc909efd34,131019322,0,0x0,8
tick,0x7ffc909efd34,131035206,0,0x0,8
tick,0x7ffc909efd34,131051528,0,0x0,8
tick,0x7ffc909efd34,131067334,0,0x0,8
tick,0x7ffc909efd34,131086326,0,0x0,8
tick,0x7ffc909efd34,131099686,0,0x0,8
tick,0x7ffc909efd34,131115327,0,0x0,8
tick,0x7ffc909efd34,131131400,0,0x0,8
tick,0x7ffc909efd34,131147356,0,0x0,8
tick,0x7ffc909efd34,131163357,0,0x0,8
tick,0x7ffc909efd34,131179265,0,0x0,8
tick,0x7ffc909efd34,131216109,0,0x0,8
tick,0x7ffc909efd34,131232277,0,0x0,8
tick,0x7ffc909efd34,131246868,0,0x0,8
tick,0x7ffc909efd34,131263773,0,0x0,8
tick,0x7ffc909efd34,131276289,0,0x0,8
tick,0x7ffc909efd34,131296751,0,0x0,8
tick,0x7ffc909efd34,131308031,0,0x0,8
tick,0x7ffc909efd34,131324666,0,0x0,8
tick,0x7ffc909efd34,131348234,0,0x0,8
tick,0x7ffc909efd34,131377863,0,0x0,8
tick,0x7ffc909efd34,131387854,0,0x0,8
tick,0x7ffc909efd34,131406755,0,0x0,8
tick,0x7ffc909efd34,131420866,0,0x0,8
tick,0x7ffc909efd34,131461163,0,0x0,8
tick,0x7ffc909efd34,131472872,0,0x0,8
tick,0x7ffc909efd34,131487629,0,0x0,8
tick,0x7ffc909efd34,131497275,0,0x0,8
tick,0x7ffc909efd34,131512359,0,0x0,8
tick,0x7ffc909efd34,131527794,0,0x0,8
tick,0x7ffc909efd34,131543311,0,0x0,8
tick,0x7ffc909efd34,131560479,0,0x0,8
tick,0x7ffc909efd34,131575926,0,0x0,8
tick,0x7ffc909efd34,131594812,0,0x0,8
tick,0x7ffc909efd34,131607272,0,0x0,8
tick,0x7ffc909efd34,131623231,0,0x0,8
tick,0x7ffc909efd34,131640706,0,0x0,8
tick,0x7ffc909efd34,131655814,0,0x0,8
tick,0x7ffc909efd34,131671246,0,0x0,8
tick,0x7ffc909efd34,131686863,0,0x0,8
tick,0x7ffc909efd34,131701182,0,0x0,8
tick,0x7ffc909efd34,131716824,0,0x0,8
tick,0x7ffc909efd34,131732936,0,0x0,8
tick,0x7ffc909efd34,131749010,0,0x0,8
tick,0x7ffc909efd34,131764782,0,0x0,8
tick,0x7ffc909efd34,131783400,0,0x0,8
tick,0x7ffc909efd34,131796890,0,0x0,8
tick,0x7ffc909efd34,131811849,0,0x0,8
tick,0x7ffc909efd34,131830042,0,0x0,8
tick,0x7ffc909efd34,131843893,0,0x0,8
tick,0x7ffc909efd34,131860721,0,0x0,8
tick,0x7ffc909efd34,131875870,0,0x0,8
tick,0x7ffc909efd34,131890410,0,0x0,8
tick,0x7ffc909efd34,131906902,0,0x0,8
tick,0x7ffc909efd34,131922628,0,0x0,8
tick,0x7ffc909efd34,131939390,0,0x0,8
tick,0x7ffc909efd34,131955858,0,0x0,8
tick,0x7ffc909efd34,131970334,0,0x0,8
tick,0x7ffc909efd34,131987393,0,0x0,8
tick,0x7ffc909efd34,132002809,0,0x0,8
tick,0x7ffc909efd34,132018735,0,0x0,8
tick,0x7ffc909efd34,132034768,0,0x0,8
tick,0x7ffc909efd34,132050878,0,0x0,8
tick,0x7ffc909efd34,132066828,0,0x0,8
tick,0x7ffc909efd34,132084638,0,0x0,8
tick,0x7ffc909efd34,132099336,0,0x0,8
tick,0x7ffc909efd34,132114304,0,0x0,8
tick,0x7ffc909efd34,132130850,0,0x0,8
tick,0x7ffc909efd34,132146814,0,0x0,8
tick,0x7ffc909efd34,132162809,0,0x0,8
tick,0x7ffc909efd34,132178507,0,0x0,8
tick,0x7ffc909efd34,132195431,0,0x0,8
tick,0x7ffc909efd34,132210384,0,0x0,8
tick,0x7ffc909efd34,132226287,0,0x0,8
tick,0x7ffc909efd34,132241613,0,0x0,8
tick,0x7ffc909efd34,132257543,0,0x0,8
tick,0x7ffc909efd34,132273822,0,0x0,8
tick,0x7ffc909efd34,132289728,0,0x0,8
tick,0x7ffc909efd34,132305862,0,0x0,8
tick,0x7ffc909efd34,132321853,0,0x0,8
tick,0x7ffc909efd34,132337452,0,0x0,8
tick,0x7ffc909efd34,132355673,0,0x0,8
tick,0x7ffc909efd34,132369734,0,0x0,8
tick,0x7ffc909efd34,132385545,0,0x0,8
tick,0x7ffc909efd34,132401881,0,0x0,8
tick,0x7ffc909efd34,132418021,0,0x0,8
tick,0x7ffc909efd34,132433591,0,0x0,8
tick,0x7ffc909efd34,132449564,0,0x0,8
tick,0x7ffc909efd34,132465592,0,0x0,8
tick,0x7ffc909efd34,132481610,0,0x0,8
tick,0x7ffc909efd34,132497291,0,0x0,8
tick,0x7ffc909efd34,132513366,0,0x0,8
tick,0x7ffc909efd34,132529482,0,0x0,8
tick,0x7ffc909efd34,132545561,0,0x0,8
tick,0x7ffc909efd34,132561467,0,0x0,8
tick,0x7ffc909efd34,132577463,0,0x0,8
tick,0x7ffc909efd34,132593302,0,0x0,8
tick,0x7ffc909efd34,132608417,0,0x0,8
tick,0x7ffc909efd34,132628889,0,0x0,8
tick,0x7ffc909efd34,132651053,0,0x0,8
tick,0x7ffc909efd34,132658099,0,0x0,8
tick,0x7ffc909efd34,132677888,0,0x0,8
tick,0x7ffc909efd34,132701327,0,0x0,8
tick,0x7ffc909efd34,132704394,0,0x0,8
tick,0x7ffc909efd34,132735666,0,0x0,8
tick,0x7ffc909efd34,132759638,0,0x0,8
tick,0x7ffc909efd34,132768250,0,0x0,8
tick,0x7ffc909efd34,132797296,0,0x0,8
tick,0x7ffc909efd34,132816336,0,0x0,8
tick,0x7ffc909efd34,132850047,0,0x0,8
tick,0x7ffc909efd34,132894655,0,0x0,8
tick,0x7ffc909efd34,132933906,0,0x0,8
tick,0x7ffc909efd34,132959583,0,0x0,8
tick,0x7ffc909efd34,132995372,0,0x0,8
tick,0x7ffc909efd34,133047543,0,0x0,8
tick,0x7ffc909efd34,133083060,0,0x0,8
tick,0x7ffc909efd34,133090808,0,0x0,8
tick,0x7ffc909efd34,133108160,0,0x0,8
tick,0x7ffc909efd34,133138086,0,0x0,8
tick,0x7ffc909efd34,133159776,0,0x0,8
tick,0x7ffc909efd34,133167430,0,0x0,8
tick,0x7ffc909efd34,133186977,0,0x0,8
tick,0x7ffc909efd34,133202482,0,0x0,8
tick,0x7ffc909efd34,133236088,0,0x0,8
tick,0x7ffc909efd34,133254768,0,0x0,8
tick,0x7ffc909efd34,133263350,0,0x0,8
tick,0x7ffc909efd34,133281046,0,0x0,8
tick,0x7ffc909efd34,133300869,0,0x0,8
tick,0x7ffc909efd34,133323859,0,0x0,8
tick,0x7ffc909efd34,133326566,0,0x0,8
tick,0x7ffc909efd34,133346199,0,0x0,8
tick,0x7ffc909efd34,133359720,0,0x0,8
tick,0x7ffc909efd34,133378603,0,0x0,8
tick,0x7ffc909efd34,133392696,0,0x0,8
tick,0x7ffc909efd34,133407306,0,0x0,8
tick,0x7ffc909efd34,133427498,0,0x0,8
tick,0x7ffc909efd34,133440535,0,0x0,8
tick,0x7ffc909efd34,133457508,0,0x0,8
tick,0x7ffc909efd34,133475881,0,0x0,8
tick,0x7ffc909efd34,133520804,0,0x0,8
tick,0x7ffc909efd34,133556639,0,0x0,8
tick,0x7ffc909efd34,133572765,0,0x0,8
tick,0x7ffc909efd34,133578287,0,0x0,8
tick,0x7ffc909efd34,133597626,0,0x0,8
tick,0x7ffc909efd34,133608531,0,0x0,8
tick,0x7ffc909efd34,133626545,0,0x0,8
tick,0x7ffc909efd34,133640301,0,0x0,8
tick,0x7ffc909efd34,133654793,0,0x0,8
tick,0x7ffc909efd34,133685053,0,0x0,8
tick,0x7ffc909efd34,133701269,0,0x0,8
tick,0x7ffc909efd34,133716353,0,0x0,8
tick,0x7ffc909efd34,133732254,0,0x0,8
tick,0x7ffc909efd34,133760486,0,0x0,8
tick,0x7ffc909efd34,133763585,0,0x0,8
tick,0x7ffc909efd34,133779355,0,0x0,8
tick,0x7ffc909efd34,133794729,0,0x0,8
tick,0x7ffc909efd34,133809643,0,0x0,8
tick,0x7ffc909efd34,133825188,0,0x0,8
tick,0x7ffc909efd34,133841138,0,0x0,8
tick,0x7ffc909efd34,133857255,0,0x0,8
tick,0x7ffc909efd34,133873305,0,0x0,8
tick,0x7ffc909efd34,133889284,0,0x0,8
tick,0x7ffc909efd34,133905080,0,0x0,8
tick,0x7ffc909efd34,133920349,0,0x0,8
tick,0x7ffc909efd34,133935864,0,0x0,8
tick,0x7ffc909efd34,133951450,0,0x0,8
tick,0x7ffc909efd34,133966908,0,0x0,8
tick,0x7ffc909efd34,133982488,0,0x0,8
tick,0x7ffc909efd34,133997452,0,0x0,8
tick,0x7ffc909efd34,134013607,0,0x0,8
tick,0x7ffc909efd34,134028992,0,0x0,8
tick,0x7ffc909efd34,134047553,0,0x0,8
tick,0x7ffc909efd34,134061729,0,0x0,8
tick,0x7ffc909efd34,134077525,0,0x0,8
tick,0x7ffc909efd34,134092884,0,0x0,8
tick,0x7ffc909efd34,134109329,0,0x0,8
tick,0x7ffc909efd34,134123784,0,0x0,8
tick,0x7ffc909efd34,134138994,0,0x0,8
tick,0x7ffc909efd34,134154799,0,0x0,8
tick,0x7ffc909efd34,134170956,0,0x0,8
tick,0x7ffc909efd34,134187199,0,0x0,8
tick,0x7ffc909efd34,134202007,0,0x0,8
tick,0x7ffc909efd34,134216871,0,0x0,8
tick,0x7ffc909efd34,134233026,0,0x0,8
tick,0x7ffc909efd34,134249247,0,0x0,8
tick,0x7ffc909efd34,134265778,0,0x0,8
tick,0x7ffc909efd34,134281430,0,0x0,8
tick,0x7ffc909efd34,134295736,0,0x0,8
tick,0x7ffc909efd34,134311173,0,0x0,8
tick,0x7ffc909efd34,134327101,0,0x0,8
tick,0x7ffc909efd34,134342976,0,0x0,8
tick,0x7ffc909efd34,134357861,0,0x0,8
tick,0x7ffc909efd34,134373876,0,0x0,8
tick,0x7ffc909efd34,134389906,0,0x0,8
tick,0x7ffc909efd34,134404944,0,0x0,8
tick,0x7ffc909efd34,134421110,0,0x0,8
tick,0x7ffc909efd34,134436451,0,0x0,8
tick,0x7ffc909efd34,134452114,0,0x0,8
tick,0x7ffc909efd34,134468244,0,0x0,8
tick,0x7ffc909efd34,134484025,0,0x0,8
tick,0x7ffc909efd34,134499439,0,0x0,8
tick,0x7ffc909efd34,134515539,0,0x0,8
tick,0x7ffc909efd34,134531803,0,0x0,8
tick,0x7ffc909efd34,134547086,0,0x0,8
tick,0x7ffc909efd34,134562770,0,0x0,8
tick,0x7ffc909efd34,134578180,0,0x0,8
tick,0x7ffc909efd34,134593229,0,0x0,8
tick,0x7ffc909efd34,134609292,0,0x0,8
tick,0x7ffc909efd34,134625071,0,0x0,8
tick,0x7ffc909efd34,134640844,0,0x0,8
tick,0x7ffc909efd34,134656276,0,0x0,8
tick,0x7ffc909efd34,134672352,0,0x0,8
tick,0x7ffc909efd34,134688482,0,0x0,8
tick,0x7ffc909efd34,134704614,0,0x0,8
tick,0x7ffc909efd34,134720248,0,0x0,8
tick,0x7ffc909efd34,134736119,0,0x0,8
tick,0x7ffc909efd34,134751946,0,0x0,8
tick,0x7ffc909efd34,134767474,0,0x0,8
tick,0x7ffc909efd34,134783164,0,0x0,8
tick,0x7ffc909efd34,134799909,0,0x0,8
tick,0x7ffc909efd34,134814558,0,0x0,8
tick,0x7ffc909efd34,134829431,0,0x0,8
tick,0x7ffc909efd34,134845321,0,0x0,8
tick,0x7ffc909efd34,134861601,0,0x0,8
tick,0x7ffc909efd34,134877335,0,0x0,8
tick,0x7ffc909efd34,134893523,0,0x0,8
tick,0x7ffc909efd34,134909448,0,0x0,8
tick,0x7ffc909efd34,134925473,0,0x0,8
tick,0x7ffc909efd34,134941504,0,0x0,8
tick,0x7ffc909efd34,134957550,0,0x0,8
tick,0x7ffc909efd34,134972972,0,0x0,8
tick,0x7ffc909efd34,134989013,0,0x0,8
tick,0x7ffc909efd34,135005028,0,0x0,8
tick,0x7ffc909efd34,135020525,0,0x0,8
tick,0x7ffc909efd34,135036183,0,0x0,8
tick,0x7ffc909efd34,135051341,0,0x0,8
tick,0x7ffc909efd34,135067385,0,0x0,8
tick,0x7ffc909efd34,135084027,0,0x0,8
tick,0x7ffc909efd34,135098796,0,0x0,8
tick,0x7ffc909efd34,135115323,0,0x0,8
tick,0x7ffc909efd34,135131129,0,0x0,8
tick,0x7ffc909efd34,135147053,0,0x0,8
tick,0x7ffc909efd34,135163314,0,0x0,8
tick,0x7ffc909efd34,135179280,0,0x0,8
tick,0x7ffc909efd34,135194914,0,0x0,8
tick,0x7ffc909efd34,135210704,0,0x0,8
tick,0x7ffc909efd34,135226114,0,0x0,8
tick,0x7ffc909efd34,135241436,0,0x0,8
tick,0x7ffc909efd34,135257307,0,0x0,8
tick,0x7ffc909efd34,135272875,0,0x0,8
tick,0x7ffc909efd34,135287596,0,0x0,8
tick,0x7ffc909efd34,135303208,0,0x0,8
tick,0x7ffc909efd34,135319232,0,0x0,8
tick,0x7ffc909efd34,135335419,0,0x0,8
tick,0x7ffc909efd34,135350421,0,0x0,8
tick,0x7ffc909efd34,135365952,0,0x0,8
tick,0x7ffc909efd34,135381864,0,0x0,8
tick,0x7ffc909efd34,135397611,0,0x0,8
tick,0x7ffc909efd34,135413270,0,0x0,8
tick,0x7ffc909efd34,135428681,0,0x0,8
tick,0x7ffc909efd34,135444709,0,0x0,8
tick,0x7ffc909efd34,135460339,0,0x0,8
tick,0x7ffc909efd34,135475697,0,0x0,8
tick,0x7ffc909efd34,135491916,0,0x0,8
tick,0x7ffc909efd34,135507038,0,0x0,8
tick,0x7ffc909efd34,135522526,0,0x0,8
tick,0x7ffc909efd34,135538035,0,0x0,8
tick,0x7ffc909efd34,135553854,0,0x0,8
tick,0x7ffc909efd34,135569353,0,0x0,8
tick,0x7ffc909efd34,135585350,0,0x0,8
tick,0x7ffc909efd34,135600626,0,0x0,8
tick,0x7ffc909efd34,135615820,0,0x0,8
tick,0x7ffc909efd34,135630974,0,0x0,8
tick,0x7ffc909efd34,135646277,0,0x0,8
tick,0x7ffc909efd34,135662271,0,0x0,8
tick,0x7ffc909efd34,135677764,0,0x0,8
tick,0x7ffc909efd34,135693433,0,0x0,8
tick,0x7ffc909efd34,135708879,0,0x0,8
tick,0x7ffc909efd34,135724245,0,0x0,8
tick,0x7ffc909efd34,135740448,0,0x0,8
tick,0x7ffc909efd34,135755617,0,0x0,8
tick,0x7ffc909efd34,135771685,0,0x0,8
tick,0x7ffc909efd34,135787542,0,0x0,8
tick,0x7ffc909efd34,135802833,0,0x0,8
tick,0x7ffc909efd34,135818372,0,0x0,8
tick,0x7ffc909efd34,135834272,0,0x0,8
tick,0x7ffc909efd34,135850075,0,0x0,8
tick,0x7ffc909efd34,135865365,0,0x0,8
tick,0x7ffc909efd34,135880712,0,0x0,8
tick,0x7ffc909efd34,135896336,0,0x0,8
tick,0x7ffc909efd34,135911840,0,0x0,8
tick,0x7ffc909efd34,135927830,0,0x0,8
tick,0x7ffc909efd34,135943885,0,0x0,8
tick,0x7ffc909efd34,135959668,0,0x0,8
tick,0x7ffc909efd34,135974963,0,0x0,8
tick,0x7ffc909efd34,135991394,0,0x0,8
tick,0x7ffc909efd34,136006951,0,0x0,8
tick,0x7ffc909efd34,136022526,0,0x0,8
tick,0x7ffc909efd34,136038231,0,0x0,8
tick,0x7ffc909efd34,136053741,0,0x0,8
tick,0x7ffc909efd34,136069272,0,0x0,8
tick,0x7ffc909efd34,136085554,0,0x0,8
tick,0x7ffc909efd34,136100443,0,0x0,8
tick,0x7ffc909efd34,136115997,0,0x0,8
tick,0x7ffc909efd34,136131595,0,0x0,8
tick,0x7ffc909efd34,136147184,0,0x0,8
tick,0x7ffc909efd34,136162526,0,0x0,8
tick,0x7ffc909efd34,136178395,0,0x0,8
tick,0x7ffc909efd34,136193670,0,0x0,8
tick,0x7ffc909efd34,136209274,0,0x0,8
tick,0x7ffc909efd34,136224918,0,0x0,8
tick,0x7ffc909efd34,136240812,0,0x0,8
tick,0x7ffc909efd34,136256571,0,0x0,8
tick,0x7ffc909efd34,136272152,0,0x0,8
tick,0x7ffc909efd34,136287971,0,0x0,8
tick,0x7ffc909efd34,136303599,0,0x0,8
tick,0x7ffc909efd34,136319447,0,0x0,8
tick,0x7ffc909efd34,136335688,0,0x0,8
tick,0x7ffc909efd34,136350386,0,0x0,8
tick,0x7ffc909efd34,136365615,0,0x0,8
tick,0x7ffc909efd34,136381324,0,0x0,8
tick,0x7ffc909efd34,136396478,0,0x0,8
tick,0x7ffc909efd34,136412273,0,0x0,8
tick,0x7ffc909efd34,136428411,0,0x0,8
tick,0x7ffc909efd34,136443937,0,0x0,8
tick,0x7ffc909efd34,136459845,0,0x0,8
tick,0x7ffc909efd34,136475479,0,0x0,8
tick,0x7ffc909efd34,136490818,0,0x0,8
tick,0x7ffc909efd34,136507077,0,0x0,8
tick,0x7ffc909efd34,136522789,0,0x0,8
tick,0x7ffc909efd34,136538905,0,0x0,8
tick,0x7ffc909efd34,136554861,0,0x0,8
tick,0x7ffc909efd34,136571109,0,0x0,8
tick,0x7ffc909efd34,136587076,0,0x0,8
tick,0x7ffc909efd34,136602738,0,0x0,8
tick,0x7ffc909efd34,136617822,0,0x0,8
tick,0x7ffc909efd34,136633856,0,0x0,8
tick,0x7ffc909efd34,136650008,0,0x0,8
tick,0x7ffc909efd34,136665439,0,0x0,8
tick,0x7ffc909efd34,136680756,0,0x0,8
tick,0x7ffc909efd34,136696516,0,0x0,8
tick,0x7ffc909efd34,136712003,0,0x0,8
tick,0x7ffc909efd34,136727727,0,0x0,8
tick,0x7ffc909efd34,136743445,0,0x0,8
tick,0x7ffc909efd34,136759307,0,0x0,8
tick,0x7ffc909efd34,136774626,0,0x0,8
tick,0x7ffc909efd34,136790806,0,0x0,8
tick,0x7ffc909efd34,136806190,0,0x0,8
tick,0x7ffc909efd34,136821758,0,0x0,8
tick,0x7ffc909efd34,136837444,0,0x0,8
tick,0x7ffc909efd34,136852555,0,0x0,8
tick,0x7ffc909efd34,136868182,0,0x0,8
tick,0x7ffc909efd34,136883392,0,0x0,8
tick,0x7ffc909efd34,136899406,0,0x0,8
tick,0x7ffc909efd34,136914966,0,0x0,8
tick,0x7ffc909efd34,136930106,0,0x0,8
tick,0x7ffc909efd34,136945526,0,0x0,8
tick,0x7ffc909efd34,136961032,0,0x0,8
tick,0x7ffc909efd34,136976760,0,0x0,8
tick,0x7ffc909efd34,136992222,0,0x0,8
tick,0x7ffc909efd34,137007483,0,0x0,8
tick,0x7ffc909efd34,137022764,0,0x0,8
tick,0x7ffc909efd34,137038019,0,0x0,8
tick,0x7ffc909efd34,137053284,0,0x0,8
tick,0x7ffc909efd34,137068551,0,0x0,8
tick,0x7ffc909efd34,137084358,0,0x0,8
tick,0x7ffc909efd34,137099739,0,0x0,8
tick,0x7ffc909efd34,137115011,0,0x0,8
tick,0x7ffc909efd34,137130373,0,0x0,8
tick,0x7ffc909efd34,137146162,0,0x0,8
tick,0x7ffc909efd34,137161705,0,0x0,8
tick,0x7ffc909efd34,137177062,0,0x0,8
tick,0x7ffc909efd34,137193333,0,0x0,8
tick,0x7ffc909efd34,137208759,0,0x0,8
tick,0x7ffc909efd34,137224111,0,0x0,8
tick,0x7ffc909efd34,137239410,0,0x0,8
tick,0x7ffc909efd34,137254677,0,0x0,8
tick,0x7ffc909efd34,137270993,0,0x0,8
tick,0x7ffc909efd34,137286741,0,0x0,8
tick,0x7ffc909efd34,137302819,0,0x0,8
tick,0x7ffc909efd34,137318314,0,0x0,8
tick,0x7ffc909efd34,137333717,0,0x0,8
tick,0x7ffc909efd34,137349193,0,0x0,8
tick,0x7ffc909efd34,137364896,0,0x0,8
tick,0x7ffc909efd34,137380817,0,0x0,8
tick,0x7ffc909efd34,137396560,0,0x0,8
tick,0x7ffc909efd34,137412610,0,0x0,8
tick,0x7ffc909efd34,137428051,0,0x0,8
tick,0x7ffc909efd34,137443958,0,0x0,8
tick,0x7ffc909efd34,137458829,0,0x0,8
tick,0x7ffc909efd34,137474327,0,0x0,8
tick,0x7ffc909efd34,137489875,0,0x0,8
tick,0x7ffc909efd34,137505414,0,0x0,8
tick,0x7ffc909efd34,137520963,0,0x0,8
tick,0x7ffc909efd34,137537144,0,0x0,8
tick,0x7ffc909efd34,137552839,0,0x0,8
tick,0x7ffc909efd34,137568160,0,0x0,8
tick,0x7ffc909efd34,137583454,0,0x0,8
tick,0x7ffc909efd34,137598745,0,0x0,8
tick,0x7ffc909efd34,137614609,0,0x0,8
tick,0x7ffc909efd34,137630101,0,0x0,8
tick,0x7ffc909efd34,137645357,0,0x0,8
tick,0x7ffc909efd34,137660680,0,0x0,8
tick,0x7ffc909efd34,137676322,0,0x0,8
tick,0x7ffc909efd34,137691797,0,0x0,8
tick,0x7ffc909efd34,137707359,0,0x0,8
tick,0x7ffc909efd34,137722668,0,0x0,8
tick,0x7ffc909efd34,137738614,0,0x0,8
tick,0x7ffc909efd34,137754323,0,0x0,8
tick,0x7ffc909efd34,137769664,0,0x0,8
tick,0x7ffc909efd34,137785761,0,0x0,8
tick,0x7ffc909efd34,137801331,0,0x0,8
tick,0x7ffc909efd34,137816752,0,0x0,8
tick,0x7ffc909efd34,137832658,0,0x0,8
tick,0x7ffc909efd34,137847977,0,0x0,8
tick,0x7ffc909efd34,137863816,0,0x0,8
tick,0x7ffc909efd34,137879424,0,0x0,8
tick,0x7ffc909efd34,137896079,0,0x0,8
tick,0x7ffc909efd34,137911087,0,0x0,8
tick,0x7ffc909efd34,137926617,0,0x0,8
tick,0x7ffc909efd34,137942257,0,0x0,8
tick,0x7ffc909efd34,137958005,0,0x0,8
tick,0x7ffc909efd34,137973387,0,0x0,8
tick,0x7ffc909efd34,137988537,0,0x0,8
tick,0x7ffc909efd34,138004218,0,0x0,8
tick,0x7ffc909efd34,138019991,0,0x0,8
tick,0x7ffc909efd34,138035958,0,0x0,8
tick,0x7ffc909efd34,138051998,0,0x0,8
tick,0x7ffc909efd34,138068011,0,0x0,8
tick,0x7ffc909efd34,138083981,0,0x0,8
tick,0x7ffc909efd34,138099973,0,0x0,8
tick,0x7ffc909efd34,138115979,0,0x0,8
tick,0x7ffc909efd34,138131817,0,0x0,8
tick,0x7ffc909efd34,138146844,0,0x0,8
tick,0x7ffc909efd34,138161995,0,0x0,8
tick,0x7ffc909efd34,138178172,0,0x0,8
tick,0x7ffc909efd34,138193941,0,0x0,8
tick,0x7ffc909efd34,138209569,0,0x0,8
tick,0x7ffc909efd34,138225361,0,0x0,8
tick,0x7ffc909efd34,138240464,0,0x0,8
tick,0x7ffc909efd34,138256187,0,0x0,8
tick,0x7ffc909efd34,138271524,0,0x0,8
tick,0x7ffc909efd34,138287283,0,0x0,8
tick,0x7ffc909efd34,138302298,0,0x0,8
tick,0x7ffc909efd34,138318167,0,0x0,8
tick,0x7ffc909efd34,138333728,0,0x0,8
tick,0x7ffc909efd34,138348994,0,0x0,8
tick,0x7ffc909efd34,138364280,0,0x0,8
tick,0x7ffc909efd34,138379664,0,0x0,8
tick,0x7ffc909efd34,138395587,0,0x0,8
tick,0x7ffc909efd34,138410874,0,0x0,8
tick,0x7ffc909efd34,138426427,0,0x0,8
tick,0x7ffc909efd34,138442172,0,0x0,8
tick,0x7ffc909efd34,138457499,0,0x0,8
tick,0x7ffc909efd34,138472800,0,0x0,8
tick,0x7ffc909efd34,138488298,0,0x0,8
tick,0x7ffc909efd34,138503974,0,0x0,8
tick,0x7ffc909efd34,138519847,0,0x0,8
tick,0x7ffc909efd34,138535623,0,0x0,8
tick,0x7ffc909efd34,138550945,0,0x0,8
tick,0x7ffc909efd34,138566613,0,0x0,8
tick,0x7ffc909efd34,138582619,0,0x0,8
tick,0x7ffc909efd34,138597834,0,0x0,8
tick,0x7ffc909efd34,138613673,0,0x0,8
tick,0x7ffc909efd34,138629165,0,0x0,8
tick,0x7ffc909efd34,138644947,0,0x0,8
tick,0x7ffc909efd34,138661326,0,0x0,8
tick,0x7ffc909efd34,138676850,0,0x0,8
tick,0x7ffc909efd34,138692504,0,0x0,8
tick,0x7ffc909efd34,138708165,0,0x0,8
tick,0x7ffc909efd34,138723846,0,0x0,8
tick,0x7ffc909efd34,138739791,0,0x0,8
tick,0x7ffc909efd34,138755412,0,0x0,8
tick,0x7ffc909efd34,138770801,0,0x0,8
tick,0x7ffc909efd34,138786328,0,0x0,8
tick,0x7ffc909efd34,138801844,0,0x0,8
tick,0x7ffc909efd34,138817550,0,0x0,8
tick,0x7ffc909efd34,138833005,0,0x0,8
tick,0x7ffc909efd34,138848678,0,0x0,8
tick,0x7ffc909efd34,138864310,0,0x0,8
tick,0x7ffc909efd34,138879519,0,0x0,8
tick,0x7ffc909efd34,138895212,0,0x0,8
tick,0x7ffc909efd34,138910674,0,0x0,8
tick,0x7ffc909efd34,138926745,0,0x0,8
tick,0x7ffc909efd34,138942365,0,0x0,8
tick,0x7ffc909efd34,138958316,0,0x0,8
tick,0x7ffc909efd34,138973847,0,0x0,8
tick,0x7ffc909efd34,138990154,0,0x0,8
tick,0x7ffc909efd34,139006159,0,0x0,8
tick,0x7ffc909efd34,139021630,0,0x0,8
tick,0x7ffc909efd34,139037247,0,0x0,8
tick,0x7ffc909efd34,139053415,0,0x0,8
tick,0x7ffc909efd34,139068806,0,0x0,8
tick,0x7ffc909efd34,139084948,0,0x0,8
tick,0x7ffc909efd34,139100873,0,0x0,8
tick,0x7ffc909efd34,139116104,0,0x0,8
tick,0x7ffc909efd34,139131840,0,0x0,8
tick,0x7ffc909efd34,139147188,0,0x0,8
tick,0x7ffc909efd34,139162806,0,0x0,8
tick,0x7ffc909efd34,139178499,0,0x0,8
tick,0x7ffc909efd34,139193981,0,0x0,8
tick,0x7ffc909efd34,139209108,0,0x0,8
tick,0x7ffc909efd34,139225069,0,0x0,8
tick,0x7ffc909efd34,139240081,0,0x0,8
tick,0x7ffc909efd34,139255368,0,0x0,8
tick,0x7ffc909efd34,139270647,0,0x0,8
tick,0x7ffc909efd34,139285696,0,0x0,8
tick,0x7ffc909efd34,139300969,0,0x0,8
tick,0x7ffc909efd34,139316307,0,0x0,8
tick,0x7ffc909efd34,139331538,0,0x0,8
tick,0x7ffc909efd34,139347212,0,0x0,8
tick,0x7ffc909efd34,139362741,0,0x0,8
tick,0x7ffc909efd34,139378299,0,0x0,8
tick,0x7ffc909efd34,139393373,0,0x0,8
tick,0x7ffc909efd34,139408771,0,0x0,8
tick,0x7ffc909efd34,139424265,0,0x0,8
tick,0x7ffc909efd34,139439417,0,0x0,8
tick,0x7ffc909efd34,139455053,0,0x0,8
tick,0x7ffc909efd34,139470460,0,0x0,8
tick,0x7ffc909efd34,139486042,0,0x0,8
tick,0x7ffc909efd34,139500868,0,0x0,8
tick,0x7ffc909efd34,139515923,0,0x0,8
tick,0x7ffc909efd34,139531196,0,0x0,8
tick,0x7ffc909efd34,139547865,0,0x0,8
tick,0x7ffc909efd34,139563589,0,0x0,8
tick,0x7ffc909efd34,139578841,0,0x0,8
tick,0x7ffc909efd34,139594504,0,0x0,8
tick,0x7ffc909efd34,139609592,0,0x0,8
tick,0x7ffc909efd34,139625578,0,0x0,8
tick,0x7ffc909efd34,139641616,0,0x0,8
tick,0x7ffc909efd34,139657705,0,0x0,8
tick,0x7ffc909efd34,139673750,0,0x0,8
tick,0x7ffc909efd34,139689749,0,0x0,8
tick,0x7ffc909efd34,139705922,0,0x0,8
tick,0x7ffc909efd34,139720952,0,0x0,8
tick,0x7ffc909efd34,139736572,0,0x0,8
tick,0x7ffc909efd34,139752097,0,0x0,8
tick,0x7ffc909efd34,139767776,0,0x0,8
tick,0x7ffc909efd34,139782994,0,0x0,8
tick,0x7ffc909efd34,139798349,0,0x0,8
tick,0x7ffc909efd34,139813992,0,0x0,8
tick,0x7ffc909efd34,139829353,0,0x0,8
tick,0x7ffc909efd34,139844919,0,0x0,8
tick,0x7ffc909efd34,139860425,0,0x0,8
tick,0x7ffc909efd34,139876122,0,0x0,8
tick,0x7ffc909efd34,139892447,0,0x0,8
tick,0x7ffc909efd34,139907903,0,0x0,8
tick,0x7ffc909efd34,139923799,0,0x0,8
tick,0x7ffc909efd34,139939444,0,0x0,8
tick,0x7ffc909efd34,139954989,0,0x0,8
tick,0x7ffc909efd34,139970597,0,0x0,8
tick,0x7ffc909efd34,139986034,0,0x0,8
tick,0x7ffc909efd34,140001450,0,0x0,8
tick,0x7ffc909efd34,140017578,0,0x0,8
tick,0x7ffc909efd34,140032931,0,0x0,8
tick,0x7ffc909efd34,140048295,0,0x0,8
tick,0x7ffc909efd34,140064170,0,0x0,8
tick,0x7ffc909efd34,140079637,0,0x0,8
tick,0x7ffc909efd34,140095034,0,0x0,8
tick,0x7ffc909efd34,140110960,0,0x0,8
tick,0x7ffc909efd34,140125865,0,0x0,8
tick,0x7ffc909efd34,140141550,0,0x0,8
tick,0x7ffc909efd34,140156643,0,0x0,8
tick,0x7ffc909efd34,140172380,0,0x0,8
tick,0x7ffc909efd34,140188540,0,0x0,8
tick,0x7ffc909efd34,140204064,0,0x0,8
tick,0x7ffc909efd34,140219566,0,0x0,8
tick,0x7ffc909efd34,140235173,0,0x0,8
tick,0x7ffc909efd34,140250830,0,0x0,8
tick,0x7ffc909efd34,140266289,0,0x0,8
tick,0x7ffc909efd34,140282009,0,0x0,8
tick,0x7ffc909efd34,140298017,0,0x0,8
tick,0x7ffc909efd34,140313602,0,0x0,8
tick,0x7ffc909efd34,140329101,0,0x0,8
tick,0x7ffc909efd34,140345344,0,0x0,8
tick,0x7ffc909efd34,140360832,0,0x0,8
tick,0x7ffc909efd34,140376440,0,0x0,8
tick,0x7ffc909efd34,140392415,0,0x0,8
tick,0x7ffc909efd34,140407968,0,0x0,8
tick,0x7ffc909efd34,140423617,0,0x0,8
tick,0x7ffc909efd34,140439896,0,0x0,8
tick,0x7ffc909efd34,140455692,0,0x0,8
tick,0x7ffc909efd34,140471358,0,0x0,8
tick,0x7ffc909efd34,140486549,0,0x0,8
tick,0x7ffc909efd34,140502086,0,0x0,8
tick,0x7ffc909efd34,140517460,0,0x0,8
tick,0x7ffc909efd34,140532792,0,0x0,8
tick,0x7ffc909efd34,140548333,0,0x0,8
tick,0x7ffc909efd34,140564286,0,0x0,8
tick,0x7ffc909efd34,140579501,0,0x0,8
tick,0x7ffc909efd34,140595113,0,0x0,8
tick,0x7ffc909efd34,140611387,0,0x0,8
tick,0x7ffc909efd34,140627299,0,0x0,8
tick,0x7ffc909efd34,140642511,0,0x0,8
tick,0x7ffc909efd34,140657750,0,0x0,8
tick,0x7ffc909efd34,140673014,0,0x0,8
tick,0x7ffc909efd34,140689324,0,0x0,8
tick,0x7ffc909efd34,140705060,0,0x0,8
tick,0x7ffc909efd34,140720955,0,0x0,8
tick,0x7ffc909efd34,140737164,0,0x0,8
tick,0x7ffc909efd34,140753332,0,0x0,8
tick,0x7ffc909efd34,140768414,0,0x0,8
tick,0x7ffc909efd34,140784411,0,0x0,8
tick,0x7ffc909efd34,140800751,0,0x0,8
tick,0x7ffc909efd34,140816102,0,0x0,8
tick,0x7ffc909efd34,140831841,0,0x0,8
tick,0x7ffc909efd34,140847581,0,0x0,8
tick,0x7ffc909efd34,140863349,0,0x0,8
tick,0x7ffc909efd34,140879421,0,0x0,8
tick,0x7ffc909efd34,140894746,0,0x0,8
tick,0x7ffc909efd34,140910528,0,0x0,8
tick,0x7ffc909efd34,140925701,0,0x0,8
tick,0x7ffc909efd34,140941832,0,0x0,8
tick,0x7ffc909efd34,140957697,0,0x0,8
tick,0x7ffc909efd34,140972764,0,0x0,8
tick,0x7ffc909efd34,140987936,0,0x0,8
tick,0x7ffc909efd34,141003179,0,0x0,8
tick,0x7ffc909efd34,141019513,0,0x0,8
tick,0x7ffc909efd34,141034958,0,0x0,8
tick,0x7ffc909efd34,141051132,0,0x0,8
tick,0x7ffc909efd34,141066540,0,0x0,8
tick,0x7ffc909efd34,141082569,0,0x0,8
tick,0x7ffc909efd34,141098496,0,0x0,8
tick,0x7ffc909efd34,141113474,0,0x0,8
tick,0x7ffc909efd34,141128760,0,0x0,8
tick,0x7ffc909efd34,141144386,0,0x0,8
tick,0x7ffc909efd34,141159464,0,0x0,8
tick,0x7ffc909efd34,141175381,0,0x0,8
tick,0x7ffc909efd34,141191125,0,0x0,8
tick,0x7ffc909efd34,141206466,0,0x0,8
tick,0x7ffc909efd34,141221842,0,0x0,8
tick,0x7ffc909efd34,141237073,0,0x0,8
tick,0x7ffc909efd34,141252815,0,0x0,8
tick,0x7ffc909efd34,141268262,0,0x0,8
tick,0x7ffc909efd34,141283507,0,0x0,8
tick,0x7ffc909efd34,141299092,0,0x0,8
tick,0x7ffc909efd34,141315129,0,0x0,8
tick,0x7ffc909efd34,141330886,0,0x0,8
tick,0x7ffc909efd34,141371900,0,0x0,8
tick,0x7ffc909efd34,141417560,0,0x0,8
tick,0x7ffc909efd34,141426858,0,0x0,8
tick,0x7ffc909efd34,141448654,0,0x0,8
tick,0x7ffc909efd34,141459252,0,0x0,8
tick,0x7ffc909efd34,141475048,0,0x0,8
tick,0x7ffc909efd34,141494269,0,0x0,8
tick,0x7ffc909efd34,141505810,0,0x0,8
tick,0x7ffc909efd34,141521892,0,0x0,8
tick,0x7ffc909efd34,141537851,0,0x0,8
tick,0x7ffc909efd34,141554008,0,0x0,8
tick,0x7ffc909efd34,141569993,0,0x0,8
tick,0x7ffc909efd34,141585919,0,0x0,8
tick,0x7ffc909efd34,141601238,0,0x0,8
tick,0x7ffc909efd34,141616864,0,0x0,8
tick,0x7ffc909efd34,141641255,0,0x0,8
tick,0x7ffc909efd34,141648835,0,0x0,8
tick,0x7ffc909efd34,141680973,0,0x0,8
tick,0x7ffc909efd34,141696971,0,0x0,8
tick,0x7ffc909efd34,141712586,0,0x0,8
tick,0x7ffc909efd34,141729937,0,0x0,8
tick,0x7ffc909efd34,141744481,0,0x0,8
tick,0x7ffc909efd34,141759517,0,0x0,8
tick,0x7ffc909efd34,141779109,0,0x0,8
tick,0x7ffc909efd34,141791536,0,0x0,8
tick,0x7ffc909efd34,141807776,0,0x0,8
tick,0x7ffc909efd34,141823594,0,0x0,8
tick,0x7ffc909efd34,141839462,0,0x0,8
tick,0x7ffc909efd34,141854661,0,0x0,8
tick,0x7ffc909efd34,141869964,0,0x0,8
tick,0x7ffc909efd34,141885908,0,0x0,8
tick,0x7ffc909efd34,141901204,0,0x0,8
tick,0x7ffc909efd34,141917580,0,0x0,8
tick,0x7ffc909efd34,141933613,0,0x0,8
tick,0x7ffc909efd34,141948963,0,0x0,8
tick,0x7ffc909efd34,141965500,0,0x0,8
tick,0x7ffc909efd34,141980925,0,0x0,8
tick,0x7ffc909efd34,141997167,0,0x0,8
tick,0x7ffc909efd34,142013012,0,0x0,8
tick,0x7ffc909efd34,142029248,0,0x0,8
tick,0x7ffc909efd34,142045176,0,0x0,8
tick,0x7ffc909efd34,142061252,0,0x0,8
tick,0x7ffc909efd34,142077753,0,0x0,8
tick,0x7ffc909efd34,142093024,0,0x0,8
tick,0x7ffc909efd34,142108901,0,0x0,8
tick,0x7ffc909efd34,142125403,0,0x0,8
tick,0x7ffc909efd34,142141044,0,0x0,8
tick,0x7ffc909efd34,142157262,0,0x0,8
tick,0x7ffc909efd34,142173875,0,0x0,8
tick,0x7ffc909efd34,142200237,0,0x0,8
tick,0x7ffc909efd34,142204291,0,0x0,8
tick,0x7ffc909efd34,142220303,0,0x0,8
tick,0x7ffc909efd34,142236071,0,0x0,8
tick,0x7ffc909efd34,142252190,0,0x0,8
tick,0x7ffc909efd34,142267034,0,0x0,8
tick,0x7ffc909efd34,142282001,0,0x0,8
tick,0x7ffc909efd34,142298136,0,0x0,8
tick,0x7ffc909efd34,142313994,0,0x0,8
tick,0x7ffc909efd34,142330096,0,0x0,8
tick,0x7ffc909efd34,142346134,0,0x0,8
tick,0x7ffc909efd34,142361252,0,0x0,8
tick,0x7ffc909efd34,142376470,0,0x0,8
tick,0x7ffc909efd34,142391852,0,0x0,8
tick,0x7ffc909efd34,142407147,0,0x0,8
tick,0x7ffc909efd34,142422728,0,0x0,8
tick,0x7ffc909efd34,142438610,0,0x0,8
tick,0x7ffc909efd34,142454253,0,0x0,8
tick,0x7ffc909efd34,142470153,0,0x0,8
tick,0x7ffc909efd34,142485442,0,0x0,8
tick,0x7ffc909efd34,142500875,0,0x0,8
tick,0x7ffc909efd34,142516058,0,0x0,8
tick,0x7ffc909efd34,142531413,0,0x0,8
tick,0x7ffc909efd34,142546930,0,0x0,8
tick,0x7ffc909efd34,142562377,0,0x0,8
tick,0x7ffc909efd34,142578516,0,0x0,8
tick,0x7ffc909efd34,142594052,0,0x0,8
tick,0x7ffc909efd34,142609287,0,0x0,8
tick,0x7ffc909efd34,142625135,0,0x0,8
tick,0x7ffc909efd34,142641299,0,0x0,8
tick,0x7ffc909efd34,142657839,0,0x0,8
tick,0x7ffc909efd34,142672638,0,0x0,8
tick,0x7ffc909efd34,142688239,0,0x0,8
tick,0x7ffc909efd34,142703923,0,0x0,8
tick,0x7ffc909efd34,142719912,0,0x0,8
tick,0x7ffc909efd34,142735980,0,0x0,8
tick,0x7ffc909efd34,142751372,0,0x0,8
tick,0x7ffc909efd34,142767108,0,0x0,8
tick,0x7ffc909efd34,142783208,0,0x0,8
tick,0x7ffc909efd34,142799070,0,0x0,8
tick,0x7ffc909efd34,142814730,0,0x0,8
tick,0x7ffc909efd34,142830336,0,0x0,8
tick,0x7ffc909efd34,142845252,0,0x0,8
tick,0x7ffc909efd34,142860662,0,0x0,8
tick,0x7ffc909efd34,142876056,0,0x0,8
tick,0x7ffc909efd34,142891633,0,0x0,8
tick,0x7ffc909efd34,142906803,0,0x0,8
tick,0x7ffc909efd34,142922110,0,0x0,8
tick,0x7ffc909efd34,142938110,0,0x0,8
tick,0x7ffc909efd34,142953843,0,0x0,8
tick,0x7ffc909efd34,142968784,0,0x0,8
tick,0x7ffc909efd34,142984036,0,0x0,8
tick,0x7ffc909efd34,143000113,0,0x0,8
tick,0x7ffc909efd34,143015284,0,0x0,8
tick,0x7ffc909efd34,143030934,0,0x0,8
tick,0x7ffc909efd34,143046931,0,0x0,8
tick,0x7ffc909efd34,143062098,0,0x0,8
tick,0x7ffc909efd34,143077249,0,0x0,8
tick,0x7ffc909efd34,143092741,0,0x0,8
tick,0x7ffc909efd34,143108615,0,0x0,8
tick,0x7ffc909efd34,143124004,0,0x0,8
tick,0x7ffc909efd34,143139894,0,0x0,8
tick,0x7ffc909efd34,143155597,0,0x0,8
tick,0x7ffc909efd34,143170887,0,0x0,8
tick,0x7ffc909efd34,143186268,0,0x0,8
tick,0x7ffc909efd34,143201499,0,0x0,8
tick,0x7ffc909efd34,143217179,0,0x0,8
tick,0x7ffc909efd34,143232432,0,0x0,8
tick,0x7ffc909efd34,143247729,0,0x0,8
tick,0x7ffc909efd34,143263979,0,0x0,8
tick,0x7ffc909efd34,143279523,0,0x0,8
tick,0x7ffc909efd34,143295133,0,0x0,8
tick,0x7ffc909efd34,143310879,0,0x0,8
tick,0x7ffc909efd34,143326783,0,0x0,8
tick,0x7ffc909efd34,143342809,0,0x0,8
tick,0x7ffc909efd34,143358839,0,0x0,8
tick,0x7ffc909efd34,143374923,0,0x0,8
tick,0x7ffc909efd34,143390781,0,0x0,8
tick,0x7ffc909efd34,143406743,0,0x0,8
tick,0x7ffc909efd34,143422766,0,0x0,8
tick,0x7ffc909efd34,143437872,0,0x0,8
tick,0x7ffc909efd34,143452909,0,0x0,8
tick,0x7ffc909efd34,143468872,0,0x0,8
tick,0x7ffc909efd34,143485647,0,0x0,8
tick,0x7ffc909efd34,143500691,0,0x0,8
tick,0x7ffc909efd34,143515827,0,0x0,8
tick,0x7ffc909efd34,143531852,0,0x0,8
tick,0x7ffc909efd34,143549585,0,0x0,8
tick,0x7ffc909efd34,143564564,0,0x0,8
tick,0x7ffc909efd34,143580560,0,0x0,8
tick,0x7ffc909efd34,143595967,0,0x0,8
tick,0x7ffc909efd34,143611779,0,0x0,8
tick,0x7ffc909efd34,143627702,0,0x0,8
tick,0x7ffc909efd34,143643724,0,0x0,8
tick,0x7ffc909efd34,143679343,0,0x0,8
tick,0x7ffc909efd34,143696825,0,0x0,8
tick,0x7ffc909efd34,143710178,0,0x0,8
tick,0x7ffc909efd34,143725579,0,0x0,8
tick,0x7ffc909efd34,143738488,0,0x0,8
tick,0x7ffc909efd34,143762374,0,0x0,8
tick,0x7ffc909efd34,143785040,0,0x0,8
tick,0x7ffc909efd34,143827138,0,0x0,8
tick,0x7ffc909efd34,143837589,0,0x0,8
tick,0x7ffc909efd34,143852983,0,0x0,8
tick,0x7ffc909efd34,143868791,0,0x0,8
tick,0x7ffc909efd34,143893463,0,0x0,8
tick,0x7ffc909efd34,143906153,0,0x0,8
tick,0x7ffc909efd34,143923563,0,0x0,8
tick,0x7ffc909efd34,143931548,0,0x0,8
tick,0x7ffc909efd34,143945380,0,0x0,8
tick,0x7ffc909efd34,143966665,0,0x0,8
tick,0x7ffc909efd34,143977187,0,0x0,8
tick,0x7ffc909efd34,143991749,0,0x0,8
tick,0x7ffc909efd34,144034997,0,0x0,8
tick,0x7ffc909efd34,144097675,0,0x0,8
tick,0x7ffc909efd34,144122393,0,0x0,8
tick,0x7ffc909efd34,144169320,0,0x0,8
tick,0x7ffc909efd34,144186095,0,0x0,8
tick,0x7ffc909efd34,144212016,0,0x0,8
tick,0x7ffc909efd34,144240685,0,0x0,8
tick,0x7ffc909efd34,144260617,0,0x0,8
tick,0x7ffc909efd34,144287940,0,0x0,8
tick,0x7ffc909efd34,144294204,0,0x0,8
tick,0x7ffc909efd34,144308021,0,0x0,8
tick,0x7ffc909efd34,144339674,0,0x0,8
tick,0x7ffc909efd34,144357282,0,0x0,8
tick,0x7ffc909efd34,144374692,0,0x0,8
tick,0x7ffc909efd34,144384866,0,0x0,8
tick,0x7ffc909efd34,144400619,0,0x0,8
tick,0x7ffc909efd34,144416881,0,0x0,8
tick,0x7ffc909efd34,144433101,0,0x0,8
tick,0x7ffc909efd34,144447943,0,0x0,8
tick,0x7ffc909efd34,144461833,0,0x0,8
tick,0x7ffc909efd34,144478378,0,0x0,8
tick,0x7ffc909efd34,144493328,0,0x0,8
tick,0x7ffc909efd34,144508440,0,0x0,8
tick,0x7ffc909efd34,144525509,0,0x0,8
tick,0x7ffc909efd34,144540123,0,0x0,8
tick,0x7ffc909efd34,144556392,0,0x0,8
tick,0x7ffc909efd34,144571796,0,0x0,8
tick,0x7ffc909efd34,144587950,0,0x0,8
tick,0x7ffc909efd34,144602776,0,0x0,8
tick,0x7ffc909efd34,144618378,0,0x0,8
tick,0x7ffc909efd34,144633766,0,0x0,8
tick,0x7ffc909efd34,144649737,0,0x0,8
tick,0x7ffc909efd34,144664761,0,0x0,8
tick,0x7ffc909efd34,144680241,0,0x0,8
tick,0x7ffc909efd34,144695982,0,0x0,8
tick,0x7ffc909efd34,144711439,0,0x0,8
tick,0x7ffc909efd34,144726756,0,0x0,8
tick,0x7ffc909efd34,144741866,0,0x0,8
tick,0x7ffc909efd34,144757863,0,0x0,8
tick,0x7ffc909efd34,144774173,0,0x0,8
tick,0x7ffc909efd34,144789830,0,0x0,8
tick,0x7ffc909efd34,144805255,0,0x0,8
tick,0x7ffc909efd34,144820874,0,0x0,8
tick,0x7ffc909efd34,144836787,0,0x0,8
tick,0x7ffc909efd34,144851878,0,0x0,8
tick,0x7ffc909efd34,144868039,0,0x0,8
tick,0x7ffc909efd34,144883531,0,0x0,8
tick,0x7ffc909efd34,144899802,0,0x0,8
tick,0x7ffc909efd34,144915612,0,0x0,8
tick,0x7ffc909efd34,144931684,0,0x0,8
tick,0x7ffc909efd34,144947396,0,0x0,8
tick,0x7ffc909efd34,144962304,0,0x0,8
tick,0x7ffc909efd34,144978643,0,0x0,8
tick,0x7ffc909efd34,144993845,0,0x0,8
tick,0x7ffc909efd34,145009323,0,0x0,8
tick,0x7ffc909efd34,145025401,0,0x0,8
tick,0x7ffc909efd34,145041419,0,0x0,8
tick,0x7ffc909efd34,145056462,0,0x0,8
tick,0x7ffc909efd34,145071970,0,0x0,8
tick,0x7ffc909efd34,145087734,0,0x0,8
tick,0x7ffc909efd34,145103450,0,0x0,8
tick,0x7ffc909efd34,145119532,0,0x0,8
tick,0x7ffc909efd34,145135269,0,0x0,8
tick,0x7ffc909efd34,145151548,0,0x0,8
tick,0x7ffc909efd34,145166823,0,0x0,8
tick,0x7ffc909efd34,145182887,0,0x0,8
tick,0x7ffc909efd34,145198802,0,0x0,8
tick,0x7ffc909efd34,145214351,0,0x0,8
tick,0x7ffc909efd34,145230558,0,0x0,8
tick,0x7ffc909efd34,145245493,0,0x0,8
tick,0x7ffc909efd34,145260386,0,0x0,8
tick,0x7ffc909efd34,145275974,0,0x0,8
tick,0x7ffc909efd34,145291389,0,0x0,8
tick,0x7ffc909efd34,145307749,0,0x0,8
tick,0x7ffc909efd34,145323792,0,0x0,8
tick,0x7ffc909efd34,145339227,0,0x0,8
tick,0x7ffc909efd34,145355246,0,0x0,8
tick,0x7ffc909efd34,145370576,0,0x0,8
tick,0x7ffc909efd34,145386934,0,0x0,8
tick,0x7ffc909efd34,145402018,0,0x0,8
tick,0x7ffc909efd34,145417427,0,0x0,8
tick,0x7ffc909efd34,145433537,0,0x0,8
tick,0x7ffc909efd34,145449234,0,0x0,8
tick,0x7ffc909efd34,145465225,0,0x0,8
tick,0x7ffc909efd34,145481334,0,0x0,8
tick,0x7ffc909efd34,145497075,0,0x0,8
tick,0x7ffc909efd34,145511888,0,0x0,8
tick,0x7ffc909efd34,145527893,0,0x0,8
tick,0x7ffc909efd34,145543453,0,0x0,8
tick,0x7ffc909efd34,145558981,0,0x0,8
tick,0x7ffc909efd34,145574761,0,0x0,8
tick,0x7ffc909efd34,145589676,0,0x0,8
tick,0x7ffc909efd34,145605190,0,0x0,8
tick,0x7ffc909efd34,145621191,0,0x0,8
tick,0x7ffc909efd34,145637034,0,0x0,8
tick,0x7ffc909efd34,145652478,0,0x0,8
tick,0x7ffc909efd34,145668152,0,0x0,8
tick,0x7ffc909efd34,145684093,0,0x0,8
tick,0x7ffc909efd34,145700252,0,0x0,8
tick,0x7ffc909efd34,145715856,0,0x0,8
tick,0x7ffc909efd34,145731153,0,0x0,8
tick,0x7ffc909efd34,145747068,0,0x0,8
tick,0x7ffc909efd34,145763034,0,0x0,8
tick,0x7ffc909efd34,145778646,0,0x0,8
tick,0x7ffc909efd34,145794193,0,0x0,8
tick,0x7ffc909efd34,145809716,0,0x0,8
tick,0x7ffc909efd34,145825403,0,0x0,8
tick,0x7ffc909efd34,145840861,0,0x0,8
tick,0x7ffc909efd34,145856541,0,0x0,8
tick,0x7ffc909efd34,145872511,0,0x0,8
tick,0x7ffc909efd34,145887993,0,0x0,8
tick,0x7ffc909efd34,145903735,0,0x0,8
tick,0x7ffc909efd34,145919046,0,0x0,8
tick,0x7ffc909efd34,145934738,0,0x0,8
tick,0x7ffc909efd34,145950016,0,0x0,8
tick,0x7ffc909efd34,145966136,0,0x0,8
tick,0x7ffc909efd34,145981414,0,0x0,8
tick,0x7ffc909efd34,145996686,0,0x0,8
tick,0x7ffc909efd34,146011977,0,0x0,8
tick,0x7ffc909efd34,146027309,0,0x0,8
tick,0x7ffc909efd34,146043137,0,0x0,8
tick,0x7ffc909efd34,146058058,0,0x0,8
tick,0x7ffc909efd34,146073822,0,0x0,8
tick,0x7ffc909efd34,146090312,0,0x0,8
tick,0x7ffc909efd34,146106251,0,0x0,8
tick,0x7ffc909efd34,146122280,0,0x0,8
tick,0x7ffc909efd34,146137778,0,0x0,8
tick,0x7ffc909efd34,146153684,0,0x0,8
tick,0x7ffc909efd34,146168691,0,0x0,8
tick,0x7ffc909efd34,146184267,0,0x0,8
tick,0x7ffc909efd34,146199567,0,0x0,8
tick,0x7ffc909efd34,146215052,0,0x0,8
tick,0x7ffc909efd34,146230536,0,0x0,8
tick,0x7ffc909efd34,146246341,0,0x0,8
tick,0x7ffc909efd34,146261905,0,0x0,8
tick,0x7ffc909efd34,146277312,0,0x0,8
tick,0x7ffc909efd34,146292633,0,0x0,8
tick,0x7ffc909efd34,146308480,0,0x0,8
tick,0x7ffc909efd34,146324324,0,0x0,8
tick,0x7ffc909efd34,146339862,0,0x0,8
tick,0x7ffc909efd34,146355964,0,0x0,8
tick,0x7ffc909efd34,146371883,0,0x0,8
tick,0x7ffc909efd34,146387413,0,0x0,8
tick,0x7ffc909efd34,146403148,0,0x0,8
tick,0x7ffc909efd34,146419154,0,0x0,8
tick,0x7ffc909efd34,146434585,0,0x0,8
tick,0x7ffc909efd34,146449567,0,0x0,8
tick,0x7ffc909efd34,146464786,0,0x0,8
tick,0x7ffc909efd34,146480900,0,0x0,8
tick,0x7ffc909efd34,146496218,0,0x0,8
tick,0x7ffc909efd34,146511729,0,0x0,8
tick,0x7ffc909efd34,146527600,0,0x0,8
tick,0x7ffc909efd34,146543142,0,0x0,8
tick,0x7ffc909efd34,146559011,0,0x0,8
tick,0x7ffc909efd34,146574399,0,0x0,8
tick,0x7ffc909efd34,146590564,0,0x0,8
tick,0x7ffc909efd34,146606296,0,0x0,8
tick,0x7ffc909efd34,146622004,0,0x0,8
tick,0x7ffc909efd34,146637465,0,0x0,8
tick,0x7ffc909efd34,146653019,0,0x0,8
tick,0x7ffc909efd34,146669472,0,0x0,8
tick,0x7ffc909efd34,146685009,0,0x0,8
tick,0x7ffc909efd34,146701333,0,0x0,8
tick,0x7ffc909efd34,146717115,0,0x0,8
tick,0x7ffc909efd34,146732443,0,0x0,8
tick,0x7ffc909efd34,146748443,0,0x0,8
tick,0x7ffc909efd34,146764096,0,0x0,8
tick,0x7ffc909efd34,146779629,0,0x0,8
tick,0x7ffc909efd34,146794940,0,0x0,8
tick,0x7ffc909efd34,146810460,0,0x0,8
tick,0x7ffc909efd34,146825479,0,0x0,8
tick,0x7ffc909efd34,146841068,0,0x0,8
tick,0x7ffc909efd34,146856903,0,0x0,8
tick,0x7ffc909efd34,146872457,0,0x0,8
tick,0x7ffc909efd34,146888551,0,0x0,8
tick,0x7ffc909efd34,146904174,0,0x0,8
tick,0x7ffc909efd34,146920220,0,0x0,8
tick,0x7ffc909efd34,146935543,0,0x0,8
tick,0x7ffc909efd34,146950946,0,0x0,8
tick,0x7ffc909efd34,146966389,0,0x0,8
tick,0x7ffc909efd34,146982714,0,0x0,8
tick,0x7ffc909efd34,146997977,0,0x0,8
tick,0x7ffc909efd34,147013974,0,0x0,8
tick,0x7ffc909efd34,147029520,0,0x0,8
tick,0x7ffc909efd34,147044751,0,0x0,8
tick,0x7ffc909efd34,147060418,0,0x0,8
tick,0x7ffc909efd34,147075919,0,0x0,8
tick,0x7ffc909efd34,147091528,0,0x0,8
tick,0x7ffc909efd34,147107137,0,0x0,8
tick,0x7ffc909efd34,147122618,0,0x0,8
tick,0x7ffc909efd34,147137864,0,0x0,8
tick,0x7ffc909efd34,147153510,0,0x0,8
tick,0x7ffc909efd34,147168925,0,0x0,8
tick,0x7ffc909efd34,147184724,0,0x0,8
tick,0x7ffc909efd34,147200322,0,0x0,8
tick,0x7ffc909efd34,147216062,0,0x0,8
tick,0x7ffc909efd34,147231434,0,0x0,8
tick,0x7ffc909efd34,147247027,0,0x0,8
tick,0x7ffc909efd34,147262582,0,0x0,8
tick,0x7ffc909efd34,147278225,0,0x0,8
tick,0x7ffc909efd34,147293933,0,0x0,8
tick,0x7ffc909efd34,147309300,0,0x0,8
tick,0x7ffc909efd34,147324743,0,0x0,8
tick,0x7ffc909efd34,147341593,0,0x0,8
tick,0x7ffc909efd34,147356623,0,0x0,8
tick,0x7ffc909efd34,147372448,0,0x0,8
tick,0x7ffc909efd34,147387965,0,0x0,8
tick,0x7ffc909efd34,147403556,0,0x0,8
tick,0x7ffc909efd34,147419828,0,0x0,8
tick,0x7ffc909efd34,147435233,0,0x0,8
tick,0x7ffc909efd34,147450557,0,0x0,8
tick,0x7ffc909efd34,147466340,0,0x0,8
tick,0x7ffc909efd34,147481335,0,0x0,8
tick,0x7ffc909efd34,147496848,0,0x0,8
tick,0x7ffc909efd34,147511920,0,0x0,8
tick,0x7ffc909efd34,147527481,0,0x0,8
tick,0x7ffc909efd34,147543175,0,0x0,8
tick,0x7ffc909efd34,147558764,0,0x0,8
tick,0x7ffc909efd34,147574311,0,0x0,8
tick,0x7ffc909efd34,147589621,0,0x0,8
tick,0x7ffc909efd34,147604975,0,0x0,8
tick,0x7ffc909efd34,147620624,0,0x0,8
tick,0x7ffc909efd34,147636149,0,0x0,8
tick,0x7ffc909efd34,147651875,0,0x0,8
tick,0x7ffc909efd34,147667701,0,0x0,8
tick,0x7ffc909efd34,147683197,0,0x0,8
tick,0x7ffc909efd34,147698678,0,0x0,8
tick,0x7ffc909efd34,147714082,0,0x0,8
tick,0x7ffc909efd34,147729568,0,0x0,8
tick,0x7ffc909efd34,147744624,0,0x0,8
tick,0x7ffc909efd34,147760310,0,0x0,8
tick,0x7ffc909efd34,147775987,0,0x0,8
tick,0x7ffc909efd34,147792040,0,0x0,8
tick,0x7ffc909efd34,147807663,0,0x0,8
tick,0x7ffc909efd34,147822903,0,0x0,8
tick,0x7ffc909efd34,147838304,0,0x0,8
tick,0x7ffc909efd34,147853777,0,0x0,8
tick,0x7ffc909efd34,147869438,0,0x0,8
tick,0x7ffc909efd34,147885059,0,0x0,8
tick,0x7ffc909efd34,147900519,0,0x0,8
tick,0x7ffc909efd34,147915861,0,0x0,8
tick,0x7ffc909efd34,147930963,0,0x0,8
tick,0x7ffc909efd34,147946329,0,0x0,8
tick,0x7ffc909efd34,147961505,0,0x0,8
tick,0x7ffc909efd34,147977033,0,0x0,8
tick,0x7ffc909efd34,147992635,0,0x0,8
tick,0x7ffc909efd34,148008071,0,0x0,8
tick,0x7ffc909efd34,148023509,0,0x0,8
tick,0x7ffc909efd34,148039750,0,0x0,8
tick,0x7ffc909efd34,148055179,0,0x0,8
tick,0x7ffc909efd34,148071238,0,0x0,8
tick,0x7ffc909efd34,148086708,0,0x0,8
tick,0x7ffc909efd34,148102220,0,0x0,8
tick,0x7ffc909efd34,148117880,0,0x0,8
tick,0x7ffc909efd34,148133643,0,0x0,8
tick,0x7ffc909efd34,148149379,0,0x0,8
tick,0x7ffc909efd34,148164762,0,0x0,8
tick,0x7ffc909efd34,148180292,0,0x0,8
tick,0x7ffc909efd34,148196039,0,0x0,8
tick,0x7ffc909efd34,148211308,0,0x0,8
tick,0x7ffc909efd34,148226887,0,0x0,8
tick,0x7ffc909efd34,148242381,0,0x0,8
tick,0x7ffc909efd34,148258354,0,0x0,8
tick,0x7ffc909efd34,148274099,0,0x0,8
tick,0x7ffc909efd34,148289348,0,0x0,8
tick,0x7ffc909efd34,148304791,0,0x0,8
tick,0x7ffc909efd34,148320916,0,0x0,8
tick,0x7ffc909efd34,148336244,0,0x0,8
tick,0x7ffc909efd34,148351878,0,0x0,8
tick,0x7ffc909efd34,148367250,0,0x0,8
tick,0x7ffc909efd34,148382836,0,0x0,8
tick,0x7ffc909efd34,148397532,0,0x0,8
tick,0x7ffc909efd34,148412966,0,0x0,8
tick,0x7ffc909efd34,148428565,0,0x0,8
tick,0x7ffc909efd34,148444242,0,0x0,8
tick,0x7ffc909efd34,148459361,0,0x0,8
tick,0x7ffc909efd34,148475333,0,0x0,8
tick,0x7ffc909efd34,148491342,0,0x0,8
tick,0x7ffc909efd34,148507441,0,0x0,8
tick,0x7ffc909efd34,148522684,0,0x0,8
tick,0x7ffc909efd34,148538744,0,0x0,8
tick,0x7ffc909efd34,148554604,0,0x0,8
tick,0x7ffc909efd34,148569714,0,0x0,8
tick,0x7ffc909efd34,148585130,0,0x0,8
tick,0x7ffc909efd34,148600439,0,0x0,8
tick,0x7ffc909efd34,148615893,0,0x0,8
tick,0x7ffc909efd34,148631622,0,0x0,8
tick,0x7ffc909efd34,148647344,0,0x0,8
tick,0x7ffc909efd34,148662996,0,0x0,8
tick,0x7ffc909efd34,148678904,0,0x0,8
tick,0x7ffc909efd34,148694146,0,0x0,8
tick,0x7ffc909efd34,148709975,0,0x0,8
tick,0x7ffc909efd34,148725444,0,0x0,8
tick,0x7ffc909efd34,148741121,0,0x0,8
tick,0x7ffc909efd34,148756724,0,0x0,8
tick,0x7ffc909efd34,148772791,0,0x0,8
tick,0x7ffc909efd34,148788825,0,0x0,8
tick,0x7ffc909efd34,148804586,0,0x0,8
tick,0x7ffc909efd34,148820246,0,0x0,8
tick,0x7ffc909efd34,148835562,0,0x0,8
tick,0x7ffc909efd34,148851000,0,0x0,8
tick,0x7ffc909efd34,148866625,0,0x0,8
tick,0x7ffc909efd34,148883155,0,0x0,8
tick,0x7ffc909efd34,148897885,0,0x0,8
tick,0x7ffc909efd34,148913953,0,0x0,8
tick,0x7ffc909efd34,148929333,0,0x0,8
tick,0x7ffc909efd34,148944940,0,0x0,8
tick,0x7ffc909efd34,148960983,0,0x0,8
tick,0x7ffc909efd34,148976657,0,0x0,8
tick,0x7ffc909efd34,148992114,0,0x0,8
tick,0x7ffc909efd34,149007577,0,0x0,8
tick,0x7ffc909efd34,149022839,0,0x0,8
tick,0x7ffc909efd34,149038416,0,0x0,8
tick,0x7ffc909efd34,149053937,0,0x0,8
tick,0x7ffc909efd34,149069684,0,0x0,8
tick,0x7ffc909efd34,149085577,0,0x0,8
tick,0x7ffc909efd34,149100909,0,0x0,8
tick,0x7ffc909efd34,149116415,0,0x0,8
tick,0x7ffc909efd34,149131769,0,0x0,8
tick,0x7ffc909efd34,149147435,0,0x0,8
tick,0x7ffc909efd34,149163412,0,0x0,8
tick,0x7ffc909efd34,149179155,0,0x0,8
tick,0x7ffc909efd34,149194465,0,0x0,8
tick,0x7ffc909efd34,149210444,0,0x0,8
tick,0x7ffc909efd34,149225803,0,0x0,8
tick,0x7ffc909efd34,149241285,0,0x0,8
tick,0x7ffc909efd34,149256869,0,0x0,8
tick,0x7ffc909efd34,149272396,0,0x0,8
tick,0x7ffc909efd34,149287815,0,0x0,8
tick,0x7ffc909efd34,149303544,0,0x0,8
tick,0x7ffc909efd34,149319538,0,0x0,8
tick,0x7ffc909efd34,149335026,0,0x0,8
tick,0x7ffc909efd34,149350924,0,0x0,8
tick,0x7ffc909efd34,149366472,0,0x0,8
tick,0x7ffc909efd34,149381878,0,0x0,8
tick,0x7ffc909efd34,149398275,0,0x0,8
tick,0x7ffc909efd34,149413792,0,0x0,8
tick,0x7ffc909efd34,149429269,0,0x0,8
tick,0x7ffc909efd34,149444836,0,0x0,8
tick,0x7ffc909efd34,149460421,0,0x0,8
tick,0x7ffc909efd34,149476496,0,0x0,8
tick,0x7ffc909efd34,149491951,0,0x0,8
tick,0x7ffc909efd34,149507274,0,0x0,8
tick,0x7ffc909efd34,149522924,0,0x0,8
tick,0x7ffc909efd34,149538349,0,0x0,8
tick,0x7ffc909efd34,149553974,0,0x0,8
tick,0x7ffc909efd34,149569188,0,0x0,8
tick,0x7ffc909efd34,149584828,0,0x0,8
tick,0x7ffc909efd34,149600271,0,0x0,8
tick,0x7ffc909efd34,149615728,0,0x0,8
tick,0x7ffc909efd34,149631016,0,0x0,8
tick,0x7ffc909efd34,149646646,0,0x0,8
tick,0x7ffc909efd34,149662375,0,0x0,8
tick,0x7ffc909efd34,149678439,0,0x0,8
tick,0x7ffc909efd34,149693710,0,0x0,8
tick,0x7ffc909efd34,149709248,0,0x0,8
tick,0x7ffc909efd34,149724815,0,0x0,8
tick,0x7ffc909efd34,149740010,0,0x0,8
tick,0x7ffc909efd34,149755697,0,0x0,8
tick,0x7ffc909efd34,149770963,0,0x0,8
tick,0x7ffc909efd34,149786797,0,0x0,8
tick,0x7ffc909efd34,149802365,0,0x0,8
tick,0x7ffc909efd34,149818319,0,0x0,8
tick,0x7ffc909efd34,149833509,0,0x0,8
tick,0x7ffc909efd34,149849216,0,0x0,8
tick,0x7ffc909efd34,149864810,0,0x0,8
tick,0x7ffc909efd34,149880158,0,0x0,8
tick,0x7ffc909efd34,149895455,0,0x0,8
tick,0x7ffc909efd34,149910741,0,0x0,8
tick,0x7ffc909efd34,149926257,0,0x0,8
tick,0x7ffc909efd34,149941733,0,0x0,8
tick,0x7ffc909efd34,149957037,0,0x0,8
tick,0x7ffc909efd34,149972632,0,0x0,8
tick,0x7ffc909efd34,149987895,0,0x0,8
tick,0x7ffc909efd34,150003483,0,0x0,8
tick,0x7ffc909efd34,150019568,0,0x0,8
tick,0x7ffc909efd34,150035238,0,0x0,8
tick,0x7ffc909efd34,150050612,0,0x0,8
tick,0x7ffc909efd34,150066419,0,0x0,8
tick,0x7ffc909efd34,150082289,0,0x0,8
tick,0x7ffc909efd34,150097762,0,0x0,8
tick,0x7ffc909efd34,150113560,0,0x0,8
tick,0x7ffc909efd34,150128907,0,0x0,8
tick,0x7ffc909efd34,150144126,0,0x0,8
tick,0x7ffc909efd34,150159754,0,0x0,8
tick,0x7ffc909efd34,150175291,0,0x0,8
tick,0x7ffc909efd34,150190849,0,0x0,8
tick,0x7ffc909efd34,150206437,0,0x0,8
tick,0x7ffc909efd34,150221980,0,0x0,8
tick,0x7ffc909efd34,150237524,0,0x0,8
tick,0x7ffc909efd34,150253014,0,0x0,8
tick,0x7ffc909efd34,150268522,0,0x0,8
tick,0x7ffc909efd34,150284016,0,0x0,8
tick,0x7ffc909efd34,150299454,0,0x0,8
tick,0x7ffc909efd34,150315414,0,0x0,8
tick,0x7ffc909efd34,150331454,0,0x0,8
tick,0x7ffc909efd34,150346975,0,0x0,8
tick,0x7ffc909efd34,150362924,0,0x0,8
tick,0x7ffc909efd34,150378361,0,0x0,8
tick,0x7ffc909efd34,150394295,0,0x0,8
tick,0x7ffc909efd34,150409368,0,0x0,8
tick,0x7ffc909efd34,150425287,0,0x0,8
tick,0x7ffc909efd34,150440248,0,0x0,8
tick,0x7ffc909efd34,150456016,0,0x0,8
tick,0x7ffc909efd34,150471260,0,0x0,8
tick,0x7ffc909efd34,150486828,0,0x0,8
tick,0x7ffc909efd34,150502352,0,0x0,8
tick,0x7ffc909efd34,150518452,0,0x0,8
tick,0x7ffc909efd34,150533713,0,0x0,8
tick,0x7ffc909efd34,150549673,0,0x0,8
tick,0x7ffc909efd34,150565432,0,0x0,8
tick,0x7ffc909efd34,150581047,0,0x0,8
tick,0x7ffc909efd34,150596673,0,0x0,8
tick,0x7ffc909efd34,150612051,0,0x0,8
tick,0x7ffc909efd34,150628171,0,0x0,8
tick,0x7ffc909efd34,150643967,0,0x0,8
tick,0x7ffc909efd34,150659011,0,0x0,8
tick,0x7ffc909efd34,150674904,0,0x0,8
tick,0x7ffc909efd34,150691242,0,0x0,8
tick,0x7ffc909efd34,150706979,0,0x0,8
tick,0x7ffc909efd34,150722448,0,0x0,8
tick,0x7ffc909efd34,150737810,0,0x0,8
tick,0x7ffc909efd34,150753483,0,0x0,8
tick,0x7ffc909efd34,150769786,0,0x0,8
tick,0x7ffc909efd34,150785913,0,0x0,8
tick,0x7ffc909efd34,150800784,0,0x0,8
tick,0x7ffc909efd34,150816216,0,0x0,8
tick,0x7ffc909efd34,150831819,0,0x0,8
tick,0x7ffc909efd34,150847337,0,0x0,8
tick,0x7ffc909efd34,150863042,0,0x0,8
tick,0x7ffc909efd34,150878747,0,0x0,8
tick,0x7ffc909efd34,150894371,0,0x0,8
tick,0x7ffc909efd34,150910109,0,0x0,8
tick,0x7ffc909efd34,150925961,0,0x0,8
tick,0x7ffc909efd34,150941035,0,0x0,8
tick,0x7ffc909efd34,150956774,0,0x0,8
tick,0x7ffc909efd34,150972299,0,0x0,8
tick,0x7ffc909efd34,150988012,0,0x0,8
tick,0x7ffc909efd34,151003506,0,0x0,8
tick,0x7ffc909efd34,151019806,0,0x0,8
tick,0x7ffc909efd34,151035901,0,0x0,8
tick,0x7ffc909efd34,151051233,0,0x0,8
tick,0x7ffc909efd34,151067479,0,0x0,8
tick,0x7ffc909efd34,151082569,0,0x0,8
tick,0x7ffc909efd34,151097912,0,0x0,8
tick,0x7ffc909efd34,151114035,0,0x0,8
tick,0x7ffc909efd34,151129537,0,0x0,8
tick,0x7ffc909efd34,151145365,0,0x0,8
tick,0x7ffc909efd34,151160684,0,0x0,8
tick,0x7ffc909efd34,151176294,0,0x0,8
tick,0x7ffc909efd34,151191869,0,0x0,8
tick,0x7ffc909efd34,151207930,0,0x0,8
tick,0x7ffc909efd34,151223064,0,0x0,8
tick,0x7ffc909efd34,151238502,0,0x0,8
tick,0x7ffc909efd34,151253786,0,0x0,8
tick,0x7ffc909efd34,151269877,0,0x0,8
tick,0x7ffc909efd34,151285533,0,0x0,8
tick,0x7ffc909efd34,151300702,0,0x0,8
tick,0x7ffc909efd34,151315901,0,0x0,8
tick,0x7ffc909efd34,151331175,0,0x0,8
tick,0x7ffc909efd34,151347140,0,0x0,8
tick,0x7ffc909efd34,151362341,0,0x0,8
tick,0x7ffc909efd34,151378610,0,0x0,8
tick,0x7ffc909efd34,151394227,0,0x0,8
tick,0x7ffc909efd34,151409631,0,0x0,8
tick,0x7ffc909efd34,151425426,0,0x0,8
tick,0x7ffc909efd34,151440967,0,0x0,8
tick,0x7ffc909efd34,151456110,0,0x0,8
tick,0x7ffc909efd34,151471503,0,0x0,8
tick,0x7ffc909efd34,151487373,0,0x0,8
tick,0x7ffc909efd34,151502820,0,0x0,8
tick,0x7ffc909efd34,151517940,0,0x0,8
tick,0x7ffc909efd34,151533356,0,0x0,8
tick,0x7ffc909efd34,151549105,0,0x0,8
tick,0x7ffc909efd34,151564223,0,0x0,8
tick,0x7ffc909efd34,151579505,0,0x0,8
tick,0x7ffc909efd34,151595576,0,0x0,8
tick,0x7ffc909efd34,151611396,0,0x0,8
tick,0x7ffc909efd34,151626597,0,0x0,8
tick,0x7ffc909efd34,151642122,0,0x0,8
tick,0x7ffc909efd34,151658117,0,0x0,8
tick,0x7ffc909efd34,151673495,0,0x0,8
tick,0x7ffc909efd34,151689446,0,0x0,8
tick,0x7ffc909efd34,151705062,0,0x0,8
tick,0x7ffc909efd34,151721168,0,0x0,8
tick,0x7ffc909efd34,151736196,0,0x0,8
tick,0x7ffc909efd34,151751528,0,0x0,8
tick,0x7ffc909efd34,151767673,0,0x0,8
tick,0x7ffc909efd34,151783601,0,0x0,8
tick,0x7ffc909efd34,151799863,0,0x0,8
tick,0x7ffc909efd34,151815342,0,0x0,8
tick,0x7ffc909efd34,151830582,0,0x0,8
tick,0x7ffc909efd34,151845770,0,0x0,8
tick,0x7ffc909efd34,151861246,0,0x0,8
tick,0x7ffc909efd34,151877303,0,0x0,8
tick,0x7ffc909efd34,151893064,0,0x0,8
tick,0x7ffc909efd34,151909281,0,0x0,8
tick,0x7ffc909efd34,151925053,0,0x0,8
tick,0x7ffc909efd34,151940471,0,0x0,8
tick,0x7ffc909efd34,151955195,0,0x0,8
tick,0x7ffc909efd34,151970369,0,0x0,8
tick,0x7ffc909efd34,151985715,0,0x0,8
tick,0x7ffc909efd34,152000997,0,0x0,8
tick,0x7ffc909efd34,152017160,0,0x0,8
tick,0x7ffc909efd34,152032478,0,0x0,8
tick,0x7ffc909efd34,152048387,0,0x0,8
tick,0x7ffc909efd34,152064215,0,0x0,8
tick,0x7ffc909efd34,152079984,0,0x0,8
tick,0x7ffc909efd34,152096001,0,0x0,8
tick,0x7ffc909efd34,152112140,0,0x0,8
tick,0x7ffc909efd34,152127388,0,0x0,8
tick,0x7ffc909efd34,152142724,0,0x0,8
tick,0x7ffc909efd34,152158819,0,0x0,8
tick,0x7ffc909efd34,152174267,0,0x0,8
tick,0x7ffc909efd34,152190153,0,0x0,8
tick,0x7ffc909efd34,152205755,0,0x0,8
tick,0x7ffc909efd34,152221101,0,0x0,8
tick,0x7ffc909efd34,152236301,0,0x0,8
tick,0x7ffc909efd34,152251397,0,0x0,8
tick,0x7ffc909efd34,152267159,0,0x0,8
tick,0x7ffc909efd34,152283127,0,0x0,8
tick,0x7ffc909efd34,152298591,0,0x0,8
tick,0x7ffc909efd34,152314746,0,0x0,8
tick,0x7ffc909efd34,152330235,0,0x0,8
tick,0x7ffc909efd34,152345768,0,0x0,8
tick,0x7ffc909efd34,152361127,0,0x0,8
tick,0x7ffc909efd34,152376972,0,0x0,8
tick,0x7ffc909efd34,152391947,0,0x0,8
tick,0x7ffc909efd34,152407500,0,0x0,8
tick,0x7ffc909efd34,152423467,0,0x0,8
tick,0x7ffc909efd34,152439139,0,0x0,8
tick,0x7ffc909efd34,152454564,0,0x0,8
tick,0x7ffc909efd34,152470329,0,0x0,8
tick,0x7ffc909efd34,152485635,0,0x0,8
tick,0x7ffc909efd34,152500889,0,0x0,8
tick,0x7ffc909efd34,152516236,0,0x0,8
tick,0x7ffc909efd34,152532160,0,0x0,8
tick,0x7ffc909efd34,152548151,0,0x0,8
tick,0x7ffc909efd34,152563439,0,0x0,8
tick,0x7ffc909efd34,152578862,0,0x0,8
tick,0x7ffc909efd34,152594325,0,0x0,8
tick,0x7ffc909efd34,152610364,0,0x0,8
tick,0x7ffc909efd34,152625744,0,0x0,8
tick,0x7ffc909efd34,152641371,0,0x0,8
tick,0x7ffc909efd34,152656804,0,0x0,8
tick,0x7ffc909efd34,152672071,0,0x0,8
tick,0x7ffc909efd34,152687526,0,0x0,8
tick,0x7ffc909efd34,152702752,0,0x0,8
tick,0x7ffc909efd34,152718207,0,0x0,8
tick,0x7ffc909efd34,152733681,0,0x0,8
tick,0x7ffc909efd34,152749165,0,0x0,8
tick,0x7ffc909efd34,152764500,0,0x0,8
tick,0x7ffc909efd34,152780417,0,0x0,8
tick,0x7ffc909efd34,152795913,0,0x0,8
tick,0x7ffc909efd34,152812085,0,0x0,8
tick,0x7ffc909efd34,152827198,0,0x0,8
tick,0x7ffc909efd34,152843237,0,0x0,8
tick,0x7ffc909efd34,152858691,0,0x0,8
tick,0x7ffc909efd34,152874145,0,0x0,8
tick,0x7ffc909efd34,152890464,0,0x0,8
tick,0x7ffc909efd34,152906666,0,0x0,8
tick,0x7ffc909efd34,152922008,0,0x0,8
tick,0x7ffc909efd34,152937319,0,0x0,8
tick,0x7ffc909efd34,152952273,0,0x0,8
tick,0x7ffc909efd34,152967912,0,0x0,8
tick,0x7ffc909efd34,152983738,0,0x0,8
tick,0x7ffc909efd34,152999290,0,0x0,8
tick,0x7ffc909efd34,153015316,0,0x0,8
tick,0x7ffc909efd34,153031067,0,0x0,8
tick,0x7ffc909efd34,153046455,0,0x0,8
tick,0x7ffc909efd34,153061933,0,0x0,8
tick,0x7ffc909efd34,153077598,0,0x0,8
tick,0x7ffc909efd34,153092277,0,0x0,8
tick,0x7ffc909efd34,153107364,0,0x0,8
tick,0x7ffc909efd34,153122820,0,0x0,8
tick,0x7ffc909efd34,153139142,0,0x0,8
tick,0x7ffc909efd34,153154824,0,0x0,8
tick,0x7ffc909efd34,153170254,0,0x0,8
tick,0x7ffc909efd34,153185334,0,0x0,8
tick,0x7ffc909efd34,153200918,0,0x0,8
tick,0x7ffc909efd34,153215916,0,0x0,8
tick,0x7ffc909efd34,153231366,0,0x0,8
tick,0x7ffc909efd34,153246967,0,0x0,8
tick,0x7ffc909efd34,153262340,0,0x0,8
tick,0x7ffc909efd34,153278319,0,0x0,8
tick,0x7ffc909efd34,153293496,0,0x0,8
tick,0x7ffc909efd34,153309011,0,0x0,8
tick,0x7ffc909efd34,153324648,0,0x0,8
tick,0x7ffc909efd34,153339919,0,0x0,8
tick,0x7ffc909efd34,153355208,0,0x0,8
tick,0x7ffc909efd34,153370781,0,0x0,8
tick,0x7ffc909efd34,153386318,0,0x0,8
tick,0x7ffc909efd34,153401808,0,0x0,8
tick,0x7ffc909efd34,153418020,0,0x0,8
tick,0x7ffc909efd34,153433056,0,0x0,8
tick,0x7ffc909efd34,153448837,0,0x0,8
tick,0x7ffc909efd34,153464360,0,0x0,8
tick,0x7ffc909efd34,153481015,0,0x0,8
tick,0x7ffc909efd34,153496758,0,0x0,8
tick,0x7ffc909efd34,153511755,0,0x0,8
tick,0x7ffc909efd34,153527385,0,0x0,8
tick,0x7ffc909efd34,153543170,0,0x0,8
tick,0x7ffc909efd34,153559000,0,0x0,8
tick,0x7ffc909efd34,153574510,0,0x0,8
tick,0x7ffc909efd34,153590597,0,0x0,8
tick,0x7ffc909efd34,153606379,0,0x0,8
tick,0x7ffc909efd34,153621896,0,0x0,8
tick,0x7ffc909efd34,153637875,0,0x0,8
tick,0x7ffc909efd34,153653624,0,0x0,8
tick,0x7ffc909efd34,153669207,0,0x0,8
tick,0x7ffc909efd34,153684949,0,0x0,8
tick,0x7ffc909efd34,153700825,0,0x0,8
tick,0x7ffc909efd34,153716114,0,0x0,8
tick,0x7ffc909efd34,153731616,0,0x0,8
tick,0x7ffc909efd34,153747133,0,0x0,8
tick,0x7ffc909efd34,153762397,0,0x0,8
tick,0x7ffc909efd34,153777725,0,0x0,8
tick,0x7ffc909efd34,153793085,0,0x0,8
tick,0x7ffc909efd34,153808949,0,0x0,8
tick,0x7ffc909efd34,153824403,0,0x0,8
tick,0x7ffc909efd34,153840013,0,0x0,8
tick,0x7ffc909efd34,153855371,0,0x0,8
tick,0x7ffc909efd34,153870640,0,0x0,8
tick,0x7ffc909efd34,153886732,0,0x0,8
tick,0x7ffc909efd34,153902392,0,0x0,8
tick,0x7ffc909efd34,153917643,0,0x0,8
tick,0x7ffc909efd34,153933062,0,0x0,8
tick,0x7ffc909efd34,153948815,0,0x0,8
tick,0x7ffc909efd34,153964338,0,0x0,8
tick,0x7ffc909efd34,153979872,0,0x0,8
tick,0x7ffc909efd34,153995268,0,0x0,8
tick,0x7ffc909efd34,154010785,0,0x0,8
tick,0x7ffc909efd34,154026078,0,0x0,8
tick,0x7ffc909efd34,154042352,0,0x0,8
tick,0x7ffc909efd34,154057890,0,0x0,8
tick,0x7ffc909efd34,154073517,0,0x0,8
tick,0x7ffc909efd34,154088593,0,0x0,8
tick,0x7ffc909efd34,154103667,0,0x0,8
tick,0x7ffc909efd34,154119480,0,0x0,8
tick,0x7ffc909efd34,154134976,0,0x0,8
tick,0x7ffc909efd34,154150221,0,0x0,8
tick,0x7ffc909efd34,154166370,0,0x0,8
tick,0x7ffc909efd34,154181654,0,0x0,8
tick,0x7ffc909efd34,154197365,0,0x0,8
tick,0x7ffc909efd34,154213583,0,0x0,8
tick,0x7ffc909efd34,154229558,0,0x0,8
tick,0x7ffc909efd34,154245198,0,0x0,8
tick,0x7ffc909efd34,154260393,0,0x0,8
tick,0x7ffc909efd34,154276062,0,0x0,8
tick,0x7ffc909efd34,154292453,0,0x0,8
tick,0x7ffc909efd34,154307784,0,0x0,8
tick,0x7ffc909efd34,154323245,0,0x0,8
tick,0x7ffc909efd34,154338445,0,0x0,8
tick,0x7ffc909efd34,154354002,0,0x0,8
tick,0x7ffc909efd34,154370036,0,0x0,8
tick,0x7ffc909efd34,154385376,0,0x0,8
tick,0x7ffc909efd34,154401642,0,0x0,8
tick,0x7ffc909efd34,154417366,0,0x0,8
tick,0x7ffc909efd34,154432532,0,0x0,8
tick,0x7ffc909efd34,154448364,0,0x0,8
tick,0x7ffc909efd34,154463275,0,0x0,8
tick,0x7ffc909efd34,154478356,0,0x0,8
tick,0x7ffc909efd34,154493552,0,0x0,8
tick,0x7ffc909efd34,154509042,0,0x0,8
tick,0x7ffc909efd34,154524584,0,0x0,8
tick,0x7ffc909efd34,154539748,0,0x0,8
tick,0x7ffc909efd34,154555387,0,0x0,8
tick,0x7ffc909efd34,154570658,0,0x0,8
tick,0x7ffc909efd34,154585869,0,0x0,8
tick,0x7ffc909efd34,154601009,0,0x0,8
tick,0x7ffc909efd34,154616062,0,0x0,8
tick,0x7ffc909efd34,154631349,0,0x0,8
tick,0x7ffc909efd34,154646977,0,0x0,8
tick,0x7ffc909efd34,154662361,0,0x0,8
tick,0x7ffc909efd34,154678187,0,0x0,8
tick,0x7ffc909efd34,154693223,0,0x0,8
tick,0x7ffc909efd34,154708739,0,0x0,8
tick,0x7ffc909efd34,154724508,0,0x0,8
tick,0x7ffc909efd34,154740056,0,0x0,8
tick,0x7ffc909efd34,154755233,0,0x0,8
tick,0x7ffc909efd34,154770296,0,0x0,8
tick,0x7ffc909efd34,154785867,0,0x0,8
tick,0x7ffc909efd34,154801615,0,0x0,8
tick,0x7ffc909efd34,154817659,0,0x0,8
tick,0x7ffc909efd34,154833250,0,0x0,8
tick,0x7ffc909efd34,154848865,0,0x0,8
tick,0x7ffc909efd34,154864899,0,0x0,8
tick,0x7ffc909efd34,154880556,0,0x0,8
tick,0x7ffc909efd34,154895813,0,0x0,8
tick,0x7ffc909efd34,154911382,0,0x0,8
tick,0x7ffc909efd34,154926634,0,0x0,8
tick,0x7ffc909efd34,154942453,0,0x0,8
tick,0x7ffc909efd34,154958070,0,0x0,8
tick,0x7ffc909efd34,154974234,0,0x0,8
tick,0x7ffc909efd34,154989957,0,0x0,8
tick,0x7ffc909efd34,155005553,0,0x0,8
tick,0x7ffc909efd34,155021185,0,0x0,8
tick,0x7ffc909efd34,155037015,0,0x0,8
tick,0x7ffc909efd34,155052393,0,0x0,8
tick,0x7ffc909efd34,155068557,0,0x0,8
tick,0x7ffc909efd34,155084002,0,0x0,8
tick,0x7ffc909efd34,155099109,0,0x0,8
tick,0x7ffc909efd34,155114261,0,0x0,8
tick,0x7ffc909efd34,155129743,0,0x0,8
tick,0x7ffc909efd34,155145521,0,0x0,8
tick,0x7ffc909efd34,155161326,0,0x0,8
tick,0x7ffc909efd34,155176893,0,0x0,8
tick,0x7ffc909efd34,155192765,0,0x0,8
tick,0x7ffc909efd34,155208489,0,0x0,8
tick,0x7ffc909efd34,155224001,0,0x0,8
tick,0x7ffc909efd34,155239491,0,0x0,8
tick,0x7ffc909efd34,155254933,0,0x0,8
tick,0x7ffc909efd34,155271233,0,0x0,8
tick,0x7ffc909efd34,155287346,0,0x0,8
tick,0x7ffc909efd34,155302403,0,0x0,8
tick,0x7ffc909efd34,155317808,0,0x0,8
tick,0x7ffc909efd34,155333667,0,0x0,8
tick,0x7ffc909efd34,155349016,0,0x0,8
tick,0x7ffc909efd34,155364955,0,0x0,8
tick,0x7ffc909efd34,155380899,0,0x0,8
tick,0x7ffc909efd34,155396281,0,0x0,8
tick,0x7ffc909efd34,155411919,0,0x0,8
tick,0x7ffc909efd34,155427268,0,0x0,8
tick,0x7ffc909efd34,155443632,0,0x0,8
tick,0x7ffc909efd34,155459634,0,0x0,8
tick,0x7ffc909efd34,155475077,0,0x0,8
tick,0x7ffc909efd34,155490230,0,0x0,8
tick,0x7ffc909efd34,155505143,0,0x0,8
tick,0x7ffc909efd34,155520515,0,0x0,8
tick,0x7ffc909efd34,155536167,0,0x0,8
tick,0x7ffc909efd34,155551550,0,0x0,8
tick,0x7ffc909efd34,155566456,0,0x0,8
tick,0x7ffc909efd34,155581668,0,0x0,8
tick,0x7ffc909efd34,155597707,0,0x0,8
tick,0x7ffc909efd34,155613158,0,0x0,8
tick,0x7ffc909efd34,155628525,0,0x0,8
tick,0x7ffc909efd34,155644799,0,0x0,8
tick,0x7ffc909efd34,155659730,0,0x0,8
tick,0x7ffc909efd34,155675408,0,0x0,8
tick,0x7ffc909efd34,155691600,0,0x0,8
tick,0x7ffc909efd34,155707139,0,0x0,8
tick,0x7ffc909efd34,155722445,0,0x0,8
tick,0x7ffc909efd34,155737566,0,0x0,8
tick,0x7ffc909efd34,155752679,0,0x0,8
tick,0x7ffc909efd34,155768621,0,0x0,8
tick,0x7ffc909efd34,155784250,0,0x0,8
tick,0x7ffc909efd34,155799434,0,0x0,8
tick,0x7ffc909efd34,155815627,0,0x0,8
tick,0x7ffc909efd34,155831096,0,0x0,8
tick,0x7ffc909efd34,155846429,0,0x0,8
tick,0x7ffc909efd34,155862351,0,0x0,8
tick,0x7ffc909efd34,155878051,0,0x0,8
tick,0x7ffc909efd34,155892996,0,0x0,8
tick,0x7ffc909efd34,155908672,0,0x0,8
tick,0x7ffc909efd34,155924256,0,0x0,8
tick,0x7ffc909efd34,155939554,0,0x0,8
tick,0x7ffc909efd34,155954644,0,0x0,8
tick,0x7ffc909efd34,155970268,0,0x0,8
tick,0x7ffc909efd34,155985604,0,0x0,8
tick,0x7ffc909efd34,156001354,0,0x0,8
tick,0x7ffc909efd34,156017275,0,0x0,8
tick,0x7ffc909efd34,156032408,0,0x0,8
tick,0x7ffc909efd34,156047515,0,0x0,8
tick,0x7ffc909efd34,156063158,0,0x0,8
tick,0x7ffc909efd34,156078657,0,0x0,8
tick,0x7ffc909efd34,156094772,0,0x0,8
tick,0x7ffc909efd34,156110088,0,0x0,8
tick,0x7ffc909efd34,156125258,0,0x0,8
tick,0x7ffc909efd34,156140630,0,0x0,8
tick,0x7ffc909efd34,156156118,0,0x0,8
tick,0x7ffc909efd34,156171538,0,0x0,8
tick,0x7ffc909efd34,156187187,0,0x0,8
tick,0x7ffc909efd34,156202318,0,0x0,8
tick,0x7ffc909efd34,156217618,0,0x0,8
tick,0x7ffc909efd34,156233340,0,0x0,8
tick,0x7ffc909efd34,156248963,0,0x0,8
tick,0x7ffc909efd34,156264405,0,0x0,8
tick,0x7ffc909efd34,156280026,0,0x0,8
tick,0x7ffc909efd34,156295762,0,0x0,8
tick,0x7ffc909efd34,156311394,0,0x0,8
tick,0x7ffc909efd34,156326563,0,0x0,8
tick,0x7ffc909efd34,156342284,0,0x0,8
tick,0x7ffc909efd34,156358034,0,0x0,8
tick,0x7ffc909efd34,156373295,0,0x0,8
tick,0x7ffc909efd34,156388504,0,0x0,8
tick,0x7ffc909efd34,156403982,0,0x0,8
tick,0x7ffc909efd34,156420489,0,0x0,8
tick,0x7ffc909efd34,156435812,0,0x0,8
tick,0x7ffc909efd34,156451077,0,0x0,8
tick,0x7ffc909efd34,156467220,0,0x0,8
tick,0x7ffc909efd34,156482824,0,0x0,8
tick,0x7ffc909efd34,156497936,0,0x0,8
tick,0x7ffc909efd34,156513910,0,0x0,8
tick,0x7ffc909efd34,156529037,0,0x0,8
tick,0x7ffc909efd34,156544896,0,0x0,8
tick,0x7ffc909efd34,156559648,0,0x0,8
tick,0x7ffc909efd34,156575510,0,0x0,8
tick,0x7ffc909efd34,156591433,0,0x0,8
tick,0x7ffc909efd34,156606948,0,0x0,8
tick,0x7ffc909efd34,156622659,0,0x0,8
tick,0x7ffc909efd34,156638014,0,0x0,8
tick,0x7ffc909efd34,156652687,0,0x0,8
tick,0x7ffc909efd34,156668612,0,0x0,8
tick,0x7ffc909efd34,156684594,0,0x0,8
tick,0x7ffc909efd34,156700406,0,0x0,8
tick,0x7ffc909efd34,156716411,0,0x0,8
tick,0x7ffc909efd34,156750413,0,0x0,8
tick,0x7ffc909efd34,156771357,0,0x0,8
tick,0x7ffc909efd34,156788197,0,0x0,8
tick,0x7ffc909efd34,156796272,0,0x0,8
tick,0x7ffc909efd34,156811992,0,0x0,8
tick,0x7ffc909efd34,156827699,0,0x0,8
tick,0x7ffc909efd34,156843606,0,0x0,8
tick,0x7ffc909efd34,156859649,0,0x0,8
tick,0x7ffc909efd34,156875533,0,0x0,8
tick,0x7ffc909efd34,156891591,0,0x0,8
tick,0x7ffc909efd34,156907306,0,0x0,8
tick,0x7ffc909efd34,156922950,0,0x0,8
tick,0x7ffc909efd34,156938581,0,0x0,8
tick,0x7ffc909efd34,156954004,0,0x0,8
tick,0x7ffc909efd34,156970000,0,0x0,8
tick,0x7ffc909efd34,156985552,0,0x0,8
tick,0x7ffc909efd34,157001016,0,0x0,8
tick,0x7ffc909efd34,157016379,0,0x0,8
tick,0x7ffc909efd34,157031845,0,0x0,8
tick,0x7ffc909efd34,157047410,0,0x0,8
tick,0x7ffc909efd34,157063634,0,0x0,8
tick,0x7ffc909efd34,157079022,0,0x0,8
tick,0x7ffc909efd34,157094300,0,0x0,8
tick,0x7ffc909efd34,157109607,0,0x0,8
tick,0x7ffc909efd34,157125212,0,0x0,8
tick,0x7ffc909efd34,157140867,0,0x0,8
tick,0x7ffc909efd34,157156404,0,0x0,8
tick,0x7ffc909efd34,157172544,0,0x0,8
tick,0x7ffc909efd34,157188224,0,0x0,8
tick,0x7ffc909efd34,157203776,0,0x0,8
tick,0x7ffc909efd34,157219057,0,0x0,8
tick,0x7ffc909efd34,157234527,0,0x0,8
tick,0x7ffc909efd34,157250055,0,0x0,8
tick,0x7ffc909efd34,157265500,0,0x0,8
tick,0x7ffc909efd34,157280858,0,0x0,8
tick,0x7ffc909efd34,157296536,0,0x0,8
tick,0x7ffc909efd34,157311785,0,0x0,8
tick,0x7ffc909efd34,157327748,0,0x0,8
tick,0x7ffc909efd34,157342767,0,0x0,8
tick,0x7ffc909efd34,157358483,0,0x0,8
tick,0x7ffc909efd34,157374791,0,0x0,8
tick,0x7ffc909efd34,157390300,0,0x0,8
tick,0x7ffc909efd34,157405578,0,0x0,8
tick,0x7ffc909efd34,157421464,0,0x0,8
tick,0x7ffc909efd34,157437534,0,0x0,8
tick,0x7ffc909efd34,157453703,0,0x0,8
tick,0x7ffc909efd34,157469658,0,0x0,8
tick,0x7ffc909efd34,157485135,0,0x0,8
tick,0x7ffc909efd34,157500817,0,0x0,8
tick,0x7ffc909efd34,157516339,0,0x0,8
tick,0x7ffc909efd34,157532493,0,0x0,8
tick,0x7ffc909efd34,157547683,0,0x0,8
tick,0x7ffc909efd34,157563998,0,0x0,8
tick,0x7ffc909efd34,157579494,0,0x0,8
tick,0x7ffc909efd34,157595359,0,0x0,8
tick,0x7ffc909efd34,157611437,0,0x0,8
tick,0x7ffc909efd34,157627012,0,0x0,8
tick,0x7ffc909efd34,157642696,0,0x0,8
tick,0x7ffc909efd34,157658194,0,0x0,8
tick,0x7ffc909efd34,157673628,0,0x0,8
tick,0x7ffc909efd34,157689512,0,0x0,8
tick,0x7ffc909efd34,157705862,0,0x0,8
tick,0x7ffc909efd34,157720587,0,0x0,8
tick,0x7ffc909efd34,157736080,0,0x0,8
tick,0x7ffc909efd34,157751894,0,0x0,8
tick,0x7ffc909efd34,157767057,0,0x0,8
tick,0x7ffc909efd34,157782447,0,0x0,8
tick,0x7ffc909efd34,157798407,0,0x0,8
tick,0x7ffc909efd34,157813646,0,0x0,8
tick,0x7ffc909efd34,157828880,0,0x0,8
tick,0x7ffc909efd34,157844498,0,0x0,8
tick,0x7ffc909efd34,157859358,0,0x0,8
tick,0x7ffc909efd34,157874627,0,0x0,8
tick,0x7ffc909efd34,157889914,0,0x0,8
tick,0x7ffc909efd34,157905570,0,0x0,8
tick,0x7ffc909efd34,157920657,0,0x0,8
tick,0x7ffc909efd34,157936439,0,0x0,8
tick,0x7ffc909efd34,157951724,0,0x0,8
tick,0x7ffc909efd34,157967393,0,0x0,8
tick,0x7ffc909efd34,157982738,0,0x0,8
tick,0x7ffc909efd34,157998576,0,0x0,8
tick,0x7ffc909efd34,158014241,0,0x0,8
tick,0x7ffc909efd34,158029905,0,0x0,8
tick,0x7ffc909efd34,158045279,0,0x0,8
tick,0x7ffc909efd34,158060743,0,0x0,8
tick,0x7ffc909efd34,158076092,0,0x0,8
tick,0x7ffc909efd34,158091480,0,0x0,8
tick,0x7ffc909efd34,158107739,0,0x0,8
tick,0x7ffc909efd34,158123321,0,0x0,8
tick,0x7ffc909efd34,158138571,0,0x0,8
tick,0x7ffc909efd34,158153940,0,0x0,8
tick,0x7ffc909efd34,158169423,0,0x0,8
tick,0x7ffc909efd34,158185262,0,0x0,8
tick,0x7ffc909efd34,158200295,0,0x0,8
tick,0x7ffc909efd34,158215965,0,0x0,8
tick,0x7ffc909efd34,158232182,0,0x0,8
tick,0x7ffc909efd34,158248205,0,0x0,8
tick,0x7ffc909efd34,158264202,0,0x0,8
tick,0x7ffc909efd34,158280166,0,0x0,8
tick,0x7ffc909efd34,158295445,0,0x0,8
tick,0x7ffc909efd34,158311145,0,0x0,8
tick,0x7ffc909efd34,158326058,0,0x0,8
tick,0x7ffc909efd34,158341246,0,0x0,8
tick,0x7ffc909efd34,158356356,0,0x0,8
tick,0x7ffc909efd34,158372489,0,0x0,8
tick,0x7ffc909efd34,158388241,0,0x0,8
tick,0x7ffc909efd34,158403602,0,0x0,8
tick,0x7ffc909efd34,158419366,0,0x0,8
tick,0x7ffc909efd34,158435551,0,0x0,8
tick,0x7ffc909efd34,158451623,0,0x0,8
tick,0x7ffc909efd34,158467703,0,0x0,8
tick,0x7ffc909efd34,158483812,0,0x0,8
tick,0x7ffc909efd34,158499320,0,0x0,8
tick,0x7ffc909efd34,158514901,0,0x0,8
tick,0x7ffc909efd34,158530929,0,0x0,8
tick,0x7ffc909efd34,158546120,0,0x0,8
tick,0x7ffc909efd34,158561618,0,0x0,8
tick,0x7ffc909efd34,158576750,0,0x0,8
tick,0x7ffc909efd34,158592810,0,0x0,8
tick,0x7ffc909efd34,158608196,0,0x0,8
tick,0x7ffc909efd34,158623576,0,0x0,8
tick,0x7ffc909efd34,158639575,0,0x0,8
tick,0x7ffc909efd34,158655481,0,0x0,8
tick,0x7ffc909efd34,158671373,0,0x0,8
tick,0x7ffc909efd34,158687423,0,0x0,8
tick,0x7ffc909efd34,158703124,0,0x0,8
tick,0x7ffc909efd34,158718378,0,0x0,8
tick,0x7ffc909efd34,158733063,0,0x0,8
tick,0x7ffc909efd34,158748407,0,0x0,8
tick,0x7ffc909efd34,158763791,0,0x0,8
tick,0x7ffc909efd34,158779280,0,0x0,8
tick,0x7ffc909efd34,158794726,0,0x0,8
tick,0x7ffc909efd34,158810890,0,0x0,8
tick,0x7ffc909efd34,158825896,0,0x0,8
tick,0x7ffc909efd34,158841113,0,0x0,8
tick,0x7ffc909efd34,158856348,0,0x0,8
tick,0x7ffc909efd34,158872464,0,0x0,8
tick,0x7ffc909efd34,158888013,0,0x0,8
tick,0x7ffc909efd34,158903772,0,0x0,8
tick,0x7ffc909efd34,158919407,0,0x0,8
tick,0x7ffc909efd34,158935137,0,0x0,8
tick,0x7ffc909efd34,158950824,0,0x0,8
tick,0x7ffc909efd34,158967025,0,0x0,8
tick,0x7ffc909efd34,158983082,0,0x0,8
tick,0x7ffc909efd34,158999076,0,0x0,8
tick,0x7ffc909efd34,159014794,0,0x0,8
tick,0x7ffc909efd34,159030082,0,0x0,8
tick,0x7ffc909efd34,159046076,0,0x0,8
tick,0x7ffc909efd34,159061877,0,0x0,8
tick,0x7ffc909efd34,159077230,0,0x0,8
tick,0x7ffc909efd34,159093276,0,0x0,8
tick,0x7ffc909efd34,159109032,0,0x0,8
tick,0x7ffc909efd34,159124615,0,0x0,8
tick,0x7ffc909efd34,159140383,0,0x0,8
tick,0x7ffc909efd34,159156981,0,0x0,8
tick,0x7ffc909efd34,159172086,0,0x0,8
tick,0x7ffc909efd34,159188213,0,0x0,8
tick,0x7ffc909efd34,159203472,0,0x0,8
tick,0x7ffc909efd34,159219460,0,0x0,8
tick,0x7ffc909efd34,159235289,0,0x0,8
tick,0x7ffc909efd34,159251193,0,0x0,8
tick,0x7ffc909efd34,159267398,0,0x0,8
tick,0x7ffc909efd34,159283367,0,0x0,8
tick,0x7ffc909efd34,159299017,0,0x0,8
tick,0x7ffc909efd34,159314218,0,0x0,8
tick,0x7ffc909efd34,159330230,0,0x0,8
tick,0x7ffc909efd34,159345881,0,0x0,8
tick,0x7ffc909efd34,159361565,0,0x0,8
tick,0x7ffc909efd34,159376675,0,0x0,8
tick,0x7ffc909efd34,159392071,0,0x0,8
tick,0x7ffc909efd34,159407574,0,0x0,8
tick,0x7ffc909efd34,159422628,0,0x0,8
tick,0x7ffc909efd34,159438185,0,0x0,8
tick,0x7ffc909efd34,159453350,0,0x0,8
tick,0x7ffc909efd34,159469473,0,0x0,8
tick,0x7ffc909efd34,159485161,0,0x0,8
tick,0x7ffc909efd34,159500374,0,0x0,8
tick,0x7ffc909efd34,159515859,0,0x0,8
tick,0x7ffc909efd34,159531465,0,0x0,8
tick,0x7ffc909efd34,159546615,0,0x0,8
tick,0x7ffc909efd34,159562008,0,0x0,8
tick,0x7ffc909efd34,159577402,0,0x0,8
tick,0x7ffc909efd34,159592673,0,0x0,8
tick,0x7ffc909efd34,159608137,0,0x0,8
tick,0x7ffc909efd34,159623351,0,0x0,8
tick,0x7ffc909efd34,159639269,0,0x0,8
tick,0x7ffc909efd34,159655022,0,0x0,8
tick,0x7ffc909efd34,159670731,0,0x0,8
tick,0x7ffc909efd34,159685941,0,0x0,8
tick,0x7ffc909efd34,159701417,0,0x0,8
tick,0x7ffc909efd34,159716630,0,0x0,8
tick,0x7ffc909efd34,159731925,0,0x0,8
tick,0x7ffc909efd34,159747820,0,0x0,8
tick,0x7ffc909efd34,159763455,0,0x0,8
tick,0x7ffc909efd34,159778985,0,0x0,8
tick,0x7ffc909efd34,159795070,0,0x0,8
tick,0x7ffc909efd34,159811187,0,0x0,8
tick,0x7ffc909efd34,159826468,0,0x0,8
tick,0x7ffc909efd34,159842539,0,0x0,8
tick,0x7ffc909efd34,159858559,0,0x0,8
tick,0x7ffc909efd34,159873913,0,0x0,8
tick,0x7ffc909efd34,159889307,0,0x0,8
tick,0x7ffc909efd34,159904694,0,0x0,8
tick,0x7ffc909efd34,159920506,0,0x0,8
tick,0x7ffc909efd34,159936426,0,0x0,8
tick,0x7ffc909efd34,159951921,0,0x0,8
tick,0x7ffc909efd34,159967832,0,0x0,8
tick,0x7ffc909efd34,159983528,0,0x0,8
tick,0x7ffc909efd34,159999230,0,0x0,8
tick,0x7ffc909efd34,160014399,0,0x0,8
tick,0x7ffc909efd34,160030110,0,0x0,8
tick,0x7ffc909efd34,160046093,0,0x0,8
tick,0x7ffc909efd34,160062115,0,0x0,8
tick,0x7ffc909efd34,160077421,0,0x0,8
tick,0x7ffc909efd34,160092534,0,0x0,8
tick,0x7ffc909efd34,160107792,0,0x0,8
tick,0x7ffc909efd34,160122880,0,0x0,8
tick,0x7ffc909efd34,160138829,0,0x0,8
tick,0x7ffc909efd34,160154362,0,0x0,8
tick,0x7ffc909efd34,160170746,0,0x0,8
tick,0x7ffc909efd34,160186592,0,0x0,8
tick,0x7ffc909efd34,160202011,0,0x0,8
tick,0x7ffc909efd34,160217512,0,0x0,8
tick,0x7ffc909efd34,160232602,0,0x0,8
tick,0x7ffc909efd34,160248083,0,0x0,8
tick,0x7ffc909efd34,160263805,0,0x0,8
tick,0x7ffc909efd34,160279140,0,0x0,8
tick,0x7ffc909efd34,160295263,0,0x0,8
tick,0x7ffc909efd34,160311148,0,0x0,8
tick,0x7ffc909efd34,160327297,0,0x0,8
tick,0x7ffc909efd34,160342479,0,0x0,8
tick,0x7ffc909efd34,160357748,0,0x0,8
tick,0x7ffc909efd34,160373424,0,0x0,8
tick,0x7ffc909efd34,160388664,0,0x0,8
tick,0x7ffc909efd34,160404184,0,0x0,8
tick,0x7ffc909efd34,160419299,0,0x0,8
tick,0x7ffc909efd34,160435193,0,0x0,8
tick,0x7ffc909efd34,160450495,0,0x0,8
tick,0x7ffc909efd34,160466694,0,0x0,8
tick,0x7ffc909efd34,160482450,0,0x0,8
tick,0x7ffc909efd34,160498078,0,0x0,8
tick,0x7ffc909efd34,160513489,0,0x0,8
tick,0x7ffc909efd34,160529680,0,0x0,8
tick,0x7ffc909efd34,160544926,0,0x0,8
tick,0x7ffc909efd34,160560655,0,0x0,8
tick,0x7ffc909efd34,160575870,0,0x0,8
tick,0x7ffc909efd34,160591576,0,0x0,8
tick,0x7ffc909efd34,160606700,0,0x0,8
tick,0x7ffc909efd34,160622186,0,0x0,8
tick,0x7ffc909efd34,160637659,0,0x0,8
tick,0x7ffc909efd34,160653301,0,0x0,8
tick,0x7ffc909efd34,160669657,0,0x0,8
tick,0x7ffc909efd34,160685168,0,0x0,8
tick,0x7ffc909efd34,160700569,0,0x0,8
tick,0x7ffc909efd34,160716513,0,0x0,8
tick,0x7ffc909efd34,160732009,0,0x0,8
tick,0x7ffc909efd34,160747838,0,0x0,8
tick,0x7ffc909efd34,160763434,0,0x0,8
tick,0x7ffc909efd34,160778996,0,0x0,8
tick,0x7ffc909efd34,160794118,0,0x0,8
tick,0x7ffc909efd34,160809763,0,0x0,8
tick,0x7ffc909efd34,160825209,0,0x0,8
tick,0x7ffc909efd34,160840436,0,0x0,8
tick,0x7ffc909efd34,160856718,0,0x0,8
tick,0x7ffc909efd34,160872163,0,0x0,8
tick,0x7ffc909efd34,160887445,0,0x0,8
tick,0x7ffc909efd34,160903113,0,0x0,8
tick,0x7ffc909efd34,160918996,0,0x0,8
tick,0x7ffc909efd34,160934553,0,0x0,8
tick,0x7ffc909efd34,160951008,0,0x0,8
tick,0x7ffc909efd34,160966336,0,0x0,8
tick,0x7ffc909efd34,160982087,0,0x0,8
tick,0x7ffc909efd34,160997584,0,0x0,8
tick,0x7ffc909efd34,161013396,0,0x0,8
tick,0x7ffc909efd34,161029608,0,0x0,8
tick,0x7ffc909efd34,161045330,0,0x0,8
tick,0x7ffc909efd34,161061012,0,0x0,8
tick,0x7ffc909efd34,161076151,0,0x0,8
tick,0x7ffc909efd34,161091553,0,0x0,8
tick,0x7ffc909efd34,161107036,0,0x0,8
tick,0x7ffc909efd34,161122675,0,0x0,8
tick,0x7ffc909efd34,161137668,0,0x0,8
tick,0x7ffc909efd34,161153303,0,0x0,8
tick,0x7ffc909efd34,161169065,0,0x0,8
tick,0x7ffc909efd34,161184591,0,0x0,8
tick,0x7ffc909efd34,161199771,0,0x0,8
tick,0x7ffc909efd34,161215211,0,0x0,8
tick,0x7ffc909efd34,161230774,0,0x0,8
tick,0x7ffc909efd34,161246237,0,0x0,8
tick,0x7ffc909efd34,161261758,0,0x0,8
tick,0x7ffc909efd34,161277317,0,0x0,8
tick,0x7ffc909efd34,161292517,0,0x0,8
tick,0x7ffc909efd34,161308626,0,0x0,8
tick,0x7ffc909efd34,161323927,0,0x0,8
tick,0x7ffc909efd34,161339585,0,0x0,8
tick,0x7ffc909efd34,161355161,0,0x0,8
tick,0x7ffc909efd34,161371554,0,0x0,8
tick,0x7ffc909efd34,161387618,0,0x0,8
tick,0x7ffc909efd34,161403008,0,0x0,8
tick,0x7ffc909efd34,161418939,0,0x0,8
tick,0x7ffc909efd34,161434329,0,0x0,8
tick,0x7ffc909efd34,161450448,0,0x0,8
tick,0x7ffc909efd34,161465592,0,0x0,8
tick,0x7ffc909efd34,161481419,0,0x0,8
tick,0x7ffc909efd34,161497158,0,0x0,8
tick,0x7ffc909efd34,161512372,0,0x0,8
tick,0x7ffc909efd34,161528829,0,0x0,8
tick,0x7ffc909efd34,161544622,0,0x0,8
tick,0x7ffc909efd34,161560534,0,0x0,8
tick,0x7ffc909efd34,161576061,0,0x0,8
tick,0x7ffc909efd34,161591293,0,0x0,8
tick,0x7ffc909efd34,161606372,0,0x0,8
tick,0x7ffc909efd34,161622411,0,0x0,8
tick,0x7ffc909efd34,161637804,0,0x0,8
tick,0x7ffc909efd34,161653653,0,0x0,8
tick,0x7ffc909efd34,161669971,0,0x0,8
tick,0x7ffc909efd34,161685039,0,0x0,8
tick,0x7ffc909efd34,161700380,0,0x0,8
tick,0x7ffc909efd34,161715661,0,0x0,8
tick,0x7ffc909efd34,161730975,0,0x0,8
tick,0x7ffc909efd34,161746708,0,0x0,8
tick,0x7ffc909efd34,161761893,0,0x0,8
tick,0x7ffc909efd34,161778279,0,0x0,8
tick,0x7ffc909efd34,161793708,0,0x0,8
tick,0x7ffc909efd34,161809607,0,0x0,8
tick,0x7ffc909efd34,161824855,0,0x0,8
tick,0x7ffc909efd34,161840101,0,0x0,8
tick,0x7ffc909efd34,161855678,0,0x0,8
tick,0x7ffc909efd34,161871014,0,0x0,8
tick,0x7ffc909efd34,161887153,0,0x0,8
tick,0x7ffc909efd34,161902262,0,0x0,8
tick,0x7ffc909efd34,161917613,0,0x0,8
tick,0x7ffc909efd34,161933140,0,0x0,8
tick,0x7ffc909efd34,161948550,0,0x0,8
tick,0x7ffc909efd34,161964202,0,0x0,8
tick,0x7ffc909efd34,161980134,0,0x0,8
tick,0x7ffc909efd34,161996180,0,0x0,8
tick,0x7ffc909efd34,162012164,0,0x0,8
tick,0x7ffc909efd34,162036421,0,0x0,8
tick,0x7ffc909efd34,162044739,0,0x0,8
tick,0x7ffc909efd34,162060511,0,0x0,8
tick,0x7ffc909efd34,162078250,0,0x0,8
tick,0x7ffc909efd34,162092161,0,0x0,8
tick,0x7ffc909efd34,162108553,0,0x0,8
tick,0x7ffc909efd34,162124252,0,0x0,8
tick,0x7ffc909efd34,162140242,0,0x0,8
tick,0x7ffc909efd34,162155888,0,0x0,8
tick,0x7ffc909efd34,162171682,0,0x0,8
tick,0x7ffc909efd34,162187087,0,0x0,8
tick,0x7ffc909efd34,162202716,0,0x0,8
tick,0x7ffc909efd34,162218163,0,0x0,8
tick,0x7ffc909efd34,162233655,0,0x0,8
tick,0x7ffc909efd34,162248858,0,0x0,8
tick,0x7ffc909efd34,162264569,0,0x0,8
tick,0x7ffc909efd34,162280867,0,0x0,8
tick,0x7ffc909efd34,162296586,0,0x0,8
tick,0x7ffc909efd34,162312147,0,0x0,8
tick,0x7ffc909efd34,162328046,0,0x0,8
tick,0x7ffc909efd34,162343345,0,0x0,8
tick,0x7ffc909efd34,162358588,0,0x0,8
tick,0x7ffc909efd34,162374066,0,0x0,8
tick,0x7ffc909efd34,162389549,0,0x0,8
tick,0x7ffc909efd34,162405270,0,0x0,8
tick,0x7ffc909efd34,162420634,0,0x0,8
tick,0x7ffc909efd34,162436232,0,0x0,8
tick,0x7ffc909efd34,162451669,0,0x0,8
tick,0x7ffc909efd34,162467004,0,0x0,8
tick,0x7ffc909efd34,162482676,0,0x0,8
tick,0x7ffc909efd34,162498705,0,0x0,8
tick,0x7ffc909efd34,162513584,0,0x0,8
tick,0x7ffc909efd34,162529071,0,0x0,8
tick,0x7ffc909efd34,162545317,0,0x0,8
tick,0x7ffc909efd34,162560999,0,0x0,8
tick,0x7ffc909efd34,162576816,0,0x0,8
tick,0x7ffc909efd34,162592270,0,0x0,8
tick,0x7ffc909efd34,162607634,0,0x0,8
tick,0x7ffc909efd34,162623036,0,0x0,8
tick,0x7ffc909efd34,162638135,0,0x0,8
tick,0x7ffc909efd34,162654055,0,0x0,8
tick,0x7ffc909efd34,162668905,0,0x0,8
tick,0x7ffc909efd34,162684758,0,0x0,8
tick,0x7ffc909efd34,162700627,0,0x0,8
tick,0x7ffc909efd34,162716162,0,0x0,8
tick,0x7ffc909efd34,162731734,0,0x0,8
tick,0x7ffc909efd34,162747600,0,0x0,8
tick,0x7ffc909efd34,162762856,0,0x0,8
tick,0x7ffc909efd34,162778538,0,0x0,8
tick,0x7ffc909efd34,162794544,0,0x0,8
tick,0x7ffc909efd34,162810247,0,0x0,8
tick,0x7ffc909efd34,162825237,0,0x0,8
tick,0x7ffc909efd34,162841024,0,0x0,8
tick,0x7ffc909efd34,162856803,0,0x0,8
tick,0x7ffc909efd34,162872074,0,0x0,8
tick,0x7ffc909efd34,162887846,0,0x0,8
tick,0x7ffc909efd34,162903300,0,0x0,8
tick,0x7ffc909efd34,162918547,0,0x0,8
tick,0x7ffc909efd34,162934090,0,0x0,8
tick,0x7ffc909efd34,162949643,0,0x0,8
tick,0x7ffc909efd34,162964986,0,0x0,8
tick,0x7ffc909efd34,162980860,0,0x0,8
tick,0x7ffc909efd34,162996272,0,0x0,8
tick,0x7ffc909efd34,163012539,0,0x0,8
tick,0x7ffc909efd34,163028532,0,0x0,8
tick,0x7ffc909efd34,163044494,0,0x0,8
tick,0x7ffc909efd34,163060613,0,0x0,8
tick,0x7ffc909efd34,163075867,0,0x0,8
tick,0x7ffc909efd34,163091327,0,0x0,8
tick,0x7ffc909efd34,163106802,0,0x0,8
tick,0x7ffc909efd34,163122160,0,0x0,8
tick,0x7ffc909efd34,163138485,0,0x0,8
tick,0x7ffc909efd34,163153863,0,0x0,8
tick,0x7ffc909efd34,163169317,0,0x0,8
tick,0x7ffc909efd34,163185123,0,0x0,8
tick,0x7ffc909efd34,163201092,0,0x0,8
tick,0x7ffc909efd34,163217326,0,0x0,8
tick,0x7ffc909efd34,163232396,0,0x0,8
tick,0x7ffc909efd34,163248381,0,0x0,8
tick,0x7ffc909efd34,163264111,0,0x0,8
tick,0x7ffc909efd34,163280398,0,0x0,8
tick,0x7ffc909efd34,163295486,0,0x0,8
tick,0x7ffc909efd34,163311347,0,0x0,8
tick,0x7ffc909efd34,163326969,0,0x0,8
tick,0x7ffc909efd34,163341872,0,0x0,8
tick,0x7ffc909efd34,163357213,0,0x0,8
tick,0x7ffc909efd34,163372504,0,0x0,8
tick,0x7ffc909efd34,163388173,0,0x0,8
tick,0x7ffc909efd34,163403895,0,0x0,8
tick,0x7ffc909efd34,163420071,0,0x0,8
tick,0x7ffc909efd34,163435686,0,0x0,8
tick,0x7ffc909efd34,163451937,0,0x0,8
tick,0x7ffc909efd34,163467670,0,0x0,8
tick,0x7ffc909efd34,163483069,0,0x0,8
tick,0x7ffc909efd34,163499025,0,0x0,8
tick,0x7ffc909efd34,163514791,0,0x0,8
tick,0x7ffc909efd34,163530294,0,0x0,8
tick,0x7ffc909efd34,163545751,0,0x0,8
tick,0x7ffc909efd34,163561236,0,0x0,8
tick,0x7ffc909efd34,163577468,0,0x0,8
tick,0x7ffc909efd34,163592249,0,0x0,8
tick,0x7ffc909efd34,163607978,0,0x0,8
tick,0x7ffc909efd34,163623608,0,0x0,8
tick,0x7ffc909efd34,163639050,0,0x0,8
tick,0x7ffc909efd34,163655163,0,0x0,8
tick,0x7ffc909efd34,163670660,0,0x0,8
tick,0x7ffc909efd34,163686522,0,0x0,8
tick,0x7ffc909efd34,163702334,0,0x0,8
tick,0x7ffc909efd34,163718095,0,0x0,8
tick,0x7ffc909efd34,163732912,0,0x0,8
tick,0x7ffc909efd34,163748292,0,0x0,8
tick,0x7ffc909efd34,163763889,0,0x0,8
tick,0x7ffc909efd34,163779298,0,0x0,8
tick,0x7ffc909efd34,163795080,0,0x0,8
tick,0x7ffc909efd34,163811278,0,0x0,8
tick,0x7ffc909efd34,163827199,0,0x0,8
tick,0x7ffc909efd34,163843383,0,0x0,8
tick,0x7ffc909efd34,163858116,0,0x0,8
tick,0x7ffc909efd34,163874030,0,0x0,8
tick,0x7ffc909efd34,163889655,0,0x0,8
tick,0x7ffc909efd34,163905342,0,0x0,8
tick,0x7ffc909efd34,163921265,0,0x0,8
tick,0x7ffc909efd34,163936932,0,0x0,8
tick,0x7ffc909efd34,163952491,0,0x0,8
tick,0x7ffc909efd34,163967772,0,0x0,8
tick,0x7ffc909efd34,163983300,0,0x0,8
tick,0x7ffc909efd34,163998933,0,0x0,8
tick,0x7ffc909efd34,164014252,0,0x0,8
tick,0x7ffc909efd34,164029717,0,0x0,8
tick,0x7ffc909efd34,164045051,0,0x0,8
tick,0x7ffc909efd34,164060511,0,0x0,8
tick,0x7ffc909efd34,164076430,0,0x0,8
tick,0x7ffc909efd34,164092063,0,0x0,8
tick,0x7ffc909efd34,164107485,0,0x0,8
tick,0x7ffc909efd34,164123410,0,0x0,8
tick,0x7ffc909efd34,164138802,0,0x0,8
tick,0x7ffc909efd34,164153984,0,0x0,8
tick,0x7ffc909efd34,164168997,0,0x0,8
tick,0x7ffc909efd34,164183834,0,0x0,8
tick,0x7ffc909efd34,164200021,0,0x0,8
tick,0x7ffc909efd34,164215988,0,0x0,8
tick,0x7ffc909efd34,164231335,0,0x0,8
tick,0x7ffc909efd34,164246648,0,0x0,8
tick,0x7ffc909efd34,164262643,0,0x0,8
tick,0x7ffc909efd34,164278075,0,0x0,8
tick,0x7ffc909efd34,164293518,0,0x0,8
tick,0x7ffc909efd34,164309536,0,0x0,8
tick,0x7ffc909efd34,164325427,0,0x0,8
tick,0x7ffc909efd34,164341086,0,0x0,8
tick,0x7ffc909efd34,164356456,0,0x0,8
tick,0x7ffc909efd34,164372171,0,0x0,8
tick,0x7ffc909efd34,164388219,0,0x0,8
tick,0x7ffc909efd34,164403781,0,0x0,8
tick,0x7ffc909efd34,164419368,0,0x0,8
tick,0x7ffc909efd34,164435086,0,0x0,8
tick,0x7ffc909efd34,164451019,0,0x0,8
tick,0x7ffc909efd34,164466834,0,0x0,8
tick,0x7ffc909efd34,164481876,0,0x0,8
tick,0x7ffc909efd34,164497365,0,0x0,8
tick,0x7ffc909efd34,164512734,0,0x0,8
tick,0x7ffc909efd34,164528010,0,0x0,8
tick,0x7ffc909efd34,164544496,0,0x0,8
tick,0x7ffc909efd34,164560177,0,0x0,8
tick,0x7ffc909efd34,164575678,0,0x0,8
tick,0x7ffc909efd34,164591543,0,0x0,8
tick,0x7ffc909efd34,164606504,0,0x0,8
tick,0x7ffc909efd34,164622072,0,0x0,8
tick,0x7ffc909efd34,164637373,0,0x0,8
tick,0x7ffc909efd34,164653022,0,0x0,8
tick,0x7ffc909efd34,164668819,0,0x0,8
tick,0x7ffc909efd34,164684366,0,0x0,8
tick,0x7ffc909efd34,164700127,0,0x0,8
tick,0x7ffc909efd34,164715654,0,0x0,8
tick,0x7ffc909efd34,164731061,0,0x0,8
tick,0x7ffc909efd34,164746332,0,0x0,8
tick,0x7ffc909efd34,164761873,0,0x0,8
tick,0x7ffc909efd34,164777734,0,0x0,8
tick,0x7ffc909efd34,164792948,0,0x0,8
tick,0x7ffc909efd34,164808389,0,0x0,8
tick,0x7ffc909efd34,164823595,0,0x0,8
tick,0x7ffc909efd34,164839579,0,0x0,8
tick,0x7ffc909efd34,164855491,0,0x0,8
tick,0x7ffc909efd34,164871020,0,0x0,8
tick,0x7ffc909efd34,164886688,0,0x0,8
tick,0x7ffc909efd34,164901901,0,0x0,8
tick,0x7ffc909efd34,164917525,0,0x0,8
tick,0x7ffc909efd34,164933097,0,0x0,8
tick,0x7ffc909efd34,164948887,0,0x0,8
tick,0x7ffc909efd34,164964464,0,0x0,8
tick,0x7ffc909efd34,164980474,0,0x0,8
tick,0x7ffc909efd34,164995891,0,0x0,8
tick,0x7ffc909efd34,165010980,0,0x0,8
tick,0x7ffc909efd34,165026837,0,0x0,8
tick,0x7ffc909efd34,165042582,0,0x0,8
tick,0x7ffc909efd34,165058249,0,0x0,8
tick,0x7ffc909efd34,165073930,0,0x0,8
tick,0x7ffc909efd34,165090313,0,0x0,8
tick,0x7ffc909efd34,165106001,0,0x0,8
tick,0x7ffc909efd34,165121340,0,0x0,8
tick,0x7ffc909efd34,165136537,0,0x0,8
tick,0x7ffc909efd34,165152562,0,0x0,8
tick,0x7ffc909efd34,165168885,0,0x0,8
tick,0x7ffc909efd34,165184430,0,0x0,8
tick,0x7ffc909efd34,165199745,0,0x0,8
tick,0x7ffc909efd34,165215375,0,0x0,8
tick,0x7ffc909efd34,165231002,0,0x0,8
tick,0x7ffc909efd34,165246668,0,0x0,8
tick,0x7ffc909efd34,165262749,0,0x0,8
tick,0x7ffc909efd34,165278206,0,0x0,8
tick,0x7ffc909efd34,165293414,0,0x0,8
tick,0x7ffc909efd34,165309210,0,0x0,8
tick,0x7ffc909efd34,165324455,0,0x0,8
tick,0x7ffc909efd34,165339897,0,0x0,8
tick,0x7ffc909efd34,165355680,0,0x0,8
tick,0x7ffc909efd34,165370970,0,0x0,8
tick,0x7ffc909efd34,165385942,0,0x0,8
tick,0x7ffc909efd34,165400729,0,0x0,8
tick,0x7ffc909efd34,165416383,0,0x0,8
tick,0x7ffc909efd34,165431955,0,0x0,8
tick,0x7ffc909efd34,165447564,0,0x0,8
tick,0x7ffc909efd34,165462894,0,0x0,8
tick,0x7ffc909efd34,165478699,0,0x0,8
tick,0x7ffc909efd34,165494966,0,0x0,8
tick,0x7ffc909efd34,165510487,0,0x0,8
tick,0x7ffc909efd34,165526093,0,0x0,8
tick,0x7ffc909efd34,165541767,0,0x0,8
tick,0x7ffc909efd34,165557404,0,0x0,8
tick,0x7ffc909efd34,165572728,0,0x0,8
tick,0x7ffc909efd34,165589042,0,0x0,8
tick,0x7ffc909efd34,165605171,0,0x0,8
tick,0x7ffc909efd34,165620388,0,0x0,8
tick,0x7ffc909efd34,165635574,0,0x0,8
tick,0x7ffc909efd34,165651053,0,0x0,8
tick,0x7ffc909efd34,165666639,0,0x0,8
tick,0x7ffc909efd34,165681927,0,0x0,8
tick,0x7ffc909efd34,165698324,0,0x0,8
tick,0x7ffc909efd34,165713188,0,0x0,8
tick,0x7ffc909efd34,165728823,0,0x0,8
tick,0x7ffc909efd34,165744173,0,0x0,8
tick,0x7ffc909efd34,165759477,0,0x0,8
tick,0x7ffc909efd34,165774819,0,0x0,8
tick,0x7ffc909efd34,165790201,0,0x0,8
tick,0x7ffc909efd34,165806154,0,0x0,8
tick,0x7ffc909efd34,165822101,0,0x0,8
tick,0x7ffc909efd34,165837618,0,0x0,8
tick,0x7ffc909efd34,165853487,0,0x0,8
tick,0x7ffc909efd34,165869811,0,0x0,8
tick,0x7ffc909efd34,165885621,0,0x0,8
tick,0x7ffc909efd34,165901331,0,0x0,8
tick,0x7ffc909efd34,165916806,0,0x0,8
tick,0x7ffc909efd34,165932466,0,0x0,8
tick,0x7ffc909efd34,165947867,0,0x0,8
tick,0x7ffc909efd34,165963742,0,0x0,8
tick,0x7ffc909efd34,165979258,0,0x0,8
tick,0x7ffc909efd34,165994526,0,0x0,8
tick,0x7ffc909efd34,166010190,0,0x0,8
tick,0x7ffc909efd34,166025844,0,0x0,8
tick,0x7ffc909efd34,166041233,0,0x0,8
tick,0x7ffc909efd34,166056625,0,0x0,8
tick,0x7ffc909efd34,166072694,0,0x0,8
tick,0x7ffc909efd34,166088761,0,0x0,8
tick,0x7ffc909efd34,166103913,0,0x0,8
tick,0x7ffc909efd34,166119986,0,0x0,8
tick,0x7ffc909efd34,166135959,0,0x0,8
tick,0x7ffc909efd34,166151237,0,0x0,8
tick,0x7ffc909efd34,166166823,0,0x0,8
tick,0x7ffc909efd34,166182452,0,0x0,8
tick,0x7ffc909efd34,166198609,0,0x0,8
tick,0x7ffc909efd34,166214264,0,0x0,8
tick,0x7ffc909efd34,166229465,0,0x0,8
tick,0x7ffc909efd34,166245277,0,0x0,8
tick,0x7ffc909efd34,166260837,0,0x0,8
tick,0x7ffc909efd34,166277045,0,0x0,8
tick,0x7ffc909efd34,166292764,0,0x0,8
tick,0x7ffc909efd34,166307971,0,0x0,8
tick,0x7ffc909efd34,166323485,0,0x0,8
tick,0x7ffc909efd34,166339163,0,0x0,8
tick,0x7ffc909efd34,166354694,0,0x0,8
tick,0x7ffc909efd34,166370166,0,0x0,8
tick,0x7ffc909efd34,166385619,0,0x0,8
tick,0x7ffc909efd34,166401026,0,0x0,8
tick,0x7ffc909efd34,166416080,0,0x0,8
tick,0x7ffc909efd34,166431617,0,0x0,8
tick,0x7ffc909efd34,166447100,0,0x0,8
tick,0x7ffc909efd34,166462277,0,0x0,8
tick,0x7ffc909efd34,166478391,0,0x0,8
tick,0x7ffc909efd34,166493294,0,0x0,8
tick,0x7ffc909efd34,166508440,0,0x0,8
tick,0x7ffc909efd34,166524487,0,0x0,8
tick,0x7ffc909efd34,166539797,0,0x0,8
tick,0x7ffc909efd34,166555543,0,0x0,8
tick,0x7ffc909efd34,166570616,0,0x0,8
tick,0x7ffc909efd34,166586332,0,0x0,8
tick,0x7ffc909efd34,166601384,0,0x0,8
tick,0x7ffc909efd34,166617334,0,0x0,8
tick,0x7ffc909efd34,166632664,0,0x0,8
tick,0x7ffc909efd34,166648195,0,0x0,8
tick,0x7ffc909efd34,166663555,0,0x0,8
tick,0x7ffc909efd34,166679702,0,0x0,8
tick,0x7ffc909efd34,166695336,0,0x0,8
tick,0x7ffc909efd34,166710530,0,0x0,8
tick,0x7ffc909efd34,166726041,0,0x0,8
tick,0x7ffc909efd34,166741224,0,0x0,8
tick,0x7ffc909efd34,166756548,0,0x0,8
tick,0x7ffc909efd34,166772137,0,0x0,8
tick,0x7ffc909efd34,166787439,0,0x0,8
tick,0x7ffc909efd34,166803087,0,0x0,8
tick,0x7ffc909efd34,166818694,0,0x0,8
tick,0x7ffc909efd34,166834555,0,0x0,8
tick,0x7ffc909efd34,166850285,0,0x0,8
tick,0x7ffc909efd34,166866205,0,0x0,8
tick,0x7ffc909efd34,166881742,0,0x0,8
tick,0x7ffc909efd34,166897445,0,0x0,8
tick,0x7ffc909efd34,166913363,0,0x0,8
tick,0x7ffc909efd34,166929051,0,0x0,8
tick,0x7ffc909efd34,166945026,0,0x0,8
tick,0x7ffc909efd34,166961135,0,0x0,8
tick,0x7ffc909efd34,166976575,0,0x0,8
tick,0x7ffc909efd34,166992726,0,0x0,8
tick,0x7ffc909efd34,167008210,0,0x0,8
tick,0x7ffc909efd34,167023756,0,0x0,8
tick,0x7ffc909efd34,167038778,0,0x0,8
tick,0x7ffc909efd34,167054363,0,0x0,8
tick,0x7ffc909efd34,167070392,0,0x0,8
tick,0x7ffc909efd34,167086793,0,0x0,8
tick,0x7ffc909efd34,167102050,0,0x0,8
tick,0x7ffc909efd34,167117925,0,0x0,8
tick,0x7ffc909efd34,167133058,0,0x0,8
tick,0x7ffc909efd34,167148453,0,0x0,8
tick,0x7ffc909efd34,167164541,0,0x0,8
tick,0x7ffc909efd34,167180229,0,0x0,8
tick,0x7ffc909efd34,167196519,0,0x0,8
tick,0x7ffc909efd34,167211942,0,0x0,8
tick,0x7ffc909efd34,167227487,0,0x0,8
tick,0x7ffc909efd34,167243014,0,0x0,8
tick,0x7ffc909efd34,167258891,0,0x0,8
tick,0x7ffc909efd34,167274769,0,0x0,8
tick,0x7ffc909efd34,167290295,0,0x0,8
tick,0x7ffc909efd34,167305948,0,0x0,8
tick,0x7ffc909efd34,167321837,0,0x0,8
tick,0x7ffc909efd34,167337773,0,0x0,8
tick,0x7ffc909efd34,167353312,0,0x0,8
tick,0x7ffc909efd34,167368956,0,0x0,8
tick,0x7ffc909efd34,167384787,0,0x0,8
tick,0x7ffc909efd34,167400660,0,0x0,8
tick,0x7ffc909efd34,167416172,0,0x0,8
tick,0x7ffc909efd34,167431855,0,0x0,8
tick,0x7ffc909efd34,167447722,0,0x0,8
tick,0x7ffc909efd34,167463783,0,0x0,8
tick,0x7ffc909efd34,167479164,0,0x0,8
tick,0x7ffc909efd34,167494775,0,0x0,8
tick,0x7ffc909efd34,167510037,0,0x0,8
tick,0x7ffc909efd34,167525454,0,0x0,8
tick,0x7ffc909efd34,167540750,0,0x0,8
tick,0x7ffc909efd34,167556445,0,0x0,8
tick,0x7ffc909efd34,167571862,0,0x0,8
tick,0x7ffc909efd34,167587194,0,0x0,8
tick,0x7ffc909efd34,167602681,0,0x0,8
tick,0x7ffc909efd34,167618141,0,0x0,8
tick,0x7ffc909efd34,167633588,0,0x0,8
tick,0x7ffc909efd34,167649983,0,0x0,8
tick,0x7ffc909efd34,167665119,0,0x0,8
tick,0x7ffc909efd34,167680847,0,0x0,8
tick,0x7ffc909efd34,167696235,0,0x0,8
tick,0x7ffc909efd34,167711709,0,0x0,8
tick,0x7ffc909efd34,167726724,0,0x0,8
tick,0x7ffc909efd34,167742338,0,0x0,8
tick,0x7ffc909efd34,167758554,0,0x0,8
tick,0x7ffc909efd34,167774040,0,0x0,8
tick,0x7ffc909efd34,167790374,0,0x0,8
tick,0x7ffc909efd34,167805990,0,0x0,8
tick,0x7ffc909efd34,167821464,0,0x0,8
tick,0x7ffc909efd34,167837232,0,0x0,8
tick,0x7ffc909efd34,167852593,0,0x0,8
tick,0x7ffc909efd34,167868118,0,0x0,8
tick,0x7ffc909efd34,167883378,0,0x0,8
tick,0x7ffc909efd34,167899592,0,0x0,8
tick,0x7ffc909efd34,167915018,0,0x0,8
tick,0x7ffc909efd34,167930713,0,0x0,8
tick,0x7ffc909efd34,167946123,0,0x0,8
tick,0x7ffc909efd34,167961364,0,0x0,8
tick,0x7ffc909efd34,167976666,0,0x0,8
tick,0x7ffc909efd34,167992225,0,0x0,8
tick,0x7ffc909efd34,168007551,0,0x0,8
tick,0x7ffc909efd34,168023166,0,0x0,8
tick,0x7ffc909efd34,168038486,0,0x0,8
tick,0x7ffc909efd34,168054710,0,0x0,8
tick,0x7ffc909efd34,168069999,0,0x0,8
tick,0x7ffc909efd34,168085444,0,0x0,8
tick,0x7ffc909efd34,168101538,0,0x0,8
tick,0x7ffc909efd34,168117132,0,0x0,8
tick,0x7ffc909efd34,168132497,0,0x0,8
tick,0x7ffc909efd34,168147578,0,0x0,8
tick,0x7ffc909efd34,168163265,0,0x0,8
tick,0x7ffc909efd34,168178814,0,0x0,8
tick,0x7ffc909efd34,168194277,0,0x0,8
tick,0x7ffc909efd34,168210048,0,0x0,8
tick,0x7ffc909efd34,168225534,0,0x0,8
tick,0x7ffc909efd34,168240579,0,0x0,8
tick,0x7ffc909efd34,168256228,0,0x0,8
tick,0x7ffc909efd34,168271974,0,0x0,8
tick,0x7ffc909efd34,168287357,0,0x0,8
tick,0x7ffc909efd34,168303282,0,0x0,8
tick,0x7ffc909efd34,168319515,0,0x0,8
tick,0x7ffc909efd34,168334867,0,0x0,8
tick,0x7ffc909efd34,168350398,0,0x0,8
tick,0x7ffc909efd34,168365943,0,0x0,8
tick,0x7ffc909efd34,168381092,0,0x0,8
tick,0x7ffc909efd34,168396994,0,0x0,8
tick,0x7ffc909efd34,168412717,0,0x0,8
tick,0x7ffc909efd34,168428289,0,0x0,8
tick,0x7ffc909efd34,168444396,0,0x0,8
tick,0x7ffc909efd34,168459740,0,0x0,8
tick,0x7ffc909efd34,168475480,0,0x0,8
tick,0x7ffc909efd34,168491095,0,0x0,8
tick,0x7ffc909efd34,168506290,0,0x0,8
tick,0x7ffc909efd34,168521958,0,0x0,8
tick,0x7ffc909efd34,168537797,0,0x0,8
tick,0x7ffc909efd34,168553252,0,0x0,8
tick,0x7ffc909efd34,168568202,0,0x0,8
tick,0x7ffc909efd34,168583509,0,0x0,8
tick,0x7ffc909efd34,168599210,0,0x0,8
tick,0x7ffc909efd34,168614685,0,0x0,8
tick,0x7ffc909efd34,168630143,0,0x0,8
tick,0x7ffc909efd34,168646207,0,0x0,8
tick,0x7ffc909efd34,168661848,0,0x0,8
tick,0x7ffc909efd34,168677157,0,0x0,8
tick,0x7ffc909efd34,168693092,0,0x0,8
tick,0x7ffc909efd34,168708755,0,0x0,8
tick,0x7ffc909efd34,168724836,0,0x0,8
tick,0x7ffc909efd34,168740469,0,0x0,8
tick,0x7ffc909efd34,168756121,0,0x0,8
tick,0x7ffc909efd34,168771152,0,0x0,8
tick,0x7ffc909efd34,168787143,0,0x0,8
tick,0x7ffc909efd34,168802528,0,0x0,8
tick,0x7ffc909efd34,168817917,0,0x0,8
tick,0x7ffc909efd34,168833495,0,0x0,8
tick,0x7ffc909efd34,168849198,0,0x0,8
tick,0x7ffc909efd34,168864838,0,0x0,8
tick,0x7ffc909efd34,168880166,0,0x0,8
tick,0x7ffc909efd34,168895727,0,0x0,8
tick,0x7ffc909efd34,168911640,0,0x0,8
tick,0x7ffc909efd34,168927557,0,0x0,8
tick,0x7ffc909efd34,168943816,0,0x0,8
tick,0x7ffc909efd34,168959537,0,0x0,8
tick,0x7ffc909efd34,168975515,0,0x0,8
tick,0x7ffc909efd34,168990775,0,0x0,8
tick,0x7ffc909efd34,169005717,0,0x0,8
tick,0x7ffc909efd34,169020947,0,0x0,8
tick,0x7ffc909efd34,169036703,0,0x0,8
tick,0x7ffc909efd34,169052219,0,0x0,8
tick,0x7ffc909efd34,169067714,0,0x0,8
tick,0x7ffc909efd34,169084716,0,0x0,8
tick,0x7ffc909efd34,169099035,0,0x0,8
tick,0x7ffc909efd34,169114541,0,0x0,8
tick,0x7ffc909efd34,169130028,0,0x0,8
tick,0x7ffc909efd34,169145829,0,0x0,8
tick,0x7ffc909efd34,169161405,0,0x0,8
tick,0x7ffc909efd34,169177526,0,0x0,8
tick,0x7ffc909efd34,169194114,0,0x0,8
tick,0x7ffc909efd34,169209457,0,0x0,8
tick,0x7ffc909efd34,169225479,0,0x0,8
tick,0x7ffc909efd34,169240779,0,0x0,8
tick,0x7ffc909efd34,169256891,0,0x0,8
tick,0x7ffc909efd34,169272828,0,0x0,8
tick,0x7ffc909efd34,169288656,0,0x0,8
tick,0x7ffc909efd34,169304199,0,0x0,8
tick,0x7ffc909efd34,169320029,0,0x0,8
tick,0x7ffc909efd34,169335654,0,0x0,8
tick,0x7ffc909efd34,169351085,0,0x0,8
tick,0x7ffc909efd34,169366289,0,0x0,8
tick,0x7ffc909efd34,169382303,0,0x0,8
tick,0x7ffc909efd34,169398089,0,0x0,8
tick,0x7ffc909efd34,169413980,0,0x0,8
tick,0x7ffc909efd34,169429406,0,0x0,8
tick,0x7ffc909efd34,169444491,0,0x0,8
tick,0x7ffc909efd34,169459606,0,0x0,8
tick,0x7ffc909efd34,169476862,0,0x0,8
tick,0x7ffc909efd34,169490704,0,0x0,8
tick,0x7ffc909efd34,169506637,0,0x0,8
tick,0x7ffc909efd34,169522052,0,0x0,8
tick,0x7ffc909efd34,169538151,0,0x0,8
tick,0x7ffc909efd34,169553685,0,0x0,8
tick,0x7ffc909efd34,169569267,0,0x0,8
tick,0x7ffc909efd34,169584910,0,0x0,8
tick,0x7ffc909efd34,169600653,0,0x0,8
tick,0x7ffc909efd34,169615774,0,0x0,8
tick,0x7ffc909efd34,169631335,0,0x0,8
tick,0x7ffc909efd34,169646843,0,0x0,8
tick,0x7ffc909efd34,169661969,0,0x0,8
tick,0x7ffc909efd34,169678311,0,0x0,8
tick,0x7ffc909efd34,169694282,0,0x0,8
tick,0x7ffc909efd34,169709780,0,0x0,8
tick,0x7ffc909efd34,169743563,0,0x0,8
tick,0x7ffc909efd34,169760752,0,0x0,8
tick,0x7ffc909efd34,169776589,0,0x0,8
tick,0x7ffc909efd34,169788732,0,0x0,8
tick,0x7ffc909efd34,169804817,0,0x0,8
tick,0x7ffc909efd34,169820812,0,0x0,8
tick,0x7ffc909efd34,169836753,0,0x0,8
tick,0x7ffc909efd34,169852827,0,0x0,8
tick,0x7ffc909efd34,169868330,0,0x0,8
tick,0x7ffc909efd34,169884265,0,0x0,8
tick,0x7ffc909efd34,169900597,0,0x0,8
tick,0x7ffc909efd34,169916065,0,0x0,8
tick,0x7ffc909efd34,169931379,0,0x0,8
tick,0x7ffc909efd34,169946801,0,0x0,8
tick,0x7ffc909efd34,169962564,0,0x0,8
tick,0x7ffc909efd34,169978038,0,0x0,8
tick,0x7ffc909efd34,169993564,0,0x0,8
tick,0x7ffc909efd34,170009093,0,0x0,8
tick,0x7ffc909efd34,170025167,0,0x0,8
tick,0x7ffc909efd34,170040394,0,0x0,8
tick,0x7ffc909efd34,170056246,0,0x0,8
tick,0x7ffc909efd34,170071460,0,0x0,8
tick,0x7ffc909efd34,170087183,0,0x0,8
tick,0x7ffc909efd34,170102627,0,0x0,8
tick,0x7ffc909efd34,170118067,0,0x0,8
tick,0x7ffc909efd34,170133525,0,0x0,8
tick,0x7ffc909efd34,170149987,0,0x0,8
tick,0x7ffc909efd34,170165151,0,0x0,8
tick,0x7ffc909efd34,170180486,0,0x0,8
tick,0x7ffc909efd34,170196072,0,0x0,8
tick,0x7ffc909efd34,170211297,0,0x0,8
tick,0x7ffc909efd34,170227208,0,0x0,8
tick,0x7ffc909efd34,170243272,0,0x0,8
tick,0x7ffc909efd34,170258387,0,0x0,8
tick,0x7ffc909efd34,170274082,0,0x0,8
tick,0x7ffc909efd34,170289569,0,0x0,8
tick,0x7ffc909efd34,170305253,0,0x0,8
tick,0x7ffc909efd34,170320649,0,0x0,8
tick,0x7ffc909efd34,170336086,0,0x0,8
tick,0x7ffc909efd34,170351881,0,0x0,8
tick,0x7ffc909efd34,170367963,0,0x0,8
tick,0x7ffc909efd34,170382531,0,0x0,8
tick,0x7ffc909efd34,170398067,0,0x0,8
tick,0x7ffc909efd34,170412838,0,0x0,8
tick,0x7ffc909efd34,170427766,0,0x0,8
tick,0x7ffc909efd34,170443613,0,0x0,8
tick,0x7ffc909efd34,170459548,0,0x0,8
tick,0x7ffc909efd34,170474985,0,0x0,8
tick,0x7ffc909efd34,170490206,0,0x0,8
tick,0x7ffc909efd34,170506082,0,0x0,8
tick,0x7ffc909efd34,170521607,0,0x0,8
tick,0x7ffc909efd34,170537778,0,0x0,8
tick,0x7ffc909efd34,170553078,0,0x0,8
tick,0x7ffc909efd34,170568788,0,0x0,8
tick,0x7ffc909efd34,170584068,0,0x0,8
tick,0x7ffc909efd34,170599074,0,0x0,8
tick,0x7ffc909efd34,170614649,0,0x0,8
tick,0x7ffc909efd34,170630491,0,0x0,8
tick,0x7ffc909efd34,170646254,0,0x0,8
tick,0x7ffc909efd34,170661945,0,0x0,8
tick,0x7ffc909efd34,170678096,0,0x0,8
tick,0x7ffc909efd34,170694013,0,0x0,8
tick,0x7ffc909efd34,170710006,0,0x0,8
tick,0x7ffc909efd34,170725903,0,0x0,8
tick,0x7ffc909efd34,170741934,0,0x0,8
tick,0x7ffc909efd34,170757181,0,0x0,8
tick,0x7ffc909efd34,170773146,0,0x0,8
tick,0x7ffc909efd34,170789169,0,0x0,8
tick,0x7ffc909efd34,170804575,0,0x0,8
tick,0x7ffc909efd34,170820737,0,0x0,8
tick,0x7ffc909efd34,170836178,0,0x0,8
tick,0x7ffc909efd34,170851541,0,0x0,8
tick,0x7ffc909efd34,170867152,0,0x0,8
tick,0x7ffc909efd34,170883032,0,0x0,8
tick,0x7ffc909efd34,170898259,0,0x0,8
tick,0x7ffc909efd34,170913394,0,0x0,8
tick,0x7ffc909efd34,170928655,0,0x0,8
tick,0x7ffc909efd34,170944073,0,0x0,8
tick,0x7ffc909efd34,170960263,0,0x0,8
tick,0x7ffc909efd34,170975627,0,0x0,8
tick,0x7ffc909efd34,170990963,0,0x0,8
tick,0x7ffc909efd34,171006907,0,0x0,8
tick,0x7ffc909efd34,171022745,0,0x0,8
tick,0x7ffc909efd34,171037867,0,0x0,8
tick,0x7ffc909efd34,171053065,0,0x0,8
tick,0x7ffc909efd34,171069243,0,0x0,8
tick,0x7ffc909efd34,171085137,0,0x0,8
tick,0x7ffc909efd34,171100105,0,0x0,8
tick,0x7ffc909efd34,171116133,0,0x0,8
tick,0x7ffc909efd34,171132104,0,0x0,8
tick,0x7ffc909efd34,171148437,0,0x0,8
tick,0x7ffc909efd34,171164164,0,0x0,8
tick,0x7ffc909efd34,171180409,0,0x0,8
tick,0x7ffc909efd34,171195891,0,0x0,8
tick,0x7ffc909efd34,171211309,0,0x0,8
tick,0x7ffc909efd34,171226780,0,0x0,8
tick,0x7ffc909efd34,171242644,0,0x0,8
tick,0x7ffc909efd34,171258404,0,0x0,8
tick,0x7ffc909efd34,171273298,0,0x0,8
tick,0x7ffc909efd34,171288749,0,0x0,8
tick,0x7ffc909efd34,171304216,0,0x0,8
tick,0x7ffc909efd34,171319372,0,0x0,8
tick,0x7ffc909efd34,171334682,0,0x0,8
tick,0x7ffc909efd34,171350768,0,0x0,8
tick,0x7ffc909efd34,171366137,0,0x0,8
tick,0x7ffc909efd34,171381505,0,0x0,8
tick,0x7ffc909efd34,171396451,0,0x0,8
tick,0x7ffc909efd34,171411711,0,0x0,8
tick,0x7ffc909efd34,171427276,0,0x0,8
tick,0x7ffc909efd34,171442630,0,0x0,8
tick,0x7ffc909efd34,171458276,0,0x0,8
tick,0x7ffc909efd34,171473464,0,0x0,8
tick,0x7ffc909efd34,171488886,0,0x0,8
tick,0x7ffc909efd34,171504135,0,0x0,8
tick,0x7ffc909efd34,171519496,0,0x0,8
tick,0x7ffc909efd34,171535141,0,0x0,8
tick,0x7ffc909efd34,171551304,0,0x0,8
tick,0x7ffc909efd34,171566754,0,0x0,8
tick,0x7ffc909efd34,171582712,0,0x0,8
tick,0x7ffc909efd34,171598164,0,0x0,8
tick,0x7ffc909efd34,171613551,0,0x0,8
tick,0x7ffc909efd34,171628956,0,0x0,8
tick,0x7ffc909efd34,171644712,0,0x0,8
tick,0x7ffc909efd34,171660813,0,0x0,8
tick,0x7ffc909efd34,171676673,0,0x0,8
tick,0x7ffc909efd34,171692010,0,0x0,8
tick,0x7ffc909efd34,171707344,0,0x0,8
tick,0x7ffc909efd34,171722617,0,0x0,8
tick,0x7ffc909efd34,171737785,0,0x0,8
tick,0x7ffc909efd34,171753072,0,0x0,8
tick,0x7ffc909efd34,171768631,0,0x0,8
tick,0x7ffc909efd34,171784258,0,0x0,8
tick,0x7ffc909efd34,171799771,0,0x0,8
tick,0x7ffc909efd34,171815783,0,0x0,8
tick,0x7ffc909efd34,171831351,0,0x0,8
tick,0x7ffc909efd34,171846933,0,0x0,8
tick,0x7ffc909efd34,171862715,0,0x0,8
tick,0x7ffc909efd34,171878423,0,0x0,8
tick,0x7ffc909efd34,171894349,0,0x0,8
tick,0x7ffc909efd34,171909446,0,0x0,8
tick,0x7ffc909efd34,171925357,0,0x0,8
tick,0x7ffc909efd34,171940903,0,0x0,8
tick,0x7ffc909efd34,171956490,0,0x0,8
tick,0x7ffc909efd34,171972339,0,0x0,8
tick,0x7ffc909efd34,171988083,0,0x0,8
tick,0x7ffc909efd34,172003663,0,0x0,8
tick,0x7ffc909efd34,172019577,0,0x0,8
tick,0x7ffc909efd34,172035178,0,0x0,8
tick,0x7ffc909efd34,172051523,0,0x0,8
tick,0x7ffc909efd34,172067489,0,0x0,8
tick,0x7ffc909efd34,172082836,0,0x0,8
tick,0x7ffc909efd34,172098542,0,0x0,8
tick,0x7ffc909efd34,172114082,0,0x0,8
tick,0x7ffc909efd34,172129064,0,0x0,8
tick,0x7ffc909efd34,172144773,0,0x0,8
tick,0x7ffc909efd34,172160371,0,0x0,8
tick,0x7ffc909efd34,172176284,0,0x0,8
tick,0x7ffc909efd34,172191805,0,0x0,8
tick,0x7ffc909efd34,172207034,0,0x0,8
tick,0x7ffc909efd34,172222492,0,0x0,8
tick,0x7ffc909efd34,172238284,0,0x0,8
tick,0x7ffc909efd34,172253905,0,0x0,8
tick,0x7ffc909efd34,172270349,0,0x0,8
tick,0x7ffc909efd34,172285110,0,0x0,8
tick,0x7ffc909efd34,172301121,0,0x0,8
tick,0x7ffc909efd34,172316360,0,0x0,8
tick,0x7ffc909efd34,172332454,0,0x0,8
tick,0x7ffc909efd34,172348317,0,0x0,8
tick,0x7ffc909efd34,172363862,0,0x0,8
tick,0x7ffc909efd34,172379284,0,0x0,8
tick,0x7ffc909efd34,172394343,0,0x0,8
tick,0x7ffc909efd34,172409831,0,0x0,8
tick,0x7ffc909efd34,172425264,0,0x0,8
tick,0x7ffc909efd34,172441714,0,0x0,8
tick,0x7ffc909efd34,172456248,0,0x0,8
tick,0x7ffc909efd34,172471565,0,0x0,8
tick,0x7ffc909efd34,172486798,0,0x0,8
tick,0x7ffc909efd34,172502052,0,0x0,8
tick,0x7ffc909efd34,172517711,0,0x0,8
tick,0x7ffc909efd34,172533662,0,0x0,8
tick,0x7ffc909efd34,172548795,0,0x0,8
tick,0x7ffc909efd34,172564580,0,0x0,8
tick,0x7ffc909efd34,172580416,0,0x0,8
tick,0x7ffc909efd34,172596021,0,0x0,8
tick,0x7ffc909efd34,172611638,0,0x0,8
tick,0x7ffc909efd34,172626797,0,0x0,8
tick,0x7ffc909efd34,172642851,0,0x0,8
tick,0x7ffc909efd34,172658359,0,0x0,8
tick,0x7ffc909efd34,172673956,0,0x0,8
tick,0x7ffc909efd34,172689167,0,0x0,8
tick,0x7ffc909efd34,172705482,0,0x0,8
tick,0x7ffc909efd34,172720824,0,0x0,8
tick,0x7ffc909efd34,172736464,0,0x0,8
tick,0x7ffc909efd34,172751842,0,0x0,8
tick,0x7ffc909efd34,172767296,0,0x0,8
tick,0x7ffc909efd34,172782671,0,0x0,8
tick,0x7ffc909efd34,172798384,0,0x0,8
tick,0x7ffc909efd34,172814355,0,0x0,8
tick,0x7ffc909efd34,172829886,0,0x0,8
tick,0x7ffc909efd34,172845866,0,0x0,8
tick,0x7ffc909efd34,172861223,0,0x0,8
tick,0x7ffc909efd34,172876978,0,0x0,8
tick,0x7ffc909efd34,172892972,0,0x0,8
tick,0x7ffc909efd34,172908170,0,0x0,8
tick,0x7ffc909efd34,172923569,0,0x0,8
tick,0x7ffc909efd34,172939159,0,0x0,8
tick,0x7ffc909efd34,172954420,0,0x0,8
tick,0x7ffc909efd34,172969634,0,0x0,8
tick,0x7ffc909efd34,172985238,0,0x0,8
tick,0x7ffc909efd34,173000719,0,0x0,8
tick,0x7ffc909efd34,173016299,0,0x0,8
tick,0x7ffc909efd34,173031755,0,0x0,8
tick,0x7ffc909efd34,173047884,0,0x0,8
tick,0x7ffc909efd34,173063223,0,0x0,8
tick,0x7ffc909efd34,173079280,0,0x0,8
tick,0x7ffc909efd34,173094760,0,0x0,8
tick,0x7ffc909efd34,173109794,0,0x0,8
tick,0x7ffc909efd34,173125936,0,0x0,8
tick,0x7ffc909efd34,173142083,0,0x0,8
tick,0x7ffc909efd34,173157956,0,0x0,8
tick,0x7ffc909efd34,173173299,0,0x0,8
tick,0x7ffc909efd34,173188803,0,0x0,8
tick,0x7ffc909efd34,173204565,0,0x0,8
tick,0x7ffc909efd34,173219902,0,0x0,8
tick,0x7ffc909efd34,173235703,0,0x0,8
tick,0x7ffc909efd34,173251652,0,0x0,8
tick,0x7ffc909efd34,173267214,0,0x0,8
tick,0x7ffc909efd34,173283335,0,0x0,8
tick,0x7ffc909efd34,173298595,0,0x0,8
tick,0x7ffc909efd34,173314005,0,0x0,8
tick,0x7ffc909efd34,173329357,0,0x0,8
tick,0x7ffc909efd34,173344786,0,0x0,8
tick,0x7ffc909efd34,173361238,0,0x0,8
tick,0x7ffc909efd34,173376644,0,0x0,8
tick,0x7ffc909efd34,173391930,0,0x0,8
tick,0x7ffc909efd34,173407191,0,0x0,8
tick,0x7ffc909efd34,173423160,0,0x0,8
tick,0x7ffc909efd34,173437841,0,0x0,8
tick,0x7ffc909efd34,173453638,0,0x0,8
tick,0x7ffc909efd34,173469586,0,0x0,8
tick,0x7ffc909efd34,173485391,0,0x0,8
tick,0x7ffc909efd34,173501634,0,0x0,8
tick,0x7ffc909efd34,173516984,0,0x0,8
tick,0x7ffc909efd34,173532449,0,0x0,8
tick,0x7ffc909efd34,173548675,0,0x0,8
tick,0x7ffc909efd34,173563931,0,0x0,8
tick,0x7ffc909efd34,173579711,0,0x0,8
tick,0x7ffc909efd34,173595105,0,0x0,8
tick,0x7ffc909efd34,173611457,0,0x0,8
tick,0x7ffc909efd34,173626807,0,0x0,8
tick,0x7ffc909efd34,173641873,0,0x0,8
tick,0x7ffc909efd34,173658411,0,0x0,8
tick,0x7ffc909efd34,173672699,0,0x0,8
tick,0x7ffc909efd34,173688574,0,0x0,8
tick,0x7ffc909efd34,173703958,0,0x0,8
tick,0x7ffc909efd34,173719369,0,0x0,8
tick,0x7ffc909efd34,173735107,0,0x0,8
tick,0x7ffc909efd34,173750548,0,0x0,8
tick,0x7ffc909efd34,173766233,0,0x0,8
tick,0x7ffc909efd34,173781510,0,0x0,8
tick,0x7ffc909efd34,173797774,0,0x0,8
tick,0x7ffc909efd34,173813336,0,0x0,8
tick,0x7ffc909efd34,173829167,0,0x0,8
tick,0x7ffc909efd34,173845236,0,0x0,8
tick,0x7ffc909efd34,173860773,0,0x0,8
tick,0x7ffc909efd34,173876243,0,0x0,8
tick,0x7ffc909efd34,173891420,0,0x0,8
tick,0x7ffc909efd34,173906941,0,0x0,8
tick,0x7ffc909efd34,173922273,0,0x0,8
tick,0x7ffc909efd34,173937472,0,0x0,8
tick,0x7ffc909efd34,173953693,0,0x0,8
tick,0x7ffc909efd34,173968693,0,0x0,8
tick,0x7ffc909efd34,173984250,0,0x0,8
tick,0x7ffc909efd34,173999383,0,0x0,8
tick,0x7ffc909efd34,174015729,0,0x0,8
tick,0x7ffc909efd34,174031271,0,0x0,8
tick,0x7ffc909efd34,174047471,0,0x0,8
tick,0x7ffc909efd34,174062711,0,0x0,8
tick,0x7ffc909efd34,174078219,0,0x0,8
tick,0x7ffc909efd34,174093607,0,0x0,8
tick,0x7ffc909efd34,174109925,0,0x0,8
tick,0x7ffc909efd34,174125082,0,0x0,8
tick,0x7ffc909efd34,174141100,0,0x0,8
tick,0x7ffc909efd34,174156377,0,0x0,8
tick,0x7ffc909efd34,174172738,0,0x0,8
tick,0x7ffc909efd34,174187442,0,0x0,8
tick,0x7ffc909efd34,174203503,0,0x0,8
tick,0x7ffc909efd34,174218599,0,0x0,8
tick,0x7ffc909efd34,174234333,0,0x0,8
tick,0x7ffc909efd34,174249629,0,0x0,8
tick,0x7ffc909efd34,174265421,0,0x0,8
tick,0x7ffc909efd34,174280356,0,0x0,8
tick,0x7ffc909efd34,174295370,0,0x0,8
tick,0x7ffc909efd34,174310648,0,0x0,8
tick,0x7ffc909efd34,174326321,0,0x0,8
tick,0x7ffc909efd34,174341776,0,0x0,8
tick,0x7ffc909efd34,174357787,0,0x0,8
tick,0x7ffc909efd34,174372691,0,0x0,8
tick,0x7ffc909efd34,174388357,0,0x0,8
tick,0x7ffc909efd34,174403493,0,0x0,8
tick,0x7ffc909efd34,174419525,0,0x0,8
tick,0x7ffc909efd34,174434980,0,0x0,8
tick,0x7ffc909efd34,174451375,0,0x0,8
tick,0x7ffc909efd34,174466612,0,0x0,8
tick,0x7ffc909efd34,174482376,0,0x0,8
tick,0x7ffc909efd34,174497704,0,0x0,8
tick,0x7ffc909efd34,174513029,0,0x0,8
tick,0x7ffc909efd34,174528497,0,0x0,8
tick,0x7ffc909efd34,174544103,0,0x0,8
tick,0x7ffc909efd34,174559214,0,0x0,8
tick,0x7ffc909efd34,174575165,0,0x0,8
tick,0x7ffc909efd34,174591201,0,0x0,8
tick,0x7ffc909efd34,174606206,0,0x0,8
tick,0x7ffc909efd34,174621562,0,0x0,8
tick,0x7ffc909efd34,174637795,0,0x0,8
tick,0x7ffc909efd34,174653371,0,0x0,8
tick,0x7ffc909efd34,174669814,0,0x0,8
tick,0x7ffc909efd34,174685808,0,0x0,8
tick,0x7ffc909efd34,174701554,0,0x0,8
tick,0x7ffc909efd34,174717796,0,0x0,8
tick,0x7ffc909efd34,174733615,0,0x0,8
tick,0x7ffc909efd34,174749871,0,0x0,8
tick,0x7ffc909efd34,174765263,0,0x0,8
tick,0x7ffc909efd34,174780646,0,0x0,8
tick,0x7ffc909efd34,174796108,0,0x0,8
tick,0x7ffc909efd34,174811301,0,0x0,8
tick,0x7ffc909efd34,174826546,0,0x0,8
tick,0x7ffc909efd34,174841835,0,0x0,8
tick,0x7ffc909efd34,174857625,0,0x0,8
tick,0x7ffc909efd34,174873185,0,0x0,8
tick,0x7ffc909efd34,174889499,0,0x0,8
tick,0x7ffc909efd34,174904906,0,0x0,8
tick,0x7ffc909efd34,174920955,0,0x0,8
tick,0x7ffc909efd34,174936524,0,0x0,8
tick,0x7ffc909efd34,174951844,0,0x0,8
tick,0x7ffc909efd34,174967259,0,0x0,8
tick,0x7ffc909efd34,174983102,0,0x0,8
tick,0x7ffc909efd34,174998758,0,0x0,8
tick,0x7ffc909efd34,175014285,0,0x0,8
tick,0x7ffc909efd34,175029901,0,0x0,8
tick,0x7ffc909efd34,175045863,0,0x0,8
tick,0x7ffc909efd34,175061134,0,0x0,8
tick,0x7ffc909efd34,175076655,0,0x0,8
tick,0x7ffc909efd34,175091924,0,0x0,8
tick,0x7ffc909efd34,175107453,0,0x0,8
tick,0x7ffc909efd34,175122788,0,0x0,8
tick,0x7ffc909efd34,175138750,0,0x0,8
tick,0x7ffc909efd34,175154817,0,0x0,8
tick,0x7ffc909efd34,175170904,0,0x0,8
tick,0x7ffc909efd34,175186831,0,0x0,8
tick,0x7ffc909efd34,175207895,0,0x0,8
tick,0x7ffc909efd34,175218848,0,0x0,8
tick,0x7ffc909efd34,175235147,0,0x0,8
tick,0x7ffc909efd34,175250798,0,0x0,8
tick,0x7ffc909efd34,175267080,0,0x0,8
tick,0x7ffc909efd34,175282864,0,0x0,8
tick,0x7ffc909efd34,175298913,0,0x0,8
tick,0x7ffc909efd34,175317706,0,0x0,8
tick,0x7ffc909efd34,175331225,0,0x0,8
tick,0x7ffc909efd34,175344730,0,0x0,8
tick,0x7ffc909efd34,175360714,0,0x0,8
tick,0x7ffc909efd34,175375742,0,0x0,8
tick,0x7ffc909efd34,175390883,0,0x0,8
tick,0x7ffc909efd34,175406767,0,0x0,8
tick,0x7ffc909efd34,175421694,0,0x0,8
tick,0x7ffc909efd34,175437837,0,0x0,8
tick,0x7ffc909efd34,175453729,0,0x0,8
tick,0x7ffc909efd34,175469753,0,0x0,8
tick,0x7ffc909efd34,175485861,0,0x0,8
tick,0x7ffc909efd34,175502032,0,0x0,8
tick,0x7ffc909efd34,175517843,0,0x0,8
tick,0x7ffc909efd34,175533744,0,0x0,8
tick,0x7ffc909efd34,175549781,0,0x0,8
tick,0x7ffc909efd34,175565174,0,0x0,8
tick,0x7ffc909efd34,175580877,0,0x0,8
tick,0x7ffc909efd34,175596054,0,0x0,8
tick,0x7ffc909efd34,175612464,0,0x0,8
tick,0x7ffc909efd34,175628277,0,0x0,8
tick,0x7ffc909efd34,175643476,0,0x0,8
tick,0x7ffc909efd34,175658668,0,0x0,8
tick,0x7ffc909efd34,175674166,0,0x0,8
tick,0x7ffc909efd34,175689385,0,0x0,8
tick,0x7ffc909efd34,175704493,0,0x0,8
tick,0x7ffc909efd34,175719821,0,0x0,8
tick,0x7ffc909efd34,175735275,0,0x0,8
tick,0x7ffc909efd34,175750611,0,0x0,8
tick,0x7ffc909efd34,175765910,0,0x0,8
tick,0x7ffc909efd34,175781404,0,0x0,8
tick,0x7ffc909efd34,175796847,0,0x0,8
tick,0x7ffc909efd34,175812756,0,0x0,8
tick,0x7ffc909efd34,175828369,0,0x0,8
tick,0x7ffc909efd34,175844171,0,0x0,8
tick,0x7ffc909efd34,175859533,0,0x0,8
tick,0x7ffc909efd34,175875060,0,0x0,8
tick,0x7ffc909efd34,175890788,0,0x0,8
tick,0x7ffc909efd34,175906026,0,0x0,8
tick,0x7ffc909efd34,175921402,0,0x0,8
tick,0x7ffc909efd34,175936302,0,0x0,8
tick,0x7ffc909efd34,175951763,0,0x0,8
tick,0x7ffc909efd34,175967921,0,0x0,8
tick,0x7ffc909efd34,175983569,0,0x0,8
tick,0x7ffc909efd34,175999048,0,0x0,8
tick,0x7ffc909efd34,176014524,0,0x0,8
tick,0x7ffc909efd34,176029597,0,0x0,8
tick,0x7ffc909efd34,176045102,0,0x0,8
tick,0x7ffc909efd34,176060976,0,0x0,8
tick,0x7ffc909efd34,176076146,0,0x0,8
tick,0x7ffc909efd34,176091865,0,0x0,8
tick,0x7ffc909efd34,176107642,0,0x0,8
tick,0x7ffc909efd34,176122583,0,0x0,8
tick,0x7ffc909efd34,176137958,0,0x0,8
tick,0x7ffc909efd34,176153352,0,0x0,8
tick,0x7ffc909efd34,176168687,0,0x0,8
tick,0x7ffc909efd34,176183972,0,0x0,8
tick,0x7ffc909efd34,176199883,0,0x0,8
tick,0x7ffc909efd34,176215468,0,0x0,8
tick,0x7ffc909efd34,176230850,0,0x0,8
tick,0x7ffc909efd34,176246267,0,0x0,8
tick,0x7ffc909efd34,176262042,0,0x0,8
tick,0x7ffc909efd34,176277307,0,0x0,8
tick,0x7ffc909efd34,176293298,0,0x0,8
tick,0x7ffc909efd34,176309438,0,0x0,8
tick,0x7ffc909efd34,176324543,0,0x0,8
tick,0x7ffc909efd34,176341398,0,0x0,8
tick,0x7ffc909efd34,176356579,0,0x0,8
tick,0x7ffc909efd34,176372537,0,0x0,8
tick,0x7ffc909efd34,176388514,0,0x0,8
tick,0x7ffc909efd34,176404260,0,0x0,8
tick,0x7ffc909efd34,176419575,0,0x0,8
tick,0x7ffc909efd34,176435386,0,0x0,8
tick,0x7ffc909efd34,176451676,0,0x0,8
tick,0x7ffc909efd34,176467838,0,0x0,8
tick,0x7ffc909efd34,176484057,0,0x0,8
tick,0x7ffc909efd34,176499356,0,0x0,8
tick,0x7ffc909efd34,176515347,0,0x0,8
tick,0x7ffc909efd34,176531592,0,0x0,8
tick,0x7ffc909efd34,176547388,0,0x0,8
tick,0x7ffc909efd34,176563408,0,0x0,8
tick,0x7ffc909efd34,176579361,0,0x0,8
tick,0x7ffc909efd34,176594722,0,0x0,8
tick,0x7ffc909efd34,176610212,0,0x0,8
tick,0x7ffc909efd34,176626437,0,0x0,8
tick,0x7ffc909efd34,176641733,0,0x0,8
tick,0x7ffc909efd34,176658265,0,0x0,8
tick,0x7ffc909efd34,176673326,0,0x0,8
tick,0x7ffc909efd34,176688927,0,0x0,8
tick,0x7ffc909efd34,176704213,0,0x0,8
tick,0x7ffc909efd34,176719565,0,0x0,8
tick,0x7ffc909efd34,176735414,0,0x0,8
tick,0x7ffc909efd34,176751081,0,0x0,8
tick,0x7ffc909efd34,176766276,0,0x0,8
tick,0x7ffc909efd34,176782247,0,0x0,8
tick,0x7ffc909efd34,176798297,0,0x0,8
tick,0x7ffc909efd34,176813921,0,0x0,8
tick,0x7ffc909efd34,176830302,0,0x0,8
tick,0x7ffc909efd34,176846230,0,0x0,8
tick,0x7ffc909efd34,176861543,0,0x0,8
tick,0x7ffc909efd34,176877020,0,0x0,8
tick,0x7ffc909efd34,176893044,0,0x0,8
tick,0x7ffc909efd34,176908535,0,0x0,8
tick,0x7ffc909efd34,176924381,0,0x0,8
tick,0x7ffc909efd34,176939847,0,0x0,8
tick,0x7ffc909efd34,176955411,0,0x0,8
tick,0x7ffc909efd34,176971567,0,0x0,8
tick,0x7ffc909efd34,176987429,0,0x0,8
tick,0x7ffc909efd34,177003609,0,0x0,8
tick,0x7ffc909efd34,177019351,0,0x0,8
tick,0x7ffc909efd34,177035242,0,0x0,8
tick,0x7ffc909efd34,177051572,0,0x0,8
tick,0x7ffc909efd34,177067481,0,0x0,8
tick,0x7ffc909efd34,177083229,0,0x0,8
tick,0x7ffc909efd34,177099251,0,0x0,8
tick,0x7ffc909efd34,177115487,0,0x0,8
tick,0x7ffc909efd34,177131058,0,0x0,8
tick,0x7ffc909efd34,177147112,0,0x0,8
tick,0x7ffc909efd34,177162339,0,0x0,8
tick,0x7ffc909efd34,177177778,0,0x0,8
tick,0x7ffc909efd34,177193159,0,0x0,8
tick,0x7ffc909efd34,177208422,0,0x0,8
tick,0x7ffc909efd34,177224078,0,0x0,8
tick,0x7ffc909efd34,177239280,0,0x0,8
tick,0x7ffc909efd34,177254560,0,0x0,8
tick,0x7ffc909efd34,177270188,0,0x0,8
tick,0x7ffc909efd34,177285296,0,0x0,8
tick,0x7ffc909efd34,177300829,0,0x0,8
tick,0x7ffc909efd34,177315948,0,0x0,8
tick,0x7ffc909efd34,177331600,0,0x0,8
tick,0x7ffc909efd34,177346800,0,0x0,8
tick,0x7ffc909efd34,177362158,0,0x0,8
tick,0x7ffc909efd34,177377350,0,0x0,8
tick,0x7ffc909efd34,177392593,0,0x0,8
tick,0x7ffc909efd34,177408006,0,0x0,8
tick,0x7ffc909efd34,177423946,0,0x0,8
tick,0x7ffc909efd34,177439312,0,0x0,8
tick,0x7ffc909efd34,177454397,0,0x0,8
tick,0x7ffc909efd34,177469866,0,0x0,8
tick,0x7ffc909efd34,177485628,0,0x0,8
tick,0x7ffc909efd34,177501210,0,0x0,8
tick,0x7ffc909efd34,177515955,0,0x0,8
tick,0x7ffc909efd34,177531478,0,0x0,8
tick,0x7ffc909efd34,177547496,0,0x0,8
tick,0x7ffc909efd34,177563643,0,0x0,8
tick,0x7ffc909efd34,177579521,0,0x0,8
tick,0x7ffc909efd34,177595384,0,0x0,8
tick,0x7ffc909efd34,177611553,0,0x0,8
tick,0x7ffc909efd34,177626726,0,0x0,8
tick,0x7ffc909efd34,177642443,0,0x0,8
tick,0x7ffc909efd34,177657987,0,0x0,8
tick,0x7ffc909efd34,177673990,0,0x0,8
tick,0x7ffc909efd34,177688666,0,0x0,8
tick,0x7ffc909efd34,177704338,0,0x0,8
tick,0x7ffc909efd34,177720431,0,0x0,8
tick,0x7ffc909efd34,177735993,0,0x0,8
tick,0x7ffc909efd34,177751382,0,0x0,8
tick,0x7ffc909efd34,177766661,0,0x0,8
tick,0x7ffc909efd34,177782685,0,0x0,8
tick,0x7ffc909efd34,177798352,0,0x0,8
tick,0x7ffc909efd34,177813859,0,0x0,8
tick,0x7ffc909efd34,177830002,0,0x0,8
tick,0x7ffc909efd34,177845819,0,0x0,8
tick,0x7ffc909efd34,177861431,0,0x0,8
tick,0x7ffc909efd34,177877470,0,0x0,8
tick,0x7ffc909efd34,177892894,0,0x0,8
tick,0x7ffc909efd34,177908188,0,0x0,8
tick,0x7ffc909efd34,177924160,0,0x0,8
tick,0x7ffc909efd34,177939331,0,0x0,8
tick,0x7ffc909efd34,177954692,0,0x0,8
tick,0x7ffc909efd34,177970321,0,0x0,8
tick,0x7ffc909efd34,177985690,0,0x0,8
tick,0x7ffc909efd34,178000938,0,0x0,8
tick,0x7ffc909efd34,178016967,0,0x0,8
tick,0x7ffc909efd34,178032501,0,0x0,8
tick,0x7ffc909efd34,178047806,0,0x0,8
tick,0x7ffc909efd34,178063049,0,0x0,8
tick,0x7ffc909efd34,178079041,0,0x0,8
tick,0x7ffc909efd34,178094053,0,0x0,8
tick,0x7ffc909efd34,178110136,0,0x0,8
tick,0x7ffc909efd34,178125512,0,0x0,8
tick,0x7ffc909efd34,178140993,0,0x0,8
tick,0x7ffc909efd34,178156169,0,0x0,8
tick,0x7ffc909efd34,178172165,0,0x0,8
tick,0x7ffc909efd34,178188539,0,0x0,8
tick,0x7ffc909efd34,178203653,0,0x0,8
tick,0x7ffc909efd34,178219195,0,0x0,8
tick,0x7ffc909efd34,178235469,0,0x0,8
tick,0x7ffc909efd34,178251605,0,0x0,8
tick,0x7ffc909efd34,178267468,0,0x0,8
tick,0x7ffc909efd34,178283467,0,0x0,8
tick,0x7ffc909efd34,178299594,0,0x0,8
tick,0x7ffc909efd34,178315285,0,0x0,8
tick,0x7ffc909efd34,178331589,0,0x0,8
tick,0x7ffc909efd34,178347348,0,0x0,8
tick,0x7ffc909efd34,178362669,0,0x0,8
tick,0x7ffc909efd34,178378906,0,0x0,8
tick,0x7ffc909efd34,178395119,0,0x0,8
tick,0x7ffc909efd34,178410314,0,0x0,8
tick,0x7ffc909efd34,178426298,0,0x0,8
tick,0x7ffc909efd34,178442696,0,0x0,8
tick,0x7ffc909efd34,178458506,0,0x0,8
tick,0x7ffc909efd34,178474214,0,0x0,8
tick,0x7ffc909efd34,178489672,0,0x0,8
tick,0x7ffc909efd34,178505767,0,0x0,8
tick,0x7ffc909efd34,178520408,0,0x0,8
tick,0x7ffc909efd34,178536315,0,0x0,8
tick,0x7ffc909efd34,178552226,0,0x0,8
tick,0x7ffc909efd34,178567306,0,0x0,8
tick,0x7ffc909efd34,178605510,0,0x0,8
tick,0x7ffc909efd34,178639351,0,0x0,8
tick,0x7ffc909efd34,178649088,0,0x0,8
tick,0x7ffc909efd34,178661490,0,0x0,8
tick,0x7ffc909efd34,178687100,0,0x0,8
tick,0x7ffc909efd34,178693552,0,0x0,8
tick,0x7ffc909efd34,178709177,0,0x0,8
tick,0x7ffc909efd34,178725319,0,0x0,8
tick,0x7ffc909efd34,178742041,0,0x0,8
tick,0x7ffc909efd34,178757645,0,0x0,8
tick,0x7ffc909efd34,178773909,0,0x0,8
tick,0x7ffc909efd34,178789281,0,0x0,8
tick,0x7ffc909efd34,178805428,0,0x0,8
tick,0x7ffc909efd34,178821291,0,0x0,8
tick,0x7ffc909efd34,178836575,0,0x0,8
tick,0x7ffc909efd34,178852022,0,0x0,8
tick,0x7ffc909efd34,178868062,0,0x0,8
tick,0x7ffc909efd34,178883324,0,0x0,8
tick,0x7ffc909efd34,178898787,0,0x0,8
tick,0x7ffc909efd34,178914579,0,0x0,8
tick,0x7ffc909efd34,178930094,0,0x0,8
tick,0x7ffc909efd34,178945627,0,0x0,8
tick,0x7ffc909efd34,178961656,0,0x0,8
tick,0x7ffc909efd34,178977411,0,0x0,8
tick,0x7ffc909efd34,178992931,0,0x0,8
tick,0x7ffc909efd34,179008605,0,0x0,8
tick,0x7ffc909efd34,179024433,0,0x0,8
tick,0x7ffc909efd34,179040358,0,0x0,8
tick,0x7ffc909efd34,179055888,0,0x0,8
tick,0x7ffc909efd34,179071237,0,0x0,8
tick,0x7ffc909efd34,179086698,0,0x0,8
tick,0x7ffc909efd34,179102446,0,0x0,8
tick,0x7ffc909efd34,179118244,0,0x0,8
tick,0x7ffc909efd34,179133800,0,0x0,8
tick,0x7ffc909efd34,179149277,0,0x0,8
tick,0x7ffc909efd34,179164594,0,0x0,8
tick,0x7ffc909efd34,179180018,0,0x0,8
tick,0x7ffc909efd34,179195863,0,0x0,8
tick,0x7ffc909efd34,179211644,0,0x0,8
tick,0x7ffc909efd34,179227946,0,0x0,8
tick,0x7ffc909efd34,179243703,0,0x0,8
tick,0x7ffc909efd34,179259452,0,0x0,8
tick,0x7ffc909efd34,179275085,0,0x0,8
tick,0x7ffc909efd34,179291279,0,0x0,8
tick,0x7ffc909efd34,179306790,0,0x0,8
tick,0x7ffc909efd34,179321777,0,0x0,8
tick,0x7ffc909efd34,179337153,0,0x0,8
tick,0x7ffc909efd34,179352628,0,0x0,8
tick,0x7ffc909efd34,179368244,0,0x0,8
tick,0x7ffc909efd34,179383620,0,0x0,8
tick,0x7ffc909efd34,179399972,0,0x0,8
tick,0x7ffc909efd34,179415221,0,0x0,8
tick,0x7ffc909efd34,179430723,0,0x0,8
tick,0x7ffc909efd34,179446774,0,0x0,8
tick,0x7ffc909efd34,179462473,0,0x0,8
tick,0x7ffc909efd34,179478605,0,0x0,8
tick,0x7ffc909efd34,179493245,0,0x0,8
tick,0x7ffc909efd34,179508490,0,0x0,8
tick,0x7ffc909efd34,179524003,0,0x0,8
tick,0x7ffc909efd34,179538155,0,0x0,8
tick,0x7ffc909efd34,179553603,0,0x0,8
tick,0x7ffc909efd34,179569800,0,0x0,8
tick,0x7ffc909efd34,179585541,0,0x0,8
tick,0x7ffc909efd34,179600760,0,0x0,8
tick,0x7ffc909efd34,179615980,0,0x0,8
tick,0x7ffc909efd34,179631220,0,0x0,8
tick,0x7ffc909efd34,179646472,0,0x0,8
tick,0x7ffc909efd34,179661837,0,0x0,8
tick,0x7ffc909efd34,179677471,0,0x0,8
tick,0x7ffc909efd34,179693057,0,0x0,8
tick,0x7ffc909efd34,179707871,0,0x0,8
tick,0x7ffc909efd34,179723657,0,0x0,8
tick,0x7ffc909efd34,179738031,0,0x0,8
tick,0x7ffc909efd34,179752869,0,0x0,8
tick,0x7ffc909efd34,179768443,0,0x0,8
tick,0x7ffc909efd34,179784240,0,0x0,8
tick,0x7ffc909efd34,179799884,0,0x0,8
tick,0x7ffc909efd34,179815473,0,0x0,8
tick,0x7ffc909efd34,179830790,0,0x0,8
tick,0x7ffc909efd34,179846382,0,0x0,8
tick,0x7ffc909efd34,179862318,0,0x0,8
tick,0x7ffc909efd34,179877542,0,0x0,8
tick,0x7ffc909efd34,179893557,0,0x0,8
tick,0x7ffc909efd34,179908747,0,0x0,8
tick,0x7ffc909efd34,179924673,0,0x0,8
tick,0x7ffc909efd34,179940564,0,0x0,8
tick,0x7ffc909efd34,179956610,0,0x0,8
tick,0x7ffc909efd34,179972437,0,0x0,8
tick,0x7ffc909efd34,179988208,0,0x0,8
tick,0x7ffc909efd34,180003297,0,0x0,8
tick,0x7ffc909efd34,180018266,0,0x0,8
tick,0x7ffc909efd34,180033395,0,0x0,8
tick,0x7ffc909efd34,180048514,0,0x0,8
tick,0x7ffc909efd34,180064051,0,0x0,8
tick,0x7ffc909efd34,180079848,0,0x0,8
tick,0x7ffc909efd34,180095661,0,0x0,8
tick,0x7ffc909efd34,180111671,0,0x0,8
tick,0x7ffc909efd34,180127083,0,0x0,8
tick,0x7ffc909efd34,180142913,0,0x0,8
tick,0x7ffc909efd34,180159156,0,0x0,8
tick,0x7ffc909efd34,180175170,0,0x0,8
tick,0x7ffc909efd34,180190437,0,0x0,8
tick,0x7ffc909efd34,180206571,0,0x0,8
tick,0x7ffc909efd34,180221831,0,0x0,8
tick,0x7ffc909efd34,180237287,0,0x0,8
tick,0x7ffc909efd34,180252721,0,0x0,8
tick,0x7ffc909efd34,180268325,0,0x0,8
tick,0x7ffc909efd34,180284129,0,0x0,8
tick,0x7ffc909efd34,180299344,0,0x0,8
tick,0x7ffc909efd34,180314757,0,0x0,8
tick,0x7ffc909efd34,180330474,0,0x0,8
tick,0x7ffc909efd34,180345510,0,0x0,8
tick,0x7ffc909efd34,180360668,0,0x0,8
tick,0x7ffc909efd34,180375513,0,0x0,8
tick,0x7ffc909efd34,180390734,0,0x0,8
tick,0x7ffc909efd34,180406736,0,0x0,8
tick,0x7ffc909efd34,180421404,0,0x0,8
tick,0x7ffc909efd34,180437437,0,0x0,8
tick,0x7ffc909efd34,180452955,0,0x0,8
tick,0x7ffc909efd34,180468591,0,0x0,8
tick,0x7ffc909efd34,180484673,0,0x0,8
tick,0x7ffc909efd34,180500566,0,0x0,8
tick,0x7ffc909efd34,180516035,0,0x0,8
tick,0x7ffc909efd34,180531660,0,0x0,8
tick,0x7ffc909efd34,180547842,0,0x0,8
tick,0x7ffc909efd34,180563033,0,0x0,8
tick,0x7ffc909efd34,180578872,0,0x0,8
tick,0x7ffc909efd34,180594672,0,0x0,8
tick,0x7ffc909efd34,180610074,0,0x0,8
tick,0x7ffc909efd34,180625443,0,0x0,8
tick,0x7ffc909efd34,180641044,0,0x0,8
tick,0x7ffc909efd34,180656711,0,0x0,8
tick,0x7ffc909efd34,180672180,0,0x0,8
tick,0x7ffc909efd34,180687901,0,0x0,8
tick,0x7ffc909efd34,180703372,0,0x0,8
tick,0x7ffc909efd34,180719634,0,0x0,8
tick,0x7ffc909efd34,180735399,0,0x0,8
tick,0x7ffc909efd34,180751392,0,0x0,8
tick,0x7ffc909efd34,180767228,0,0x0,8
tick,0x7ffc909efd34,180782480,0,0x0,8
tick,0x7ffc909efd34,180798281,0,0x0,8
tick,0x7ffc909efd34,180813704,0,0x0,8
tick,0x7ffc909efd34,180828834,0,0x0,8
tick,0x7ffc909efd34,180844032,0,0x0,8
tick,0x7ffc909efd34,180859569,0,0x0,8
tick,0x7ffc909efd34,180874740,0,0x0,8
tick,0x7ffc909efd34,180890393,0,0x0,8
tick,0x7ffc909efd34,180906581,0,0x0,8
tick,0x7ffc909efd34,180920959,0,0x0,8
tick,0x7ffc909efd34,180936782,0,0x0,8
tick,0x7ffc909efd34,180952747,0,0x0,8
tick,0x7ffc909efd34,180968222,0,0x0,8
tick,0x7ffc909efd34,180983261,0,0x0,8
tick,0x7ffc909efd34,180999146,0,0x0,8
tick,0x7ffc909efd34,181014980,0,0x0,8
tick,0x7ffc909efd34,181030376,0,0x0,8
tick,0x7ffc909efd34,181046452,0,0x0,8
tick,0x7ffc909efd34,181061690,0,0x0,8
tick,0x7ffc909efd34,181077461,0,0x0,8
tick,0x7ffc909efd34,181092352,0,0x0,8
tick,0x7ffc909efd34,181108067,0,0x0,8
tick,0x7ffc909efd34,181123286,0,0x0,8
tick,0x7ffc909efd34,181139962,0,0x0,8
tick,0x7ffc909efd34,181154723,0,0x0,8
tick,0x7ffc909efd34,181170031,0,0x0,8
tick,0x7ffc909efd34,181185313,0,0x0,8
tick,0x7ffc909efd34,181200663,0,0x0,8
tick,0x7ffc909efd34,181215973,0,0x0,8
tick,0x7ffc909efd34,181231082,0,0x0,8
tick,0x7ffc909efd34,181246201,0,0x0,8
tick,0x7ffc909efd34,181261304,0,0x0,8
tick,0x7ffc909efd34,181277238,0,0x0,8
tick,0x7ffc909efd34,181292903,0,0x0,8
tick,0x7ffc909efd34,181308119,0,0x0,8
tick,0x7ffc909efd34,181324137,0,0x0,8
tick,0x7ffc909efd34,181339877,0,0x0,8
tick,0x7ffc909efd34,181355516,0,0x0,8
tick,0x7ffc909efd34,181371016,0,0x0,8
tick,0x7ffc909efd34,181386298,0,0x0,8
tick,0x7ffc909efd34,181401822,0,0x0,8
tick,0x7ffc909efd34,181417426,0,0x0,8
tick,0x7ffc909efd34,181433144,0,0x0,8
tick,0x7ffc909efd34,181449027,0,0x0,8
tick,0x7ffc909efd34,181464370,0,0x0,8
tick,0x7ffc909efd34,181479968,0,0x0,8
tick,0x7ffc909efd34,181496167,0,0x0,8
tick,0x7ffc909efd34,181512212,0,0x0,8
tick,0x7ffc909efd34,181528568,0,0x0,8
tick,0x7ffc909efd34,181544136,0,0x0,8
tick,0x7ffc909efd34,181559996,0,0x0,8
tick,0x7ffc909efd34,181576115,0,0x0,8
tick,0x7ffc909efd34,181592016,0,0x0,8
tick,0x7ffc909efd34,181607405,0,0x0,8
tick,0x7ffc909efd34,181623007,0,0x0,8
tick,0x7ffc909efd34,181638679,0,0x0,8
tick,0x7ffc909efd34,181653648,0,0x0,8
tick,0x7ffc909efd34,181669052,0,0x0,8
tick,0x7ffc909efd34,181684814,0,0x0,8
tick,0x7ffc909efd34,181700256,0,0x0,8
tick,0x7ffc909efd34,181716166,0,0x0,8
tick,0x7ffc909efd34,181731919,0,0x0,8
tick,0x7ffc909efd34,181747555,0,0x0,8
tick,0x7ffc909efd34,181763066,0,0x0,8
tick,0x7ffc909efd34,181778247,0,0x0,8
tick,0x7ffc909efd34,181793571,0,0x0,8
tick,0x7ffc909efd34,181809352,0,0x0,8
tick,0x7ffc909efd34,181824713,0,0x0,8
tick,0x7ffc909efd34,181840633,0,0x0,8
tick,0x7ffc909efd34,181856159,0,0x0,8
tick,0x7ffc909efd34,181871101,0,0x0,8
tick,0x7ffc909efd34,181886532,0,0x0,8
tick,0x7ffc909efd34,181902132,0,0x0,8
tick,0x7ffc909efd34,181918225,0,0x0,8
tick,0x7ffc909efd34,181933321,0,0x0,8
tick,0x7ffc909efd34,181948789,0,0x0,8
tick,0x7ffc909efd34,181964514,0,0x0,8
tick,0x7ffc909efd34,181979879,0,0x0,8
tick,0x7ffc909efd34,181994902,0,0x0,8
tick,0x7ffc909efd34,182010161,0,0x0,8
tick,0x7ffc909efd34,182025949,0,0x0,8
tick,0x7ffc909efd34,182041240,0,0x0,8
tick,0x7ffc909efd34,182056994,0,0x0,8
tick,0x7ffc909efd34,182072411,0,0x0,8
tick,0x7ffc909efd34,182087711,0,0x0,8
tick,0x7ffc909efd34,182103209,0,0x0,8
tick,0x7ffc909efd34,182118990,0,0x0,8
tick,0x7ffc909efd34,182134867,0,0x0,8
tick,0x7ffc909efd34,182150381,0,0x0,8
tick,0x7ffc909efd34,182166265,0,0x0,8
tick,0x7ffc909efd34,182181613,0,0x0,8
tick,0x7ffc909efd34,182197178,0,0x0,8
tick,0x7ffc909efd34,182213054,0,0x0,8
tick,0x7ffc909efd34,182229184,0,0x0,8
tick,0x7ffc909efd34,182244488,0,0x0,8
tick,0x7ffc909efd34,182260814,0,0x0,8
tick,0x7ffc909efd34,182276783,0,0x0,8
tick,0x7ffc909efd34,182291954,0,0x0,8
tick,0x7ffc909efd34,182307960,0,0x0,8
tick,0x7ffc909efd34,182324284,0,0x0,8
tick,0x7ffc909efd34,182339471,0,0x0,8
tick,0x7ffc909efd34,182354644,0,0x0,8
tick,0x7ffc909efd34,182369824,0,0x0,8
tick,0x7ffc909efd34,182385436,0,0x0,8
tick,0x7ffc909efd34,182401972,0,0x0,8
tick,0x7ffc909efd34,182417185,0,0x0,8
tick,0x7ffc909efd34,182433141,0,0x0,8
tick,0x7ffc909efd34,182448605,0,0x0,8
tick,0x7ffc909efd34,182464264,0,0x0,8
tick,0x7ffc909efd34,182480417,0,0x0,8
tick,0x7ffc909efd34,182495460,0,0x0,8
tick,0x7ffc909efd34,182510753,0,0x0,8
tick,0x7ffc909efd34,182526787,0,0x0,8
tick,0x7ffc909efd34,182542788,0,0x0,8
tick,0x7ffc909efd34,182558195,0,0x0,8
tick,0x7ffc909efd34,182573261,0,0x0,8
tick,0x7ffc909efd34,182589794,0,0x0,8
tick,0x7ffc909efd34,182604483,0,0x0,8
tick,0x7ffc909efd34,182619781,0,0x0,8
tick,0x7ffc909efd34,182635778,0,0x0,8
tick,0x7ffc909efd34,182651431,0,0x0,8
tick,0x7ffc909efd34,182667394,0,0x0,8
tick,0x7ffc909efd34,182683077,0,0x0,8
tick,0x7ffc909efd34,182699346,0,0x0,8
tick,0x7ffc909efd34,182714643,0,0x0,8
tick,0x7ffc909efd34,182729913,0,0x0,8
tick,0x7ffc909efd34,182745743,0,0x0,8
tick,0x7ffc909efd34,182761285,0,0x0,8
tick,0x7ffc909efd34,182777390,0,0x0,8
tick,0x7ffc909efd34,182793184,0,0x0,8
tick,0x7ffc909efd34,182809275,0,0x0,8
tick,0x7ffc909efd34,182824362,0,0x0,8
tick,0x7ffc909efd34,182840389,0,0x0,8
tick,0x7ffc909efd34,182856242,0,0x0,8
tick,0x7ffc909efd34,182871986,0,0x0,8
tick,0x7ffc909efd34,182887605,0,0x0,8
tick,0x7ffc909efd34,182902918,0,0x0,8
tick,0x7ffc909efd34,182918339,0,0x0,8
tick,0x7ffc909efd34,182933138,0,0x0,8
tick,0x7ffc909efd34,182948239,0,0x0,8
tick,0x7ffc909efd34,182964214,0,0x0,8
tick,0x7ffc909efd34,182979739,0,0x0,8
tick,0x7ffc909efd34,182995869,0,0x0,8
tick,0x7ffc909efd34,183011474,0,0x0,8
tick,0x7ffc909efd34,183026930,0,0x0,8
tick,0x7ffc909efd34,183043070,0,0x0,8
tick,0x7ffc909efd34,183058487,0,0x0,8
tick,0x7ffc909efd34,183073874,0,0x0,8
tick,0x7ffc909efd34,183089786,0,0x0,8
tick,0x7ffc909efd34,183104997,0,0x0,8
tick,0x7ffc909efd34,183120094,0,0x0,8
tick,0x7ffc909efd34,183135291,0,0x0,8
tick,0x7ffc909efd34,183150615,0,0x0,8
tick,0x7ffc909efd34,183165759,0,0x0,8
tick,0x7ffc909efd34,183181170,0,0x0,8
tick,0x7ffc909efd34,183196322,0,0x0,8
tick,0x7ffc909efd34,183212413,0,0x0,8
tick,0x7ffc909efd34,183228299,0,0x0,8
tick,0x7ffc909efd34,183243495,0,0x0,8
tick,0x7ffc909efd34,183258881,0,0x0,8
tick,0x7ffc909efd34,183274624,0,0x0,8
tick,0x7ffc909efd34,183290647,0,0x0,8
tick,0x7ffc909efd34,183306122,0,0x0,8
tick,0x7ffc909efd34,183321511,0,0x0,8
tick,0x7ffc909efd34,183336814,0,0x0,8
tick,0x7ffc909efd34,183352130,0,0x0,8
tick,0x7ffc909efd34,183367342,0,0x0,8
tick,0x7ffc909efd34,183382947,0,0x0,8
tick,0x7ffc909efd34,183398243,0,0x0,8
tick,0x7ffc909efd34,183414388,0,0x0,8
tick,0x7ffc909efd34,183430264,0,0x0,8
tick,0x7ffc909efd34,183445661,0,0x0,8
tick,0x7ffc909efd34,183461018,0,0x0,8
tick,0x7ffc909efd34,183476929,0,0x0,8
tick,0x7ffc909efd34,183492512,0,0x0,8
tick,0x7ffc909efd34,183507843,0,0x0,8
tick,0x7ffc909efd34,183523116,0,0x0,8
tick,0x7ffc909efd34,183539451,0,0x0,8
tick,0x7ffc909efd34,183554381,0,0x0,8
tick,0x7ffc909efd34,183570261,0,0x0,8
tick,0x7ffc909efd34,183585774,0,0x0,8
tick,0x7ffc909efd34,183601565,0,0x0,8
tick,0x7ffc909efd34,183617211,0,0x0,8
tick,0x7ffc909efd34,183632385,0,0x0,8
tick,0x7ffc909efd34,183648022,0,0x0,8
tick,0x7ffc909efd34,183663601,0,0x0,8
tick,0x7ffc909efd34,183679672,0,0x0,8
tick,0x7ffc909efd34,183695027,0,0x0,8
tick,0x7ffc909efd34,183710672,0,0x0,8
tick,0x7ffc909efd34,183726115,0,0x0,8
tick,0x7ffc909efd34,183741342,0,0x0,8
tick,0x7ffc909efd34,183756763,0,0x0,8
tick,0x7ffc909efd34,183772606,0,0x0,8
tick,0x7ffc909efd34,183788285,0,0x0,8
tick,0x7ffc909efd34,183803597,0,0x0,8
tick,0x7ffc909efd34,183819479,0,0x0,8
tick,0x7ffc909efd34,183835043,0,0x0,8
tick,0x7ffc909efd34,183851349,0,0x0,8
tick,0x7ffc909efd34,183867417,0,0x0,8
tick,0x7ffc909efd34,183883418,0,0x0,8
tick,0x7ffc909efd34,183899459,0,0x0,8
tick,0x7ffc909efd34,183915083,0,0x0,8
tick,0x7ffc909efd34,183930203,0,0x0,8
tick,0x7ffc909efd34,183945936,0,0x0,8
tick,0x7ffc909efd34,183961413,0,0x0,8
tick,0x7ffc909efd34,183977266,0,0x0,8
tick,0x7ffc909efd34,183992934,0,0x0,8
tick,0x7ffc909efd34,184008409,0,0x0,8
tick,0x7ffc909efd34,184024385,0,0x0,8
tick,0x7ffc909efd34,184040234,0,0x0,8
tick,0x7ffc909efd34,184055925,0,0x0,8
tick,0x7ffc909efd34,184070928,0,0x0,8
tick,0x7ffc909efd34,184086400,0,0x0,8
tick,0x7ffc909efd34,184101918,0,0x0,8
tick,0x7ffc909efd34,184117483,0,0x0,8
tick,0x7ffc909efd34,184133721,0,0x0,8
tick,0x7ffc909efd34,184149188,0,0x0,8
tick,0x7ffc909efd34,184165087,0,0x0,8
tick,0x7ffc909efd34,184180547,0,0x0,8
tick,0x7ffc909efd34,184196040,0,0x0,8
tick,0x7ffc909efd34,184211271,0,0x0,8
tick,0x7ffc909efd34,184226778,0,0x0,8
tick,0x7ffc909efd34,184241920,0,0x0,8
tick,0x7ffc909efd34,184257870,0,0x0,8
tick,0x7ffc909efd34,184273408,0,0x0,8
tick,0x7ffc909efd34,184288984,0,0x0,8
tick,0x7ffc909efd34,184304378,0,0x0,8
tick,0x7ffc909efd34,184319711,0,0x0,8
tick,0x7ffc909efd34,184335238,0,0x0,8
tick,0x7ffc909efd34,184350701,0,0x0,8
tick,0x7ffc909efd34,184366308,0,0x0,8
tick,0x7ffc909efd34,184381821,0,0x0,8
tick,0x7ffc909efd34,184397216,0,0x0,8
tick,0x7ffc909efd34,184412899,0,0x0,8
tick,0x7ffc909efd34,184428023,0,0x0,8
tick,0x7ffc909efd34,184443663,0,0x0,8
tick,0x7ffc909efd34,184459145,0,0x0,8
tick,0x7ffc909efd34,184474788,0,0x0,8
tick,0x7ffc909efd34,184490877,0,0x0,8
tick,0x7ffc909efd34,184506225,0,0x0,8
tick,0x7ffc909efd34,184521433,0,0x0,8
tick,0x7ffc909efd34,184537092,0,0x0,8
tick,0x7ffc909efd34,184552600,0,0x0,8
tick,0x7ffc909efd34,184567915,0,0x0,8
tick,0x7ffc909efd34,184583397,0,0x0,8
tick,0x7ffc909efd34,184599442,0,0x0,8
tick,0x7ffc909efd34,184614741,0,0x0,8
tick,0x7ffc909efd34,184630693,0,0x0,8
tick,0x7ffc909efd34,184646673,0,0x0,8
tick,0x7ffc909efd34,184662264,0,0x0,8
tick,0x7ffc909efd34,184677412,0,0x0,8
tick,0x7ffc909efd34,184693081,0,0x0,8
tick,0x7ffc909efd34,184708834,0,0x0,8
tick,0x7ffc909efd34,184724434,0,0x0,8
tick,0x7ffc909efd34,184739777,0,0x0,8
tick,0x7ffc909efd34,184755601,0,0x0,8
tick,0x7ffc909efd34,184770950,0,0x0,8
tick,0x7ffc909efd34,184786311,0,0x0,8
tick,0x7ffc909efd34,184801889,0,0x0,8
tick,0x7ffc909efd34,184817628,0,0x0,8
tick,0x7ffc909efd34,184833366,0,0x0,8
tick,0x7ffc909efd34,184849657,0,0x0,8
tick,0x7ffc909efd34,184865349,0,0x0,8
tick,0x7ffc909efd34,184881590,0,0x0,8
tick,0x7ffc909efd34,184897047,0,0x0,8
tick,0x7ffc909efd34,184912909,0,0x0,8
tick,0x7ffc909efd34,184928389,0,0x0,8
tick,0x7ffc909efd34,184943881,0,0x0,8
tick,0x7ffc909efd34,184959722,0,0x0,8
tick,0x7ffc909efd34,184974903,0,0x0,8
tick,0x7ffc909efd34,184990755,0,0x0,8
tick,0x7ffc909efd34,185006978,0,0x0,8
tick,0x7ffc909efd34,185022344,0,0x0,8
tick,0x7ffc909efd34,185037704,0,0x0,8
tick,0x7ffc909efd34,185052991,0,0x0,8
tick,0x7ffc909efd34,185068494,0,0x0,8
tick,0x7ffc909efd34,185084341,0,0x0,8
tick,0x7ffc909efd34,185099802,0,0x0,8
tick,0x7ffc909efd34,185115455,0,0x0,8
tick,0x7ffc909efd34,185130838,0,0x0,8
tick,0x7ffc909efd34,185146197,0,0x0,8
tick,0x7ffc909efd34,185162558,0,0x0,8
tick,0x7ffc909efd34,185177878,0,0x0,8
tick,0x7ffc909efd34,185193514,0,0x0,8
tick,0x7ffc909efd34,185209833,0,0x0,8
tick,0x7ffc909efd34,185225197,0,0x0,8
tick,0x7ffc909efd34,185240523,0,0x0,8
tick,0x7ffc909efd34,185256558,0,0x0,8
tick,0x7ffc909efd34,185272403,0,0x0,8
tick,0x7ffc909efd34,185287418,0,0x0,8
tick,0x7ffc909efd34,185302495,0,0x0,8
tick,0x7ffc909efd34,185318287,0,0x0,8
tick,0x7ffc909efd34,185333647,0,0x0,8
tick,0x7ffc909efd34,185349391,0,0x0,8
tick,0x7ffc909efd34,185364802,0,0x0,8
tick,0x7ffc909efd34,185380487,0,0x0,8
tick,0x7ffc909efd34,185395757,0,0x0,8
tick,0x7ffc909efd34,185411061,0,0x0,8
tick,0x7ffc909efd34,185427330,0,0x0,8
tick,0x7ffc909efd34,185443362,0,0x0,8
tick,0x7ffc909efd34,185458869,0,0x0,8
tick,0x7ffc909efd34,185474536,0,0x0,8
tick,0x7ffc909efd34,185489536,0,0x0,8
tick,0x7ffc909efd34,185504188,0,0x0,8
tick,0x7ffc909efd34,185520474,0,0x0,8
tick,0x7ffc909efd34,185536300,0,0x0,8
tick,0x7ffc909efd34,185552038,0,0x0,8
tick,0x7ffc909efd34,185567254,0,0x0,8
tick,0x7ffc909efd34,185582393,0,0x0,8
tick,0x7ffc909efd34,185598024,0,0x0,8
tick,0x7ffc909efd34,185613589,0,0x0,8
tick,0x7ffc909efd34,185629371,0,0x0,8
tick,0x7ffc909efd34,185645327,0,0x0,8
tick,0x7ffc909efd34,185660882,0,0x0,8
tick,0x7ffc909efd34,185676896,0,0x0,8
tick,0x7ffc909efd34,185692625,0,0x0,8
tick,0x7ffc909efd34,185708197,0,0x0,8
tick,0x7ffc909efd34,185724161,0,0x0,8
tick,0x7ffc909efd34,185739880,0,0x0,8
tick,0x7ffc909efd34,185755383,0,0x0,8
tick,0x7ffc909efd34,185770900,0,0x0,8
tick,0x7ffc909efd34,185786356,0,0x0,8
tick,0x7ffc909efd34,185801830,0,0x0,8
tick,0x7ffc909efd34,185817620,0,0x0,8
tick,0x7ffc909efd34,185832143,0,0x0,8
tick,0x7ffc909efd34,185848240,0,0x0,8
tick,0x7ffc909efd34,185863662,0,0x0,8
tick,0x7ffc909efd34,185879527,0,0x0,8
tick,0x7ffc909efd34,185894835,0,0x0,8
tick,0x7ffc909efd34,185911071,0,0x0,8
tick,0x7ffc909efd34,185926820,0,0x0,8
tick,0x7ffc909efd34,185941988,0,0x0,8
tick,0x7ffc909efd34,185958116,0,0x0,8
tick,0x7ffc909efd34,185972864,0,0x0,8
tick,0x7ffc909efd34,185988256,0,0x0,8
tick,0x7ffc909efd34,186004268,0,0x0,8
tick,0x7ffc909efd34,186019322,0,0x0,8
tick,0x7ffc909efd34,186035504,0,0x0,8
tick,0x7ffc909efd34,186050776,0,0x0,8
tick,0x7ffc909efd34,186066881,0,0x0,8
tick,0x7ffc909efd34,186082472,0,0x0,8
tick,0x7ffc909efd34,186097768,0,0x0,8
tick,0x7ffc909efd34,186113497,0,0x0,8
tick,0x7ffc909efd34,186129579,0,0x0,8
tick,0x7ffc909efd34,186145097,0,0x0,8
tick,0x7ffc909efd34,186160546,0,0x0,8
tick,0x7ffc909efd34,186175968,0,0x0,8
tick,0x7ffc909efd34,186191280,0,0x0,8
tick,0x7ffc909efd34,186207293,0,0x0,8
tick,0x7ffc909efd34,186222854,0,0x0,8
tick,0x7ffc909efd34,186238769,0,0x0,8
tick,0x7ffc909efd34,186253625,0,0x0,8
tick,0x7ffc909efd34,186269745,0,0x0,8
tick,0x7ffc909efd34,186285095,0,0x0,8
tick,0x7ffc909efd34,186300856,0,0x0,8
tick,0x7ffc909efd34,186316558,0,0x0,8
tick,0x7ffc909efd34,186331834,0,0x0,8
tick,0x7ffc909efd34,186347345,0,0x0,8
tick,0x7ffc909efd34,186363101,0,0x0,8
tick,0x7ffc909efd34,186378726,0,0x0,8
tick,0x7ffc909efd34,186394192,0,0x0,8
tick,0x7ffc909efd34,186409731,0,0x0,8
tick,0x7ffc909efd34,186425852,0,0x0,8
tick,0x7ffc909efd34,186441381,0,0x0,8
tick,0x7ffc909efd34,186456740,0,0x0,8
tick,0x7ffc909efd34,186472712,0,0x0,8
tick,0x7ffc909efd34,186487908,0,0x0,8
tick,0x7ffc909efd34,186503516,0,0x0,8
tick,0x7ffc909efd34,186519022,0,0x0,8
tick,0x7ffc909efd34,186534605,0,0x0,8
tick,0x7ffc909efd34,186550245,0,0x0,8
tick,0x7ffc909efd34,186565451,0,0x0,8
tick,0x7ffc909efd34,186580899,0,0x0,8
tick,0x7ffc909efd34,186597157,0,0x0,8
tick,0x7ffc909efd34,186612149,0,0x0,8
tick,0x7ffc909efd34,186627655,0,0x0,8
tick,0x7ffc909efd34,186643634,0,0x0,8
tick,0x7ffc909efd34,186659407,0,0x0,8
tick,0x7ffc909efd34,186674664,0,0x0,8
tick,0x7ffc909efd34,186689912,0,0x0,8
tick,0x7ffc909efd34,186705324,0,0x0,8
tick,0x7ffc909efd34,186720644,0,0x0,8
tick,0x7ffc909efd34,186736284,0,0x0,8
tick,0x7ffc909efd34,186752315,0,0x0,8
tick,0x7ffc909efd34,186768252,0,0x0,8
tick,0x7ffc909efd34,186783860,0,0x0,8
tick,0x7ffc909efd34,186799964,0,0x0,8
tick,0x7ffc909efd34,186815855,0,0x0,8
tick,0x7ffc909efd34,186831061,0,0x0,8
tick,0x7ffc909efd34,186846690,0,0x0,8
tick,0x7ffc909efd34,186862270,0,0x0,8
tick,0x7ffc909efd34,186877635,0,0x0,8
tick,0x7ffc909efd34,186893182,0,0x0,8
tick,0x7ffc909efd34,186908352,0,0x0,8
tick,0x7ffc909efd34,186923829,0,0x0,8
tick,0x7ffc909efd34,186939646,0,0x0,8
tick,0x7ffc909efd34,186955206,0,0x0,8
tick,0x7ffc909efd34,186970887,0,0x0,8
tick,0x7ffc909efd34,186986082,0,0x0,8
tick,0x7ffc909efd34,187001685,0,0x0,8
tick,0x7ffc909efd34,187017254,0,0x0,8
tick,0x7ffc909efd34,187032534,0,0x0,8
tick,0x7ffc909efd34,187047830,0,0x0,8
tick,0x7ffc909efd34,187063214,0,0x0,8
tick,0x7ffc909efd34,187079482,0,0x0,8
tick,0x7ffc909efd34,187095152,0,0x0,8
tick,0x7ffc909efd34,187110607,0,0x0,8
tick,0x7ffc909efd34,187126289,0,0x0,8
tick,0x7ffc909efd34,187141710,0,0x0,8
tick,0x7ffc909efd34,187157359,0,0x0,8
tick,0x7ffc909efd34,187173147,0,0x0,8
tick,0x7ffc909efd34,187188629,0,0x0,8
tick,0x7ffc909efd34,187204417,0,0x0,8
tick,0x7ffc909efd34,187220026,0,0x0,8
tick,0x7ffc909efd34,187236277,0,0x0,8
tick,0x7ffc909efd34,187251619,0,0x0,8
tick,0x7ffc909efd34,187267311,0,0x0,8
tick,0x7ffc909efd34,187283313,0,0x0,8
tick,0x7ffc909efd34,187298784,0,0x0,8
tick,0x7ffc909efd34,187314066,0,0x0,8
tick,0x7ffc909efd34,187329920,0,0x0,8
tick,0x7ffc909efd34,187345308,0,0x0,8
tick,0x7ffc909efd34,187360684,0,0x0,8
tick,0x7ffc909efd34,187376193,0,0x0,8
tick,0x7ffc909efd34,187391960,0,0x0,8
tick,0x7ffc909efd34,187407457,0,0x0,8
tick,0x7ffc909efd34,187422853,0,0x0,8
tick,0x7ffc909efd34,187438373,0,0x0,8
tick,0x7ffc909efd34,187453646,0,0x0,8
tick,0x7ffc909efd34,187469321,0,0x0,8
tick,0x7ffc909efd34,187485224,0,0x0,8
tick,0x7ffc909efd34,187501190,0,0x0,8
tick,0x7ffc909efd34,187516876,0,0x0,8
tick,0x7ffc909efd34,187532124,0,0x0,8
tick,0x7ffc909efd34,187547145,0,0x0,8
tick,0x7ffc909efd34,187562708,0,0x0,8
tick,0x7ffc909efd34,187578006,0,0x0,8
tick,0x7ffc909efd34,187593698,0,0x0,8
tick,0x7ffc909efd34,187609657,0,0x0,8
tick,0x7ffc909efd34,187625357,0,0x0,8
tick,0x7ffc909efd34,187641479,0,0x0,8
tick,0x7ffc909efd34,187657236,0,0x0,8
tick,0x7ffc909efd34,187673057,0,0x0,8
tick,0x7ffc909efd34,187689052,0,0x0,8
tick,0x7ffc909efd34,187704324,0,0x0,8
tick,0x7ffc909efd34,187720799,0,0x0,8
tick,0x7ffc909efd34,187735683,0,0x0,8
tick,0x7ffc909efd34,187751049,0,0x0,8
tick,0x7ffc909efd34,187766360,0,0x0,8
tick,0x7ffc909efd34,187781585,0,0x0,8
tick,0x7ffc909efd34,187797698,0,0x0,8
tick,0x7ffc909efd34,187813711,0,0x0,8
tick,0x7ffc909efd34,187829250,0,0x0,8
tick,0x7ffc909efd34,187844417,0,0x0,8
tick,0x7ffc909efd34,187860371,0,0x0,8
tick,0x7ffc909efd34,187876432,0,0x0,8
tick,0x7ffc909efd34,187892031,0,0x0,8
tick,0x7ffc909efd34,187908150,0,0x0,8
tick,0x7ffc909efd34,187924200,0,0x0,8
tick,0x7ffc909efd34,187939479,0,0x0,8
tick,0x7ffc909efd34,187955465,0,0x0,8
tick,0x7ffc909efd34,187971234,0,0x0,8
tick,0x7ffc909efd34,187986981,0,0x0,8
tick,0x7ffc909efd34,188002286,0,0x0,8
tick,0x7ffc909efd34,188017781,0,0x0,8
tick,0x7ffc909efd34,188033704,0,0x0,8
tick,0x7ffc909efd34,188048335,0,0x0,8
tick,0x7ffc909efd34,188063886,0,0x0,8
tick,0x7ffc909efd34,188080251,0,0x0,8
tick,0x7ffc909efd34,188095972,0,0x0,8
tick,0x7ffc909efd34,188111701,0,0x0,8
tick,0x7ffc909efd34,188127289,0,0x0,8
tick,0x7ffc909efd34,188142396,0,0x0,8
tick,0x7ffc909efd34,188157763,0,0x0,8
tick,0x7ffc909efd34,188173726,0,0x0,8
tick,0x7ffc909efd34,188189070,0,0x0,8
tick,0x7ffc909efd34,188204909,0,0x0,8
tick,0x7ffc909efd34,188220396,0,0x0,8
tick,0x7ffc909efd34,188235884,0,0x0,8
tick,0x7ffc909efd34,188251374,0,0x0,8
tick,0x7ffc909efd34,188266699,0,0x0,8
tick,0x7ffc909efd34,188282132,0,0x0,8
tick,0x7ffc909efd34,188297143,0,0x0,8
tick,0x7ffc909efd34,188312510,0,0x0,8
tick,0x7ffc909efd34,188328273,0,0x0,8
tick,0x7ffc909efd34,188343775,0,0x0,8
tick,0x7ffc909efd34,188359148,0,0x0,8
tick,0x7ffc909efd34,188374357,0,0x0,8
tick,0x7ffc909efd34,188389557,0,0x0,8
tick,0x7ffc909efd34,188405090,0,0x0,8
tick,0x7ffc909efd34,188420425,0,0x0,8
tick,0x7ffc909efd34,188436044,0,0x0,8
tick,0x7ffc909efd34,188451664,0,0x0,8
tick,0x7ffc909efd34,188466997,0,0x0,8
tick,0x7ffc909efd34,188482576,0,0x0,8
tick,0x7ffc909efd34,188498236,0,0x0,8
tick,0x7ffc909efd34,188514080,0,0x0,8
tick,0x7ffc909efd34,188529707,0,0x0,8
tick,0x7ffc909efd34,188545048,0,0x0,8
tick,0x7ffc909efd34,188560431,0,0x0,8
tick,0x7ffc909efd34,188576061,0,0x0,8
tick,0x7ffc909efd34,188591613,0,0x0,8
tick,0x7ffc909efd34,188607085,0,0x0,8
tick,0x7ffc909efd34,188622974,0,0x0,8
tick,0x7ffc909efd34,188638527,0,0x0,8
tick,0x7ffc909efd34,188654036,0,0x0,8
tick,0x7ffc909efd34,188669445,0,0x0,8
tick,0x7ffc909efd34,188684615,0,0x0,8
tick,0x7ffc909efd34,188700989,0,0x0,8
tick,0x7ffc909efd34,188716528,0,0x0,8
tick,0x7ffc909efd34,188732626,0,0x0,8
tick,0x7ffc909efd34,188747821,0,0x0,8
tick,0x7ffc909efd34,188764074,0,0x0,8
tick,0x7ffc909efd34,188780564,0,0x0,8
tick,0x7ffc909efd34,188796104,0,0x0,8
tick,0x7ffc909efd34,188812100,0,0x0,8
tick,0x7ffc909efd34,188827310,0,0x0,8
tick,0x7ffc909efd34,188843025,0,0x0,8
tick,0x7ffc909efd34,188859399,0,0x0,8
tick,0x7ffc909efd34,188875403,0,0x0,8
tick,0x7ffc909efd34,188891497,0,0x0,8
tick,0x7ffc909efd34,188907417,0,0x0,8
tick,0x7ffc909efd34,188922987,0,0x0,8
tick,0x7ffc909efd34,188938466,0,0x0,8
tick,0x7ffc909efd34,188954183,0,0x0,8
tick,0x7ffc909efd34,188969595,0,0x0,8
tick,0x7ffc909efd34,188985405,0,0x0,8
tick,0x7ffc909efd34,189000788,0,0x0,8
tick,0x7ffc909efd34,189016220,0,0x0,8
tick,0x7ffc909efd34,189031730,0,0x0,8
tick,0x7ffc909efd34,189047359,0,0x0,8
tick,0x7ffc909efd34,189062654,0,0x0,8
tick,0x7ffc909efd34,189078268,0,0x0,8
tick,0x7ffc909efd34,189093938,0,0x0,8
tick,0x7ffc909efd34,189109699,0,0x0,8
tick,0x7ffc909efd34,189124917,0,0x0,8
tick,0x7ffc909efd34,189140620,0,0x0,8
tick,0x7ffc909efd34,189156351,0,0x0,8
tick,0x7ffc909efd34,189172764,0,0x0,8
tick,0x7ffc909efd34,189188343,0,0x0,8
tick,0x7ffc909efd34,189203452,0,0x0,8
tick,0x7ffc909efd34,189219129,0,0x0,8
tick,0x7ffc909efd34,189234209,0,0x0,8
tick,0x7ffc909efd34,189249490,0,0x0,8
tick,0x7ffc909efd34,189265654,0,0x0,8
tick,0x7ffc909efd34,189281306,0,0x0,8
tick,0x7ffc909efd34,189296575,0,0x0,8
tick,0x7ffc909efd34,189312315,0,0x0,8
tick,0x7ffc909efd34,189328332,0,0x0,8
tick,0x7ffc909efd34,189343766,0,0x0,8
tick,0x7ffc909efd34,189359128,0,0x0,8
tick,0x7ffc909efd34,189374772,0,0x0,8
tick,0x7ffc909efd34,189389962,0,0x0,8
tick,0x7ffc909efd34,189405772,0,0x0,8
tick,0x7ffc909efd34,189421597,0,0x0,8
tick,0x7ffc909efd34,189436923,0,0x0,8
tick,0x7ffc909efd34,189452698,0,0x0,8
tick,0x7ffc909efd34,189468041,0,0x0,8
tick,0x7ffc909efd34,189483725,0,0x0,8
tick,0x7ffc909efd34,189499560,0,0x0,8
tick,0x7ffc909efd34,189515610,0,0x0,8
tick,0x7ffc909efd34,189531379,0,0x0,8
tick,0x7ffc909efd34,189547434,0,0x0,8
tick,0x7ffc909efd34,189563245,0,0x0,8
tick,0x7ffc909efd34,189578578,0,0x0,8
tick,0x7ffc909efd34,189593880,0,0x0,8
tick,0x7ffc909efd34,189609195,0,0x0,8
tick,0x7ffc909efd34,189624514,0,0x0,8
tick,0x7ffc909efd34,189639808,0,0x0,8
tick,0x7ffc909efd34,189655330,0,0x0,8
tick,0x7ffc909efd34,189671401,0,0x0,8
tick,0x7ffc909efd34,189686643,0,0x0,8
tick,0x7ffc909efd34,189702357,0,0x0,8
tick,0x7ffc909efd34,189718148,0,0x0,8
tick,0x7ffc909efd34,189734127,0,0x0,8
tick,0x7ffc909efd34,189749356,0,0x0,8
tick,0x7ffc909efd34,189764675,0,0x0,8
tick,0x7ffc909efd34,189779850,0,0x0,8
tick,0x7ffc909efd34,189795663,0,0x0,8
tick,0x7ffc909efd34,189811420,0,0x0,8
tick,0x7ffc909efd34,189826703,0,0x0,8
tick,0x7ffc909efd34,189842218,0,0x0,8
tick,0x7ffc909efd34,189858134,0,0x0,8
tick,0x7ffc909efd34,189873418,0,0x0,8
tick,0x7ffc909efd34,189889226,0,0x0,8
tick,0x7ffc909efd34,189904830,0,0x0,8
tick,0x7ffc909efd34,189920297,0,0x0,8
tick,0x7ffc909efd34,189936511,0,0x0,8
tick,0x7ffc909efd34,189952503,0,0x0,8
tick,0x7ffc909efd34,189968023,0,0x0,8
tick,0x7ffc909efd34,189983276,0,0x0,8
tick,0x7ffc909efd34,189998644,0,0x0,8
tick,0x7ffc909efd34,190014881,0,0x0,8
tick,0x7ffc909efd34,190030388,0,0x0,8
tick,0x7ffc909efd34,190045804,0,0x0,8
tick,0x7ffc909efd34,190061153,0,0x0,8
tick,0x7ffc909efd34,190077855,0,0x0,8
tick,0x7ffc909efd34,190092766,0,0x0,8
tick,0x7ffc909efd34,190108329,0,0x0,8
tick,0x7ffc909efd34,190123699,0,0x0,8
tick,0x7ffc909efd34,190139121,0,0x0,8
tick,0x7ffc909efd34,190154895,0,0x0,8
tick,0x7ffc909efd34,190170696,0,0x0,8
tick,0x7ffc909efd34,190186396,0,0x0,8
tick,0x7ffc909efd34,190201873,0,0x0,8
tick,0x7ffc909efd34,190217030,0,0x0,8
tick,0x7ffc909efd34,190232909,0,0x0,8
tick,0x7ffc909efd34,190248452,0,0x0,8
tick,0x7ffc909efd34,190264298,0,0x0,8
tick,0x7ffc909efd34,190279667,0,0x0,8
tick,0x7ffc909efd34,190295187,0,0x0,8
tick,0x7ffc909efd34,190310952,0,0x0,8
tick,0x7ffc909efd34,190326452,0,0x0,8
tick,0x7ffc909efd34,190341860,0,0x0,8
tick,0x7ffc909efd34,190357929,0,0x0,8
tick,0x7ffc909efd34,190372909,0,0x0,8
tick,0x7ffc909efd34,190388529,0,0x0,8
tick,0x7ffc909efd34,190404532,0,0x0,8
tick,0x7ffc909efd34,190420378,0,0x0,8
tick,0x7ffc909efd34,190436240,0,0x0,8
tick,0x7ffc909efd34,190451411,0,0x0,8
tick,0x7ffc909efd34,190466613,0,0x0,8
tick,0x7ffc909efd34,190482228,0,0x0,8
tick,0x7ffc909efd34,190497716,0,0x0,8
tick,0x7ffc909efd34,190513265,0,0x0,8
tick,0x7ffc909efd34,190529483,0,0x0,8
tick,0x7ffc909efd34,190544680,0,0x0,8
tick,0x7ffc909efd34,190560778,0,0x0,8
tick,0x7ffc909efd34,190576386,0,0x0,8
tick,0x7ffc909efd34,190591959,0,0x0,8
tick,0x7ffc909efd34,190607277,0,0x0,8
tick,0x7ffc909efd34,190623385,0,0x0,8
tick,0x7ffc909efd34,190638666,0,0x0,8
tick,0x7ffc909efd34,190654516,0,0x0,8
tick,0x7ffc909efd34,190669761,0,0x0,8
tick,0x7ffc909efd34,190685636,0,0x0,8
tick,0x7ffc909efd34,190701881,0,0x0,8
tick,0x7ffc909efd34,190717841,0,0x0,8
tick,0x7ffc909efd34,190733684,0,0x0,8
tick,0x7ffc909efd34,190748738,0,0x0,8
tick,0x7ffc909efd34,190764621,0,0x0,8
tick,0x7ffc909efd34,190779724,0,0x0,8
tick,0x7ffc909efd34,190795441,0,0x0,8
tick,0x7ffc909efd34,190811349,0,0x0,8
tick,0x7ffc909efd34,190827195,0,0x0,8
tick,0x7ffc909efd34,190842452,0,0x0,8
tick,0x7ffc909efd34,190857957,0,0x0,8
tick,0x7ffc909efd34,190873743,0,0x0,8
tick,0x7ffc909efd34,190888959,0,0x0,8
tick,0x7ffc909efd34,190904507,0,0x0,8
tick,0x7ffc909efd34,190919863,0,0x0,8
tick,0x7ffc909efd34,190936140,0,0x0,8
tick,0x7ffc909efd34,190951997,0,0x0,8
tick,0x7ffc909efd34,190967723,0,0x0,8
tick,0x7ffc909efd34,190983347,0,0x0,8
tick,0x7ffc909efd34,190998714,0,0x0,8
tick,0x7ffc909efd34,191014447,0,0x0,8
tick,0x7ffc909efd34,191029740,0,0x0,8
tick,0x7ffc909efd34,191045728,0,0x0,8
tick,0x7ffc909efd34,191061010,0,0x0,8
tick,0x7ffc909efd34,191076805,0,0x0,8
tick,0x7ffc909efd34,191092112,0,0x0,8
tick,0x7ffc909efd34,191107210,0,0x0,8
tick,0x7ffc909efd34,191123135,0,0x0,8
tick,0x7ffc909efd34,191138870,0,0x0,8
tick,0x7ffc909efd34,191154345,0,0x0,8
tick,0x7ffc909efd34,191169538,0,0x0,8
tick,0x7ffc909efd34,191185445,0,0x0,8
tick,0x7ffc909efd34,191200593,0,0x0,8
tick,0x7ffc909efd34,191216271,0,0x0,8
tick,0x7ffc909efd34,191231574,0,0x0,8
tick,0x7ffc909efd34,191247079,0,0x0,8
tick,0x7ffc909efd34,191262877,0,0x0,8
tick,0x7ffc909efd34,191278923,0,0x0,8
tick,0x7ffc909efd34,191294765,0,0x0,8
tick,0x7ffc909efd34,191310851,0,0x0,8
tick,0x7ffc909efd34,191326355,0,0x0,8
tick,0x7ffc909efd34,191341691,0,0x0,8
tick,0x7ffc909efd34,191357538,0,0x0,8
tick,0x7ffc909efd34,191372684,0,0x0,8
tick,0x7ffc909efd34,191388055,0,0x0,8
tick,0x7ffc909efd34,191403742,0,0x0,8
tick,0x7ffc909efd34,191419354,0,0x0,8
tick,0x7ffc909efd34,191434828,0,0x0,8
tick,0x7ffc909efd34,191450263,0,0x0,8
tick,0x7ffc909efd34,191465955,0,0x0,8
tick,0x7ffc909efd34,191481147,0,0x0,8
tick,0x7ffc909efd34,191496925,0,0x0,8
tick,0x7ffc909efd34,191512512,0,0x0,8
tick,0x7ffc909efd34,191528135,0,0x0,8
tick,0x7ffc909efd34,191543565,0,0x0,8
tick,0x7ffc909efd34,191558991,0,0x0,8
tick,0x7ffc909efd34,191574573,0,0x0,8
tick,0x7ffc909efd34,191589800,0,0x0,8
tick,0x7ffc909efd34,191605120,0,0x0,8
tick,0x7ffc909efd34,191620918,0,0x0,8
tick,0x7ffc909efd34,191636342,0,0x0,8
tick,0x7ffc909efd34,191652385,0,0x0,8
tick,0x7ffc909efd34,191667841,0,0x0,8
tick,0x7ffc909efd34,191683331,0,0x0,8
tick,0x7ffc909efd34,191698474,0,0x0,8
tick,0x7ffc909efd34,191714387,0,0x0,8
tick,0x7ffc909efd34,191730235,0,0x0,8
tick,0x7ffc909efd34,191745126,0,0x0,8
tick,0x7ffc909efd34,191782647,0,0x0,8
tick,0x7ffc909efd34,191808192,0,0x0,8
tick,0x7ffc909efd34,191812848,0,0x0,8
tick,0x7ffc909efd34,191825315,0,0x0,8
tick,0x7ffc909efd34,191839254,0,0x0,8
tick,0x7ffc909efd34,191855300,0,0x0,8
tick,0x7ffc909efd34,191870848,0,0x0,8
tick,0x7ffc909efd34,191885957,0,0x0,8
tick,0x7ffc909efd34,191901536,0,0x0,8
tick,0x7ffc909efd34,191916743,0,0x0,8
tick,0x7ffc909efd34,191932368,0,0x0,8
tick,0x7ffc909efd34,191948242,0,0x0,8
tick,0x7ffc909efd34,191964166,0,0x0,8
tick,0x7ffc909efd34,191979806,0,0x0,8
tick,0x7ffc909efd34,191995332,0,0x0,8
tick,0x7ffc909efd34,192010881,0,0x0,8
tick,0x7ffc909efd34,192026340,0,0x0,8
tick,0x7ffc909efd34,192041597,0,0x0,8
tick,0x7ffc909efd34,192057775,0,0x0,8
tick,0x7ffc909efd34,192073423,0,0x0,8
tick,0x7ffc909efd34,192088775,0,0x0,8
tick,0x7ffc909efd34,192104473,0,0x0,8
tick,0x7ffc909efd34,192120233,0,0x0,8
tick,0x7ffc909efd34,192135434,0,0x0,8
tick,0x7ffc909efd34,192150813,0,0x0,8
tick,0x7ffc909efd34,192166513,0,0x0,8
tick,0x7ffc909efd34,192182481,0,0x0,8
tick,0x7ffc909efd34,192197968,0,0x0,8
tick,0x7ffc909efd34,192213817,0,0x0,8
tick,0x7ffc909efd34,192229175,0,0x0,8
tick,0x7ffc909efd34,192244698,0,0x0,8
tick,0x7ffc909efd34,192260154,0,0x0,8
tick,0x7ffc909efd34,192276105,0,0x0,8
tick,0x7ffc909efd34,192291890,0,0x0,8
tick,0x7ffc909efd34,192307152,0,0x0,8
tick,0x7ffc909efd34,192323105,0,0x0,8
tick,0x7ffc909efd34,192338500,0,0x0,8
tick,0x7ffc909efd34,192354221,0,0x0,8
tick,0x7ffc909efd34,192369600,0,0x0,8
tick,0x7ffc909efd34,192385258,0,0x0,8
tick,0x7ffc909efd34,192400642,0,0x0,8
tick,0x7ffc909efd34,192416710,0,0x0,8
tick,0x7ffc909efd34,192432292,0,0x0,8
tick,0x7ffc909efd34,192448071,0,0x0,8
tick,0x7ffc909efd34,192463535,0,0x0,8
tick,0x7ffc909efd34,192479863,0,0x0,8
tick,0x7ffc909efd34,192495875,0,0x0,8
tick,0x7ffc909efd34,192511154,0,0x0,8
tick,0x7ffc909efd34,192526449,0,0x0,8
tick,0x7ffc909efd34,192541782,0,0x0,8
tick,0x7ffc909efd34,192557748,0,0x0,8
tick,0x7ffc909efd34,192573171,0,0x0,8
tick,0x7ffc909efd34,192588438,0,0x0,8
tick,0x7ffc909efd34,192604648,0,0x0,8
tick,0x7ffc909efd34,192619700,0,0x0,8
tick,0x7ffc909efd34,192634725,0,0x0,8
tick,0x7ffc909efd34,192651037,0,0x0,8
tick,0x7ffc909efd34,192666463,0,0x0,8
tick,0x7ffc909efd34,192682071,0,0x0,8
tick,0x7ffc909efd34,192698391,0,0x0,8
tick,0x7ffc909efd34,192714053,0,0x0,8
tick,0x7ffc909efd34,192729488,0,0x0,8
tick,0x7ffc909efd34,192744902,0,0x0,8
tick,0x7ffc909efd34,192759904,0,0x0,8
tick,0x7ffc909efd34,192775955,0,0x0,8
tick,0x7ffc909efd34,192791274,0,0x0,8
tick,0x7ffc909efd34,192806792,0,0x0,8
tick,0x7ffc909efd34,192822656,0,0x0,8
tick,0x7ffc909efd34,192838081,0,0x0,8
tick,0x7ffc909efd34,192853319,0,0x0,8
tick,0x7ffc909efd34,192868430,0,0x0,8
tick,0x7ffc909efd34,192883808,0,0x0,8
tick,0x7ffc909efd34,192899867,0,0x0,8
tick,0x7ffc909efd34,192915511,0,0x0,8
tick,0x7ffc909efd34,192931505,0,0x0,8
tick,0x7ffc909efd34,192947129,0,0x0,8
tick,0x7ffc909efd34,192962272,0,0x0,8
tick,0x7ffc909efd34,192978248,0,0x0,8
tick,0x7ffc909efd34,192993697,0,0x0,8
tick,0x7ffc909efd34,193009295,0,0x0,8
tick,0x7ffc909efd34,193025033,0,0x0,8
tick,0x7ffc909efd34,193041298,0,0x0,8
tick,0x7ffc909efd34,193057001,0,0x0,8
tick,0x7ffc909efd34,193072371,0,0x0,8
tick,0x7ffc909efd34,193088000,0,0x0,8
tick,0x7ffc909efd34,193103131,0,0x0,8
tick,0x7ffc909efd34,193118407,0,0x0,8
tick,0x7ffc909efd34,193134236,0,0x0,8
tick,0x7ffc909efd34,193149743,0,0x0,8
tick,0x7ffc909efd34,193164886,0,0x0,8
tick,0x7ffc909efd34,193181126,0,0x0,8
tick,0x7ffc909efd34,193196272,0,0x0,8
tick,0x7ffc909efd34,193211457,0,0x0,8
tick,0x7ffc909efd34,193226804,0,0x0,8
tick,0x7ffc909efd34,193242343,0,0x0,8
tick,0x7ffc909efd34,193257865,0,0x0,8
tick,0x7ffc909efd34,193272762,0,0x0,8
tick,0x7ffc909efd34,193288045,0,0x0,8
tick,0x7ffc909efd34,193304211,0,0x0,8
tick,0x7ffc909efd34,193319721,0,0x0,8
tick,0x7ffc909efd34,193334951,0,0x0,8
tick,0x7ffc909efd34,193350818,0,0x0,8
tick,0x7ffc909efd34,193366867,0,0x0,8
tick,0x7ffc909efd34,193382164,0,0x0,8
tick,0x7ffc909efd34,193397739,0,0x0,8
tick,0x7ffc909efd34,193412906,0,0x0,8
tick,0x7ffc909efd34,193428155,0,0x0,8
tick,0x7ffc909efd34,193444514,0,0x0,8
tick,0x7ffc909efd34,193459511,0,0x0,8
tick,0x7ffc909efd34,193475142,0,0x0,8
tick,0x7ffc909efd34,193490925,0,0x0,8
tick,0x7ffc909efd34,193506098,0,0x0,8
tick,0x7ffc909efd34,193521613,0,0x0,8
tick,0x7ffc909efd34,193537420,0,0x0,8
tick,0x7ffc909efd34,193552653,0,0x0,8
tick,0x7ffc909efd34,193568071,0,0x0,8
tick,0x7ffc909efd34,193583675,0,0x0,8
tick,0x7ffc909efd34,193599416,0,0x0,8
tick,0x7ffc909efd34,193615382,0,0x0,8
tick,0x7ffc909efd34,193630651,0,0x0,8
tick,0x7ffc909efd34,193646420,0,0x0,8
tick,0x7ffc909efd34,193661760,0,0x0,8
tick,0x7ffc909efd34,193677577,0,0x0,8
tick,0x7ffc909efd34,193692607,0,0x0,8
tick,0x7ffc909efd34,193708377,0,0x0,8
tick,0x7ffc909efd34,193724025,0,0x0,8
tick,0x7ffc909efd34,193739846,0,0x0,8
tick,0x7ffc909efd34,193755222,0,0x0,8
tick,0x7ffc909efd34,193771560,0,0x0,8
tick,0x7ffc909efd34,193786193,0,0x0,8
tick,0x7ffc909efd34,193802202,0,0x0,8
tick,0x7ffc909efd34,193817396,0,0x0,8
tick,0x7ffc909efd34,193832937,0,0x0,8
tick,0x7ffc909efd34,193849194,0,0x0,8
tick,0x7ffc909efd34,193864399,0,0x0,8
tick,0x7ffc909efd34,193880674,0,0x0,8
tick,0x7ffc909efd34,193896174,0,0x0,8
tick,0x7ffc909efd34,193911365,0,0x0,8
tick,0x7ffc909efd34,193927632,0,0x0,8
tick,0x7ffc909efd34,193943316,0,0x0,8
tick,0x7ffc909efd34,193959419,0,0x0,8
tick,0x7ffc909efd34,193974644,0,0x0,8
tick,0x7ffc909efd34,193990480,0,0x0,8
tick,0x7ffc909efd34,194005769,0,0x0,8
tick,0x7ffc909efd34,194021261,0,0x0,8
tick,0x7ffc909efd34,194036402,0,0x0,8
tick,0x7ffc909efd34,194052400,0,0x0,8
tick,0x7ffc909efd34,194068089,0,0x0,8
tick,0x7ffc909efd34,194083739,0,0x0,8
tick,0x7ffc909efd34,194099444,0,0x0,8
tick,0x7ffc909efd34,194115316,0,0x0,8
tick,0x7ffc909efd34,194130585,0,0x0,8
tick,0x7ffc909efd34,194146644,0,0x0,8
tick,0x7ffc909efd34,194161274,0,0x0,8
tick,0x7ffc909efd34,194176865,0,0x0,8
tick,0x7ffc909efd34,194192875,0,0x0,8
tick,0x7ffc909efd34,194209672,0,0x0,8
tick,0x7ffc909efd34,194223711,0,0x0,8
tick,0x7ffc909efd34,194239222,0,0x0,8
tick,0x7ffc909efd34,194254588,0,0x0,8
tick,0x7ffc909efd34,194271361,0,0x0,8
tick,0x7ffc909efd34,194287177,0,0x0,8
tick,0x7ffc909efd34,194302490,0,0x0,8
tick,0x7ffc909efd34,194318635,0,0x0,8
tick,0x7ffc909efd34,194334069,0,0x0,8
tick,0x7ffc909efd34,194350360,0,0x0,8
tick,0x7ffc909efd34,194365929,0,0x0,8
tick,0x7ffc909efd34,194382027,0,0x0,8
tick,0x7ffc909efd34,194398076,0,0x0,8
tick,0x7ffc909efd34,194413646,0,0x0,8
tick,0x7ffc909efd34,194429661,0,0x0,8
tick,0x7ffc909efd34,194446436,0,0x0,8
tick,0x7ffc909efd34,194462303,0,0x0,8
tick,0x7ffc909efd34,194477669,0,0x0,8
tick,0x7ffc909efd34,194493970,0,0x0,8
tick,0x7ffc909efd34,194510109,0,0x0,8
tick,0x7ffc909efd34,194526145,0,0x0,8
tick,0x7ffc909efd34,194541971,0,0x0,8
tick,0x7ffc909efd34,194558322,0,0x0,8
tick,0x7ffc909efd34,194573962,0,0x0,8
tick,0x7ffc909efd34,194590410,0,0x0,8
tick,0x7ffc909efd34,194607635,0,0x0,8
tick,0x7ffc909efd34,194622096,0,0x0,8
tick,0x7ffc909efd34,194637944,0,0x0,8
tick,0x7ffc909efd34,194654878,0,0x0,8
tick,0x7ffc909efd34,194669759,0,0x0,8
tick,0x7ffc909efd34,194684772,0,0x0,8
tick,0x7ffc909efd34,194700592,0,0x0,8
tick,0x7ffc909efd34,194715744,0,0x0,8
tick,0x7ffc909efd34,194731676,0,0x0,8
tick,0x7ffc909efd34,194747660,0,0x0,8
tick,0x7ffc909efd34,194763685,0,0x0,8
tick,0x7ffc909efd34,194779889,0,0x0,8
tick,0x7ffc909efd34,194795784,0,0x0,8
tick,0x7ffc909efd34,194811281,0,0x0,8
tick,0x7ffc909efd34,194826729,0,0x0,8
tick,0x7ffc909efd34,194842849,0,0x0,8
tick,0x7ffc909efd34,194858209,0,0x0,8
tick,0x7ffc909efd34,194874319,0,0x0,8
tick,0x7ffc909efd34,194889548,0,0x0,8
tick,0x7ffc909efd34,194906751,0,0x0,8
tick,0x7ffc909efd34,194923731,0,0x0,8
tick,0x7ffc909efd34,194938626,0,0x0,8
tick,0x7ffc909efd34,194954235,0,0x0,8
tick,0x7ffc909efd34,194969490,0,0x0,8
tick,0x7ffc909efd34,194984435,0,0x0,8
tick,0x7ffc909efd34,195002970,0,0x0,8
tick,0x7ffc909efd34,195016509,0,0x0,8
tick,0x7ffc909efd34,195032509,0,0x0,8
tick,0x7ffc909efd34,195048489,0,0x0,8
tick,0x7ffc909efd34,195064519,0,0x0,8
tick,0x7ffc909efd34,195080514,0,0x0,8
tick,0x7ffc909efd34,195095627,0,0x0,8
tick,0x7ffc909efd34,195111219,0,0x0,8
tick,0x7ffc909efd34,195126456,0,0x0,8
tick,0x7ffc909efd34,195141782,0,0x0,8
tick,0x7ffc909efd34,195157656,0,0x0,8
tick,0x7ffc909efd34,195173167,0,0x0,8
tick,0x7ffc909efd34,195188996,0,0x0,8
tick,0x7ffc909efd34,195204195,0,0x0,8
tick,0x7ffc909efd34,195219546,0,0x0,8
tick,0x7ffc909efd34,195235487,0,0x0,8
tick,0x7ffc909efd34,195250634,0,0x0,8
tick,0x7ffc909efd34,195266035,0,0x0,8
tick,0x7ffc909efd34,195281624,0,0x0,8
tick,0x7ffc909efd34,195297214,0,0x0,8
tick,0x7ffc909efd34,195312777,0,0x0,8
tick,0x7ffc909efd34,195328256,0,0x0,8
tick,0x7ffc909efd34,195343764,0,0x0,8
tick,0x7ffc909efd34,195359906,0,0x0,8
tick,0x7ffc909efd34,195375318,0,0x0,8
tick,0x7ffc909efd34,195390800,0,0x0,8
tick,0x7ffc909efd34,195406474,0,0x0,8
tick,0x7ffc909efd34,195422267,0,0x0,8
tick,0x7ffc909efd34,195438018,0,0x0,8
tick,0x7ffc909efd34,195454047,0,0x0,8
tick,0x7ffc909efd34,195468856,0,0x0,8
tick,0x7ffc909efd34,195484109,0,0x0,8
tick,0x7ffc909efd34,195499441,0,0x0,8
tick,0x7ffc909efd34,195515389,0,0x0,8
tick,0x7ffc909efd34,195531618,0,0x0,8
tick,0x7ffc909efd34,195547082,0,0x0,8
tick,0x7ffc909efd34,195562414,0,0x0,8
tick,0x7ffc909efd34,195577817,0,0x0,8
tick,0x7ffc909efd34,195593381,0,0x0,8
tick,0x7ffc909efd34,195608660,0,0x0,8
tick,0x7ffc909efd34,195624735,0,0x0,8
tick,0x7ffc909efd34,195640038,0,0x0,8
tick,0x7ffc909efd34,195656002,0,0x0,8
tick,0x7ffc909efd34,195671584,0,0x0,8
tick,0x7ffc909efd34,195687843,0,0x0,8
tick,0x7ffc909efd34,195702131,0,0x0,8
tick,0x7ffc909efd34,195717556,0,0x0,8
tick,0x7ffc909efd34,195732476,0,0x0,8
tick,0x7ffc909efd34,195747703,0,0x0,8
tick,0x7ffc909efd34,195762906,0,0x0,8
tick,0x7ffc909efd34,195779102,0,0x0,8
tick,0x7ffc909efd34,195794431,0,0x0,8
tick,0x7ffc909efd34,195810575,0,0x0,8
tick,0x7ffc909efd34,195826700,0,0x0,8
tick,0x7ffc909efd34,195842253,0,0x0,8
tick,0x7ffc909efd34,195857572,0,0x0,8
tick,0x7ffc909efd34,195873446,0,0x0,8
tick,0x7ffc909efd34,195888620,0,0x0,8
tick,0x7ffc909efd34,195904421,0,0x0,8
tick,0x7ffc909efd34,195919564,0,0x0,8
tick,0x7ffc909efd34,195935700,0,0x0,8
tick,0x7ffc909efd34,195951062,0,0x0,8
tick,0x7ffc909efd34,195967132,0,0x0,8
tick,0x7ffc909efd34,195982610,0,0x0,8
tick,0x7ffc909efd34,195998735,0,0x0,8
tick,0x7ffc909efd34,196014218,0,0x0,8
tick,0x7ffc909efd34,196029964,0,0x0,8
tick,0x7ffc909efd34,196046272,0,0x0,8
tick,0x7ffc909efd34,196061402,0,0x0,8
tick,0x7ffc909efd34,196077209,0,0x0,8
tick,0x7ffc909efd34,196092620,0,0x0,8
tick,0x7ffc909efd34,196108067,0,0x0,8
tick,0x7ffc909efd34,196123298,0,0x0,8
tick,0x7ffc909efd34,196138783,0,0x0,8
tick,0x7ffc909efd34,196154805,0,0x0,8
tick,0x7ffc909efd34,196169673,0,0x0,8
tick,0x7ffc909efd34,196185457,0,0x0,8
tick,0x7ffc909efd34,196200150,0,0x0,8
tick,0x7ffc909efd34,196216299,0,0x0,8
tick,0x7ffc909efd34,196232556,0,0x0,8
tick,0x7ffc909efd34,196248270,0,0x0,8
tick,0x7ffc909efd34,196263801,0,0x0,8
tick,0x7ffc909efd34,196280178,0,0x0,8
tick,0x7ffc909efd34,196295388,0,0x0,8
tick,0x7ffc909efd34,196310777,0,0x0,8
tick,0x7ffc909efd34,196326223,0,0x0,8
tick,0x7ffc909efd34,196341564,0,0x0,8
tick,0x7ffc909efd34,196357411,0,0x0,8
tick,0x7ffc909efd34,196372762,0,0x0,8
tick,0x7ffc909efd34,196388181,0,0x0,8
tick,0x7ffc909efd34,196403809,0,0x0,8
tick,0x7ffc909efd34,196419525,0,0x0,8
tick,0x7ffc909efd34,196434550,0,0x0,8
tick,0x7ffc909efd34,196449940,0,0x0,8
tick,0x7ffc909efd34,196465501,0,0x0,8
tick,0x7ffc909efd34,196480765,0,0x0,8
tick,0x7ffc909efd34,196495945,0,0x0,8
tick,0x7ffc909efd34,196511467,0,0x0,8
tick,0x7ffc909efd34,196526948,0,0x0,8
tick,0x7ffc909efd34,196542430,0,0x0,8
tick,0x7ffc909efd34,196558277,0,0x0,8
tick,0x7ffc909efd34,196573376,0,0x0,8
tick,0x7ffc909efd34,196589023,0,0x0,8
tick,0x7ffc909efd34,196605131,0,0x0,8
tick,0x7ffc909efd34,196621243,0,0x0,8
tick,0x7ffc909efd34,196635805,0,0x0,8
tick,0x7ffc909efd34,196651164,0,0x0,8
tick,0x7ffc909efd34,196666349,0,0x0,8
tick,0x7ffc909efd34,196681638,0,0x0,8
tick,0x7ffc909efd34,196697164,0,0x0,8
tick,0x7ffc909efd34,196712229,0,0x0,8
tick,0x7ffc909efd34,196728000,0,0x0,8
tick,0x7ffc909efd34,196743998,0,0x0,8
tick,0x7ffc909efd34,196759929,0,0x0,8
tick,0x7ffc909efd34,196775367,0,0x0,8
tick,0x7ffc909efd34,196791522,0,0x0,8
tick,0x7ffc909efd34,196807448,0,0x0,8
tick,0x7ffc909efd34,196823197,0,0x0,8
tick,0x7ffc909efd34,196838757,0,0x0,8
tick,0x7ffc909efd34,196854737,0,0x0,8
tick,0x7ffc909efd34,196869935,0,0x0,8
tick,0x7ffc909efd34,196885100,0,0x0,8
tick,0x7ffc909efd34,196900774,0,0x0,8
tick,0x7ffc909efd34,196916445,0,0x0,8
tick,0x7ffc909efd34,196931999,0,0x0,8
tick,0x7ffc909efd34,196947163,0,0x0,8
tick,0x7ffc909efd34,196963386,0,0x0,8
tick,0x7ffc909efd34,196979725,0,0x0,8
tick,0x7ffc909efd34,196995343,0,0x0,8
tick,0x7ffc909efd34,197010473,0,0x0,8
tick,0x7ffc909efd34,197026195,0,0x0,8
tick,0x7ffc909efd34,197041941,0,0x0,8
tick,0x7ffc909efd34,197057728,0,0x0,8
tick,0x7ffc909efd34,197072949,0,0x0,8
tick,0x7ffc909efd34,197088607,0,0x0,8
tick,0x7ffc909efd34,197104631,0,0x0,8
tick,0x7ffc909efd34,197120258,0,0x0,8
tick,0x7ffc909efd34,197135359,0,0x0,8
tick,0x7ffc909efd34,197151327,0,0x0,8
tick,0x7ffc909efd34,197166754,0,0x0,8
tick,0x7ffc909efd34,197182087,0,0x0,8
tick,0x7ffc909efd34,197197349,0,0x0,8
tick,0x7ffc909efd34,197212723,0,0x0,8
tick,0x7ffc909efd34,197228236,0,0x0,8
tick,0x7ffc909efd34,197244195,0,0x0,8
tick,0x7ffc909efd34,197259137,0,0x0,8
tick,0x7ffc909efd34,197274080,0,0x0,8
tick,0x7ffc909efd34,197289246,0,0x0,8
tick,0x7ffc909efd34,197304352,0,0x0,8
tick,0x7ffc909efd34,197320211,0,0x0,8
tick,0x7ffc909efd34,197335771,0,0x0,8
tick,0x7ffc909efd34,197350880,0,0x0,8
tick,0x7ffc909efd34,197366372,0,0x0,8
tick,0x7ffc909efd34,197382035,0,0x0,8
tick,0x7ffc909efd34,197397703,0,0x0,8
tick,0x7ffc909efd34,197413441,0,0x0,8
tick,0x7ffc909efd34,197428578,0,0x0,8
tick,0x7ffc909efd34,197444331,0,0x0,8
tick,0x7ffc909efd34,197460707,0,0x0,8
tick,0x7ffc909efd34,197476140,0,0x0,8
tick,0x7ffc909efd34,197491799,0,0x0,8
tick,0x7ffc909efd34,197507401,0,0x0,8
tick,0x7ffc909efd34,197523535,0,0x0,8
tick,0x7ffc909efd34,197539090,0,0x0,8
tick,0x7ffc909efd34,197554544,0,0x0,8
tick,0x7ffc909efd34,197569933,0,0x0,8
tick,0x7ffc909efd34,197585310,0,0x0,8
tick,0x7ffc909efd34,197600840,0,0x0,8
tick,0x7ffc909efd34,197616213,0,0x0,8
tick,0x7ffc909efd34,197632559,0,0x0,8
tick,0x7ffc909efd34,197648058,0,0x0,8
tick,0x7ffc909efd34,197664037,0,0x0,8
tick,0x7ffc909efd34,197679640,0,0x0,8
tick,0x7ffc909efd34,197695125,0,0x0,8
tick,0x7ffc909efd34,197711116,0,0x0,8
tick,0x7ffc909efd34,197726779,0,0x0,8
tick,0x7ffc909efd34,197742064,0,0x0,8
tick,0x7ffc909efd34,197757436,0,0x0,8
tick,0x7ffc909efd34,197773028,0,0x0,8
tick,0x7ffc909efd34,197788206,0,0x0,8
tick,0x7ffc909efd34,197803435,0,0x0,8
tick,0x7ffc909efd34,197819665,0,0x0,8
tick,0x7ffc909efd34,197834784,0,0x0,8
tick,0x7ffc909efd34,197850775,0,0x0,8
tick,0x7ffc909efd34,197866470,0,0x0,8
tick,0x7ffc909efd34,197882280,0,0x0,8
tick,0x7ffc909efd34,197897985,0,0x0,8
tick,0x7ffc909efd34,197913537,0,0x0,8
tick,0x7ffc909efd34,197929837,0,0x0,8
tick,0x7ffc909efd34,197944989,0,0x0,8
tick,0x7ffc909efd34,197960721,0,0x0,8
tick,0x7ffc909efd34,197976017,0,0x0,8
tick,0x7ffc909efd34,197991264,0,0x0,8
tick,0x7ffc909efd34,198007502,0,0x0,8
tick,0x7ffc909efd34,198022807,0,0x0,8
tick,0x7ffc909efd34,198037955,0,0x0,8
tick,0x7ffc909efd34,198053992,0,0x0,8
tick,0x7ffc909efd34,198070005,0,0x0,8
tick,0x7ffc909efd34,198085369,0,0x0,8
tick,0x7ffc909efd34,198100879,0,0x0,8
tick,0x7ffc909efd34,198116298,0,0x0,8
tick,0x7ffc909efd34,198132222,0,0x0,8
tick,0x7ffc909efd34,198148079,0,0x0,8
tick,0x7ffc909efd34,198163621,0,0x0,8
tick,0x7ffc909efd34,198179685,0,0x0,8
tick,0x7ffc909efd34,198195912,0,0x0,8
tick,0x7ffc909efd34,198210964,0,0x0,8
tick,0x7ffc909efd34,198226319,0,0x0,8
tick,0x7ffc909efd34,198241954,0,0x0,8
tick,0x7ffc909efd34,198257328,0,0x0,8
tick,0x7ffc909efd34,198272943,0,0x0,8
tick,0x7ffc909efd34,198288600,0,0x0,8
tick,0x7ffc909efd34,198304169,0,0x0,8
tick,0x7ffc909efd34,198319920,0,0x0,8
tick,0x7ffc909efd34,198335370,0,0x0,8
tick,0x7ffc909efd34,198351404,0,0x0,8
tick,0x7ffc909efd34,198366953,0,0x0,8
tick,0x7ffc909efd34,198382166,0,0x0,8
tick,0x7ffc909efd34,198397860,0,0x0,8
tick,0x7ffc909efd34,198413246,0,0x0,8
tick,0x7ffc909efd34,198428533,0,0x0,8
tick,0x7ffc909efd34,198443889,0,0x0,8
tick,0x7ffc909efd34,198459237,0,0x0,8
tick,0x7ffc909efd34,198474355,0,0x0,8
tick,0x7ffc909efd34,198489815,0,0x0,8
tick,0x7ffc909efd34,198505203,0,0x0,8
tick,0x7ffc909efd34,198521181,0,0x0,8
tick,0x7ffc909efd34,198537026,0,0x0,8
tick,0x7ffc909efd34,198551814,0,0x0,8
tick,0x7ffc909efd34,198567077,0,0x0,8
tick,0x7ffc909efd34,198582493,0,0x0,8
tick,0x7ffc909efd34,198597778,0,0x0,8
tick,0x7ffc909efd34,198613497,0,0x0,8
tick,0x7ffc909efd34,198629677,0,0x0,8
tick,0x7ffc909efd34,198645303,0,0x0,8
tick,0x7ffc909efd34,198660785,0,0x0,8
tick,0x7ffc909efd34,198676390,0,0x0,8
tick,0x7ffc909efd34,198692072,0,0x0,8
tick,0x7ffc909efd34,198707638,0,0x0,8
tick,0x7ffc909efd34,198723596,0,0x0,8
tick,0x7ffc909efd34,198739266,0,0x0,8
tick,0x7ffc909efd34,198755301,0,0x0,8
tick,0x7ffc909efd34,198771034,0,0x0,8
tick,0x7ffc909efd34,198786450,0,0x0,8
tick,0x7ffc909efd34,198802065,0,0x0,8
tick,0x7ffc909efd34,198817780,0,0x0,8
tick,0x7ffc909efd34,198833393,0,0x0,8
tick,0x7ffc909efd34,198848563,0,0x0,8
tick,0x7ffc909efd34,198863857,0,0x0,8
tick,0x7ffc909efd34,198879308,0,0x0,8
tick,0x7ffc909efd34,198895162,0,0x0,8
tick,0x7ffc909efd34,198910559,0,0x0,8
tick,0x7ffc909efd34,198926170,0,0x0,8
tick,0x7ffc909efd34,198941217,0,0x0,8
tick,0x7ffc909efd34,198956143,0,0x0,8
tick,0x7ffc909efd34,198971516,0,0x0,8
tick,0x7ffc909efd34,198986920,0,0x0,8
tick,0x7ffc909efd34,199002582,0,0x0,8
tick,0x7ffc909efd34,199018091,0,0x0,8
tick,0x7ffc909efd34,199032679,0,0x0,8
tick,0x7ffc909efd34,199047963,0,0x0,8
tick,0x7ffc909efd34,199063759,0,0x0,8
tick,0x7ffc909efd34,199080126,0,0x0,8
tick,0x7ffc909efd34,199096089,0,0x0,8
tick,0x7ffc909efd34,199111549,0,0x0,8
tick,0x7ffc909efd34,199127314,0,0x0,8
tick,0x7ffc909efd34,199142892,0,0x0,8
tick,0x7ffc909efd34,199159204,0,0x0,8
tick,0x7ffc909efd34,199174392,0,0x0,8
tick,0x7ffc909efd34,199190458,0,0x0,8
tick,0x7ffc909efd34,199206104,0,0x0,8
tick,0x7ffc909efd34,199221293,0,0x0,8
tick,0x7ffc909efd34,199236855,0,0x0,8
tick,0x7ffc909efd34,199252363,0,0x0,8
tick,0x7ffc909efd34,199268013,0,0x0,8
tick,0x7ffc909efd34,199283007,0,0x0,8
tick,0x7ffc909efd34,199298239,0,0x0,8
tick,0x7ffc909efd34,199314160,0,0x0,8
tick,0x7ffc909efd34,199329766,0,0x0,8
tick,0x7ffc909efd34,199345269,0,0x0,8
tick,0x7ffc909efd34,199360897,0,0x0,8
tick,0x7ffc909efd34,199376377,0,0x0,8
tick,0x7ffc909efd34,199392696,0,0x0,8
tick,0x7ffc909efd34,199408167,0,0x0,8
tick,0x7ffc909efd34,199423610,0,0x0,8
tick,0x7ffc909efd34,199438822,0,0x0,8
tick,0x7ffc909efd34,199454814,0,0x0,8
tick,0x7ffc909efd34,199470802,0,0x0,8
tick,0x7ffc909efd34,199486403,0,0x0,8
tick,0x7ffc909efd34,199500915,0,0x0,8
tick,0x7ffc909efd34,199516212,0,0x0,8
tick,0x7ffc909efd34,199532240,0,0x0,8
tick,0x7ffc909efd34,199547974,0,0x0,8
tick,0x7ffc909efd34,199563714,0,0x0,8
tick,0x7ffc909efd34,199579343,0,0x0,8
tick,0x7ffc909efd34,199595010,0,0x0,8
tick,0x7ffc909efd34,199610645,0,0x0,8
tick,0x7ffc909efd34,199626128,0,0x0,8
tick,0x7ffc909efd34,199641398,0,0x0,8
tick,0x7ffc909efd34,199657080,0,0x0,8
tick,0x7ffc909efd34,199672264,0,0x0,8
tick,0x7ffc909efd34,199688242,0,0x0,8
tick,0x7ffc909efd34,199704024,0,0x0,8
tick,0x7ffc909efd34,199719470,0,0x0,8
tick,0x7ffc909efd34,199734842,0,0x0,8
tick,0x7ffc909efd34,199750292,0,0x0,8
tick,0x7ffc909efd34,199765865,0,0x0,8
tick,0x7ffc909efd34,199781898,0,0x0,8
tick,0x7ffc909efd34,199797563,0,0x0,8
tick,0x7ffc909efd34,199813617,0,0x0,8
tick,0x7ffc909efd34,199829747,0,0x0,8
tick,0x7ffc909efd34,199845095,0,0x0,8
tick,0x7ffc909efd34,199860489,0,0x0,8
tick,0x7ffc909efd34,199876338,0,0x0,8
tick,0x7ffc909efd34,199891366,0,0x0,8
tick,0x7ffc909efd34,199906152,0,0x0,8
tick,0x7ffc909efd34,199921529,0,0x0,8
tick,0x7ffc909efd34,199937235,0,0x0,8
tick,0x7ffc909efd34,199953477,0,0x0,8
tick,0x7ffc909efd34,199968456,0,0x0,8
tick,0x7ffc909efd34,199983971,0,0x0,8
tick,0x7ffc909efd34,200000135,0,0x0,8
tick,0x7ffc909efd34,200016056,0,0x0,8
tick,0x7ffc909efd34,200032466,0,0x0,8
tick,0x7ffc909efd34,200048157,0,0x0,8
tick,0x7ffc909efd34,200063618,0,0x0,8
tick,0x7ffc909efd34,200079444,0,0x0,8
tick,0x7ffc909efd34,200095144,0,0x0,8
tick,0x7ffc909efd34,200111282,0,0x0,8
tick,0x7ffc909efd34,200127541,0,0x0,8
tick,0x7ffc909efd34,200143363,0,0x0,8
tick,0x7ffc909efd34,200159209,0,0x0,8
tick,0x7ffc909efd34,200174612,0,0x0,8
tick,0x7ffc909efd34,200190582,0,0x0,8
tick,0x7ffc909efd34,200206779,0,0x0,8
tick,0x7ffc909efd34,200222276,0,0x0,8
tick,0x7ffc909efd34,200237956,0,0x0,8
tick,0x7ffc909efd34,200253354,0,0x0,8
tick,0x7ffc909efd34,200268735,0,0x0,8
tick,0x7ffc909efd34,200284117,0,0x0,8
tick,0x7ffc909efd34,200299442,0,0x0,8
tick,0x7ffc909efd34,200314837,0,0x0,8
tick,0x7ffc909efd34,200330604,0,0x0,8
tick,0x7ffc909efd34,200346012,0,0x0,8
tick,0x7ffc909efd34,200361869,0,0x0,8
tick,0x7ffc909efd34,200377230,0,0x0,8
tick,0x7ffc909efd34,200393178,0,0x0,8
tick,0x7ffc909efd34,200408827,0,0x0,8
tick,0x7ffc909efd34,200424703,0,0x0,8
tick,0x7ffc909efd34,200439975,0,0x0,8
tick,0x7ffc909efd34,200455843,0,0x0,8
tick,0x7ffc909efd34,200471161,0,0x0,8
tick,0x7ffc909efd34,200486686,0,0x0,8
tick,0x7ffc909efd34,200502912,0,0x0,8
tick,0x7ffc909efd34,200518559,0,0x0,8
tick,0x7ffc909efd34,200533756,0,0x0,8
tick,0x7ffc909efd34,200548961,0,0x0,8
tick,0x7ffc909efd34,200564664,0,0x0,8
tick,0x7ffc909efd34,200580379,0,0x0,8
tick,0x7ffc909efd34,200595769,0,0x0,8
tick,0x7ffc909efd34,200611261,0,0x0,8
tick,0x7ffc909efd34,200626715,0,0x0,8
tick,0x7ffc909efd34,200642316,0,0x0,8
tick,0x7ffc909efd34,200658254,0,0x0,8
tick,0x7ffc909efd34,200674236,0,0x0,8
tick,0x7ffc909efd34,200709442,0,0x0,8
tick,0x7ffc909efd34,200723094,0,0x0,8
tick,0x7ffc909efd34,200745932,0,0x0,8
tick,0x7ffc909efd34,200763091,0,0x0,8
tick,0x7ffc909efd34,200770361,0,0x0,8
tick,0x7ffc909efd34,200786412,0,0x0,8
tick,0x7ffc909efd34,200802593,0,0x0,8
tick,0x7ffc909efd34,200817393,0,0x0,8
tick,0x7ffc909efd34,200832570,0,0x0,8
tick,0x7ffc909efd34,200848365,0,0x0,8
tick,0x7ffc909efd34,200864408,0,0x0,8
tick,0x7ffc909efd34,200879764,0,0x0,8
tick,0x7ffc909efd34,200895215,0,0x0,8
tick,0x7ffc909efd34,200910270,0,0x0,8
tick,0x7ffc909efd34,200926075,0,0x0,8
tick,0x7ffc909efd34,200941245,0,0x0,8
tick,0x7ffc909efd34,200956499,0,0x0,8
tick,0x7ffc909efd34,200971894,0,0x0,8
tick,0x7ffc909efd34,200988030,0,0x0,8
tick,0x7ffc909efd34,201003302,0,0x0,8
tick,0x7ffc909efd34,201019115,0,0x0,8
tick,0x7ffc909efd34,201034969,0,0x0,8
tick,0x7ffc909efd34,201051120,0,0x0,8
tick,0x7ffc909efd34,201066715,0,0x0,8
tick,0x7ffc909efd34,201082165,0,0x0,8
tick,0x7ffc909efd34,201097514,0,0x0,8
tick,0x7ffc909efd34,201113377,0,0x0,8
tick,0x7ffc909efd34,201129787,0,0x0,8
tick,0x7ffc909efd34,201145895,0,0x0,8
tick,0x7ffc909efd34,201161195,0,0x0,8
tick,0x7ffc909efd34,201176617,0,0x0,8
tick,0x7ffc909efd34,201192218,0,0x0,8
tick,0x7ffc909efd34,201208355,0,0x0,8
tick,0x7ffc909efd34,201223727,0,0x0,8
tick,0x7ffc909efd34,201238817,0,0x0,8
tick,0x7ffc909efd34,201254485,0,0x0,8
tick,0x7ffc909efd34,201270011,0,0x0,8
tick,0x7ffc909efd34,201285791,0,0x0,8
tick,0x7ffc909efd34,201301057,0,0x0,8
tick,0x7ffc909efd34,201316636,0,0x0,8
tick,0x7ffc909efd34,201332215,0,0x0,8
tick,0x7ffc909efd34,201347571,0,0x0,8
tick,0x7ffc909efd34,201363067,0,0x0,8
tick,0x7ffc909efd34,201378520,0,0x0,8
tick,0x7ffc909efd34,201394321,0,0x0,8
tick,0x7ffc909efd34,201410209,0,0x0,8
tick,0x7ffc909efd34,201425812,0,0x0,8
tick,0x7ffc909efd34,201441167,0,0x0,8
tick,0x7ffc909efd34,201456386,0,0x0,8
tick,0x7ffc909efd34,201471750,0,0x0,8
tick,0x7ffc909efd34,201487360,0,0x0,8
tick,0x7ffc909efd34,201503414,0,0x0,8
tick,0x7ffc909efd34,201519309,0,0x0,8
tick,0x7ffc909efd34,201534418,0,0x0,8
tick,0x7ffc909efd34,201550029,0,0x0,8
tick,0x7ffc909efd34,201565610,0,0x0,8
tick,0x7ffc909efd34,201581504,0,0x0,8
tick,0x7ffc909efd34,201596946,0,0x0,8
tick,0x7ffc909efd34,201613157,0,0x0,8
tick,0x7ffc909efd34,201628518,0,0x0,8
tick,0x7ffc909efd34,201644087,0,0x0,8
tick,0x7ffc909efd34,201660432,0,0x0,8
tick,0x7ffc909efd34,201676164,0,0x0,8
tick,0x7ffc909efd34,201691695,0,0x0,8
tick,0x7ffc909efd34,201706902,0,0x0,8
tick,0x7ffc909efd34,201722485,0,0x0,8
tick,0x7ffc909efd34,201737900,0,0x0,8
tick,0x7ffc909efd34,201753977,0,0x0,8
tick,0x7ffc909efd34,201769101,0,0x0,8
tick,0x7ffc909efd34,201784809,0,0x0,8
tick,0x7ffc909efd34,201800446,0,0x0,8
tick,0x7ffc909efd34,201815986,0,0x0,8
tick,0x7ffc909efd34,201831462,0,0x0,8
tick,0x7ffc909efd34,201846707,0,0x0,8
tick,0x7ffc909efd34,201862306,0,0x0,8
tick,0x7ffc909efd34,201877667,0,0x0,8
tick,0x7ffc909efd34,201893369,0,0x0,8
tick,0x7ffc909efd34,201909175,0,0x0,8
tick,0x7ffc909efd34,201924601,0,0x0,8
tick,0x7ffc909efd34,201940031,0,0x0,8
tick,0x7ffc909efd34,201956100,0,0x0,8
tick,0x7ffc909efd34,201972282,0,0x0,8
tick,0x7ffc909efd34,201987589,0,0x0,8
tick,0x7ffc909efd34,202003195,0,0x0,8
tick,0x7ffc909efd34,202019479,0,0x0,8
tick,0x7ffc909efd34,202035039,0,0x0,8
tick,0x7ffc909efd34,202051268,0,0x0,8
tick,0x7ffc909efd34,202066977,0,0x0,8
tick,0x7ffc909efd34,202083305,0,0x0,8
tick,0x7ffc909efd34,202099495,0,0x0,8
tick,0x7ffc909efd34,202115255,0,0x0,8
tick,0x7ffc909efd34,202130915,0,0x0,8
tick,0x7ffc909efd34,202146356,0,0x0,8
tick,0x7ffc909efd34,202161857,0,0x0,8
tick,0x7ffc909efd34,202177215,0,0x0,8
tick,0x7ffc909efd34,202192568,0,0x0,8
tick,0x7ffc909efd34,202207538,0,0x0,8
tick,0x7ffc909efd34,202222821,0,0x0,8
tick,0x7ffc909efd34,202238845,0,0x0,8
tick,0x7ffc909efd34,202254239,0,0x0,8
tick,0x7ffc909efd34,202270180,0,0x0,8
tick,0x7ffc909efd34,202285821,0,0x0,8
tick,0x7ffc909efd34,202300700,0,0x0,8
tick,0x7ffc909efd34,202316322,0,0x0,8
tick,0x7ffc909efd34,202331939,0,0x0,8
tick,0x7ffc909efd34,202347547,0,0x0,8
tick,0x7ffc909efd34,202363100,0,0x0,8
tick,0x7ffc909efd34,202378336,0,0x0,8
tick,0x7ffc909efd34,202393863,0,0x0,8
tick,0x7ffc909efd34,202409385,0,0x0,8
tick,0x7ffc909efd34,202424783,0,0x0,8
tick,0x7ffc909efd34,202440882,0,0x0,8
tick,0x7ffc909efd34,202456612,0,0x0,8
tick,0x7ffc909efd34,202472106,0,0x0,8
tick,0x7ffc909efd34,202487389,0,0x0,8
tick,0x7ffc909efd34,202503091,0,0x0,8
tick,0x7ffc909efd34,202519277,0,0x0,8
tick,0x7ffc909efd34,202533979,0,0x0,8
tick,0x7ffc909efd34,202549428,0,0x0,8
tick,0x7ffc909efd34,202565586,0,0x0,8
tick,0x7ffc909efd34,202581353,0,0x0,8
tick,0x7ffc909efd34,202597358,0,0x0,8
tick,0x7ffc909efd34,202612754,0,0x0,8
tick,0x7ffc909efd34,202628721,0,0x0,8
tick,0x7ffc909efd34,202644036,0,0x0,8
tick,0x7ffc909efd34,202659208,0,0x0,8
tick,0x7ffc909efd34,202674352,0,0x0,8
tick,0x7ffc909efd34,202690124,0,0x0,8
tick,0x7ffc909efd34,202705797,0,0x0,8
tick,0x7ffc909efd34,202721825,0,0x0,8
tick,0x7ffc909efd34,202737258,0,0x0,8
tick,0x7ffc909efd34,202753089,0,0x0,8
tick,0x7ffc909efd34,202769472,0,0x0,8
tick,0x7ffc909efd34,202785004,0,0x0,8
tick,0x7ffc909efd34,202800246,0,0x0,8
tick,0x7ffc909efd34,202816213,0,0x0,8
tick,0x7ffc909efd34,202832189,0,0x0,8
tick,0x7ffc909efd34,202848442,0,0x0,8
tick,0x7ffc909efd34,202863299,0,0x0,8
tick,0x7ffc909efd34,202878687,0,0x0,8
tick,0x7ffc909efd34,202893961,0,0x0,8
tick,0x7ffc909efd34,202909813,0,0x0,8
tick,0x7ffc909efd34,202925264,0,0x0,8
tick,0x7ffc909efd34,202940569,0,0x0,8
tick,0x7ffc909efd34,202956843,0,0x0,8
tick,0x7ffc909efd34,202972218,0,0x0,8
tick,0x7ffc909efd34,202987391,0,0x0,8
tick,0x7ffc909efd34,203002789,0,0x0,8
tick,0x7ffc909efd34,203018731,0,0x0,8
tick,0x7ffc909efd34,203034271,0,0x0,8
tick,0x7ffc909efd34,203050021,0,0x0,8
tick,0x7ffc909efd34,203065455,0,0x0,8
tick,0x7ffc909efd34,203080943,0,0x0,8
tick,0x7ffc909efd34,203096135,0,0x0,8
tick,0x7ffc909efd34,203112138,0,0x0,8
tick,0x7ffc909efd34,203128105,0,0x0,8
tick,0x7ffc909efd34,203143587,0,0x0,8
tick,0x7ffc909efd34,203159363,0,0x0,8
tick,0x7ffc909efd34,203175167,0,0x0,8
tick,0x7ffc909efd34,203191261,0,0x0,8
tick,0x7ffc909efd34,203207182,0,0x0,8
tick,0x7ffc909efd34,203222118,0,0x0,8
tick,0x7ffc909efd34,203237066,0,0x0,8
tick,0x7ffc909efd34,203253175,0,0x0,8
tick,0x7ffc909efd34,203268322,0,0x0,8
tick,0x7ffc909efd34,203284351,0,0x0,8
tick,0x7ffc909efd34,203300137,0,0x0,8
tick,0x7ffc909efd34,203315356,0,0x0,8
tick,0x7ffc909efd34,203331392,0,0x0,8
tick,0x7ffc909efd34,203346994,0,0x0,8
tick,0x7ffc909efd34,203362219,0,0x0,8
tick,0x7ffc909efd34,203377719,0,0x0,8
tick,0x7ffc909efd34,203393202,0,0x0,8
tick,0x7ffc909efd34,203408465,0,0x0,8
tick,0x7ffc909efd34,203423971,0,0x0,8
tick,0x7ffc909efd34,203439343,0,0x0,8
tick,0x7ffc909efd34,203455110,0,0x0,8
tick,0x7ffc909efd34,203471037,0,0x0,8
tick,0x7ffc909efd34,203486254,0,0x0,8
tick,0x7ffc909efd34,203502174,0,0x0,8
tick,0x7ffc909efd34,203517075,0,0x0,8
tick,0x7ffc909efd34,203532882,0,0x0,8
tick,0x7ffc909efd34,203548232,0,0x0,8
tick,0x7ffc909efd34,203563975,0,0x0,8
tick,0x7ffc909efd34,203579442,0,0x0,8
tick,0x7ffc909efd34,203595358,0,0x0,8
tick,0x7ffc909efd34,203611110,0,0x0,8
tick,0x7ffc909efd34,203627156,0,0x0,8
tick,0x7ffc909efd34,203642426,0,0x0,8
tick,0x7ffc909efd34,203657859,0,0x0,8
tick,0x7ffc909efd34,203673403,0,0x0,8
tick,0x7ffc909efd34,203688640,0,0x0,8
tick,0x7ffc909efd34,203704492,0,0x0,8
tick,0x7ffc909efd34,203719560,0,0x0,8
tick,0x7ffc909efd34,203735567,0,0x0,8
tick,0x7ffc909efd34,203750909,0,0x0,8
tick,0x7ffc909efd34,203766937,0,0x0,8
tick,0x7ffc909efd34,203782308,0,0x0,8
tick,0x7ffc909efd34,203797819,0,0x0,8
tick,0x7ffc909efd34,203812755,0,0x0,8
tick,0x7ffc909efd34,203827783,0,0x0,8
tick,0x7ffc909efd34,203843784,0,0x0,8
tick,0x7ffc909efd34,203859120,0,0x0,8
tick,0x7ffc909efd34,203875132,0,0x0,8
tick,0x7ffc909efd34,203890934,0,0x0,8
tick,0x7ffc909efd34,203906795,0,0x0,8
tick,0x7ffc909efd34,203922049,0,0x0,8
tick,0x7ffc909efd34,203937580,0,0x0,8
tick,0x7ffc909efd34,203952858,0,0x0,8
tick,0x7ffc909efd34,203968851,0,0x0,8
tick,0x7ffc909efd34,203984447,0,0x0,8
tick,0x7ffc909efd34,204000274,0,0x0,8
tick,0x7ffc909efd34,204016032,0,0x0,8
tick,0x7ffc909efd34,204031416,0,0x0,8
tick,0x7ffc909efd34,204047021,0,0x0,8
tick,0x7ffc909efd34,204062535,0,0x0,8
tick,0x7ffc909efd34,204078308,0,0x0,8
tick,0x7ffc909efd34,204093756,0,0x0,8
tick,0x7ffc909efd34,204109234,0,0x0,8
tick,0x7ffc909efd34,204125328,0,0x0,8
tick,0x7ffc909efd34,204140872,0,0x0,8
tick,0x7ffc909efd34,204156688,0,0x0,8
tick,0x7ffc909efd34,204173046,0,0x0,8
tick,0x7ffc909efd34,204188304,0,0x0,8
tick,0x7ffc909efd34,204203813,0,0x0,8
tick,0x7ffc909efd34,204219251,0,0x0,8
tick,0x7ffc909efd34,204235500,0,0x0,8
tick,0x7ffc909efd34,204251409,0,0x0,8
tick,0x7ffc909efd34,204267243,0,0x0,8
tick,0x7ffc909efd34,204283435,0,0x0,8
tick,0x7ffc909efd34,204299666,0,0x0,8
tick,0x7ffc909efd34,204315116,0,0x0,8
tick,0x7ffc909efd34,204330790,0,0x0,8
tick,0x7ffc909efd34,204346409,0,0x0,8
tick,0x7ffc909efd34,204361887,0,0x0,8
tick,0x7ffc909efd34,204377649,0,0x0,8
tick,0x7ffc909efd34,204393169,0,0x0,8
tick,0x7ffc909efd34,204408603,0,0x0,8
tick,0x7ffc909efd34,204424071,0,0x0,8
tick,0x7ffc909efd34,204439884,0,0x0,8
tick,0x7ffc909efd34,204455054,0,0x0,8
tick,0x7ffc909efd34,204470728,0,0x0,8
tick,0x7ffc909efd34,204486028,0,0x0,8
tick,0x7ffc909efd34,204501335,0,0x0,8
tick,0x7ffc909efd34,204517210,0,0x0,8
tick,0x7ffc909efd34,204532552,0,0x0,8
tick,0x7ffc909efd34,204547766,0,0x0,8
tick,0x7ffc909efd34,204563434,0,0x0,8
tick,0x7ffc909efd34,204578829,0,0x0,8
tick,0x7ffc909efd34,204594240,0,0x0,8
tick,0x7ffc909efd34,204610052,0,0x0,8
tick,0x7ffc909efd34,204625831,0,0x0,8
tick,0x7ffc909efd34,204641801,0,0x0,8
tick,0x7ffc909efd34,204657807,0,0x0,8
tick,0x7ffc909efd34,204674879,0,0x0,8
tick,0x7ffc909efd34,204690019,0,0x0,8
tick,0x7ffc909efd34,204705809,0,0x0,8
tick,0x7ffc909efd34,204721964,0,0x0,8
tick,0x7ffc909efd34,204737798,0,0x0,8
tick,0x7ffc909efd34,204753870,0,0x0,8
tick,0x7ffc909efd34,204769896,0,0x0,8
tick,0x7ffc909efd34,204785265,0,0x0,8
tick,0x7ffc909efd34,204800270,0,0x0,8
tick,0x7ffc909efd34,204815423,0,0x0,8
tick,0x7ffc909efd34,204830865,0,0x0,8
tick,0x7ffc909efd34,204846084,0,0x0,8
tick,0x7ffc909efd34,204861758,0,0x0,8
tick,0x7ffc909efd34,204878126,0,0x0,8
tick,0x7ffc909efd34,204893791,0,0x0,8
tick,0x7ffc909efd34,204910151,0,0x0,8
tick,0x7ffc909efd34,204926159,0,0x0,8
tick,0x7ffc909efd34,204941355,0,0x0,8
tick,0x7ffc909efd34,204956930,0,0x0,8
tick,0x7ffc909efd34,204972009,0,0x0,8
tick,0x7ffc909efd34,204987110,0,0x0,8
tick,0x7ffc909efd34,205003097,0,0x0,8
tick,0x7ffc909efd34,205018519,0,0x0,8
tick,0x7ffc909efd34,205033607,0,0x0,8
tick,0x7ffc909efd34,205049536,0,0x0,8
tick,0x7ffc909efd34,205064923,0,0x0,8
tick,0x7ffc909efd34,205080435,0,0x0,8
tick,0x7ffc909efd34,205096165,0,0x0,8
tick,0x7ffc909efd34,205111482,0,0x0,8
tick,0x7ffc909efd34,205126973,0,0x0,8
tick,0x7ffc909efd34,205142619,0,0x0,8
tick,0x7ffc909efd34,205158179,0,0x0,8
tick,0x7ffc909efd34,205173865,0,0x0,8
tick,0x7ffc909efd34,205190059,0,0x0,8
tick,0x7ffc909efd34,205206220,0,0x0,8
tick,0x7ffc909efd34,205221712,0,0x0,8
tick,0x7ffc909efd34,205237596,0,0x0,8
tick,0x7ffc909efd34,205253069,0,0x0,8
tick,0x7ffc909efd34,205268736,0,0x0,8
tick,0x7ffc909efd34,205283823,0,0x0,8
tick,0x7ffc909efd34,205299475,0,0x0,8
tick,0x7ffc909efd34,205314955,0,0x0,8
tick,0x7ffc909efd34,205330458,0,0x0,8
tick,0x7ffc909efd34,205346325,0,0x0,8
tick,0x7ffc909efd34,205362896,0,0x0,8
tick,0x7ffc909efd34,205377851,0,0x0,8
tick,0x7ffc909efd34,205393530,0,0x0,8
tick,0x7ffc909efd34,205409819,0,0x0,8
tick,0x7ffc909efd34,205425028,0,0x0,8
tick,0x7ffc909efd34,205440827,0,0x0,8
tick,0x7ffc909efd34,205456337,0,0x0,8
tick,0x7ffc909efd34,205471679,0,0x0,8
tick,0x7ffc909efd34,205487755,0,0x0,8
tick,0x7ffc909efd34,205503313,0,0x0,8
tick,0x7ffc909efd34,205518962,0,0x0,8
tick,0x7ffc909efd34,205534046,0,0x0,8
tick,0x7ffc909efd34,205549757,0,0x0,8
tick,0x7ffc909efd34,205565503,0,0x0,8
tick,0x7ffc909efd34,205581079,0,0x0,8
tick,0x7ffc909efd34,205596412,0,0x0,8
tick,0x7ffc909efd34,205612211,0,0x0,8
tick,0x7ffc909efd34,205628233,0,0x0,8
tick,0x7ffc909efd34,205643426,0,0x0,8
tick,0x7ffc909efd34,205659287,0,0x0,8
tick,0x7ffc909efd34,205674491,0,0x0,8
tick,0x7ffc909efd34,205690754,0,0x0,8
tick,0x7ffc909efd34,205706121,0,0x0,8
tick,0x7ffc909efd34,205721482,0,0x0,8
tick,0x7ffc909efd34,205737511,0,0x0,8
tick,0x7ffc909efd34,205753010,0,0x0,8
tick,0x7ffc909efd34,205768802,0,0x0,8
tick,0x7ffc909efd34,205783778,0,0x0,8
tick,0x7ffc909efd34,205799494,0,0x0,8
tick,0x7ffc909efd34,205815365,0,0x0,8
tick,0x7ffc909efd34,205830985,0,0x0,8
tick,0x7ffc909efd34,205846164,0,0x0,8
tick,0x7ffc909efd34,205861353,0,0x0,8
tick,0x7ffc909efd34,205876803,0,0x0,8
tick,0x7ffc909efd34,205892303,0,0x0,8
tick,0x7ffc909efd34,205908078,0,0x0,8
tick,0x7ffc909efd34,205923605,0,0x0,8
tick,0x7ffc909efd34,205939295,0,0x0,8
tick,0x7ffc909efd34,205955023,0,0x0,8
tick,0x7ffc909efd34,205970797,0,0x0,8
tick,0x7ffc909efd34,205986302,0,0x0,8
tick,0x7ffc909efd34,206002272,0,0x0,8
tick,0x7ffc909efd34,206018065,0,0x0,8
tick,0x7ffc909efd34,206033468,0,0x0,8
tick,0x7ffc909efd34,206049052,0,0x0,8
tick,0x7ffc909efd34,206064624,0,0x0,8
tick,0x7ffc909efd34,206080475,0,0x0,8
tick,0x7ffc909efd34,206095931,0,0x0,8
tick,0x7ffc909efd34,206111455,0,0x0,8
tick,0x7ffc909efd34,206126559,0,0x0,8
tick,0x7ffc909efd34,206142587,0,0x0,8
tick,0x7ffc909efd34,206158641,0,0x0,8
tick,0x7ffc909efd34,206174634,0,0x0,8
tick,0x7ffc909efd34,206190442,0,0x0,8
tick,0x7ffc909efd34,206205073,0,0x0,8
tick,0x7ffc909efd34,206220902,0,0x0,8
tick,0x7ffc909efd34,206236854,0,0x0,8
tick,0x7ffc909efd34,206252512,0,0x0,8
tick,0x7ffc909efd34,206268156,0,0x0,8
tick,0x7ffc909efd34,206283211,0,0x0,8
tick,0x7ffc909efd34,206298581,0,0x0,8
tick,0x7ffc909efd34,206314469,0,0x0,8
tick,0x7ffc909efd34,206329820,0,0x0,8
tick,0x7ffc909efd34,206345413,0,0x0,8
tick,0x7ffc909efd34,206361389,0,0x0,8
tick,0x7ffc909efd34,206377239,0,0x0,8
tick,0x7ffc909efd34,206392719,0,0x0,8
tick,0x7ffc909efd34,206408035,0,0x0,8
tick,0x7ffc909efd34,206424055,0,0x0,8
tick,0x7ffc909efd34,206440188,0,0x0,8
tick,0x7ffc909efd34,206455802,0,0x0,8
tick,0x7ffc909efd34,206470997,0,0x0,8
tick,0x7ffc909efd34,206486575,0,0x0,8
tick,0x7ffc909efd34,206502552,0,0x0,8
tick,0x7ffc909efd34,206518148,0,0x0,8
tick,0x7ffc909efd34,206533681,0,0x0,8
tick,0x7ffc909efd34,206549105,0,0x0,8
tick,0x7ffc909efd34,206564726,0,0x0,8
tick,0x7ffc909efd34,206580277,0,0x0,8
tick,0x7ffc909efd34,206595662,0,0x0,8
tick,0x7ffc909efd34,206611544,0,0x0,8
tick,0x7ffc909efd34,206627161,0,0x0,8
tick,0x7ffc909efd34,206642773,0,0x0,8
tick,0x7ffc909efd34,206658054,0,0x0,8
tick,0x7ffc909efd34,206673364,0,0x0,8
tick,0x7ffc909efd34,206689081,0,0x0,8
tick,0x7ffc909efd34,206704364,0,0x0,8
tick,0x7ffc909efd34,206720165,0,0x0,8
tick,0x7ffc909efd34,206736355,0,0x0,8
tick,0x7ffc909efd34,206752350,0,0x0,8
tick,0x7ffc909efd34,206768028,0,0x0,8
tick,0x7ffc909efd34,206783549,0,0x0,8
tick,0x7ffc909efd34,206798985,0,0x0,8
tick,0x7ffc909efd34,206814507,0,0x0,8
tick,0x7ffc909efd34,206830263,0,0x0,8
tick,0x7ffc909efd34,206846313,0,0x0,8
tick,0x7ffc909efd34,206861443,0,0x0,8
tick,0x7ffc909efd34,206877012,0,0x0,8
tick,0x7ffc909efd34,206892728,0,0x0,8
tick,0x7ffc909efd34,206908620,0,0x0,8
tick,0x7ffc909efd34,206924439,0,0x0,8
tick,0x7ffc909efd34,206939872,0,0x0,8
tick,0x7ffc909efd34,206955804,0,0x0,8
tick,0x7ffc909efd34,206971183,0,0x0,8
tick,0x7ffc909efd34,206986776,0,0x0,8
tick,0x7ffc909efd34,207002132,0,0x0,8
tick,0x7ffc909efd34,207017960,0,0x0,8
tick,0x7ffc909efd34,207033289,0,0x0,8
tick,0x7ffc909efd34,207048533,0,0x0,8
tick,0x7ffc909efd34,207064372,0,0x0,8
tick,0x7ffc909efd34,207079817,0,0x0,8
tick,0x7ffc909efd34,207095866,0,0x0,8
tick,0x7ffc909efd34,207111528,0,0x0,8
tick,0x7ffc909efd34,207126987,0,0x0,8
tick,0x7ffc909efd34,207142620,0,0x0,8
tick,0x7ffc909efd34,207157870,0,0x0,8
tick,0x7ffc909efd34,207173776,0,0x0,8
tick,0x7ffc909efd34,207189092,0,0x0,8
tick,0x7ffc909efd34,207204653,0,0x0,8
tick,0x7ffc909efd34,207219999,0,0x0,8
tick,0x7ffc909efd34,207236146,0,0x0,8
tick,0x7ffc909efd34,207252444,0,0x0,8
tick,0x7ffc909efd34,207268052,0,0x0,8
tick,0x7ffc909efd34,207283444,0,0x0,8
tick,0x7ffc909efd34,207299307,0,0x0,8
tick,0x7ffc909efd34,207314648,0,0x0,8
tick,0x7ffc909efd34,207330383,0,0x0,8
tick,0x7ffc909efd34,207345913,0,0x0,8
tick,0x7ffc909efd34,207361193,0,0x0,8
tick,0x7ffc909efd34,207376869,0,0x0,8
tick,0x7ffc909efd34,207392669,0,0x0,8
tick,0x7ffc909efd34,207408629,0,0x0,8
tick,0x7ffc909efd34,207423878,0,0x0,8
tick,0x7ffc909efd34,207439840,0,0x0,8
tick,0x7ffc909efd34,207455521,0,0x0,8
tick,0x7ffc909efd34,207470564,0,0x0,8
tick,0x7ffc909efd34,207486077,0,0x0,8
tick,0x7ffc909efd34,207501491,0,0x0,8
tick,0x7ffc909efd34,207516984,0,0x0,8
tick,0x7ffc909efd34,207532451,0,0x0,8
tick,0x7ffc909efd34,207548077,0,0x0,8
tick,0x7ffc909efd34,207563608,0,0x0,8
tick,0x7ffc909efd34,207579092,0,0x0,8
tick,0x7ffc909efd34,207595171,0,0x0,8
tick,0x7ffc909efd34,207610596,0,0x0,8
tick,0x7ffc909efd34,207626041,0,0x0,8
tick,0x7ffc909efd34,207641505,0,0x0,8
tick,0x7ffc909efd34,207656921,0,0x0,8
tick,0x7ffc909efd34,207672507,0,0x0,8
tick,0x7ffc909efd34,207688215,0,0x0,8
tick,0x7ffc909efd34,207703956,0,0x0,8
tick,0x7ffc909efd34,207719542,0,0x0,8
tick,0x7ffc909efd34,207735616,0,0x0,8
tick,0x7ffc909efd34,207751288,0,0x0,8
tick,0x7ffc909efd34,207766425,0,0x0,8
tick,0x7ffc909efd34,207781877,0,0x0,8
tick,0x7ffc909efd34,207797951,0,0x0,8
tick,0x7ffc909efd34,207813076,0,0x0,8
tick,0x7ffc909efd34,207828462,0,0x0,8
tick,0x7ffc909efd34,207843893,0,0x0,8
tick,0x7ffc909efd34,207859896,0,0x0,8
tick,0x7ffc909efd34,207875555,0,0x0,8
tick,0x7ffc909efd34,207891214,0,0x0,8
tick,0x7ffc909efd34,207906732,0,0x0,8
tick,0x7ffc909efd34,207922663,0,0x0,8
tick,0x7ffc909efd34,207937987,0,0x0,8
tick,0x7ffc909efd34,207953833,0,0x0,8
tick,0x7ffc909efd34,207969130,0,0x0,8
tick,0x7ffc909efd34,207984789,0,0x0,8
tick,0x7ffc909efd34,208000466,0,0x0,8
tick,0x7ffc909efd34,208016012,0,0x0,8
tick,0x7ffc909efd34,208031739,0,0x0,8
tick,0x7ffc909efd34,208047138,0,0x0,8
tick,0x7ffc909efd34,208062629,0,0x0,8
tick,0x7ffc909efd34,208078209,0,0x0,8
tick,0x7ffc909efd34,208093779,0,0x0,8
tick,0x7ffc909efd34,208109271,0,0x0,8
tick,0x7ffc909efd34,208124463,0,0x0,8
tick,0x7ffc909efd34,208140048,0,0x0,8
tick,0x7ffc909efd34,208155651,0,0x0,8
tick,0x7ffc909efd34,208170901,0,0x0,8
tick,0x7ffc909efd34,208186570,0,0x0,8
tick,0x7ffc909efd34,208202828,0,0x0,8
tick,0x7ffc909efd34,208218573,0,0x0,8
tick,0x7ffc909efd34,208234220,0,0x0,8
tick,0x7ffc909efd34,208249648,0,0x0,8
tick,0x7ffc909efd34,208265347,0,0x0,8
tick,0x7ffc909efd34,208280829,0,0x0,8
tick,0x7ffc909efd34,208296096,0,0x0,8
tick,0x7ffc909efd34,208312337,0,0x0,8
tick,0x7ffc909efd34,208327787,0,0x0,8
tick,0x7ffc909efd34,208343002,0,0x0,8
tick,0x7ffc909efd34,208359493,0,0x0,8
tick,0x7ffc909efd34,208375345,0,0x0,8
tick,0x7ffc909efd34,208390497,0,0x0,8
tick,0x7ffc909efd34,208406241,0,0x0,8
tick,0x7ffc909efd34,208421898,0,0x0,8
tick,0x7ffc909efd34,208437178,0,0x0,8
tick,0x7ffc909efd34,208453177,0,0x0,8
tick,0x7ffc909efd34,208468604,0,0x0,8
tick,0x7ffc909efd34,208484428,0,0x0,8
tick,0x7ffc909efd34,208499686,0,0x0,8
tick,0x7ffc909efd34,208515409,0,0x0,8
tick,0x7ffc909efd34,208530993,0,0x0,8
tick,0x7ffc909efd34,208546522,0,0x0,8
tick,0x7ffc909efd34,208562097,0,0x0,8
tick,0x7ffc909efd34,208577511,0,0x0,8
tick,0x7ffc909efd34,208593232,0,0x0,8
tick,0x7ffc909efd34,208608629,0,0x0,8
tick,0x7ffc909efd34,208624608,0,0x0,8
tick,0x7ffc909efd34,208640201,0,0x0,8
tick,0x7ffc909efd34,208656049,0,0x0,8
tick,0x7ffc909efd34,208672140,0,0x0,8
tick,0x7ffc909efd34,208687795,0,0x0,8
tick,0x7ffc909efd34,208703657,0,0x0,8
tick,0x7ffc909efd34,208719017,0,0x0,8
tick,0x7ffc909efd34,208734234,0,0x0,8
tick,0x7ffc909efd34,208749511,0,0x0,8
tick,0x7ffc909efd34,208764926,0,0x0,8
tick,0x7ffc909efd34,208780674,0,0x0,8
tick,0x7ffc909efd34,208796341,0,0x0,8
tick,0x7ffc909efd34,208811913,0,0x0,8
tick,0x7ffc909efd34,208827689,0,0x0,8
tick,0x7ffc909efd34,208843343,0,0x0,8
tick,0x7ffc909efd34,208859241,0,0x0,8
tick,0x7ffc909efd34,208874665,0,0x0,8
tick,0x7ffc909efd34,208890627,0,0x0,8
tick,0x7ffc909efd34,208906082,0,0x0,8
tick,0x7ffc909efd34,208921864,0,0x0,8
tick,0x7ffc909efd34,208937099,0,0x0,8
tick,0x7ffc909efd34,208952610,0,0x0,8
tick,0x7ffc909efd34,208968588,0,0x0,8
tick,0x7ffc909efd34,208984258,0,0x0,8
tick,0x7ffc909efd34,209000117,0,0x0,8
tick,0x7ffc909efd34,209015440,0,0x0,8
tick,0x7ffc909efd34,209030907,0,0x0,8
tick,0x7ffc909efd34,209046395,0,0x0,8
tick,0x7ffc909efd34,209061733,0,0x0,8
tick,0x7ffc909efd34,209077246,0,0x0,8
tick,0x7ffc909efd34,209093100,0,0x0,8
tick,0x7ffc909efd34,209108238,0,0x0,8
tick,0x7ffc909efd34,209123470,0,0x0,8
tick,0x7ffc909efd34,209139155,0,0x0,8
tick,0x7ffc909efd34,209154542,0,0x0,8
tick,0x7ffc909efd34,209169998,0,0x0,8
tick,0x7ffc909efd34,209185575,0,0x0,8
tick,0x7ffc909efd34,209201208,0,0x0,8
tick,0x7ffc909efd34,209216840,0,0x0,8
tick,0x7ffc909efd34,209232254,0,0x0,8
tick,0x7ffc909efd34,209247804,0,0x0,8
tick,0x7ffc909efd34,209263391,0,0x0,8
tick,0x7ffc909efd34,209278994,0,0x0,8
tick,0x7ffc909efd34,209294782,0,0x0,8
tick,0x7ffc909efd34,209310266,0,0x0,8
tick,0x7ffc909efd34,209325829,0,0x0,8
tick,0x7ffc909efd34,209341193,0,0x0,8
tick,0x7ffc909efd34,209356610,0,0x0,8
tick,0x7ffc909efd34,209372141,0,0x0,8
tick,0x7ffc909efd34,209387584,0,0x0,8
tick,0x7ffc909efd34,209403856,0,0x0,8
tick,0x7ffc909efd34,209419144,0,0x0,8
tick,0x7ffc909efd34,209435199,0,0x0,8
tick,0x7ffc909efd34,209451172,0,0x0,8
tick,0x7ffc909efd34,209466113,0,0x0,8
tick,0x7ffc909efd34,209481648,0,0x0,8
tick,0x7ffc909efd34,209497457,0,0x0,8
tick,0x7ffc909efd34,209513232,0,0x0,8
tick,0x7ffc909efd34,209528301,0,0x0,8
tick,0x7ffc909efd34,209544250,0,0x0,8
tick,0x7ffc909efd34,209560571,0,0x0,8
tick,0x7ffc909efd34,209576076,0,0x0,8
tick,0x7ffc909efd34,209591380,0,0x0,8
tick,0x7ffc909efd34,209607243,0,0x0,8
tick,0x7ffc909efd34,209623288,0,0x0,8
tick,0x7ffc909efd34,209639113,0,0x0,8
tick,0x7ffc909efd34,209654407,0,0x0,8
tick,0x7ffc909efd34,209670400,0,0x0,8
tick,0x7ffc909efd34,209686415,0,0x0,8
tick,0x7ffc909efd34,209701735,0,0x0,8
tick,0x7ffc909efd34,209717509,0,0x0,8
tick,0x7ffc909efd34,209733050,0,0x0,8
tick,0x7ffc909efd34,209748281,0,0x0,8
tick,0x7ffc909efd34,209763599,0,0x0,8
tick,0x7ffc909efd34,209779059,0,0x0,8
tick,0x7ffc909efd34,209794183,0,0x0,8
tick,0x7ffc909efd34,209809669,0,0x0,8
tick,0x7ffc909efd34,209825294,0,0x0,8
tick,0x7ffc909efd34,209840400,0,0x0,8
tick,0x7ffc909efd34,209855852,0,0x0,8
tick,0x7ffc909efd34,209871817,0,0x0,8
tick,0x7ffc909efd34,209887174,0,0x0,8
tick,0x7ffc909efd34,209902445,0,0x0,8
tick,0x7ffc909efd34,209917901,0,0x0,8
tick,0x7ffc909efd34,209933199,0,0x0,8
tick,0x7ffc909efd34,209948689,0,0x0,8
tick,0x7ffc909efd34,209963988,0,0x0,8
tick,0x7ffc909efd34,209979276,0,0x0,8
tick,0x7ffc909efd34,209995295,0,0x0,8
tick,0x7ffc909efd34,210011503,0,0x0,8
tick,0x7ffc909efd34,210027380,0,0x0,8
tick,0x7ffc909efd34,210043257,0,0x0,8
tick,0x7ffc909efd34,210059204,0,0x0,8
tick,0x7ffc909efd34,210075253,0,0x0,8
tick,0x7ffc909efd34,210090555,0,0x0,8
tick,0x7ffc909efd34,210105968,0,0x0,8
tick,0x7ffc909efd34,210121278,0,0x0,8
tick,0x7ffc909efd34,210137103,0,0x0,8
tick,0x7ffc909efd34,210152898,0,0x0,8
tick,0x7ffc909efd34,210168740,0,0x0,8
tick,0x7ffc909efd34,210184314,0,0x0,8
tick,0x7ffc909efd34,210199358,0,0x0,8
tick,0x7ffc909efd34,210214629,0,0x0,8
tick,0x7ffc909efd34,210230718,0,0x0,8
tick,0x7ffc909efd34,210246403,0,0x0,8
tick,0x7ffc909efd34,210262139,0,0x0,8
tick,0x7ffc909efd34,210277344,0,0x0,8
tick,0x7ffc909efd34,210292864,0,0x0,8
tick,0x7ffc909efd34,210308890,0,0x0,8
tick,0x7ffc909efd34,210324412,0,0x0,8
tick,0x7ffc909efd34,210339799,0,0x0,8
tick,0x7ffc909efd34,210355165,0,0x0,8
tick,0x7ffc909efd34,210370637,0,0x0,8
tick,0x7ffc909efd34,210386634,0,0x0,8
tick,0x7ffc909efd34,210401854,0,0x0,8
tick,0x7ffc909efd34,210417575,0,0x0,8
tick,0x7ffc909efd34,210432566,0,0x0,8
tick,0x7ffc909efd34,210448173,0,0x0,8
tick,0x7ffc909efd34,210463527,0,0x0,8
tick,0x7ffc909efd34,210479894,0,0x0,8
tick,0x7ffc909efd34,210495831,0,0x0,8
tick,0x7ffc909efd34,210512182,0,0x0,8
tick,0x7ffc909efd34,210527594,0,0x0,8
tick,0x7ffc909efd34,210543291,0,0x0,8
tick,0x7ffc909efd34,210559155,0,0x0,8
tick,0x7ffc909efd34,210574681,0,0x0,8
tick,0x7ffc909efd34,210590171,0,0x0,8
tick,0x7ffc909efd34,210606382,0,0x0,8
tick,0x7ffc909efd34,210622055,0,0x0,8
tick,0x7ffc909efd34,210638166,0,0x0,8
tick,0x7ffc909efd34,210653539,0,0x0,8
tick,0x7ffc909efd34,210669478,0,0x0,8
tick,0x7ffc909efd34,210685574,0,0x0,8
tick,0x7ffc909efd34,210701161,0,0x0,8
tick,0x7ffc909efd34,210716821,0,0x0,8
tick,0x7ffc909efd34,210731787,0,0x0,8
tick,0x7ffc909efd34,210747409,0,0x0,8
tick,0x7ffc909efd34,210763396,0,0x0,8
tick,0x7ffc909efd34,210778828,0,0x0,8
tick,0x7ffc909efd34,210794180,0,0x0,8
tick,0x7ffc909efd34,210809804,0,0x0,8
tick,0x7ffc909efd34,210825383,0,0x0,8
tick,0x7ffc909efd34,210840582,0,0x0,8
tick,0x7ffc909efd34,210855939,0,0x0,8
tick,0x7ffc909efd34,210871303,0,0x0,8
tick,0x7ffc909efd34,210886752,0,0x0,8
tick,0x7ffc909efd34,210902757,0,0x0,8
tick,0x7ffc909efd34,210918523,0,0x0,8
tick,0x7ffc909efd34,210934028,0,0x0,8
tick,0x7ffc909efd34,210949492,0,0x0,8
tick,0x7ffc909efd34,210964937,0,0x0,8
tick,0x7ffc909efd34,210980391,0,0x0,8
tick,0x7ffc909efd34,210996058,0,0x0,8
tick,0x7ffc909efd34,211012371,0,0x0,8
tick,0x7ffc909efd34,211027673,0,0x0,8
tick,0x7ffc909efd34,211043262,0,0x0,8
tick,0x7ffc909efd34,211059264,0,0x0,8
tick,0x7ffc909efd34,211075051,0,0x0,8
tick,0x7ffc909efd34,211090337,0,0x0,8
tick,0x7ffc909efd34,211105588,0,0x0,8
tick,0x7ffc909efd34,211121523,0,0x0,8
tick,0x7ffc909efd34,211137108,0,0x0,8
tick,0x7ffc909efd34,211152499,0,0x0,8
tick,0x7ffc909efd34,211167916,0,0x0,8
tick,0x7ffc909efd34,211183827,0,0x0,8
tick,0x7ffc909efd34,211199374,0,0x0,8
tick,0x7ffc909efd34,211214719,0,0x0,8
tick,0x7ffc909efd34,211231090,0,0x0,8
tick,0x7ffc909efd34,211246646,0,0x0,8
tick,0x7ffc909efd34,211262055,0,0x0,8
tick,0x7ffc909efd34,211277424,0,0x0,8
tick,0x7ffc909efd34,211292880,0,0x0,8
tick,0x7ffc909efd34,211308180,0,0x0,8
tick,0x7ffc909efd34,211323494,0,0x0,8
tick,0x7ffc909efd34,211338943,0,0x0,8
tick,0x7ffc909efd34,211355039,0,0x0,8
tick,0x7ffc909efd34,211370348,0,0x0,8
tick,0x7ffc909efd34,211385906,0,0x0,8
tick,0x7ffc909efd34,211401402,0,0x0,8
tick,0x7ffc909efd34,211417211,0,0x0,8
tick,0x7ffc909efd34,211433013,0,0x0,8
tick,0x7ffc909efd34,211448859,0,0x0,8
tick,0x7ffc909efd34,211464138,0,0x0,8
tick,0x7ffc909efd34,211480461,0,0x0,8
tick,0x7ffc909efd34,211496076,0,0x0,8
tick,0x7ffc909efd34,211511696,0,0x0,8
tick,0x7ffc909efd34,211526982,0,0x0,8
tick,0x7ffc909efd34,211543011,0,0x0,8
tick,0x7ffc909efd34,211558300,0,0x0,8
tick,0x7ffc909efd34,211574243,0,0x0,8
tick,0x7ffc909efd34,211590167,0,0x0,8
tick,0x7ffc909efd34,211605366,0,0x0,8
tick,0x7ffc909efd34,211620641,0,0x0,8
tick,0x7ffc909efd34,211636281,0,0x0,8
tick,0x7ffc909efd34,211651711,0,0x0,8
tick,0x7ffc909efd34,211667116,0,0x0,8
tick,0x7ffc909efd34,211683042,0,0x0,8
tick,0x7ffc909efd34,211698296,0,0x0,8
tick,0x7ffc909efd34,211713893,0,0x0,8
tick,0x7ffc909efd34,211729255,0,0x0,8
tick,0x7ffc909efd34,211744924,0,0x0,8
tick,0x7ffc909efd34,211761176,0,0x0,8
tick,0x7ffc909efd34,211776788,0,0x0,8
tick,0x7ffc909efd34,211792271,0,0x0,8
tick,0x7ffc909efd34,211808209,0,0x0,8
tick,0x7ffc909efd34,211823672,0,0x0,8
tick,0x7ffc909efd34,211838988,0,0x0,8
tick,0x7ffc909efd34,211855040,0,0x0,8
tick,0x7ffc909efd34,211870578,0,0x0,8
tick,0x7ffc909efd34,211886140,0,0x0,8
tick,0x7ffc909efd34,211902228,0,0x0,8
tick,0x7ffc909efd34,211917802,0,0x0,8
tick,0x7ffc909efd34,211933746,0,0x0,8
tick,0x7ffc909efd34,211949364,0,0x0,8
tick,0x7ffc909efd34,211964814,0,0x0,8
tick,0x7ffc909efd34,211980316,0,0x0,8
tick,0x7ffc909efd34,211995509,0,0x0,8
tick,0x7ffc909efd34,212011425,0,0x0,8
tick,0x7ffc909efd34,212027116,0,0x0,8
tick,0x7ffc909efd34,212042645,0,0x0,8
tick,0x7ffc909efd34,212058894,0,0x0,8
tick,0x7ffc909efd34,212074246,0,0x0,8
tick,0x7ffc909efd34,212090583,0,0x0,8
tick,0x7ffc909efd34,212105901,0,0x0,8
tick,0x7ffc909efd34,212121169,0,0x0,8
tick,0x7ffc909efd34,212136481,0,0x0,8
tick,0x7ffc909efd34,212152181,0,0x0,8
tick,0x7ffc909efd34,212167779,0,0x0,8
tick,0x7ffc909efd34,212183632,0,0x0,8
tick,0x7ffc909efd34,212199656,0,0x0,8
tick,0x7ffc909efd34,212215394,0,0x0,8
tick,0x7ffc909efd34,212230876,0,0x0,8
tick,0x7ffc909efd34,212246440,0,0x0,8
tick,0x7ffc909efd34,212262342,0,0x0,8
tick,0x7ffc909efd34,212277550,0,0x0,8
tick,0x7ffc909efd34,212293581,0,0x0,8
tick,0x7ffc909efd34,212309755,0,0x0,8
tick,0x7ffc909efd34,212325210,0,0x0,8
tick,0x7ffc909efd34,212340557,0,0x0,8
tick,0x7ffc909efd34,212355859,0,0x0,8
tick,0x7ffc909efd34,212371461,0,0x0,8
tick,0x7ffc909efd34,212386666,0,0x0,8
tick,0x7ffc909efd34,212402769,0,0x0,8
tick,0x7ffc909efd34,212418535,0,0x0,8
tick,0x7ffc909efd34,212434097,0,0x0,8
tick,0x7ffc909efd34,212449355,0,0x0,8
tick,0x7ffc909efd34,212464665,0,0x0,8
tick,0x7ffc909efd34,212480123,0,0x0,8
tick,0x7ffc909efd34,212495611,0,0x0,8
tick,0x7ffc909efd34,212510928,0,0x0,8
tick,0x7ffc909efd34,212527130,0,0x0,8
tick,0x7ffc909efd34,212542683,0,0x0,8
tick,0x7ffc909efd34,212557899,0,0x0,8
tick,0x7ffc909efd34,212573793,0,0x0,8
tick,0x7ffc909efd34,212589641,0,0x0,8
tick,0x7ffc909efd34,212604953,0,0x0,8
tick,0x7ffc909efd34,212620205,0,0x0,8
tick,0x7ffc909efd34,212635811,0,0x0,8
tick,0x7ffc909efd34,212651166,0,0x0,8
tick,0x7ffc909efd34,212666309,0,0x0,8
tick,0x7ffc909efd34,212681874,0,0x0,8
tick,0x7ffc909efd34,212697172,0,0x0,8
tick,0x7ffc909efd34,212713447,0,0x0,8
tick,0x7ffc909efd34,212728822,0,0x0,8
tick,0x7ffc909efd34,212744397,0,0x0,8
tick,0x7ffc909efd34,212760076,0,0x0,8
tick,0x7ffc909efd34,212775878,0,0x0,8
tick,0x7ffc909efd34,212791505,0,0x0,8
tick,0x7ffc909efd34,212807284,0,0x0,8
tick,0x7ffc909efd34,212822847,0,0x0,8
tick,0x7ffc909efd34,212838645,0,0x0,8
tick,0x7ffc909efd34,212854433,0,0x0,8
tick,0x7ffc909efd34,212869593,0,0x0,8
tick,0x7ffc909efd34,212885730,0,0x0,8
tick,0x7ffc909efd34,212901666,0,0x0,8
tick,0x7ffc909efd34,212917411,0,0x0,8
tick,0x7ffc909efd34,212932577,0,0x0,8
tick,0x7ffc909efd34,212947838,0,0x0,8
tick,0x7ffc909efd34,212963108,0,0x0,8
tick,0x7ffc909efd34,212979379,0,0x0,8
tick,0x7ffc909efd34,212995456,0,0x0,8
tick,0x7ffc909efd34,213010834,0,0x0,8
tick,0x7ffc909efd34,213026120,0,0x0,8
tick,0x7ffc909efd34,213041619,0,0x0,8
tick,0x7ffc909efd34,213057103,0,0x0,8
tick,0x7ffc909efd34,213073105,0,0x0,8
tick,0x7ffc909efd34,213088252,0,0x0,8
tick,0x7ffc909efd34,213103862,0,0x0,8
tick,0x7ffc909efd34,213120118,0,0x0,8
tick,0x7ffc909efd34,213135321,0,0x0,8
tick,0x7ffc909efd34,213151343,0,0x0,8
tick,0x7ffc909efd34,213167112,0,0x0,8
tick,0x7ffc909efd34,213183007,0,0x0,8
tick,0x7ffc909efd34,213198335,0,0x0,8
tick,0x7ffc909efd34,213214392,0,0x0,8
tick,0x7ffc909efd34,213229591,0,0x0,8
tick,0x7ffc909efd34,213245062,0,0x0,8
tick,0x7ffc909efd34,213260513,0,0x0,8
tick,0x7ffc909efd34,213275839,0,0x0,8
tick,0x7ffc909efd34,213291832,0,0x0,8
tick,0x7ffc909efd34,213307454,0,0x0,8
tick,0x7ffc909efd34,213323387,0,0x0,8
tick,0x7ffc909efd34,213339703,0,0x0,8
tick,0x7ffc909efd34,213355146,0,0x0,8
tick,0x7ffc909efd34,213371039,0,0x0,8
tick,0x7ffc909efd34,213386710,0,0x0,8
tick,0x7ffc909efd34,213402316,0,0x0,8
tick,0x7ffc909efd34,213417645,0,0x0,8
tick,0x7ffc909efd34,213433459,0,0x0,8
tick,0x7ffc909efd34,213448532,0,0x0,8
tick,0x7ffc909efd34,213463858,0,0x0,8
tick,0x7ffc909efd34,213478995,0,0x0,8
tick,0x7ffc909efd34,213494567,0,0x0,8
tick,0x7ffc909efd34,213510624,0,0x0,8
tick,0x7ffc909efd34,213526485,0,0x0,8
tick,0x7ffc909efd34,213541617,0,0x0,8
tick,0x7ffc909efd34,213557312,0,0x0,8
tick,0x7ffc909efd34,213573445,0,0x0,8
tick,0x7ffc909efd34,213589416,0,0x0,8
tick,0x7ffc909efd34,213604791,0,0x0,8
tick,0x7ffc909efd34,213620256,0,0x0,8
tick,0x7ffc909efd34,213636509,0,0x0,8
tick,0x7ffc909efd34,213652313,0,0x0,8
tick,0x7ffc909efd34,213668095,0,0x0,8
tick,0x7ffc909efd34,213683885,0,0x0,8
tick,0x7ffc909efd34,213699298,0,0x0,8
tick,0x7ffc909efd34,213714465,0,0x0,8
tick,0x7ffc909efd34,213730728,0,0x0,8
tick,0x7ffc909efd34,213746296,0,0x0,8
tick,0x7ffc909efd34,213761874,0,0x0,8
tick,0x7ffc909efd34,213777275,0,0x0,8
tick,0x7ffc909efd34,213793046,0,0x0,8
tick,0x7ffc909efd34,213808621,0,0x0,8
tick,0x7ffc909efd34,213824608,0,0x0,8
tick,0x7ffc909efd34,213840176,0,0x0,8
tick,0x7ffc909efd34,213856172,0,0x0,8
tick,0x7ffc909efd34,213872171,0,0x0,8
tick,0x7ffc909efd34,213887794,0,0x0,8
tick,0x7ffc909efd34,213903170,0,0x0,8
tick,0x7ffc909efd34,213918626,0,0x0,8
tick,0x7ffc909efd34,213934275,0,0x0,8
tick,0x7ffc909efd34,213949554,0,0x0,8
tick,0x7ffc909efd34,213964961,0,0x0,8
tick,0x7ffc909efd34,213980153,0,0x0,8
tick,0x7ffc909efd34,213995920,0,0x0,8
tick,0x7ffc909efd34,214011460,0,0x0,8
tick,0x7ffc909efd34,214027468,0,0x0,8
tick,0x7ffc909efd34,214043166,0,0x0,8
tick,0x7ffc909efd34,214058617,0,0x0,8
tick,0x7ffc909efd34,214074610,0,0x0,8
tick,0x7ffc909efd34,214090581,0,0x0,8
tick,0x7ffc909efd34,214106077,0,0x0,8
tick,0x7ffc909efd34,214121274,0,0x0,8
tick,0x7ffc909efd34,214136796,0,0x0,8
tick,0x7ffc909efd34,214152361,0,0x0,8
tick,0x7ffc909efd34,214167401,0,0x0,8
tick,0x7ffc909efd34,214182914,0,0x0,8
tick,0x7ffc909efd34,214198325,0,0x0,8
tick,0x7ffc909efd34,214214151,0,0x0,8
tick,0x7ffc909efd34,214229878,0,0x0,8
tick,0x7ffc909efd34,214245331,0,0x0,8
tick,0x7ffc909efd34,214260737,0,0x0,8
tick,0x7ffc909efd34,214276282,0,0x0,8
tick,0x7ffc909efd34,214291915,0,0x0,8
tick,0x7ffc909efd34,214307402,0,0x0,8
tick,0x7ffc909efd34,214322665,0,0x0,8
tick,0x7ffc909efd34,214338492,0,0x0,8
tick,0x7ffc909efd34,214353677,0,0x0,8
tick,0x7ffc909efd34,214369279,0,0x0,8
tick,0x7ffc909efd34,214384663,0,0x0,8
tick,0x7ffc909efd34,214399949,0,0x0,8
tick,0x7ffc909efd34,214415414,0,0x0,8
tick,0x7ffc909efd34,214431182,0,0x0,8
tick,0x7ffc909efd34,214446443,0,0x0,8
tick,0x7ffc909efd34,214462304,0,0x0,8
tick,0x7ffc909efd34,214478398,0,0x0,8
tick,0x7ffc909efd34,214494077,0,0x0,8
tick,0x7ffc909efd34,214510014,0,0x0,8
tick,0x7ffc909efd34,214525393,0,0x0,8
tick,0x7ffc909efd34,214540779,0,0x0,8
tick,0x7ffc909efd34,214556752,0,0x0,8
tick,0x7ffc909efd34,214572306,0,0x0,8
tick,0x7ffc909efd34,214588221,0,0x0,8
tick,0x7ffc909efd34,214603847,0,0x0,8
tick,0x7ffc909efd34,214619014,0,0x0,8
tick,0x7ffc909efd34,214634410,0,0x0,8
tick,0x7ffc909efd34,214649052,0,0x0,8
tick,0x7ffc909efd34,214664396,0,0x0,8
tick,0x7ffc909efd34,214679888,0,0x0,8
tick,0x7ffc909efd34,214695744,0,0x0,8
tick,0x7ffc909efd34,214711542,0,0x0,8
tick,0x7ffc909efd34,214726753,0,0x0,8
tick,0x7ffc909efd34,214742321,0,0x0,8
tick,0x7ffc909efd34,214757906,0,0x0,8
tick,0x7ffc909efd34,214773014,0,0x0,8
tick,0x7ffc909efd34,214789285,0,0x0,8
tick,0x7ffc909efd34,214803779,0,0x0,8
tick,0x7ffc909efd34,214819904,0,0x0,8
tick,0x7ffc909efd34,214835311,0,0x0,8
tick,0x7ffc909efd34,214850597,0,0x0,8
tick,0x7ffc909efd34,214866338,0,0x0,8
tick,0x7ffc909efd34,214882559,0,0x0,8
tick,0x7ffc909efd34,214898009,0,0x0,8
tick,0x7ffc909efd34,214913773,0,0x0,8
tick,0x7ffc909efd34,214929057,0,0x0,8
tick,0x7ffc909efd34,214944759,0,0x0,8
tick,0x7ffc909efd34,214959992,0,0x0,8
tick,0x7ffc909efd34,214975317,0,0x0,8
tick,0x7ffc909efd34,214991355,0,0x0,8
tick,0x7ffc909efd34,215006838,0,0x0,8
tick,0x7ffc909efd34,215022455,0,0x0,8
tick,0x7ffc909efd34,215038244,0,0x0,8
tick,0x7ffc909efd34,215054509,0,0x0,8
tick,0x7ffc909efd34,215069983,0,0x0,8
tick,0x7ffc909efd34,215085265,0,0x0,8
tick,0x7ffc909efd34,215101124,0,0x0,8
tick,0x7ffc909efd34,215116554,0,0x0,8
tick,0x7ffc909efd34,215132136,0,0x0,8
tick,0x7ffc909efd34,215147410,0,0x0,8
tick,0x7ffc909efd34,215163600,0,0x0,8
tick,0x7ffc909efd34,215179789,0,0x0,8
tick,0x7ffc909efd34,215195431,0,0x0,8
tick,0x7ffc909efd34,215211742,0,0x0,8
tick,0x7ffc909efd34,215226877,0,0x0,8
tick,0x7ffc909efd34,215243093,0,0x0,8
tick,0x7ffc909efd34,215259402,0,0x0,8
tick,0x7ffc909efd34,215275392,0,0x0,8
tick,0x7ffc909efd34,215291389,0,0x0,8
tick,0x7ffc909efd34,215307399,0,0x0,8
tick,0x7ffc909efd34,215322856,0,0x0,8
tick,0x7ffc909efd34,215338022,0,0x0,8
tick,0x7ffc909efd34,215353351,0,0x0,8
tick,0x7ffc909efd34,215368919,0,0x0,8
tick,0x7ffc909efd34,215384290,0,0x0,8
tick,0x7ffc909efd34,215399926,0,0x0,8
tick,0x7ffc909efd34,215414694,0,0x0,8
tick,0x7ffc909efd34,215430009,0,0x0,8
tick,0x7ffc909efd34,215445558,0,0x0,8
tick,0x7ffc909efd34,215461296,0,0x0,8
tick,0x7ffc909efd34,215476693,0,0x0,8
tick,0x7ffc909efd34,215492024,0,0x0,8
tick,0x7ffc909efd34,215507238,0,0x0,8
tick,0x7ffc909efd34,215522958,0,0x0,8
tick,0x7ffc909efd34,215538786,0,0x0,8
tick,0x7ffc909efd34,215554183,0,0x0,8
tick,0x7ffc909efd34,215570465,0,0x0,8
tick,0x7ffc909efd34,215586463,0,0x0,8
tick,0x7ffc909efd34,215602230,0,0x0,8
tick,0x7ffc909efd34,215617817,0,0x0,8
tick,0x7ffc909efd34,215633611,0,0x0,8
tick,0x7ffc909efd34,215649782,0,0x0,8
tick,0x7ffc909efd34,215665669,0,0x0,8
tick,0x7ffc909efd34,215680810,0,0x0,8
tick,0x7ffc909efd34,215696268,0,0x0,8
tick,0x7ffc909efd34,215712443,0,0x0,8
tick,0x7ffc909efd34,215728373,0,0x0,8
tick,0x7ffc909efd34,215743899,0,0x0,8
tick,0x7ffc909efd34,215760276,0,0x0,8
tick,0x7ffc909efd34,215775422,0,0x0,8
tick,0x7ffc909efd34,215790734,0,0x0,8
tick,0x7ffc909efd34,215806640,0,0x0,8
tick,0x7ffc909efd34,215822195,0,0x0,8
tick,0x7ffc909efd34,215837662,0,0x0,8
tick,0x7ffc909efd34,215853273,0,0x0,8
tick,0x7ffc909efd34,215868885,0,0x0,8
tick,0x7ffc909efd34,215884253,0,0x0,8
tick,0x7ffc909efd34,215899652,0,0x0,8
tick,0x7ffc909efd34,215915045,0,0x0,8
tick,0x7ffc909efd34,215930751,0,0x0,8
tick,0x7ffc909efd34,215946134,0,0x0,8
tick,0x7ffc909efd34,215961764,0,0x0,8
tick,0x7ffc909efd34,215977544,0,0x0,8
tick,0x7ffc909efd34,215992908,0,0x0,8
tick,0x7ffc909efd34,216008810,0,0x0,8
tick,0x7ffc909efd34,216024952,0,0x0,8
tick,0x7ffc909efd34,216040098,0,0x0,8
tick,0x7ffc909efd34,216055562,0,0x0,8
tick,0x7ffc909efd34,216071084,0,0x0,8
tick,0x7ffc909efd34,216086576,0,0x0,8
tick,0x7ffc909efd34,216101931,0,0x0,8
tick,0x7ffc909efd34,216117302,0,0x0,8
tick,0x7ffc909efd34,216132933,0,0x0,8
tick,0x7ffc909efd34,216148752,0,0x0,8
tick,0x7ffc909efd34,216164888,0,0x0,8
tick,0x7ffc909efd34,216180279,0,0x0,8
tick,0x7ffc909efd34,216195922,0,0x0,8
tick,0x7ffc909efd34,216211901,0,0x0,8
tick,0x7ffc909efd34,216227459,0,0x0,8
tick,0x7ffc909efd34,216243102,0,0x0,8
tick,0x7ffc909efd34,216259115,0,0x0,8
tick,0x7ffc909efd34,216274772,0,0x0,8
tick,0x7ffc909efd34,216290343,0,0x0,8
tick,0x7ffc909efd34,216305969,0,0x0,8
tick,0x7ffc909efd34,216321398,0,0x0,8
tick,0x7ffc909efd34,216337091,0,0x0,8
tick,0x7ffc909efd34,216352412,0,0x0,8
tick,0x7ffc909efd34,216367619,0,0x0,8
tick,0x7ffc909efd34,216383578,0,0x0,8
tick,0x7ffc909efd34,216399288,0,0x0,8
tick,0x7ffc909efd34,216414999,0,0x0,8
tick,0x7ffc909efd34,216431372,0,0x0,8
tick,0x7ffc909efd34,216447167,0,0x0,8
tick,0x7ffc909efd34,216462641,0,0x0,8
tick,0x7ffc909efd34,216478387,0,0x0,8
tick,0x7ffc909efd34,216494247,0,0x0,8
tick,0x7ffc909efd34,216509534,0,0x0,8
tick,0x7ffc909efd34,216525108,0,0x0,8
tick,0x7ffc909efd34,216540612,0,0x0,8
tick,0x7ffc909efd34,216556119,0,0x0,8
tick,0x7ffc909efd34,216571485,0,0x0,8
tick,0x7ffc909efd34,216587253,0,0x0,8
tick,0x7ffc909efd34,216602568,0,0x0,8
tick,0x7ffc909efd34,216617924,0,0x0,8
tick,0x7ffc909efd34,216633498,0,0x0,8
tick,0x7ffc909efd34,216648755,0,0x0,8
tick,0x7ffc909efd34,216664363,0,0x0,8
tick,0x7ffc909efd34,216680030,0,0x0,8
tick,0x7ffc909efd34,216695797,0,0x0,8
tick,0x7ffc909efd34,216711351,0,0x0,8
tick,0x7ffc909efd34,216727067,0,0x0,8
tick,0x7ffc909efd34,216742781,0,0x0,8
tick,0x7ffc909efd34,216758573,0,0x0,8
tick,0x7ffc909efd34,216774184,0,0x0,8
tick,0x7ffc909efd34,216790211,0,0x0,8
tick,0x7ffc909efd34,216805929,0,0x0,8
tick,0x7ffc909efd34,216821050,0,0x0,8
tick,0x7ffc909efd34,216836255,0,0x0,8
tick,0x7ffc909efd34,216851661,0,0x0,8
tick,0x7ffc909efd34,216867077,0,0x0,8
tick,0x7ffc909efd34,216882779,0,0x0,8
tick,0x7ffc909efd34,216897975,0,0x0,8
tick,0x7ffc909efd34,216913160,0,0x0,8
tick,0x7ffc909efd34,216929228,0,0x0,8
tick,0x7ffc909efd34,216944370,0,0x0,8
tick,0x7ffc909efd34,216960557,0,0x0,8
tick,0x7ffc909efd34,216976140,0,0x0,8
tick,0x7ffc909efd34,216991381,0,0x0,8
tick,0x7ffc909efd34,217006960,0,0x0,8
tick,0x7ffc909efd34,217022562,0,0x0,8
tick,0x7ffc909efd34,217038085,0,0x0,8
tick,0x7ffc909efd34,217053383,0,0x0,8
tick,0x7ffc909efd34,217069336,0,0x0,8
tick,0x7ffc909efd34,217084930,0,0x0,8
tick,0x7ffc909efd34,217101097,0,0x0,8
tick,0x7ffc909efd34,217116372,0,0x0,8
tick,0x7ffc909efd34,217131603,0,0x0,8
tick,0x7ffc909efd34,217147275,0,0x0,8
tick,0x7ffc909efd34,217162538,0,0x0,8
tick,0x7ffc909efd34,217178153,0,0x0,8
tick,0x7ffc909efd34,217193744,0,0x0,8
tick,0x7ffc909efd34,217208844,0,0x0,8
tick,0x7ffc909efd34,217224474,0,0x0,8
tick,0x7ffc909efd34,217240491,0,0x0,8
tick,0x7ffc909efd34,217255904,0,0x0,8
tick,0x7ffc909efd34,217271138,0,0x0,8
tick,0x7ffc909efd34,217286416,0,0x0,8
tick,0x7ffc909efd34,217302461,0,0x0,8
tick,0x7ffc909efd34,217318311,0,0x0,8
tick,0x7ffc909efd34,217334461,0,0x0,8
tick,0x7ffc909efd34,217349948,0,0x0,8
tick,0x7ffc909efd34,217366046,0,0x0,8
tick,0x7ffc909efd34,217381379,0,0x0,8
tick,0x7ffc909efd34,217396753,0,0x0,8
tick,0x7ffc909efd34,217412194,0,0x0,8
tick,0x7ffc909efd34,217427983,0,0x0,8
tick,0x7ffc909efd34,217443293,0,0x0,8
tick,0x7ffc909efd34,217459627,0,0x0,8
tick,0x7ffc909efd34,217474978,0,0x0,8
tick,0x7ffc909efd34,217490410,0,0x0,8
tick,0x7ffc909efd34,217506246,0,0x0,8
tick,0x7ffc909efd34,217521818,0,0x0,8
tick,0x7ffc909efd34,217537661,0,0x0,8
tick,0x7ffc909efd34,217552825,0,0x0,8
tick,0x7ffc909efd34,217568157,0,0x0,8
tick,0x7ffc909efd34,217583817,0,0x0,8
tick,0x7ffc909efd34,217599676,0,0x0,8
tick,0x7ffc909efd34,217615403,0,0x0,8
tick,0x7ffc909efd34,217631041,0,0x0,8
tick,0x7ffc909efd34,217646815,0,0x0,8
tick,0x7ffc909efd34,217662440,0,0x0,8
tick,0x7ffc909efd34,217678323,0,0x0,8
tick,0x7ffc909efd34,217693586,0,0x0,8
tick,0x7ffc909efd34,217709876,0,0x0,8
tick,0x7ffc909efd34,217725189,0,0x0,8
tick,0x7ffc909efd34,217741366,0,0x0,8
tick,0x7ffc909efd34,217757715,0,0x0,8
tick,0x7ffc909efd34,217773776,0,0x0,8
tick,0x7ffc909efd34,217789862,0,0x0,8
tick,0x7ffc909efd34,217805426,0,0x0,8
tick,0x7ffc909efd34,217820823,0,0x0,8
tick,0x7ffc909efd34,217836820,0,0x0,8
tick,0x7ffc909efd34,217851937,0,0x0,8
tick,0x7ffc909efd34,217867126,0,0x0,8
tick,0x7ffc909efd34,217882767,0,0x0,8
tick,0x7ffc909efd34,217898742,0,0x0,8
tick,0x7ffc909efd34,217914033,0,0x0,8
tick,0x7ffc909efd34,217929823,0,0x0,8
tick,0x7ffc909efd34,217945340,0,0x0,8
tick,0x7ffc909efd34,217960693,0,0x0,8
tick,0x7ffc909efd34,217976146,0,0x0,8
tick,0x7ffc909efd34,217991439,0,0x0,8
tick,0x7ffc909efd34,218007000,0,0x0,8
tick,0x7ffc909efd34,218022381,0,0x0,8
tick,0x7ffc909efd34,218037908,0,0x0,8
tick,0x7ffc909efd34,218053259,0,0x0,8
tick,0x7ffc909efd34,218068728,0,0x0,8
tick,0x7ffc909efd34,218084842,0,0x0,8
tick,0x7ffc909efd34,218100177,0,0x0,8
tick,0x7ffc909efd34,218115964,0,0x0,8
tick,0x7ffc909efd34,218132275,0,0x0,8
tick,0x7ffc909efd34,218147586,0,0x0,8
tick,0x7ffc909efd34,218163372,0,0x0,8
tick,0x7ffc909efd34,218178879,0,0x0,8
tick,0x7ffc909efd34,218194724,0,0x0,8
tick,0x7ffc909efd34,218210151,0,0x0,8
tick,0x7ffc909efd34,218226068,0,0x0,8
tick,0x7ffc909efd34,218241900,0,0x0,8
tick,0x7ffc909efd34,218257443,0,0x0,8
tick,0x7ffc909efd34,218273273,0,0x0,8
tick,0x7ffc909efd34,218288777,0,0x0,8
tick,0x7ffc909efd34,218304104,0,0x0,8
tick,0x7ffc909efd34,218320122,0,0x0,8
tick,0x7ffc909efd34,218335604,0,0x0,8
tick,0x7ffc909efd34,218351339,0,0x0,8
tick,0x7ffc909efd34,218366630,0,0x0,8
tick,0x7ffc909efd34,218382543,0,0x0,8
tick,0x7ffc909efd34,218397816,0,0x0,8
tick,0x7ffc909efd34,218413533,0,0x0,8
tick,0x7ffc909efd34,218429118,0,0x0,8
tick,0x7ffc909efd34,218444816,0,0x0,8
tick,0x7ffc909efd34,218460009,0,0x0,8
tick,0x7ffc909efd34,218475738,0,0x0,8
tick,0x7ffc909efd34,218491630,0,0x0,8
tick,0x7ffc909efd34,218507129,0,0x0,8
tick,0x7ffc909efd34,218522966,0,0x0,8
tick,0x7ffc909efd34,218538984,0,0x0,8
tick,0x7ffc909efd34,218554680,0,0x0,8
tick,0x7ffc909efd34,218570352,0,0x0,8
tick,0x7ffc909efd34,218585896,0,0x0,8
tick,0x7ffc909efd34,218601015,0,0x0,8
tick,0x7ffc909efd34,218616151,0,0x0,8
tick,0x7ffc909efd34,218631436,0,0x0,8
tick,0x7ffc909efd34,218647492,0,0x0,8
tick,0x7ffc909efd34,218663280,0,0x0,8
tick,0x7ffc909efd34,218678819,0,0x0,8
tick,0x7ffc909efd34,218694726,0,0x0,8
tick,0x7ffc909efd34,218710277,0,0x0,8
tick,0x7ffc909efd34,218725930,0,0x0,8
tick,0x7ffc909efd34,218741316,0,0x0,8
tick,0x7ffc909efd34,218756647,0,0x0,8
tick,0x7ffc909efd34,218772160,0,0x0,8
tick,0x7ffc909efd34,218788510,0,0x0,8
tick,0x7ffc909efd34,218803781,0,0x0,8
tick,0x7ffc909efd34,218819181,0,0x0,8
tick,0x7ffc909efd34,218834818,0,0x0,8
tick,0x7ffc909efd34,218850772,0,0x0,8
tick,0x7ffc909efd34,218866763,0,0x0,8
tick,0x7ffc909efd34,218882376,0,0x0,8
tick,0x7ffc909efd34,218897994,0,0x0,8
tick,0x7ffc909efd34,218913649,0,0x0,8
tick,0x7ffc909efd34,218929134,0,0x0,8
tick,0x7ffc909efd34,218945007,0,0x0,8
tick,0x7ffc909efd34,218960818,0,0x0,8
tick,0x7ffc909efd34,218976290,0,0x0,8
tick,0x7ffc909efd34,218991858,0,0x0,8
tick,0x7ffc909efd34,219007922,0,0x0,8
tick,0x7ffc909efd34,219023483,0,0x0,8
tick,0x7ffc909efd34,219039142,0,0x0,8
tick,0x7ffc909efd34,219054420,0,0x0,8
tick,0x7ffc909efd34,219069990,0,0x0,8
tick,0x7ffc909efd34,219085537,0,0x0,8
tick,0x7ffc909efd34,219101133,0,0x0,8
tick,0x7ffc909efd34,219116501,0,0x0,8
tick,0x7ffc909efd34,219132390,0,0x0,8
tick,0x7ffc909efd34,219147795,0,0x0,8
tick,0x7ffc909efd34,219163628,0,0x0,8
tick,0x7ffc909efd34,219178959,0,0x0,8
tick,0x7ffc909efd34,219194673,0,0x0,8
tick,0x7ffc909efd34,219210836,0,0x0,8
tick,0x7ffc909efd34,219226368,0,0x0,8
tick,0x7ffc909efd34,219242048,0,0x0,8
tick,0x7ffc909efd34,219257404,0,0x0,8
tick,0x7ffc909efd34,219272978,0,0x0,8
tick,0x7ffc909efd34,219288147,0,0x0,8
tick,0x7ffc909efd34,219303350,0,0x0,8
tick,0x7ffc909efd34,219318542,0,0x0,8
tick,0x7ffc909efd34,219334358,0,0x0,8
tick,0x7ffc909efd34,219349827,0,0x0,8
tick,0x7ffc909efd34,219365408,0,0x0,8
tick,0x7ffc909efd34,219380696,0,0x0,8
tick,0x7ffc909efd34,219396314,0,0x0,8
tick,0x7ffc909efd34,219411597,0,0x0,8
tick,0x7ffc909efd34,219427141,0,0x0,8
tick,0x7ffc909efd34,219442984,0,0x0,8
tick,0x7ffc909efd34,219458131,0,0x0,8
tick,0x7ffc909efd34,219473608,0,0x0,8
tick,0x7ffc909efd34,219489216,0,0x0,8
tick,0x7ffc909efd34,219505217,0,0x0,8
tick,0x7ffc909efd34,219520945,0,0x0,8
tick,0x7ffc909efd34,219536339,0,0x0,8
tick,0x7ffc909efd34,219551665,0,0x0,8
tick,0x7ffc909efd34,219567769,0,0x0,8
tick,0x7ffc909efd34,219583800,0,0x0,8
tick,0x7ffc909efd34,219598989,0,0x0,8
tick,0x7ffc909efd34,219614926,0,0x0,8
tick,0x7ffc909efd34,219630322,0,0x0,8
tick,0x7ffc909efd34,219645801,0,0x0,8
tick,0x7ffc909efd34,219661439,0,0x0,8
tick,0x7ffc909efd34,219677126,0,0x0,8
tick,0x7ffc909efd34,219692498,0,0x0,8
tick,0x7ffc909efd34,219707536,0,0x0,8
tick,0x7ffc909efd34,219723104,0,0x0,8
tick,0x7ffc909efd34,219738362,0,0x0,8
tick,0x7ffc909efd34,219753755,0,0x0,8
tick,0x7ffc909efd34,219769196,0,0x0,8
tick,0x7ffc909efd34,219784590,0,0x0,8
tick,0x7ffc909efd34,219800696,0,0x0,8
tick,0x7ffc909efd34,219816327,0,0x0,8
tick,0x7ffc909efd34,219831890,0,0x0,8
tick,0x7ffc909efd34,219847924,0,0x0,8
tick,0x7ffc909efd34,219863313,0,0x0,8
tick,0x7ffc909efd34,219879056,0,0x0,8
tick,0x7ffc909efd34,219895035,0,0x0,8
tick,0x7ffc909efd34,219910151,0,0x0,8
tick,0x7ffc909efd34,219926352,0,0x0,8
tick,0x7ffc909efd34,219942826,0,0x0,8
tick,0x7ffc909efd34,219958696,0,0x0,8
tick,0x7ffc909efd34,219974414,0,0x0,8
tick,0x7ffc909efd34,219989967,0,0x0,8
tick,0x7ffc909efd34,220005482,0,0x0,8
tick,0x7ffc909efd34,220021021,0,0x0,8
tick,0x7ffc909efd34,220036725,0,0x0,8
tick,0x7ffc909efd34,220052400,0,0x0,8
tick,0x7ffc909efd34,220068099,0,0x0,8
tick,0x7ffc909efd34,220083334,0,0x0,8
tick,0x7ffc909efd34,220098702,0,0x0,8
tick,0x7ffc909efd34,220113929,0,0x0,8
tick,0x7ffc909efd34,220129973,0,0x0,8
tick,0x7ffc909efd34,220145558,0,0x0,8
tick,0x7ffc909efd34,220161147,0,0x0,8
tick,0x7ffc909efd34,220176738,0,0x0,8
tick,0x7ffc909efd34,220191935,0,0x0,8
tick,0x7ffc909efd34,220207457,0,0x0,8
tick,0x7ffc909efd34,220223213,0,0x0,8
tick,0x7ffc909efd34,220238497,0,0x0,8
tick,0x7ffc909efd34,220253687,0,0x0,8
tick,0x7ffc909efd34,220268760,0,0x0,8
tick,0x7ffc909efd34,220284318,0,0x0,8
tick,0x7ffc909efd34,220299505,0,0x0,8
tick,0x7ffc909efd34,220315095,0,0x0,8
tick,0x7ffc909efd34,220330523,0,0x0,8
tick,0x7ffc909efd34,220345947,0,0x0,8
tick,0x7ffc909efd34,220361444,0,0x0,8
tick,0x7ffc909efd34,220377132,0,0x0,8
tick,0x7ffc909efd34,220392495,0,0x0,8
tick,0x7ffc909efd34,220408021,0,0x0,8
tick,0x7ffc909efd34,220423676,0,0x0,8
tick,0x7ffc909efd34,220438989,0,0x0,8
tick,0x7ffc909efd34,220455040,0,0x0,8
tick,0x7ffc909efd34,220470751,0,0x0,8
tick,0x7ffc909efd34,220485929,0,0x0,8
tick,0x7ffc909efd34,220501624,0,0x0,8
tick,0x7ffc909efd34,220517615,0,0x0,8
tick,0x7ffc909efd34,220533197,0,0x0,8
tick,0x7ffc909efd34,220549102,0,0x0,8
tick,0x7ffc909efd34,220564070,0,0x0,8
tick,0x7ffc909efd34,220579412,0,0x0,8
tick,0x7ffc909efd34,220595488,0,0x0,8
tick,0x7ffc909efd34,220610716,0,0x0,8
tick,0x7ffc909efd34,220626569,0,0x0,8
tick,0x7ffc909efd34,220642136,0,0x0,8
tick,0x7ffc909efd34,220657690,0,0x0,8
tick,0x7ffc909efd34,220672868,0,0x0,8
tick,0x7ffc909efd34,220688558,0,0x0,8
tick,0x7ffc909efd34,220704571,0,0x0,8
tick,0x7ffc909efd34,220720294,0,0x0,8
tick,0x7ffc909efd34,220736465,0,0x0,8
tick,0x7ffc909efd34,220752189,0,0x0,8
tick,0x7ffc909efd34,220768178,0,0x0,8
tick,0x7ffc909efd34,220784185,0,0x0,8
tick,0x7ffc909efd34,220800247,0,0x0,8
tick,0x7ffc909efd34,220816195,0,0x0,8
tick,0x7ffc909efd34,220831613,0,0x0,8
tick,0x7ffc909efd34,220846995,0,0x0,8
tick,0x7ffc909efd34,220862742,0,0x0,8
tick,0x7ffc909efd34,220878531,0,0x0,8
tick,0x7ffc909efd34,220894267,0,0x0,8
tick,0x7ffc909efd34,220909916,0,0x0,8
tick,0x7ffc909efd34,220925308,0,0x0,8
tick,0x7ffc909efd34,220940895,0,0x0,8
tick,0x7ffc909efd34,220956547,0,0x0,8
tick,0x7ffc909efd34,220972238,0,0x0,8
tick,0x7ffc909efd34,220988218,0,0x0,8
tick,0x7ffc909efd34,221003455,0,0x0,8
tick,0x7ffc909efd34,221018731,0,0x0,8
tick,0x7ffc909efd34,221034312,0,0x0,8
tick,0x7ffc909efd34,221050361,0,0x0,8
tick,0x7ffc909efd34,221065911,0,0x0,8
tick,0x7ffc909efd34,221081722,0,0x0,8
tick,0x7ffc909efd34,221096775,0,0x0,8
tick,0x7ffc909efd34,221112048,0,0x0,8
tick,0x7ffc909efd34,221128295,0,0x0,8
tick,0x7ffc909efd34,221143734,0,0x0,8
tick,0x7ffc909efd34,221158893,0,0x0,8
tick,0x7ffc909efd34,221174199,0,0x0,8
tick,0x7ffc909efd34,221189758,0,0x0,8
tick,0x7ffc909efd34,221205220,0,0x0,8
tick,0x7ffc909efd34,221220714,0,0x0,8
tick,0x7ffc909efd34,221236437,0,0x0,8
tick,0x7ffc909efd34,221252409,0,0x0,8
tick,0x7ffc909efd34,221267926,0,0x0,8
tick,0x7ffc909efd34,221283386,0,0x0,8
tick,0x7ffc909efd34,221299129,0,0x0,8
tick,0x7ffc909efd34,221315308,0,0x0,8
tick,0x7ffc909efd34,221331098,0,0x0,8
tick,0x7ffc909efd34,221346390,0,0x0,8
tick,0x7ffc909efd34,221362225,0,0x0,8
tick,0x7ffc909efd34,221377939,0,0x0,8
tick,0x7ffc909efd34,221393317,0,0x0,8
tick,0x7ffc909efd34,221409581,0,0x0,8
tick,0x7ffc909efd34,221424931,0,0x0,8
tick,0x7ffc909efd34,221440650,0,0x0,8
tick,0x7ffc909efd34,221456016,0,0x0,8
tick,0x7ffc909efd34,221471471,0,0x0,8
tick,0x7ffc909efd34,221487207,0,0x0,8
tick,0x7ffc909efd34,221503226,0,0x0,8
tick,0x7ffc909efd34,221518631,0,0x0,8
tick,0x7ffc909efd34,221534381,0,0x0,8
tick,0x7ffc909efd34,221550408,0,0x0,8
tick,0x7ffc909efd34,221565761,0,0x0,8
tick,0x7ffc909efd34,221581249,0,0x0,8
tick,0x7ffc909efd34,221596556,0,0x0,8
tick,0x7ffc909efd34,221611996,0,0x0,8
tick,0x7ffc909efd34,221628116,0,0x0,8
tick,0x7ffc909efd34,221643740,0,0x0,8
tick,0x7ffc909efd34,221659174,0,0x0,8
tick,0x7ffc909efd34,221674646,0,0x0,8
tick,0x7ffc909efd34,221690432,0,0x0,8
tick,0x7ffc909efd34,221705827,0,0x0,8
tick,0x7ffc909efd34,221721206,0,0x0,8
tick,0x7ffc909efd34,221737299,0,0x0,8
tick,0x7ffc909efd34,221752656,0,0x0,8
tick,0x7ffc909efd34,221768526,0,0x0,8
tick,0x7ffc909efd34,221784340,0,0x0,8
tick,0x7ffc909efd34,221799735,0,0x0,8
tick,0x7ffc909efd34,221815137,0,0x0,8
tick,0x7ffc909efd34,221830017,0,0x0,8
tick,0x7ffc909efd34,221845512,0,0x0,8
tick,0x7ffc909efd34,221861606,0,0x0,8
tick,0x7ffc909efd34,221877080,0,0x0,8
tick,0x7ffc909efd34,221892584,0,0x0,8
tick,0x7ffc909efd34,221907897,0,0x0,8
tick,0x7ffc909efd34,221923687,0,0x0,8
tick,0x7ffc909efd34,221939470,0,0x0,8
tick,0x7ffc909efd34,221954784,0,0x0,8
tick,0x7ffc909efd34,221970566,0,0x0,8
tick,0x7ffc909efd34,221986064,0,0x0,8
tick,0x7ffc909efd34,222001412,0,0x0,8
tick,0x7ffc909efd34,222016335,0,0x0,8
tick,0x7ffc909efd34,222031820,0,0x0,8
tick,0x7ffc909efd34,222047162,0,0x0,8
tick,0x7ffc909efd34,222062689,0,0x0,8
tick,0x7ffc909efd34,222078693,0,0x0,8
tick,0x7ffc909efd34,222094215,0,0x0,8
tick,0x7ffc909efd34,222110161,0,0x0,8
tick,0x7ffc909efd34,222125708,0,0x0,8
tick,0x7ffc909efd34,222141202,0,0x0,8
tick,0x7ffc909efd34,222157054,0,0x0,8
tick,0x7ffc909efd34,222172330,0,0x0,8
tick,0x7ffc909efd34,222188374,0,0x0,8
tick,0x7ffc909efd34,222204236,0,0x0,8
tick,0x7ffc909efd34,222220471,0,0x0,8
tick,0x7ffc909efd34,222235984,0,0x0,8
tick,0x7ffc909efd34,222251810,0,0x0,8
tick,0x7ffc909efd34,222267539,0,0x0,8
tick,0x7ffc909efd34,222282982,0,0x0,8
tick,0x7ffc909efd34,222298588,0,0x0,8
tick,0x7ffc909efd34,222314501,0,0x0,8
tick,0x7ffc909efd34,222330131,0,0x0,8
tick,0x7ffc909efd34,222345648,0,0x0,8
tick,0x7ffc909efd34,222361362,0,0x0,8
tick,0x7ffc909efd34,222377081,0,0x0,8
tick,0x7ffc909efd34,222392288,0,0x0,8
tick,0x7ffc909efd34,222408375,0,0x0,8
tick,0x7ffc909efd34,222424087,0,0x0,8
tick,0x7ffc909efd34,222440107,0,0x0,8
tick,0x7ffc909efd34,222455628,0,0x0,8
tick,0x7ffc909efd34,222471053,0,0x0,8
tick,0x7ffc909efd34,222486833,0,0x0,8
tick,0x7ffc909efd34,222502077,0,0x0,8
tick,0x7ffc909efd34,222517578,0,0x0,8
tick,0x7ffc909efd34,222532868,0,0x0,8
tick,0x7ffc909efd34,222548356,0,0x0,8
tick,0x7ffc909efd34,222563879,0,0x0,8
tick,0x7ffc909efd34,222579215,0,0x0,8
tick,0x7ffc909efd34,222594484,0,0x0,8
tick,0x7ffc909efd34,222610160,0,0x0,8
tick,0x7ffc909efd34,222625279,0,0x0,8
tick,0x7ffc909efd34,222640243,0,0x0,8
tick,0x7ffc909efd34,222656263,0,0x0,8
tick,0x7ffc909efd34,222672001,0,0x0,8
tick,0x7ffc909efd34,222688046,0,0x0,8
tick,0x7ffc909efd34,222703230,0,0x0,8
tick,0x7ffc909efd34,222718809,0,0x0,8
tick,0x7ffc909efd34,222734269,0,0x0,8
tick,0x7ffc909efd34,222750270,0,0x0,8
tick,0x7ffc909efd34,222766136,0,0x0,8
tick,0x7ffc909efd34,222782118,0,0x0,8
tick,0x7ffc909efd34,222797557,0,0x0,8
tick,0x7ffc909efd34,222812771,0,0x0,8
tick,0x7ffc909efd34,222842167,0,0x0,8
tick,0x7ffc909efd34,222853550,0,0x0,8
tick,0x7ffc909efd34,222877126,0,0x0,8
tick,0x7ffc909efd34,222894693,0,0x0,8
tick,0x7ffc909efd34,222907657,0,0x0,8
tick,0x7ffc909efd34,222923687,0,0x0,8
tick,0x7ffc909efd34,222939719,0,0x0,8
tick,0x7ffc909efd34,222955692,0,0x0,8
tick,0x7ffc909efd34,222971660,0,0x0,8
tick,0x7ffc909efd34,222987807,0,0x0,8
tick,0x7ffc909efd34,223003732,0,0x0,8
tick,0x7ffc909efd34,223019526,0,0x0,8
tick,0x7ffc909efd34,223035501,0,0x0,8
tick,0x7ffc909efd34,223050808,0,0x0,8
tick,0x7ffc909efd34,223066728,0,0x0,8
tick,0x7ffc909efd34,223082626,0,0x0,8
tick,0x7ffc909efd34,223096544,0,0x0,8
tick,0x7ffc909efd34,223112103,0,0x0,8
tick,0x7ffc909efd34,223127886,0,0x0,8
tick,0x7ffc909efd34,223143213,0,0x0,8
tick,0x7ffc909efd34,223159208,0,0x0,8
tick,0x7ffc909efd34,223174644,0,0x0,8
tick,0x7ffc909efd34,223191001,0,0x0,8
tick,0x7ffc909efd34,223206668,0,0x0,8
tick,0x7ffc909efd34,223222300,0,0x0,8
tick,0x7ffc909efd34,223237947,0,0x0,8
tick,0x7ffc909efd34,223252871,0,0x0,8
tick,0x7ffc909efd34,223268390,0,0x0,8
tick,0x7ffc909efd34,223284762,0,0x0,8
tick,0x7ffc909efd34,223300528,0,0x0,8
tick,0x7ffc909efd34,223315985,0,0x0,8
tick,0x7ffc909efd34,223331745,0,0x0,8
tick,0x7ffc909efd34,223347050,0,0x0,8
tick,0x7ffc909efd34,223363491,0,0x0,8
tick,0x7ffc909efd34,223378621,0,0x0,8
tick,0x7ffc909efd34,223394241,0,0x0,8
tick,0x7ffc909efd34,223409773,0,0x0,8
tick,0x7ffc909efd34,223425146,0,0x0,8
tick,0x7ffc909efd34,223440631,0,0x0,8
tick,0x7ffc909efd34,223456083,0,0x0,8
tick,0x7ffc909efd34,223471375,0,0x0,8
tick,0x7ffc909efd34,223487226,0,0x0,8
tick,0x7ffc909efd34,223502725,0,0x0,8
tick,0x7ffc909efd34,223518436,0,0x0,8
tick,0x7ffc909efd34,223534188,0,0x0,8
tick,0x7ffc909efd34,223549498,0,0x0,8
tick,0x7ffc909efd34,223565256,0,0x0,8
tick,0x7ffc909efd34,223580332,0,0x0,8
tick,0x7ffc909efd34,223595556,0,0x0,8
tick,0x7ffc909efd34,223611846,0,0x0,8
tick,0x7ffc909efd34,223628150,0,0x0,8
tick,0x7ffc909efd34,223643035,0,0x0,8
tick,0x7ffc909efd34,223658480,0,0x0,8
tick,0x7ffc909efd34,223673750,0,0x0,8
tick,0x7ffc909efd34,223689344,0,0x0,8
tick,0x7ffc909efd34,223704892,0,0x0,8
tick,0x7ffc909efd34,223720813,0,0x0,8
tick,0x7ffc909efd34,223736181,0,0x0,8
tick,0x7ffc909efd34,223752115,0,0x0,8
tick,0x7ffc909efd34,223767646,0,0x0,8
tick,0x7ffc909efd34,223783342,0,0x0,8
tick,0x7ffc909efd34,223799177,0,0x0,8
tick,0x7ffc909efd34,223815100,0,0x0,8
tick,0x7ffc909efd34,223829918,0,0x0,8
tick,0x7ffc909efd34,223845209,0,0x0,8
tick,0x7ffc909efd34,223860269,0,0x0,8
tick,0x7ffc909efd34,223875820,0,0x0,8
tick,0x7ffc909efd34,223891552,0,0x0,8
tick,0x7ffc909efd34,223907056,0,0x0,8
tick,0x7ffc909efd34,223922583,0,0x0,8
tick,0x7ffc909efd34,223938671,0,0x0,8
tick,0x7ffc909efd34,223955121,0,0x0,8
tick,0x7ffc909efd34,223970447,0,0x0,8
tick,0x7ffc909efd34,223986061,0,0x0,8
tick,0x7ffc909efd34,224001401,0,0x0,8
tick,0x7ffc909efd34,224016667,0,0x0,8
tick,0x7ffc909efd34,224032524,0,0x0,8
tick,0x7ffc909efd34,224048494,0,0x0,8
tick,0x7ffc909efd34,224063455,0,0x0,8
tick,0x7ffc909efd34,224079228,0,0x0,8
tick,0x7ffc909efd34,224094885,0,0x0,8
tick,0x7ffc909efd34,224110062,0,0x0,8
tick,0x7ffc909efd34,224125200,0,0x0,8
tick,0x7ffc909efd34,224140553,0,0x0,8
tick,0x7ffc909efd34,224156085,0,0x0,8
tick,0x7ffc909efd34,224171438,0,0x0,8
tick,0x7ffc909efd34,224187537,0,0x0,8
tick,0x7ffc909efd34,224202732,0,0x0,8
tick,0x7ffc909efd34,224218397,0,0x0,8
tick,0x7ffc909efd34,224234315,0,0x0,8
tick,0x7ffc909efd34,224249859,0,0x0,8
tick,0x7ffc909efd34,224265938,0,0x0,8
tick,0x7ffc909efd34,224281857,0,0x0,8
tick,0x7ffc909efd34,224296675,0,0x0,8
tick,0x7ffc909efd34,224312366,0,0x0,8
tick,0x7ffc909efd34,224328322,0,0x0,8
tick,0x7ffc909efd34,224344384,0,0x0,8
tick,0x7ffc909efd34,224360821,0,0x0,8
tick,0x7ffc909efd34,224376174,0,0x0,8
tick,0x7ffc909efd34,224391891,0,0x0,8
tick,0x7ffc909efd34,224407220,0,0x0,8
tick,0x7ffc909efd34,224423311,0,0x0,8
tick,0x7ffc909efd34,224439288,0,0x0,8
tick,0x7ffc909efd34,224455718,0,0x0,8
tick,0x7ffc909efd34,224470259,0,0x0,8
tick,0x7ffc909efd34,224486249,0,0x0,8
tick,0x7ffc909efd34,224501755,0,0x0,8
tick,0x7ffc909efd34,224517059,0,0x0,8
tick,0x7ffc909efd34,224533133,0,0x0,8
tick,0x7ffc909efd34,224548821,0,0x0,8
tick,0x7ffc909efd34,224564824,0,0x0,8
tick,0x7ffc909efd34,224580477,0,0x0,8
tick,0x7ffc909efd34,224596535,0,0x0,8
tick,0x7ffc909efd34,224612001,0,0x0,8
tick,0x7ffc909efd34,224627569,0,0x0,8
tick,0x7ffc909efd34,224643441,0,0x0,8
tick,0x7ffc909efd34,224658852,0,0x0,8
tick,0x7ffc909efd34,224675152,0,0x0,8
tick,0x7ffc909efd34,224690345,0,0x0,8
tick,0x7ffc909efd34,224705803,0,0x0,8
tick,0x7ffc909efd34,224721514,0,0x0,8
tick,0x7ffc909efd34,224736383,0,0x0,8
tick,0x7ffc909efd34,224752058,0,0x0,8
tick,0x7ffc909efd34,224768120,0,0x0,8
tick,0x7ffc909efd34,224783285,0,0x0,8
tick,0x7ffc909efd34,224799414,0,0x0,8
tick,0x7ffc909efd34,224815181,0,0x0,8
tick,0x7ffc909efd34,224830877,0,0x0,8
tick,0x7ffc909efd34,224846200,0,0x0,8
tick,0x7ffc909efd34,224861787,0,0x0,8
tick,0x7ffc909efd34,224877250,0,0x0,8
tick,0x7ffc909efd34,224892908,0,0x0,8
tick,0x7ffc909efd34,224908783,0,0x0,8
tick,0x7ffc909efd34,224924265,0,0x0,8
tick,0x7ffc909efd34,224940225,0,0x0,8
tick,0x7ffc909efd34,224955997,0,0x0,8
tick,0x7ffc909efd34,224972184,0,0x0,8
tick,0x7ffc909efd34,224987587,0,0x0,8
tick,0x7ffc909efd34,225002921,0,0x0,8
tick,0x7ffc909efd34,225018216,0,0x0,8
tick,0x7ffc909efd34,225033401,0,0x0,8
tick,0x7ffc909efd34,225048842,0,0x0,8
tick,0x7ffc909efd34,225064892,0,0x0,8
tick,0x7ffc909efd34,225079904,0,0x0,8
tick,0x7ffc909efd34,225095627,0,0x0,8
tick,0x7ffc909efd34,225111310,0,0x0,8
tick,0x7ffc909efd34,225126832,0,0x0,8
tick,0x7ffc909efd34,225142557,0,0x0,8
tick,0x7ffc909efd34,225158048,0,0x0,8
tick,0x7ffc909efd34,225173545,0,0x0,8
tick,0x7ffc909efd34,225189510,0,0x0,8
tick,0x7ffc909efd34,225204934,0,0x0,8
tick,0x7ffc909efd34,225220452,0,0x0,8
tick,0x7ffc909efd34,225236367,0,0x0,8
tick,0x7ffc909efd34,225252105,0,0x0,8
tick,0x7ffc909efd34,225267755,0,0x0,8
tick,0x7ffc909efd34,225283757,0,0x0,8
tick,0x7ffc909efd34,225299392,0,0x0,8
tick,0x7ffc909efd34,225315391,0,0x0,8
tick,0x7ffc909efd34,225331570,0,0x0,8
tick,0x7ffc909efd34,225346471,0,0x0,8
tick,0x7ffc909efd34,225362028,0,0x0,8
tick,0x7ffc909efd34,225377542,0,0x0,8
tick,0x7ffc909efd34,225393311,0,0x0,8
tick,0x7ffc909efd34,225408866,0,0x0,8
tick,0x7ffc909efd34,225424229,0,0x0,8
tick,0x7ffc909efd34,225439332,0,0x0,8
tick,0x7ffc909efd34,225454409,0,0x0,8
tick,0x7ffc909efd34,225470634,0,0x0,8
tick,0x7ffc909efd34,225485677,0,0x0,8
tick,0x7ffc909efd34,225501520,0,0x0,8
tick,0x7ffc909efd34,225517501,0,0x0,8
tick,0x7ffc909efd34,225533346,0,0x0,8
tick,0x7ffc909efd34,225549018,0,0x0,8
tick,0x7ffc909efd34,225564607,0,0x0,8
tick,0x7ffc909efd34,225579928,0,0x0,8
tick,0x7ffc909efd34,225595939,0,0x0,8
tick,0x7ffc909efd34,225611229,0,0x0,8
tick,0x7ffc909efd34,225626903,0,0x0,8
tick,0x7ffc909efd34,225642391,0,0x0,8
tick,0x7ffc909efd34,225657752,0,0x0,8
tick,0x7ffc909efd34,225673371,0,0x0,8
tick,0x7ffc909efd34,225688883,0,0x0,8
tick,0x7ffc909efd34,225704423,0,0x0,8
tick,0x7ffc909efd34,225719864,0,0x0,8
tick,0x7ffc909efd34,225735584,0,0x0,8
tick,0x7ffc909efd34,225751541,0,0x0,8
tick,0x7ffc909efd34,225766988,0,0x0,8
tick,0x7ffc909efd34,225782180,0,0x0,8
tick,0x7ffc909efd34,225797717,0,0x0,8
tick,0x7ffc909efd34,225813626,0,0x0,8
tick,0x7ffc909efd34,225829796,0,0x0,8
tick,0x7ffc909efd34,225845599,0,0x0,8
tick,0x7ffc909efd34,225860889,0,0x0,8
tick,0x7ffc909efd34,225876582,0,0x0,8
tick,0x7ffc909efd34,225891817,0,0x0,8
tick,0x7ffc909efd34,225907432,0,0x0,8
tick,0x7ffc909efd34,225923049,0,0x0,8
tick,0x7ffc909efd34,225938525,0,0x0,8
tick,0x7ffc909efd34,225953603,0,0x0,8
tick,0x7ffc909efd34,225969274,0,0x0,8
tick,0x7ffc909efd34,225985403,0,0x0,8
tick,0x7ffc909efd34,226000656,0,0x0,8
tick,0x7ffc909efd34,226016711,0,0x0,8
tick,0x7ffc909efd34,226032819,0,0x0,8
tick,0x7ffc909efd34,226048125,0,0x0,8
tick,0x7ffc909efd34,226064333,0,0x0,8
tick,0x7ffc909efd34,226079323,0,0x0,8
tick,0x7ffc909efd34,226094777,0,0x0,8
tick,0x7ffc909efd34,226110119,0,0x0,8
tick,0x7ffc909efd34,226126173,0,0x0,8
tick,0x7ffc909efd34,226142107,0,0x0,8
tick,0x7ffc909efd34,226157337,0,0x0,8
tick,0x7ffc909efd34,226172777,0,0x0,8
tick,0x7ffc909efd34,226188491,0,0x0,8
tick,0x7ffc909efd34,226203585,0,0x0,8
tick,0x7ffc909efd34,226219323,0,0x0,8
tick,0x7ffc909efd34,226235152,0,0x0,8
tick,0x7ffc909efd34,226251302,0,0x0,8
tick,0x7ffc909efd34,226267211,0,0x0,8
tick,0x7ffc909efd34,226283146,0,0x0,8
tick,0x7ffc909efd34,226298348,0,0x0,8
tick,0x7ffc909efd34,226314504,0,0x0,8
tick,0x7ffc909efd34,226329944,0,0x0,8
tick,0x7ffc909efd34,226345316,0,0x0,8
tick,0x7ffc909efd34,226361350,0,0x0,8
tick,0x7ffc909efd34,226376755,0,0x0,8
tick,0x7ffc909efd34,226392306,0,0x0,8
tick,0x7ffc909efd34,226408271,0,0x0,8
tick,0x7ffc909efd34,226423712,0,0x0,8
tick,0x7ffc909efd34,226439125,0,0x0,8
tick,0x7ffc909efd34,226454885,0,0x0,8
tick,0x7ffc909efd34,226470172,0,0x0,8
tick,0x7ffc909efd34,226486076,0,0x0,8
tick,0x7ffc909efd34,226501007,0,0x0,8
tick,0x7ffc909efd34,226516202,0,0x0,8
tick,0x7ffc909efd34,226532422,0,0x0,8
tick,0x7ffc909efd34,226547717,0,0x0,8
tick,0x7ffc909efd34,226563723,0,0x0,8
tick,0x7ffc909efd34,226579333,0,0x0,8
tick,0x7ffc909efd34,226595299,0,0x0,8
tick,0x7ffc909efd34,226611660,0,0x0,8
tick,0x7ffc909efd34,226627043,0,0x0,8
tick,0x7ffc909efd34,226643339,0,0x0,8
tick,0x7ffc909efd34,226659222,0,0x0,8
tick,0x7ffc909efd34,226674539,0,0x0,8
tick,0x7ffc909efd34,226690322,0,0x0,8
tick,0x7ffc909efd34,226705681,0,0x0,8
tick,0x7ffc909efd34,226721317,0,0x0,8
tick,0x7ffc909efd34,226737215,0,0x0,8
tick,0x7ffc909efd34,226753623,0,0x0,8
tick,0x7ffc909efd34,226768625,0,0x0,8
tick,0x7ffc909efd34,226783592,0,0x0,8
tick,0x7ffc909efd34,226798582,0,0x0,8
tick,0x7ffc909efd34,226813849,0,0x0,8
tick,0x7ffc909efd34,226829833,0,0x0,8
tick,0x7ffc909efd34,226845180,0,0x0,8
tick,0x7ffc909efd34,226861475,0,0x0,8
tick,0x7ffc909efd34,226876152,0,0x0,8
tick,0x7ffc909efd34,226891324,0,0x0,8
tick,0x7ffc909efd34,226906847,0,0x0,8
tick,0x7ffc909efd34,226922357,0,0x0,8
tick,0x7ffc909efd34,226938042,0,0x0,8
tick,0x7ffc909efd34,226953570,0,0x0,8
tick,0x7ffc909efd34,226969731,0,0x0,8
tick,0x7ffc909efd34,226985196,0,0x0,8
tick,0x7ffc909efd34,227001417,0,0x0,8
tick,0x7ffc909efd34,227016243,0,0x0,8
tick,0x7ffc909efd34,227031756,0,0x0,8
tick,0x7ffc909efd34,227047729,0,0x0,8
tick,0x7ffc909efd34,227062596,0,0x0,8
tick,0x7ffc909efd34,227078383,0,0x0,8
tick,0x7ffc909efd34,227093683,0,0x0,8
tick,0x7ffc909efd34,227109701,0,0x0,8
tick,0x7ffc909efd34,227125057,0,0x0,8
tick,0x7ffc909efd34,227141254,0,0x0,8
tick,0x7ffc909efd34,227156675,0,0x0,8
tick,0x7ffc909efd34,227172242,0,0x0,8
tick,0x7ffc909efd34,227188022,0,0x0,8
tick,0x7ffc909efd34,227203386,0,0x0,8
tick,0x7ffc909efd34,227218756,0,0x0,8
tick,0x7ffc909efd34,227234731,0,0x0,8
tick,0x7ffc909efd34,227250736,0,0x0,8
tick,0x7ffc909efd34,227266071,0,0x0,8
tick,0x7ffc909efd34,227281654,0,0x0,8
tick,0x7ffc909efd34,227297017,0,0x0,8
tick,0x7ffc909efd34,227313133,0,0x0,8
tick,0x7ffc909efd34,227328209,0,0x0,8
tick,0x7ffc909efd34,227343377,0,0x0,8
tick,0x7ffc909efd34,227358981,0,0x0,8
tick,0x7ffc909efd34,227374792,0,0x0,8
tick,0x7ffc909efd34,227391125,0,0x0,8
tick,0x7ffc909efd34,227406254,0,0x0,8
tick,0x7ffc909efd34,227421652,0,0x0,8
tick,0x7ffc909efd34,227437220,0,0x0,8
tick,0x7ffc909efd34,227452518,0,0x0,8
tick,0x7ffc909efd34,227468107,0,0x0,8
tick,0x7ffc909efd34,227483640,0,0x0,8
tick,0x7ffc909efd34,227499109,0,0x0,8
tick,0x7ffc909efd34,227514943,0,0x0,8
tick,0x7ffc909efd34,227530677,0,0x0,8
tick,0x7ffc909efd34,227546304,0,0x0,8
tick,0x7ffc909efd34,227561679,0,0x0,8
tick,0x7ffc909efd34,227577033,0,0x0,8
tick,0x7ffc909efd34,227592514,0,0x0,8
tick,0x7ffc909efd34,227608612,0,0x0,8
tick,0x7ffc909efd34,227624291,0,0x0,8
tick,0x7ffc909efd34,227640354,0,0x0,8
tick,0x7ffc909efd34,227656737,0,0x0,8
tick,0x7ffc909efd34,227672150,0,0x0,8
tick,0x7ffc909efd34,227687703,0,0x0,8
tick,0x7ffc909efd34,227703311,0,0x0,8
tick,0x7ffc909efd34,227718333,0,0x0,8
tick,0x7ffc909efd34,227733939,0,0x0,8
tick,0x7ffc909efd34,227750081,0,0x0,8
tick,0x7ffc909efd34,227766303,0,0x0,8
tick,0x7ffc909efd34,227782270,0,0x0,8
tick,0x7ffc909efd34,227797507,0,0x0,8
tick,0x7ffc909efd34,227813323,0,0x0,8
tick,0x7ffc909efd34,227828691,0,0x0,8
tick,0x7ffc909efd34,227844380,0,0x0,8
tick,0x7ffc909efd34,227860154,0,0x0,8
tick,0x7ffc909efd34,227875245,0,0x0,8
tick,0x7ffc909efd34,227890663,0,0x0,8
tick,0x7ffc909efd34,227906320,0,0x0,8
tick,0x7ffc909efd34,227922084,0,0x0,8
tick,0x7ffc909efd34,227938247,0,0x0,8
tick,0x7ffc909efd34,227953366,0,0x0,8
tick,0x7ffc909efd34,227968971,0,0x0,8
tick,0x7ffc909efd34,227984445,0,0x0,8
tick,0x7ffc909efd34,228000396,0,0x0,8
tick,0x7ffc909efd34,228016099,0,0x0,8
tick,0x7ffc909efd34,228032142,0,0x0,8
tick,0x7ffc909efd34,228047414,0,0x0,8
tick,0x7ffc909efd34,228063098,0,0x0,8
tick,0x7ffc909efd34,228078350,0,0x0,8
tick,0x7ffc909efd34,228094137,0,0x0,8
tick,0x7ffc909efd34,228109807,0,0x0,8
tick,0x7ffc909efd34,228125609,0,0x0,8
tick,0x7ffc909efd34,228141394,0,0x0,8
tick,0x7ffc909efd34,228156779,0,0x0,8
tick,0x7ffc909efd34,228172650,0,0x0,8
tick,0x7ffc909efd34,228188201,0,0x0,8
tick,0x7ffc909efd34,228203608,0,0x0,8
tick,0x7ffc909efd34,228219453,0,0x0,8
tick,0x7ffc909efd34,228235443,0,0x0,8
tick,0x7ffc909efd34,228250891,0,0x0,8
tick,0x7ffc909efd34,228265912,0,0x0,8
tick,0x7ffc909efd34,228281782,0,0x0,8
tick,0x7ffc909efd34,228297252,0,0x0,8
tick,0x7ffc909efd34,228312065,0,0x0,8
tick,0x7ffc909efd34,228326819,0,0x0,8
tick,0x7ffc909efd34,228342304,0,0x0,8
tick,0x7ffc909efd34,228358746,0,0x0,8
tick,0x7ffc909efd34,228374787,0,0x0,8
tick,0x7ffc909efd34,228391025,0,0x0,8
tick,0x7ffc909efd34,228405686,0,0x0,8
tick,0x7ffc909efd34,228421319,0,0x0,8
tick,0x7ffc909efd34,228436482,0,0x0,8
tick,0x7ffc909efd34,228451881,0,0x0,8
tick,0x7ffc909efd34,228467200,0,0x0,8
tick,0x7ffc909efd34,228482641,0,0x0,8
tick,0x7ffc909efd34,228497962,0,0x0,8
tick,0x7ffc909efd34,228513729,0,0x0,8
tick,0x7ffc909efd34,228528905,0,0x0,8
tick,0x7ffc909efd34,228544483,0,0x0,8
tick,0x7ffc909efd34,228560927,0,0x0,8
tick,0x7ffc909efd34,228576420,0,0x0,8
tick,0x7ffc909efd34,228592477,0,0x0,8
tick,0x7ffc909efd34,228608040,0,0x0,8
tick,0x7ffc909efd34,228623833,0,0x0,8
tick,0x7ffc909efd34,228639546,0,0x0,8
tick,0x7ffc909efd34,228655241,0,0x0,8
tick,0x7ffc909efd34,228670540,0,0x0,8
tick,0x7ffc909efd34,228686195,0,0x0,8
tick,0x7ffc909efd34,228701629,0,0x0,8
tick,0x7ffc909efd34,228717447,0,0x0,8
tick,0x7ffc909efd34,228733191,0,0x0,8
tick,0x7ffc909efd34,228749455,0,0x0,8
tick,0x7ffc909efd34,228765219,0,0x0,8
tick,0x7ffc909efd34,228780510,0,0x0,8
tick,0x7ffc909efd34,228796127,0,0x0,8
tick,0x7ffc909efd34,228811202,0,0x0,8
tick,0x7ffc909efd34,228826504,0,0x0,8
tick,0x7ffc909efd34,228841995,0,0x0,8
tick,0x7ffc909efd34,228857408,0,0x0,8
tick,0x7ffc909efd34,228872937,0,0x0,8
tick,0x7ffc909efd34,228888162,0,0x0,8
tick,0x7ffc909efd34,228903570,0,0x0,8
tick,0x7ffc909efd34,228918796,0,0x0,8
tick,0x7ffc909efd34,228934241,0,0x0,8
tick,0x7ffc909efd34,228949883,0,0x0,8
tick,0x7ffc909efd34,228965758,0,0x0,8
tick,0x7ffc909efd34,228981286,0,0x0,8
tick,0x7ffc909efd34,228997063,0,0x0,8
tick,0x7ffc909efd34,229012528,0,0x0,8
tick,0x7ffc909efd34,229027961,0,0x0,8
tick,0x7ffc909efd34,229043455,0,0x0,8
tick,0x7ffc909efd34,229059102,0,0x0,8
tick,0x7ffc909efd34,229074573,0,0x0,8
tick,0x7ffc909efd34,229090011,0,0x0,8
tick,0x7ffc909efd34,229105563,0,0x0,8
tick,0x7ffc909efd34,229120923,0,0x0,8
tick,0x7ffc909efd34,229136171,0,0x0,8
tick,0x7ffc909efd34,229151653,0,0x0,8
tick,0x7ffc909efd34,229166780,0,0x0,8
tick,0x7ffc909efd34,229182799,0,0x0,8
tick,0x7ffc909efd34,229198102,0,0x0,8
tick,0x7ffc909efd34,229213871,0,0x0,8
tick,0x7ffc909efd34,229229201,0,0x0,8
tick,0x7ffc909efd34,229244834,0,0x0,8
tick,0x7ffc909efd34,229260607,0,0x0,8
tick,0x7ffc909efd34,229275956,0,0x0,8
tick,0x7ffc909efd34,229291416,0,0x0,8
tick,0x7ffc909efd34,229307412,0,0x0,8
tick,0x7ffc909efd34,229322664,0,0x0,8
tick,0x7ffc909efd34,229338502,0,0x0,8
tick,0x7ffc909efd34,229354114,0,0x0,8
tick,0x7ffc909efd34,229370273,0,0x0,8
tick,0x7ffc909efd34,229385693,0,0x0,8
tick,0x7ffc909efd34,229401760,0,0x0,8
tick,0x7ffc909efd34,229416934,0,0x0,8
tick,0x7ffc909efd34,229432382,0,0x0,8
tick,0x7ffc909efd34,229448471,0,0x0,8
tick,0x7ffc909efd34,229463815,0,0x0,8
tick,0x7ffc909efd34,229479721,0,0x0,8
tick,0x7ffc909efd34,229495433,0,0x0,8
tick,0x7ffc909efd34,229510763,0,0x0,8
tick,0x7ffc909efd34,229526276,0,0x0,8
tick,0x7ffc909efd34,229541573,0,0x0,8
tick,0x7ffc909efd34,229557049,0,0x0,8
tick,0x7ffc909efd34,229572850,0,0x0,8
tick,0x7ffc909efd34,229588345,0,0x0,8
tick,0x7ffc909efd34,229603736,0,0x0,8
tick,0x7ffc909efd34,229619297,0,0x0,8
tick,0x7ffc909efd34,229634440,0,0x0,8
tick,0x7ffc909efd34,229650035,0,0x0,8
tick,0x7ffc909efd34,229665943,0,0x0,8
tick,0x7ffc909efd34,229681609,0,0x0,8
tick,0x7ffc909efd34,229697048,0,0x0,8
tick,0x7ffc909efd34,229712675,0,0x0,8
tick,0x7ffc909efd34,229728219,0,0x0,8
tick,0x7ffc909efd34,229743548,0,0x0,8
tick,0x7ffc909efd34,229759039,0,0x0,8
tick,0x7ffc909efd34,229774769,0,0x0,8
tick,0x7ffc909efd34,229789682,0,0x0,8
tick,0x7ffc909efd34,229805245,0,0x0,8
tick,0x7ffc909efd34,229820842,0,0x0,8
tick,0x7ffc909efd34,229836271,0,0x0,8
tick,0x7ffc909efd34,229851499,0,0x0,8
tick,0x7ffc909efd34,229867302,0,0x0,8
tick,0x7ffc909efd34,229883364,0,0x0,8
tick,0x7ffc909efd34,229898635,0,0x0,8
tick,0x7ffc909efd34,229914913,0,0x0,8
tick,0x7ffc909efd34,229930439,0,0x0,8
tick,0x7ffc909efd34,229945650,0,0x0,8
tick,0x7ffc909efd34,229961070,0,0x0,8
tick,0x7ffc909efd34,229976890,0,0x0,8
tick,0x7ffc909efd34,229992444,0,0x0,8
tick,0x7ffc909efd34,230008280,0,0x0,8
tick,0x7ffc909efd34,230023788,0,0x0,8
tick,0x7ffc909efd34,230039847,0,0x0,8
tick,0x7ffc909efd34,230055497,0,0x0,8
tick,0x7ffc909efd34,230070828,0,0x0,8
tick,0x7ffc909efd34,230086043,0,0x0,8
tick,0x7ffc909efd34,230101309,0,0x0,8
tick,0x7ffc909efd34,230116809,0,0x0,8
tick,0x7ffc909efd34,230132202,0,0x0,8
tick,0x7ffc909efd34,230147645,0,0x0,8
tick,0x7ffc909efd34,230163163,0,0x0,8
tick,0x7ffc909efd34,230178757,0,0x0,8
tick,0x7ffc909efd34,230194056,0,0x0,8
tick,0x7ffc909efd34,230209842,0,0x0,8
tick,0x7ffc909efd34,230225157,0,0x0,8
tick,0x7ffc909efd34,230240473,0,0x0,8
tick,0x7ffc909efd34,230255796,0,0x0,8
tick,0x7ffc909efd34,230271592,0,0x0,8
tick,0x7ffc909efd34,230287401,0,0x0,8
tick,0x7ffc909efd34,230303049,0,0x0,8
tick,0x7ffc909efd34,230318567,0,0x0,8
tick,0x7ffc909efd34,230333975,0,0x0,8
tick,0x7ffc909efd34,230349440,0,0x0,8
tick,0x7ffc909efd34,230364898,0,0x0,8
tick,0x7ffc909efd34,230380423,0,0x0,8
tick,0x7ffc909efd34,230395548,0,0x0,8
tick,0x7ffc909efd34,230411140,0,0x0,8
tick,0x7ffc909efd34,230426694,0,0x0,8
tick,0x7ffc909efd34,230442406,0,0x0,8
tick,0x7ffc909efd34,230458124,0,0x0,8
tick,0x7ffc909efd34,230473499,0,0x0,8
tick,0x7ffc909efd34,230489231,0,0x0,8
tick,0x7ffc909efd34,230504689,0,0x0,8
tick,0x7ffc909efd34,230519913,0,0x0,8
tick,0x7ffc909efd34,230535481,0,0x0,8
tick,0x7ffc909efd34,230550731,0,0x0,8
tick,0x7ffc909efd34,230566732,0,0x0,8
tick,0x7ffc909efd34,230582665,0,0x0,8
tick,0x7ffc909efd34,230598040,0,0x0,8
tick,0x7ffc909efd34,230613850,0,0x0,8
tick,0x7ffc909efd34,230629552,0,0x0,8
tick,0x7ffc909efd34,230644932,0,0x0,8
tick,0x7ffc909efd34,230660513,0,0x0,8
tick,0x7ffc909efd34,230675711,0,0x0,8
tick,0x7ffc909efd34,230691107,0,0x0,8
tick,0x7ffc909efd34,230706301,0,0x0,8
tick,0x7ffc909efd34,230721824,0,0x0,8
tick,0x7ffc909efd34,230737173,0,0x0,8
tick,0x7ffc909efd34,230752633,0,0x0,8
tick,0x7ffc909efd34,230768497,0,0x0,8
tick,0x7ffc909efd34,230784277,0,0x0,8
tick,0x7ffc909efd34,230799282,0,0x0,8
tick,0x7ffc909efd34,230814829,0,0x0,8
tick,0x7ffc909efd34,230830380,0,0x0,8
tick,0x7ffc909efd34,230845938,0,0x0,8
tick,0x7ffc909efd34,230862168,0,0x0,8
tick,0x7ffc909efd34,230877743,0,0x0,8
tick,0x7ffc909efd34,230893586,0,0x0,8
tick,0x7ffc909efd34,230909033,0,0x0,8
tick,0x7ffc909efd34,230924615,0,0x0,8
tick,0x7ffc909efd34,230940109,0,0x0,8
tick,0x7ffc909efd34,230956008,0,0x0,8
tick,0x7ffc909efd34,230971163,0,0x0,8
tick,0x7ffc909efd34,230986821,0,0x0,8
tick,0x7ffc909efd34,231002811,0,0x0,8
tick,0x7ffc909efd34,231018924,0,0x0,8
tick,0x7ffc909efd34,231034309,0,0x0,8
tick,0x7ffc909efd34,231049742,0,0x0,8
tick,0x7ffc909efd34,231065723,0,0x0,8
tick,0x7ffc909efd34,231081598,0,0x0,8
tick,0x7ffc909efd34,231096884,0,0x0,8
tick,0x7ffc909efd34,231112397,0,0x0,8
tick,0x7ffc909efd34,231128049,0,0x0,8
tick,0x7ffc909efd34,231143223,0,0x0,8
tick,0x7ffc909efd34,231158782,0,0x0,8
tick,0x7ffc909efd34,231174492,0,0x0,8
tick,0x7ffc909efd34,231190466,0,0x0,8
tick,0x7ffc909efd34,231206053,0,0x0,8
tick,0x7ffc909efd34,231221668,0,0x0,8
tick,0x7ffc909efd34,231237265,0,0x0,8
tick,0x7ffc909efd34,231252938,0,0x0,8
tick,0x7ffc909efd34,231268527,0,0x0,8
tick,0x7ffc909efd34,231283980,0,0x0,8
tick,0x7ffc909efd34,231300327,0,0x0,8
tick,0x7ffc909efd34,231315739,0,0x0,8
tick,0x7ffc909efd34,231330906,0,0x0,8
tick,0x7ffc909efd34,231346776,0,0x0,8
tick,0x7ffc909efd34,231362041,0,0x0,8
tick,0x7ffc909efd34,231377349,0,0x0,8
tick,0x7ffc909efd34,231393116,0,0x0,8
tick,0x7ffc909efd34,231408960,0,0x0,8
tick,0x7ffc909efd34,231424603,0,0x0,8
tick,0x7ffc909efd34,231440878,0,0x0,8
tick,0x7ffc909efd34,231456408,0,0x0,8
tick,0x7ffc909efd34,231472053,0,0x0,8
tick,0x7ffc909efd34,231487548,0,0x0,8
tick,0x7ffc909efd34,231503009,0,0x0,8
tick,0x7ffc909efd34,231518623,0,0x0,8
tick,0x7ffc909efd34,231534367,0,0x0,8
tick,0x7ffc909efd34,231549968,0,0x0,8
tick,0x7ffc909efd34,231565561,0,0x0,8
tick,0x7ffc909efd34,231580356,0,0x0,8
tick,0x7ffc909efd34,231596101,0,0x0,8
tick,0x7ffc909efd34,231611863,0,0x0,8
tick,0x7ffc909efd34,231627496,0,0x0,8
tick,0x7ffc909efd34,231643097,0,0x0,8
tick,0x7ffc909efd34,231658801,0,0x0,8
tick,0x7ffc909efd34,231674462,0,0x0,8
tick,0x7ffc909efd34,231689891,0,0x0,8
tick,0x7ffc909efd34,231705830,0,0x0,8
tick,0x7ffc909efd34,231721231,0,0x0,8
tick,0x7ffc909efd34,231736800,0,0x0,8
tick,0x7ffc909efd34,231752288,0,0x0,8
tick,0x7ffc909efd34,231767785,0,0x0,8
tick,0x7ffc909efd34,231783233,0,0x0,8
tick,0x7ffc909efd34,231799390,0,0x0,8
tick,0x7ffc909efd34,231814467,0,0x0,8
tick,0x7ffc909efd34,231830190,0,0x0,8
tick,0x7ffc909efd34,231846021,0,0x0,8
tick,0x7ffc909efd34,231861409,0,0x0,8
tick,0x7ffc909efd34,231877190,0,0x0,8
tick,0x7ffc909efd34,231892871,0,0x0,8
tick,0x7ffc909efd34,231908609,0,0x0,8
tick,0x7ffc909efd34,231924277,0,0x0,8
tick,0x7ffc909efd34,231939839,0,0x0,8
tick,0x7ffc909efd34,231955766,0,0x0,8
tick,0x7ffc909efd34,231971391,0,0x0,8
tick,0x7ffc909efd34,231987096,0,0x0,8
tick,0x7ffc909efd34,232002570,0,0x0,8
tick,0x7ffc909efd34,232018120,0,0x0,8
tick,0x7ffc909efd34,232033404,0,0x0,8
tick,0x7ffc909efd34,232049672,0,0x0,8
tick,0x7ffc909efd34,232065534,0,0x0,8
tick,0x7ffc909efd34,232080681,0,0x0,8
tick,0x7ffc909efd34,232096508,0,0x0,8
tick,0x7ffc909efd34,232111992,0,0x0,8
tick,0x7ffc909efd34,232127287,0,0x0,8
tick,0x7ffc909efd34,232142959,0,0x0,8
tick,0x7ffc909efd34,232158591,0,0x0,8
tick,0x7ffc909efd34,232174183,0,0x0,8
tick,0x7ffc909efd34,232189588,0,0x0,8
tick,0x7ffc909efd34,232205370,0,0x0,8
tick,0x7ffc909efd34,232221180,0,0x0,8
tick,0x7ffc909efd34,232236260,0,0x0,8
tick,0x7ffc909efd34,232251550,0,0x0,8
tick,0x7ffc909efd34,232267323,0,0x0,8
tick,0x7ffc909efd34,232282659,0,0x0,8
tick,0x7ffc909efd34,232298479,0,0x0,8
tick,0x7ffc909efd34,232314045,0,0x0,8
tick,0x7ffc909efd34,232329899,0,0x0,8
tick,0x7ffc909efd34,232345128,0,0x0,8
tick,0x7ffc909efd34,232360935,0,0x0,8
tick,0x7ffc909efd34,232376409,0,0x0,8
tick,0x7ffc909efd34,232392225,0,0x0,8
tick,0x7ffc909efd34,232407385,0,0x0,8
tick,0x7ffc909efd34,232422843,0,0x0,8
tick,0x7ffc909efd34,232438730,0,0x0,8
tick,0x7ffc909efd34,232454138,0,0x0,8
tick,0x7ffc909efd34,232469971,0,0x0,8
tick,0x7ffc909efd34,232485543,0,0x0,8
tick,0x7ffc909efd34,232501151,0,0x0,8
tick,0x7ffc909efd34,232517191,0,0x0,8
tick,0x7ffc909efd34,232533002,0,0x0,8
tick,0x7ffc909efd34,232548648,0,0x0,8
tick,0x7ffc909efd34,232564662,0,0x0,8
tick,0x7ffc909efd34,232580163,0,0x0,8
tick,0x7ffc909efd34,232595963,0,0x0,8
tick,0x7ffc909efd34,232611455,0,0x0,8
tick,0x7ffc909efd34,232627386,0,0x0,8
tick,0x7ffc909efd34,232642941,0,0x0,8
tick,0x7ffc909efd34,232658676,0,0x0,8
tick,0x7ffc909efd34,232674365,0,0x0,8
tick,0x7ffc909efd34,232690254,0,0x0,8
tick,0x7ffc909efd34,232706121,0,0x0,8
tick,0x7ffc909efd34,232722222,0,0x0,8
tick,0x7ffc909efd34,232738152,0,0x0,8
tick,0x7ffc909efd34,232754085,0,0x0,8
tick,0x7ffc909efd34,232770502,0,0x0,8
tick,0x7ffc909efd34,232786149,0,0x0,8
tick,0x7ffc909efd34,232801926,0,0x0,8
tick,0x7ffc909efd34,232816167,0,0x0,8
tick,0x7ffc909efd34,232832009,0,0x0,8
tick,0x7ffc909efd34,232847261,0,0x0,8
tick,0x7ffc909efd34,232862622,0,0x0,8
tick,0x7ffc909efd34,232878059,0,0x0,8
tick,0x7ffc909efd34,232893792,0,0x0,8
tick,0x7ffc909efd34,232908581,0,0x0,8
tick,0x7ffc909efd34,232923855,0,0x0,8
tick,0x7ffc909efd34,232939278,0,0x0,8
tick,0x7ffc909efd34,232955097,0,0x0,8
tick,0x7ffc909efd34,232970925,0,0x0,8
tick,0x7ffc909efd34,232986310,0,0x0,8
tick,0x7ffc909efd34,233002215,0,0x0,8
tick,0x7ffc909efd34,233017424,0,0x0,8
tick,0x7ffc909efd34,233033264,0,0x0,8
tick,0x7ffc909efd34,233048363,0,0x0,8
tick,0x7ffc909efd34,233063801,0,0x0,8
tick,0x7ffc909efd34,233078944,0,0x0,8
tick,0x7ffc909efd34,233093966,0,0x0,8
tick,0x7ffc909efd34,233109208,0,0x0,8
tick,0x7ffc909efd34,233125102,0,0x0,8
tick,0x7ffc909efd34,233141205,0,0x0,8
tick,0x7ffc909efd34,233156763,0,0x0,8
tick,0x7ffc909efd34,233172428,0,0x0,8
tick,0x7ffc909efd34,233188188,0,0x0,8
tick,0x7ffc909efd34,233204063,0,0x0,8
tick,0x7ffc909efd34,233219423,0,0x0,8
tick,0x7ffc909efd34,233235386,0,0x0,8
tick,0x7ffc909efd34,233251419,0,0x0,8
tick,0x7ffc909efd34,233266699,0,0x0,8
tick,0x7ffc909efd34,233282142,0,0x0,8
tick,0x7ffc909efd34,233297686,0,0x0,8
tick,0x7ffc909efd34,233314159,0,0x0,8
tick,0x7ffc909efd34,233328075,0,0x0,8
tick,0x7ffc909efd34,233343540,0,0x0,8
tick,0x7ffc909efd34,233359885,0,0x0,8
tick,0x7ffc909efd34,233375297,0,0x0,8
tick,0x7ffc909efd34,233391091,0,0x0,8
tick,0x7ffc909efd34,233406543,0,0x0,8
tick,0x7ffc909efd34,233422144,0,0x0,8
tick,0x7ffc909efd34,233437648,0,0x0,8
tick,0x7ffc909efd34,233453039,0,0x0,8
tick,0x7ffc909efd34,233468652,0,0x0,8
tick,0x7ffc909efd34,233484220,0,0x0,8
tick,0x7ffc909efd34,233499250,0,0x0,8
tick,0x7ffc909efd34,233514969,0,0x0,8
tick,0x7ffc909efd34,233530329,0,0x0,8
tick,0x7ffc909efd34,233546556,0,0x0,8
tick,0x7ffc909efd34,233562178,0,0x0,8
tick,0x7ffc909efd34,233577735,0,0x0,8
tick,0x7ffc909efd34,233593423,0,0x0,8
tick,0x7ffc909efd34,233609364,0,0x0,8
tick,0x7ffc909efd34,233625401,0,0x0,8
tick,0x7ffc909efd34,233640062,0,0x0,8
tick,0x7ffc909efd34,233655078,0,0x0,8
tick,0x7ffc909efd34,233671020,0,0x0,8
tick,0x7ffc909efd34,233687041,0,0x0,8
tick,0x7ffc909efd34,233705489,0,0x0,8
tick,0x7ffc909efd34,233719849,0,0x0,8
tick,0x7ffc909efd34,233734890,0,0x0,8
tick,0x7ffc909efd34,233751236,0,0x0,8
tick,0x7ffc909efd34,233766939,0,0x0,8
tick,0x7ffc909efd34,233782833,0,0x0,8
tick,0x7ffc909efd34,233797924,0,0x0,8
tick,0x7ffc909efd34,233814501,0,0x0,8
tick,0x7ffc909efd34,233829825,0,0x0,8
tick,0x7ffc909efd34,233845822,0,0x0,8
tick,0x7ffc909efd34,233861771,0,0x0,8
tick,0x7ffc909efd34,233877290,0,0x0,8
tick,0x7ffc909efd34,233892647,0,0x0,8
tick,0x7ffc909efd34,233908066,0,0x0,8
tick,0x7ffc909efd34,233923731,0,0x0,8
tick,0x7ffc909efd34,233938942,0,0x0,8
tick,0x7ffc909efd34,233954340,0,0x0,8
tick,0x7ffc909efd34,233969777,0,0x0,8
tick,0x7ffc909efd34,233985225,0,0x0,8
tick,0x7ffc909efd34,234000732,0,0x0,8
tick,0x7ffc909efd34,234016116,0,0x0,8
tick,0x7ffc909efd34,234032070,0,0x0,8
tick,0x7ffc909efd34,234047431,0,0x0,8
tick,0x7ffc909efd34,234062984,0,0x0,8
tick,0x7ffc909efd34,234078204,0,0x0,8
tick,0x7ffc909efd34,234094078,0,0x0,8
tick,0x7ffc909efd34,234109890,0,0x0,8
tick,0x7ffc909efd34,234125392,0,0x0,8
tick,0x7ffc909efd34,234141042,0,0x0,8
tick,0x7ffc909efd34,234156555,0,0x0,8
tick,0x7ffc909efd34,234172264,0,0x0,8
tick,0x7ffc909efd34,234187840,0,0x0,8
tick,0x7ffc909efd34,234203732,0,0x0,8
tick,0x7ffc909efd34,234219761,0,0x0,8
tick,0x7ffc909efd34,234235477,0,0x0,8
tick,0x7ffc909efd34,234251196,0,0x0,8
tick,0x7ffc909efd34,234266783,0,0x0,8
tick,0x7ffc909efd34,234282189,0,0x0,8
tick,0x7ffc909efd34,234297632,0,0x0,8
tick,0x7ffc909efd34,234313884,0,0x0,8
tick,0x7ffc909efd34,234328575,0,0x0,8
tick,0x7ffc909efd34,234343844,0,0x0,8
tick,0x7ffc909efd34,234359342,0,0x0,8
tick,0x7ffc909efd34,234374801,0,0x0,8
tick,0x7ffc909efd34,234390280,0,0x0,8
tick,0x7ffc909efd34,234405859,0,0x0,8
tick,0x7ffc909efd34,234421990,0,0x0,8
tick,0x7ffc909efd34,234437406,0,0x0,8
tick,0x7ffc909efd34,234453214,0,0x0,8
tick,0x7ffc909efd34,234469538,0,0x0,8
tick,0x7ffc909efd34,234484699,0,0x0,8
tick,0x7ffc909efd34,234500021,0,0x0,8
tick,0x7ffc909efd34,234515268,0,0x0,8
tick,0x7ffc909efd34,234531285,0,0x0,8
tick,0x7ffc909efd34,234547373,0,0x0,8
tick,0x7ffc909efd34,234562258,0,0x0,8
tick,0x7ffc909efd34,234577704,0,0x0,8
tick,0x7ffc909efd34,234592436,0,0x0,8
tick,0x7ffc909efd34,234608044,0,0x0,8
tick,0x7ffc909efd34,234623671,0,0x0,8
tick,0x7ffc909efd34,234639737,0,0x0,8
tick,0x7ffc909efd34,234655416,0,0x0,8
tick,0x7ffc909efd34,234670752,0,0x0,8
tick,0x7ffc909efd34,234686875,0,0x0,8
tick,0x7ffc909efd34,234702257,0,0x0,8
tick,0x7ffc909efd34,234718183,0,0x0,8
tick,0x7ffc909efd34,234733965,0,0x0,8
tick,0x7ffc909efd34,234749357,0,0x0,8
tick,0x7ffc909efd34,234765151,0,0x0,8
tick,0x7ffc909efd34,234780795,0,0x0,8
tick,0x7ffc909efd34,234796298,0,0x0,8
tick,0x7ffc909efd34,234812042,0,0x0,8
tick,0x7ffc909efd34,234827328,0,0x0,8
tick,0x7ffc909efd34,234842617,0,0x0,8
tick,0x7ffc909efd34,234858470,0,0x0,8
tick,0x7ffc909efd34,234874198,0,0x0,8
tick,0x7ffc909efd34,234890233,0,0x0,8
tick,0x7ffc909efd34,234905634,0,0x0,8
tick,0x7ffc909efd34,234921202,0,0x0,8
tick,0x7ffc909efd34,234937201,0,0x0,8
tick,0x7ffc909efd34,234952214,0,0x0,8
tick,0x7ffc909efd34,234968033,0,0x0,8
tick,0x7ffc909efd34,234983780,0,0x0,8
tick,0x7ffc909efd34,234999272,0,0x0,8
tick,0x7ffc909efd34,235014473,0,0x0,8
tick,0x7ffc909efd34,235029632,0,0x0,8
tick,0x7ffc909efd34,235045235,0,0x0,8
tick,0x7ffc909efd34,235060646,0,0x0,8
tick,0x7ffc909efd34,235076771,0,0x0,8
tick,0x7ffc909efd34,235092572,0,0x0,8
tick,0x7ffc909efd34,235107974,0,0x0,8
tick,0x7ffc909efd34,235124428,0,0x0,8
tick,0x7ffc909efd34,235140020,0,0x0,8
tick,0x7ffc909efd34,235155728,0,0x0,8
tick,0x7ffc909efd34,235171089,0,0x0,8
tick,0x7ffc909efd34,235186447,0,0x0,8
tick,0x7ffc909efd34,235201448,0,0x0,8
tick,0x7ffc909efd34,235217125,0,0x0,8
tick,0x7ffc909efd34,235233565,0,0x0,8
tick,0x7ffc909efd34,235249309,0,0x0,8
tick,0x7ffc909efd34,235264306,0,0x0,8
tick,0x7ffc909efd34,235279890,0,0x0,8
tick,0x7ffc909efd34,235295317,0,0x0,8
tick,0x7ffc909efd34,235310563,0,0x0,8
tick,0x7ffc909efd34,235326069,0,0x0,8
tick,0x7ffc909efd34,235342156,0,0x0,8
tick,0x7ffc909efd34,235357353,0,0x0,8
tick,0x7ffc909efd34,235372690,0,0x0,8
tick,0x7ffc909efd34,235388681,0,0x0,8
tick,0x7ffc909efd34,235404760,0,0x0,8
tick,0x7ffc909efd34,235419734,0,0x0,8
tick,0x7ffc909efd34,235436150,0,0x0,8
tick,0x7ffc909efd34,235451415,0,0x0,8
tick,0x7ffc909efd34,235466653,0,0x0,8
tick,0x7ffc909efd34,235482727,0,0x0,8
tick,0x7ffc909efd34,235498875,0,0x0,8
tick,0x7ffc909efd34,235514083,0,0x0,8
tick,0x7ffc909efd34,235529668,0,0x0,8
tick,0x7ffc909efd34,235544951,0,0x0,8
tick,0x7ffc909efd34,235560386,0,0x0,8
tick,0x7ffc909efd34,235575633,0,0x0,8
tick,0x7ffc909efd34,235591008,0,0x0,8
tick,0x7ffc909efd34,235607071,0,0x0,8
tick,0x7ffc909efd34,235622642,0,0x0,8
tick,0x7ffc909efd34,235638095,0,0x0,8
tick,0x7ffc909efd34,235653615,0,0x0,8
tick,0x7ffc909efd34,235669914,0,0x0,8
tick,0x7ffc909efd34,235685598,0,0x0,8
tick,0x7ffc909efd34,235700930,0,0x0,8
tick,0x7ffc909efd34,235716534,0,0x0,8
tick,0x7ffc909efd34,235732602,0,0x0,8
tick,0x7ffc909efd34,235748385,0,0x0,8
tick,0x7ffc909efd34,235763915,0,0x0,8
tick,0x7ffc909efd34,235779651,0,0x0,8
tick,0x7ffc909efd34,235794604,0,0x0,8
tick,0x7ffc909efd34,235810213,0,0x0,8
tick,0x7ffc909efd34,235825715,0,0x0,8
tick,0x7ffc909efd34,235841474,0,0x0,8
tick,0x7ffc909efd34,235856759,0,0x0,8
tick,0x7ffc909efd34,235872592,0,0x0,8
tick,0x7ffc909efd34,235887916,0,0x0,8
tick,0x7ffc909efd34,235903456,0,0x0,8
tick,0x7ffc909efd34,235919334,0,0x0,8
tick,0x7ffc909efd34,235935245,0,0x0,8
tick,0x7ffc909efd34,235950890,0,0x0,8
tick,0x7ffc909efd34,235967036,0,0x0,8
tick,0x7ffc909efd34,235982647,0,0x0,8
tick,0x7ffc909efd34,235998526,0,0x0,8
tick,0x7ffc909efd34,236014185,0,0x0,8
tick,0x7ffc909efd34,236030262,0,0x0,8
tick,0x7ffc909efd34,236045827,0,0x0,8
tick,0x7ffc909efd34,236061656,0,0x0,8
tick,0x7ffc909efd34,236077459,0,0x0,8
tick,0x7ffc909efd34,236093190,0,0x0,8
tick,0x7ffc909efd34,236108693,0,0x0,8
tick,0x7ffc909efd34,236124488,0,0x0,8
tick,0x7ffc909efd34,236139856,0,0x0,8
tick,0x7ffc909efd34,236155940,0,0x0,8
tick,0x7ffc909efd34,236171655,0,0x0,8
tick,0x7ffc909efd34,236187001,0,0x0,8
tick,0x7ffc909efd34,236202724,0,0x0,8
tick,0x7ffc909efd34,236218890,0,0x0,8
tick,0x7ffc909efd34,236234021,0,0x0,8
tick,0x7ffc909efd34,236249213,0,0x0,8
tick,0x7ffc909efd34,236264417,0,0x0,8
tick,0x7ffc909efd34,236280442,0,0x0,8
tick,0x7ffc909efd34,236295837,0,0x0,8
tick,0x7ffc909efd34,236312112,0,0x0,8
tick,0x7ffc909efd34,236327799,0,0x0,8
tick,0x7ffc909efd34,236343498,0,0x0,8
tick,0x7ffc909efd34,236358955,0,0x0,8
tick,0x7ffc909efd34,236374429,0,0x0,8
tick,0x7ffc909efd34,236390725,0,0x0,8
tick,0x7ffc909efd34,236406350,0,0x0,8
tick,0x7ffc909efd34,236421874,0,0x0,8
tick,0x7ffc909efd34,236438092,0,0x0,8
tick,0x7ffc909efd34,236453465,0,0x0,8
tick,0x7ffc909efd34,236469150,0,0x0,8
tick,0x7ffc909efd34,236484343,0,0x0,8
tick,0x7ffc909efd34,236499737,0,0x0,8
tick,0x7ffc909efd34,236515522,0,0x0,8
tick,0x7ffc909efd34,236530869,0,0x0,8
tick,0x7ffc909efd34,236546524,0,0x0,8
tick,0x7ffc909efd34,236562169,0,0x0,8
tick,0x7ffc909efd34,236577289,0,0x0,8
tick,0x7ffc909efd34,236593193,0,0x0,8
tick,0x7ffc909efd34,236609147,0,0x0,8
tick,0x7ffc909efd34,236624629,0,0x0,8
tick,0x7ffc909efd34,236640189,0,0x0,8
tick,0x7ffc909efd34,236655997,0,0x0,8
tick,0x7ffc909efd34,236671907,0,0x0,8
tick,0x7ffc909efd34,236687310,0,0x0,8
tick,0x7ffc909efd34,236702843,0,0x0,8
tick,0x7ffc909efd34,236719457,0,0x0,8
tick,0x7ffc909efd34,236734677,0,0x0,8
tick,0x7ffc909efd34,236750148,0,0x0,8
tick,0x7ffc909efd34,236765528,0,0x0,8
tick,0x7ffc909efd34,236781049,0,0x0,8
tick,0x7ffc909efd34,236796159,0,0x0,8
tick,0x7ffc909efd34,236812115,0,0x0,8
tick,0x7ffc909efd34,236827309,0,0x0,8
tick,0x7ffc909efd34,236842472,0,0x0,8
tick,0x7ffc909efd34,236858421,0,0x0,8
tick,0x7ffc909efd34,236874362,0,0x0,8
tick,0x7ffc909efd34,236890292,0,0x0,8
tick,0x7ffc909efd34,236905947,0,0x0,8
tick,0x7ffc909efd34,236921141,0,0x0,8
tick,0x7ffc909efd34,236936669,0,0x0,8
tick,0x7ffc909efd34,236952312,0,0x0,8
tick,0x7ffc909efd34,236968487,0,0x0,8
tick,0x7ffc909efd34,236983874,0,0x0,8
tick,0x7ffc909efd34,236999364,0,0x0,8
tick,0x7ffc909efd34,237015267,0,0x0,8
tick,0x7ffc909efd34,237031193,0,0x0,8
tick,0x7ffc909efd34,237046532,0,0x0,8
tick,0x7ffc909efd34,237061946,0,0x0,8
tick,0x7ffc909efd34,237077237,0,0x0,8
tick,0x7ffc909efd34,237092326,0,0x0,8
tick,0x7ffc909efd34,237106903,0,0x0,8
tick,0x7ffc909efd34,237122415,0,0x0,8
tick,0x7ffc909efd34,237137684,0,0x0,8
tick,0x7ffc909efd34,237153339,0,0x0,8
tick,0x7ffc909efd34,237168883,0,0x0,8
tick,0x7ffc909efd34,237184674,0,0x0,8
tick,0x7ffc909efd34,237200348,0,0x0,8
tick,0x7ffc909efd34,237215794,0,0x0,8
tick,0x7ffc909efd34,237231536,0,0x0,8
tick,0x7ffc909efd34,237246769,0,0x0,8
tick,0x7ffc909efd34,237262316,0,0x0,8
tick,0x7ffc909efd34,237278108,0,0x0,8
tick,0x7ffc909efd34,237293974,0,0x0,8
tick,0x7ffc909efd34,237310295,0,0x0,8
tick,0x7ffc909efd34,237326066,0,0x0,8
tick,0x7ffc909efd34,237341598,0,0x0,8
tick,0x7ffc909efd34,237357146,0,0x0,8
tick,0x7ffc909efd34,237373124,0,0x0,8
tick,0x7ffc909efd34,237388376,0,0x0,8
tick,0x7ffc909efd34,237403876,0,0x0,8
tick,0x7ffc909efd34,237419449,0,0x0,8
tick,0x7ffc909efd34,237435244,0,0x0,8
tick,0x7ffc909efd34,237450605,0,0x0,8
tick,0x7ffc909efd34,237465888,0,0x0,8
tick,0x7ffc909efd34,237481648,0,0x0,8
tick,0x7ffc909efd34,237497716,0,0x0,8
tick,0x7ffc909efd34,237513465,0,0x0,8
tick,0x7ffc909efd34,237529017,0,0x0,8
tick,0x7ffc909efd34,237544370,0,0x0,8
tick,0x7ffc909efd34,237559947,0,0x0,8
tick,0x7ffc909efd34,237575338,0,0x0,8
tick,0x7ffc909efd34,237591024,0,0x0,8
tick,0x7ffc909efd34,237606564,0,0x0,8
tick,0x7ffc909efd34,237622347,0,0x0,8
tick,0x7ffc909efd34,237637617,0,0x0,8
tick,0x7ffc909efd34,237653078,0,0x0,8
tick,0x7ffc909efd34,237668234,0,0x0,8
tick,0x7ffc909efd34,237683983,0,0x0,8
tick,0x7ffc909efd34,237700007,0,0x0,8
tick,0x7ffc909efd34,237715500,0,0x0,8
tick,0x7ffc909efd34,237731641,0,0x0,8
tick,0x7ffc909efd34,237747678,0,0x0,8
tick,0x7ffc909efd34,237762973,0,0x0,8
tick,0x7ffc909efd34,237778861,0,0x0,8
tick,0x7ffc909efd34,237794057,0,0x0,8
tick,0x7ffc909efd34,237809381,0,0x0,8
tick,0x7ffc909efd34,237824792,0,0x0,8
tick,0x7ffc909efd34,237840062,0,0x0,8
tick,0x7ffc909efd34,237855719,0,0x0,8
tick,0x7ffc909efd34,237871030,0,0x0,8
tick,0x7ffc909efd34,237886693,0,0x0,8
tick,0x7ffc909efd34,237902187,0,0x0,8
tick,0x7ffc909efd34,237917549,0,0x0,8
tick,0x7ffc909efd34,237932738,0,0x0,8
tick,0x7ffc909efd34,237948735,0,0x0,8
tick,0x7ffc909efd34,237964911,0,0x0,8
tick,0x7ffc909efd34,237980382,0,0x0,8
tick,0x7ffc909efd34,237995935,0,0x0,8
tick,0x7ffc909efd34,238011699,0,0x0,8
tick,0x7ffc909efd34,238027078,0,0x0,8
tick,0x7ffc909efd34,238042739,0,0x0,8
tick,0x7ffc909efd34,238058390,0,0x0,8
tick,0x7ffc909efd34,238074547,0,0x0,8
tick,0x7ffc909efd34,238090109,0,0x0,8
tick,0x7ffc909efd34,238105807,0,0x0,8
tick,0x7ffc909efd34,238120897,0,0x0,8
tick,0x7ffc909efd34,238136458,0,0x0,8
tick,0x7ffc909efd34,238151884,0,0x0,8
tick,0x7ffc909efd34,238167374,0,0x0,8
tick,0x7ffc909efd34,238183114,0,0x0,8
tick,0x7ffc909efd34,238198302,0,0x0,8
tick,0x7ffc909efd34,238214508,0,0x0,8
tick,0x7ffc909efd34,238230134,0,0x0,8
tick,0x7ffc909efd34,238245785,0,0x0,8
tick,0x7ffc909efd34,238261637,0,0x0,8
tick,0x7ffc909efd34,238276856,0,0x0,8
tick,0x7ffc909efd34,238292046,0,0x0,8
tick,0x7ffc909efd34,238307608,0,0x0,8
tick,0x7ffc909efd34,238323371,0,0x0,8
tick,0x7ffc909efd34,238338777,0,0x0,8
tick,0x7ffc909efd34,238354567,0,0x0,8
tick,0x7ffc909efd34,238370521,0,0x0,8
tick,0x7ffc909efd34,238385831,0,0x0,8
tick,0x7ffc909efd34,238401342,0,0x0,8
tick,0x7ffc909efd34,238416988,0,0x0,8
tick,0x7ffc909efd34,238432287,0,0x0,8
tick,0x7ffc909efd34,238448032,0,0x0,8
tick,0x7ffc909efd34,238463187,0,0x0,8
tick,0x7ffc909efd34,238479089,0,0x0,8
tick,0x7ffc909efd34,238494357,0,0x0,8
tick,0x7ffc909efd34,238509376,0,0x0,8
tick,0x7ffc909efd34,238524947,0,0x0,8
tick,0x7ffc909efd34,238540450,0,0x0,8
tick,0x7ffc909efd34,238555951,0,0x0,8
tick,0x7ffc909efd34,238571464,0,0x0,8
tick,0x7ffc909efd34,238587335,0,0x0,8
tick,0x7ffc909efd34,238603301,0,0x0,8
tick,0x7ffc909efd34,238619465,0,0x0,8
tick,0x7ffc909efd34,238634456,0,0x0,8
tick,0x7ffc909efd34,238650546,0,0x0,8
tick,0x7ffc909efd34,238665787,0,0x0,8
tick,0x7ffc909efd34,238682022,0,0x0,8
tick,0x7ffc909efd34,238697566,0,0x0,8
tick,0x7ffc909efd34,238713555,0,0x0,8
tick,0x7ffc909efd34,238729247,0,0x0,8
tick,0x7ffc909efd34,238744644,0,0x0,8
tick,0x7ffc909efd34,238759936,0,0x0,8
tick,0x7ffc909efd34,238775927,0,0x0,8
tick,0x7ffc909efd34,238791523,0,0x0,8
tick,0x7ffc909efd34,238806865,0,0x0,8
tick,0x7ffc909efd34,238822565,0,0x0,8
tick,0x7ffc909efd34,238838426,0,0x0,8
tick,0x7ffc909efd34,238853838,0,0x0,8
tick,0x7ffc909efd34,238869382,0,0x0,8
tick,0x7ffc909efd34,238884966,0,0x0,8
tick,0x7ffc909efd34,238901588,0,0x0,8
tick,0x7ffc909efd34,238916971,0,0x0,8
tick,0x7ffc909efd34,238932564,0,0x0,8
tick,0x7ffc909efd34,238948263,0,0x0,8
tick,0x7ffc909efd34,238963421,0,0x0,8
tick,0x7ffc909efd34,238978725,0,0x0,8
tick,0x7ffc909efd34,238994092,0,0x0,8
tick,0x7ffc909efd34,239009657,0,0x0,8
tick,0x7ffc909efd34,239025147,0,0x0,8
tick,0x7ffc909efd34,239041055,0,0x0,8
tick,0x7ffc909efd34,239056278,0,0x0,8
tick,0x7ffc909efd34,239072186,0,0x0,8
tick,0x7ffc909efd34,239087785,0,0x0,8
tick,0x7ffc909efd34,239103501,0,0x0,8
tick,0x7ffc909efd34,239119487,0,0x0,8
tick,0x7ffc909efd34,239135008,0,0x0,8
tick,0x7ffc909efd34,239151505,0,0x0,8
tick,0x7ffc909efd34,239167288,0,0x0,8
tick,0x7ffc909efd34,239183090,0,0x0,8
tick,0x7ffc909efd34,239198609,0,0x0,8
tick,0x7ffc909efd34,239214132,0,0x0,8
tick,0x7ffc909efd34,239229746,0,0x0,8
tick,0x7ffc909efd34,239245333,0,0x0,8
tick,0x7ffc909efd34,239260444,0,0x0,8
tick,0x7ffc909efd34,239275544,0,0x0,8
tick,0x7ffc909efd34,239290900,0,0x0,8
tick,0x7ffc909efd34,239306548,0,0x0,8
tick,0x7ffc909efd34,239322030,0,0x0,8
tick,0x7ffc909efd34,239337403,0,0x0,8
tick,0x7ffc909efd34,239353133,0,0x0,8
tick,0x7ffc909efd34,239368347,0,0x0,8
tick,0x7ffc909efd34,239383971,0,0x0,8
tick,0x7ffc909efd34,239400347,0,0x0,8
tick,0x7ffc909efd34,239415851,0,0x0,8
tick,0x7ffc909efd34,239431294,0,0x0,8
tick,0x7ffc909efd34,239446882,0,0x0,8
tick,0x7ffc909efd34,239462075,0,0x0,8
tick,0x7ffc909efd34,239478096,0,0x0,8
tick,0x7ffc909efd34,239493412,0,0x0,8
tick,0x7ffc909efd34,239509305,0,0x0,8
tick,0x7ffc909efd34,239524886,0,0x0,8
tick,0x7ffc909efd34,239540459,0,0x0,8
tick,0x7ffc909efd34,239556469,0,0x0,8
tick,0x7ffc909efd34,239571991,0,0x0,8
tick,0x7ffc909efd34,239587819,0,0x0,8
tick,0x7ffc909efd34,239603502,0,0x0,8
tick,0x7ffc909efd34,239619364,0,0x0,8
tick,0x7ffc909efd34,239634887,0,0x0,8
tick,0x7ffc909efd34,239650292,0,0x0,8
tick,0x7ffc909efd34,239665761,0,0x0,8
tick,0x7ffc909efd34,239681638,0,0x0,8
tick,0x7ffc909efd34,239697334,0,0x0,8
tick,0x7ffc909efd34,239712819,0,0x0,8
tick,0x7ffc909efd34,239728520,0,0x0,8
tick,0x7ffc909efd34,239744215,0,0x0,8
tick,0x7ffc909efd34,239760035,0,0x0,8
tick,0x7ffc909efd34,239776012,0,0x0,8
tick,0x7ffc909efd34,239790631,0,0x0,8
tick,0x7ffc909efd34,239806287,0,0x0,8
tick,0x7ffc909efd34,239822041,0,0x0,8
tick,0x7ffc909efd34,239837517,0,0x0,8
tick,0x7ffc909efd34,239852911,0,0x0,8
tick,0x7ffc909efd34,239868473,0,0x0,8
tick,0x7ffc909efd34,239883944,0,0x0,8
tick,0x7ffc909efd34,239900285,0,0x0,8
tick,0x7ffc909efd34,239916049,0,0x0,8
tick,0x7ffc909efd34,239931233,0,0x0,8
tick,0x7ffc909efd34,239946252,0,0x0,8
tick,0x7ffc909efd34,239961651,0,0x0,8
tick,0x7ffc909efd34,239976800,0,0x0,8
tick,0x7ffc909efd34,239992314,0,0x0,8
tick,0x7ffc909efd34,240007944,0,0x0,8
tick,0x7ffc909efd34,240023641,0,0x0,8
tick,0x7ffc909efd34,240039368,0,0x0,8
tick,0x7ffc909efd34,240055026,0,0x0,8
tick,0x7ffc909efd34,240070341,0,0x0,8
tick,0x7ffc909efd34,240085904,0,0x0,8
tick,0x7ffc909efd34,240101124,0,0x0,8
tick,0x7ffc909efd34,240116786,0,0x0,8
tick,0x7ffc909efd34,240132105,0,0x0,8
tick,0x7ffc909efd34,240147607,0,0x0,8
tick,0x7ffc909efd34,240162721,0,0x0,8
tick,0x7ffc909efd34,240178414,0,0x0,8
tick,0x7ffc909efd34,240193909,0,0x0,8
tick,0x7ffc909efd34,240210023,0,0x0,8
tick,0x7ffc909efd34,240225237,0,0x0,8
tick,0x7ffc909efd34,240240514,0,0x0,8
tick,0x7ffc909efd34,240256221,0,0x0,8
tick,0x7ffc909efd34,240271199,0,0x0,8
tick,0x7ffc909efd34,240286748,0,0x0,8
tick,0x7ffc909efd34,240302320,0,0x0,8
tick,0x7ffc909efd34,240318175,0,0x0,8
tick,0x7ffc909efd34,240333705,0,0x0,8
tick,0x7ffc909efd34,240349627,0,0x0,8
tick,0x7ffc909efd34,240365529,0,0x0,8
tick,0x7ffc909efd34,240380796,0,0x0,8
tick,0x7ffc909efd34,240396870,0,0x0,8
tick,0x7ffc909efd34,240412839,0,0x0,8
tick,0x7ffc909efd34,240428416,0,0x0,8
tick,0x7ffc909efd34,240444320,0,0x0,8
tick,0x7ffc909efd34,240459941,0,0x0,8
tick,0x7ffc909efd34,240475727,0,0x0,8
tick,0x7ffc909efd34,240490854,0,0x0,8
tick,0x7ffc909efd34,240506391,0,0x0,8
tick,0x7ffc909efd34,240522260,0,0x0,8
tick,0x7ffc909efd34,240537817,0,0x0,8
tick,0x7ffc909efd34,240553597,0,0x0,8
tick,0x7ffc909efd34,240569512,0,0x0,8
tick,0x7ffc909efd34,240585202,0,0x0,8
tick,0x7ffc909efd34,240601521,0,0x0,8
tick,0x7ffc909efd34,240617010,0,0x0,8
tick,0x7ffc909efd34,240633027,0,0x0,8
tick,0x7ffc909efd34,240648783,0,0x0,8
tick,0x7ffc909efd34,240664325,0,0x0,8
tick,0x7ffc909efd34,240680099,0,0x0,8
tick,0x7ffc909efd34,240695639,0,0x0,8
tick,0x7ffc909efd34,240711662,0,0x0,8
tick,0x7ffc909efd34,240726936,0,0x0,8
tick,0x7ffc909efd34,240742370,0,0x0,8
tick,0x7ffc909efd34,240758308,0,0x0,8
tick,0x7ffc909efd34,240773707,0,0x0,8
tick,0x7ffc909efd34,240788955,0,0x0,8
tick,0x7ffc909efd34,240804590,0,0x0,8
tick,0x7ffc909efd34,240819957,0,0x0,8
tick,0x7ffc909efd34,240835293,0,0x0,8
tick,0x7ffc909efd34,240851334,0,0x0,8
tick,0x7ffc909efd34,240867252,0,0x0,8
tick,0x7ffc909efd34,240882777,0,0x0,8
tick,0x7ffc909efd34,240898174,0,0x0,8
tick,0x7ffc909efd34,240913439,0,0x0,8
tick,0x7ffc909efd34,240929520,0,0x0,8
tick,0x7ffc909efd34,240945210,0,0x0,8
tick,0x7ffc909efd34,240961157,0,0x0,8
tick,0x7ffc909efd34,240977035,0,0x0,8
tick,0x7ffc909efd34,240992463,0,0x0,8
tick,0x7ffc909efd34,241007830,0,0x0,8
tick,0x7ffc909efd34,241023626,0,0x0,8
tick,0x7ffc909efd34,241039403,0,0x0,8
tick,0x7ffc909efd34,241054913,0,0x0,8
tick,0x7ffc909efd34,241070375,0,0x0,8
tick,0x7ffc909efd34,241086376,0,0x0,8
tick,0x7ffc909efd34,241101890,0,0x0,8
tick,0x7ffc909efd34,241117604,0,0x0,8
tick,0x7ffc909efd34,241133040,0,0x0,8
tick,0x7ffc909efd34,241149103,0,0x0,8
tick,0x7ffc909efd34,241164246,0,0x0,8
tick,0x7ffc909efd34,241179714,0,0x0,8
tick,0x7ffc909efd34,241195563,0,0x0,8
tick,0x7ffc909efd34,241210421,0,0x0,8
tick,0x7ffc909efd34,241225833,0,0x0,8
tick,0x7ffc909efd34,241241497,0,0x0,8
tick,0x7ffc909efd34,241256998,0,0x0,8
tick,0x7ffc909efd34,241272567,0,0x0,8
tick,0x7ffc909efd34,241288328,0,0x0,8
tick,0x7ffc909efd34,241303661,0,0x0,8
tick,0x7ffc909efd34,241319773,0,0x0,8
tick,0x7ffc909efd34,241335005,0,0x0,8
tick,0x7ffc909efd34,241351169,0,0x0,8
tick,0x7ffc909efd34,241366626,0,0x0,8
tick,0x7ffc909efd34,241381938,0,0x0,8
tick,0x7ffc909efd34,241398105,0,0x0,8
tick,0x7ffc909efd34,241413985,0,0x0,8
tick,0x7ffc909efd34,241429422,0,0x0,8
tick,0x7ffc909efd34,241444740,0,0x0,8
tick,0x7ffc909efd34,241460073,0,0x0,8
tick,0x7ffc909efd34,241475813,0,0x0,8
tick,0x7ffc909efd34,241491349,0,0x0,8
tick,0x7ffc909efd34,241506208,0,0x0,8
tick,0x7ffc909efd34,241521809,0,0x0,8
tick,0x7ffc909efd34,241537103,0,0x0,8
tick,0x7ffc909efd34,241552676,0,0x0,8
tick,0x7ffc909efd34,241568127,0,0x0,8
tick,0x7ffc909efd34,241583409,0,0x0,8
tick,0x7ffc909efd34,241598875,0,0x0,8
tick,0x7ffc909efd34,241614503,0,0x0,8
tick,0x7ffc909efd34,241630151,0,0x0,8
tick,0x7ffc909efd34,241645567,0,0x0,8
tick,0x7ffc909efd34,241661597,0,0x0,8
tick,0x7ffc909efd34,241677651,0,0x0,8
tick,0x7ffc909efd34,241693183,0,0x0,8
tick,0x7ffc909efd34,241709458,0,0x0,8
tick,0x7ffc909efd34,241725234,0,0x0,8
tick,0x7ffc909efd34,241741408,0,0x0,8
tick,0x7ffc909efd34,241756355,0,0x0,8
tick,0x7ffc909efd34,241771534,0,0x0,8
tick,0x7ffc909efd34,241787539,0,0x0,8
tick,0x7ffc909efd34,241803600,0,0x0,8
tick,0x7ffc909efd34,241819428,0,0x0,8
tick,0x7ffc909efd34,241834792,0,0x0,8
tick,0x7ffc909efd34,241850431,0,0x0,8
tick,0x7ffc909efd34,241865601,0,0x0,8
tick,0x7ffc909efd34,241881218,0,0x0,8
tick,0x7ffc909efd34,241896559,0,0x0,8
tick,0x7ffc909efd34,241912494,0,0x0,8
tick,0x7ffc909efd34,241928320,0,0x0,8
tick,0x7ffc909efd34,241943616,0,0x0,8
tick,0x7ffc909efd34,241959387,0,0x0,8
tick,0x7ffc909efd34,241975095,0,0x0,8
tick,0x7ffc909efd34,241990395,0,0x0,8
tick,0x7ffc909efd34,242005785,0,0x0,8
tick,0x7ffc909efd34,242022195,0,0x0,8
tick,0x7ffc909efd34,242038169,0,0x0,8
tick,0x7ffc909efd34,242054021,0,0x0,8
tick,0x7ffc909efd34,242069941,0,0x0,8
tick,0x7ffc909efd34,242086032,0,0x0,8
tick,0x7ffc909efd34,242101208,0,0x0,8
tick,0x7ffc909efd34,242116634,0,0x0,8
tick,0x7ffc909efd34,242131959,0,0x0,8
tick,0x7ffc909efd34,242147520,0,0x0,8
tick,0x7ffc909efd34,242162895,0,0x0,8
tick,0x7ffc909efd34,242178987,0,0x0,8
tick,0x7ffc909efd34,242195246,0,0x0,8
tick,0x7ffc909efd34,242209959,0,0x0,8
tick,0x7ffc909efd34,242225373,0,0x0,8
tick,0x7ffc909efd34,242240883,0,0x0,8
tick,0x7ffc909efd34,242256307,0,0x0,8
tick,0x7ffc909efd34,242271018,0,0x0,8
tick,0x7ffc909efd34,242286689,0,0x0,8
tick,0x7ffc909efd34,242302190,0,0x0,8
tick,0x7ffc909efd34,242317310,0,0x0,8
tick,0x7ffc909efd34,242332742,0,0x0,8
tick,0x7ffc909efd34,242348178,0,0x0,8
tick,0x7ffc909efd34,242363383,0,0x0,8
tick,0x7ffc909efd34,242378698,0,0x0,8
tick,0x7ffc909efd34,242393962,0,0x0,8
tick,0x7ffc909efd34,242409482,0,0x0,8
tick,0x7ffc909efd34,242425103,0,0x0,8
tick,0x7ffc909efd34,242440448,0,0x0,8
tick,0x7ffc909efd34,242456000,0,0x0,8
tick,0x7ffc909efd34,242471494,0,0x0,8
tick,0x7ffc909efd34,242487059,0,0x0,8
tick,0x7ffc909efd34,242502729,0,0x0,8
tick,0x7ffc909efd34,242518034,0,0x0,8
tick,0x7ffc909efd34,242533261,0,0x0,8
tick,0x7ffc909efd34,242548695,0,0x0,8
tick,0x7ffc909efd34,242564429,0,0x0,8
tick,0x7ffc909efd34,242579844,0,0x0,8
tick,0x7ffc909efd34,242595793,0,0x0,8
tick,0x7ffc909efd34,242611663,0,0x0,8
tick,0x7ffc909efd34,242626719,0,0x0,8
tick,0x7ffc909efd34,242642008,0,0x0,8
tick,0x7ffc909efd34,242657600,0,0x0,8
tick,0x7ffc909efd34,242672779,0,0x0,8
tick,0x7ffc909efd34,242688656,0,0x0,8
tick,0x7ffc909efd34,242703839,0,0x0,8
tick,0x7ffc909efd34,242719661,0,0x0,8
tick,0x7ffc909efd34,242735077,0,0x0,8
tick,0x7ffc909efd34,242750264,0,0x0,8
tick,0x7ffc909efd34,242766432,0,0x0,8
tick,0x7ffc909efd34,242782364,0,0x0,8
tick,0x7ffc909efd34,242798198,0,0x0,8
tick,0x7ffc909efd34,242813327,0,0x0,8
tick,0x7ffc909efd34,242828713,0,0x0,8
tick,0x7ffc909efd34,242844808,0,0x0,8
tick,0x7ffc909efd34,242859980,0,0x0,8
tick,0x7ffc909efd34,242875429,0,0x0,8
tick,0x7ffc909efd34,242891567,0,0x0,8
tick,0x7ffc909efd34,242906950,0,0x0,8
tick,0x7ffc909efd34,242922259,0,0x0,8
tick,0x7ffc909efd34,242937529,0,0x0,8
tick,0x7ffc909efd34,242953498,0,0x0,8
tick,0x7ffc909efd34,242969071,0,0x0,8
tick,0x7ffc909efd34,242984757,0,0x0,8
tick,0x7ffc909efd34,243000375,0,0x0,8
tick,0x7ffc909efd34,243016150,0,0x0,8
tick,0x7ffc909efd34,243032381,0,0x0,8
tick,0x7ffc909efd34,243048812,0,0x0,8
tick,0x7ffc909efd34,243064457,0,0x0,8
tick,0x7ffc909efd34,243079670,0,0x0,8
tick,0x7ffc909efd34,243094923,0,0x0,8
tick,0x7ffc909efd34,243110652,0,0x0,8
tick,0x7ffc909efd34,243126042,0,0x0,8
tick,0x7ffc909efd34,243142329,0,0x0,8
tick,0x7ffc909efd34,243157660,0,0x0,8
tick,0x7ffc909efd34,243173435,0,0x0,8
tick,0x7ffc909efd34,243189105,0,0x0,8
tick,0x7ffc909efd34,243204505,0,0x0,8
tick,0x7ffc909efd34,243219811,0,0x0,8
tick,0x7ffc909efd34,243235931,0,0x0,8
tick,0x7ffc909efd34,243251570,0,0x0,8
tick,0x7ffc909efd34,243266616,0,0x0,8
tick,0x7ffc909efd34,243281889,0,0x0,8
tick,0x7ffc909efd34,243297287,0,0x0,8
tick,0x7ffc909efd34,243313846,0,0x0,8
tick,0x7ffc909efd34,243328694,0,0x0,8
tick,0x7ffc909efd34,243344579,0,0x0,8
tick,0x7ffc909efd34,243360400,0,0x0,8
tick,0x7ffc909efd34,243376614,0,0x0,8
tick,0x7ffc909efd34,243392500,0,0x0,8
tick,0x7ffc909efd34,243408561,0,0x0,8
tick,0x7ffc909efd34,243424374,0,0x0,8
tick,0x7ffc909efd34,243439928,0,0x0,8
tick,0x7ffc909efd34,243455146,0,0x0,8
tick,0x7ffc909efd34,243470875,0,0x0,8
tick,0x7ffc909efd34,243486275,0,0x0,8
tick,0x7ffc909efd34,243502355,0,0x0,8
tick,0x7ffc909efd34,243518452,0,0x0,8
tick,0x7ffc909efd34,243534656,0,0x0,8
tick,0x7ffc909efd34,243550113,0,0x0,8
tick,0x7ffc909efd34,243565907,0,0x0,8
tick,0x7ffc909efd34,243581873,0,0x0,8
tick,0x7ffc909efd34,243596989,0,0x0,8
tick,0x7ffc909efd34,243611935,0,0x0,8
tick,0x7ffc909efd34,243627944,0,0x0,8
tick,0x7ffc909efd34,243643374,0,0x0,8
tick,0x7ffc909efd34,243658932,0,0x0,8
tick,0x7ffc909efd34,243675150,0,0x0,8
tick,0x7ffc909efd34,243690246,0,0x0,8
tick,0x7ffc909efd34,243705846,0,0x0,8
tick,0x7ffc909efd34,243721239,0,0x0,8
tick,0x7ffc909efd34,243736638,0,0x0,8
tick,0x7ffc909efd34,243752142,0,0x0,8
tick,0x7ffc909efd34,243767897,0,0x0,8
tick,0x7ffc909efd34,243783585,0,0x0,8
tick,0x7ffc909efd34,243799160,0,0x0,8
tick,0x7ffc909efd34,243814533,0,0x0,8
tick,0x7ffc909efd34,243829876,0,0x0,8
tick,0x7ffc909efd34,243845368,0,0x0,8
tick,0x7ffc909efd34,243861129,0,0x0,8
tick,0x7ffc909efd34,243876837,0,0x0,8
tick,0x7ffc909efd34,243892343,0,0x0,8
tick,0x7ffc909efd34,243907756,0,0x0,8
tick,0x7ffc909efd34,243923273,0,0x0,8
tick,0x7ffc909efd34,243938408,0,0x0,8
tick,0x7ffc909efd34,243953685,0,0x0,8
tick,0x7ffc909efd34,243969274,0,0x0,8
tick,0x7ffc909efd34,243984957,0,0x0,8
tick,0x7ffc909efd34,244001138,0,0x0,8
tick,0x7ffc909efd34,244016637,0,0x0,8
tick,0x7ffc909efd34,244032115,0,0x0,8
tick,0x7ffc909efd34,244047519,0,0x0,8
tick,0x7ffc909efd34,244063096,0,0x0,8
tick,0x7ffc909efd34,244078527,0,0x0,8
tick,0x7ffc909efd34,244094167,0,0x0,8
tick,0x7ffc909efd34,244109779,0,0x0,8
tick,0x7ffc909efd34,244125310,0,0x0,8
tick,0x7ffc909efd34,244140946,0,0x0,8
tick,0x7ffc909efd34,244156148,0,0x0,8
tick,0x7ffc909efd34,244172182,0,0x0,8
tick,0x7ffc909efd34,244187747,0,0x0,8
tick,0x7ffc909efd34,244203342,0,0x0,8
tick,0x7ffc909efd34,244219290,0,0x0,8
tick,0x7ffc909efd34,244234214,0,0x0,8
tick,0x7ffc909efd34,244250521,0,0x0,8
tick,0x7ffc909efd34,244265723,0,0x0,8
tick,0x7ffc909efd34,244280929,0,0x0,8
tick,0x7ffc909efd34,244296539,0,0x0,8
tick,0x7ffc909efd34,244311987,0,0x0,8
tick,0x7ffc909efd34,244327983,0,0x0,8
tick,0x7ffc909efd34,244342795,0,0x0,8
tick,0x7ffc909efd34,244358477,0,0x0,8
tick,0x7ffc909efd34,244374071,0,0x0,8
tick,0x7ffc909efd34,244390177,0,0x0,8
tick,0x7ffc909efd34,244406288,0,0x0,8
tick,0x7ffc909efd34,244421437,0,0x0,8
tick,0x7ffc909efd34,244437614,0,0x0,8
tick,0x7ffc909efd34,244453188,0,0x0,8
tick,0x7ffc909efd34,244469076,0,0x0,8
tick,0x7ffc909efd34,244484696,0,0x0,8
tick,0x7ffc909efd34,244501299,0,0x0,8
tick,0x7ffc909efd34,244516617,0,0x0,8
tick,0x7ffc909efd34,244532188,0,0x0,8
tick,0x7ffc909efd34,244547423,0,0x0,8
tick,0x7ffc909efd34,244563112,0,0x0,8
tick,0x7ffc909efd34,244579297,0,0x0,8
tick,0x7ffc909efd34,244594970,0,0x0,8
tick,0x7ffc909efd34,244610876,0,0x0,8
tick,0x7ffc909efd34,244626781,0,0x0,8
tick,0x7ffc909efd34,244642807,0,0x0,8
tick,0x7ffc909efd34,244658705,0,0x0,8
tick,0x7ffc909efd34,244675285,0,0x0,8
tick,0x7ffc909efd34,244689821,0,0x0,8
tick,0x7ffc909efd34,244745564,0,0x0,8
tick,0x7ffc909efd34,244781753,0,0x0,8
tick,0x7ffc909efd34,244785600,0,0x0,8
tick,0x7ffc909efd34,244800962,0,0x0,8
tick,0x7ffc909efd34,244819651,0,0x0,8
tick,0x7ffc909efd34,244832780,0,0x0,8
tick,0x7ffc909efd34,244848865,0,0x0,8
tick,0x7ffc909efd34,244863815,0,0x0,8
tick,0x7ffc909efd34,244879834,0,0x0,8
tick,0x7ffc909efd34,244895769,0,0x0,8
tick,0x7ffc909efd34,244911206,0,0x0,8
tick,0x7ffc909efd34,244926431,0,0x0,8
tick,0x7ffc909efd34,244941767,0,0x0,8
tick,0x7ffc909efd34,244957718,0,0x0,8
tick,0x7ffc909efd34,244973576,0,0x0,8
tick,0x7ffc909efd34,244989596,0,0x0,8
tick,0x7ffc909efd34,245005808,0,0x0,8
tick,0x7ffc909efd34,245020776,0,0x0,8
tick,0x7ffc909efd34,245036424,0,0x0,8
tick,0x7ffc909efd34,245051913,0,0x0,8
tick,0x7ffc909efd34,245067387,0,0x0,8
tick,0x7ffc909efd34,245083066,0,0x0,8
tick,0x7ffc909efd34,245099031,0,0x0,8
tick,0x7ffc909efd34,245114489,0,0x0,8
tick,0x7ffc909efd34,245129916,0,0x0,8
tick,0x7ffc909efd34,245146166,0,0x0,8
tick,0x7ffc909efd34,245162073,0,0x0,8
tick,0x7ffc909efd34,245177882,0,0x0,8
tick,0x7ffc909efd34,245193680,0,0x0,8
tick,0x7ffc909efd34,245209629,0,0x0,8
tick,0x7ffc909efd34,245225205,0,0x0,8
tick,0x7ffc909efd34,245240456,0,0x0,8
tick,0x7ffc909efd34,245256056,0,0x0,8
tick,0x7ffc909efd34,245272015,0,0x0,8
tick,0x7ffc909efd34,245288116,0,0x0,8
tick,0x7ffc909efd34,245302864,0,0x0,8
tick,0x7ffc909efd34,245318492,0,0x0,8
tick,0x7ffc909efd34,245334153,0,0x0,8
tick,0x7ffc909efd34,245349788,0,0x0,8
tick,0x7ffc909efd34,245365257,0,0x0,8
tick,0x7ffc909efd34,245380567,0,0x0,8
tick,0x7ffc909efd34,245396108,0,0x0,8
tick,0x7ffc909efd34,245411560,0,0x0,8
tick,0x7ffc909efd34,245427938,0,0x0,8
tick,0x7ffc909efd34,245442673,0,0x0,8
tick,0x7ffc909efd34,245458257,0,0x0,8
tick,0x7ffc909efd34,245473425,0,0x0,8
tick,0x7ffc909efd34,245488844,0,0x0,8
tick,0x7ffc909efd34,245504214,0,0x0,8
tick,0x7ffc909efd34,245519400,0,0x0,8
tick,0x7ffc909efd34,245535057,0,0x0,8
tick,0x7ffc909efd34,245551249,0,0x0,8
tick,0x7ffc909efd34,245567321,0,0x0,8
tick,0x7ffc909efd34,245583536,0,0x0,8
tick,0x7ffc909efd34,245598921,0,0x0,8
tick,0x7ffc909efd34,245614845,0,0x0,8
tick,0x7ffc909efd34,245630240,0,0x0,8
tick,0x7ffc909efd34,245645803,0,0x0,8
tick,0x7ffc909efd34,245661277,0,0x0,8
tick,0x7ffc909efd34,245676715,0,0x0,8
tick,0x7ffc909efd34,245692528,0,0x0,8
tick,0x7ffc909efd34,245707919,0,0x0,8
tick,0x7ffc909efd34,245723156,0,0x0,8
tick,0x7ffc909efd34,245739122,0,0x0,8
tick,0x7ffc909efd34,245754461,0,0x0,8
tick,0x7ffc909efd34,245769922,0,0x0,8
tick,0x7ffc909efd34,245785777,0,0x0,8
tick,0x7ffc909efd34,245801021,0,0x0,8
tick,0x7ffc909efd34,245816304,0,0x0,8
tick,0x7ffc909efd34,245832417,0,0x0,8
tick,0x7ffc909efd34,245847554,0,0x0,8
tick,0x7ffc909efd34,245863686,0,0x0,8
tick,0x7ffc909efd34,245879237,0,0x0,8
tick,0x7ffc909efd34,245894866,0,0x0,8
tick,0x7ffc909efd34,245911083,0,0x0,8
tick,0x7ffc909efd34,245925725,0,0x0,8
tick,0x7ffc909efd34,245941318,0,0x0,8
tick,0x7ffc909efd34,245956924,0,0x0,8
tick,0x7ffc909efd34,245972232,0,0x0,8
tick,0x7ffc909efd34,245987865,0,0x0,8
tick,0x7ffc909efd34,246003051,0,0x0,8
tick,0x7ffc909efd34,246019397,0,0x0,8
tick,0x7ffc909efd34,246034664,0,0x0,8
tick,0x7ffc909efd34,246050895,0,0x0,8
tick,0x7ffc909efd34,246066389,0,0x0,8
tick,0x7ffc909efd34,246081972,0,0x0,8
tick,0x7ffc909efd34,246097903,0,0x0,8
tick,0x7ffc909efd34,246113525,0,0x0,8
tick,0x7ffc909efd34,246129614,0,0x0,8
tick,0x7ffc909efd34,246144902,0,0x0,8
tick,0x7ffc909efd34,246160533,0,0x0,8
tick,0x7ffc909efd34,246175750,0,0x0,8
tick,0x7ffc909efd34,246191589,0,0x0,8
tick,0x7ffc909efd34,246207015,0,0x0,8
tick,0x7ffc909efd34,246222387,0,0x0,8
tick,0x7ffc909efd34,246237674,0,0x0,8
tick,0x7ffc909efd34,246252794,0,0x0,8
tick,0x7ffc909efd34,246268228,0,0x0,8
tick,0x7ffc909efd34,246283496,0,0x0,8
tick,0x7ffc909efd34,246299518,0,0x0,8
tick,0x7ffc909efd34,246315781,0,0x0,8
tick,0x7ffc909efd34,246332024,0,0x0,8
tick,0x7ffc909efd34,246347959,0,0x0,8
tick,0x7ffc909efd34,246362524,0,0x0,8
tick,0x7ffc909efd34,246377909,0,0x0,8
tick,0x7ffc909efd34,246393278,0,0x0,8
tick,0x7ffc909efd34,246408797,0,0x0,8
tick,0x7ffc909efd34,246425151,0,0x0,8
tick,0x7ffc909efd34,246440553,0,0x0,8
tick,0x7ffc909efd34,246456779,0,0x0,8
tick,0x7ffc909efd34,246472307,0,0x0,8
tick,0x7ffc909efd34,246488076,0,0x0,8
tick,0x7ffc909efd34,246503671,0,0x0,8
tick,0x7ffc909efd34,246519407,0,0x0,8
tick,0x7ffc909efd34,246535168,0,0x0,8
tick,0x7ffc909efd34,246551383,0,0x0,8
tick,0x7ffc909efd34,246567670,0,0x0,8
tick,0x7ffc909efd34,246582094,0,0x0,8
tick,0x7ffc909efd34,246597674,0,0x0,8
tick,0x7ffc909efd34,246613004,0,0x0,8
tick,0x7ffc909efd34,246628230,0,0x0,8
tick,0x7ffc909efd34,246643879,0,0x0,8
tick,0x7ffc909efd34,246659482,0,0x0,8
tick,0x7ffc909efd34,246675445,0,0x0,8
tick,0x7ffc909efd34,246690896,0,0x0,8
tick,0x7ffc909efd34,246706598,0,0x0,8
tick,0x7ffc909efd34,246722090,0,0x0,8
tick,0x7ffc909efd34,246737559,0,0x0,8
tick,0x7ffc909efd34,246752795,0,0x0,8
tick,0x7ffc909efd34,246768259,0,0x0,8
tick,0x7ffc909efd34,246784044,0,0x0,8
tick,0x7ffc909efd34,246800260,0,0x0,8
tick,0x7ffc909efd34,246816031,0,0x0,8
tick,0x7ffc909efd34,246831847,0,0x0,8
tick,0x7ffc909efd34,246847290,0,0x0,8
tick,0x7ffc909efd34,246862745,0,0x0,8
tick,0x7ffc909efd34,246878256,0,0x0,8
tick,0x7ffc909efd34,246893733,0,0x0,8
tick,0x7ffc909efd34,246909006,0,0x0,8
tick,0x7ffc909efd34,246924913,0,0x0,8
tick,0x7ffc909efd34,246940168,0,0x0,8
tick,0x7ffc909efd34,246955976,0,0x0,8
tick,0x7ffc909efd34,246971253,0,0x0,8
tick,0x7ffc909efd34,246986679,0,0x0,8
tick,0x7ffc909efd34,247002643,0,0x0,8
tick,0x7ffc909efd34,247018427,0,0x0,8
tick,0x7ffc909efd34,247033787,0,0x0,8
tick,0x7ffc909efd34,247048758,0,0x0,8
tick,0x7ffc909efd34,247063808,0,0x0,8
tick,0x7ffc909efd34,247079263,0,0x0,8
tick,0x7ffc909efd34,247095343,0,0x0,8
tick,0x7ffc909efd34,247110747,0,0x0,8
tick,0x7ffc909efd34,247126299,0,0x0,8
tick,0x7ffc909efd34,247142344,0,0x0,8
tick,0x7ffc909efd34,247158073,0,0x0,8
tick,0x7ffc909efd34,247173746,0,0x0,8
tick,0x7ffc909efd34,247189401,0,0x0,8
tick,0x7ffc909efd34,247204985,0,0x0,8
tick,0x7ffc909efd34,247220642,0,0x0,8
tick,0x7ffc909efd34,247235913,0,0x0,8
tick,0x7ffc909efd34,247251340,0,0x0,8
tick,0x7ffc909efd34,247266599,0,0x0,8
tick,0x7ffc909efd34,247282000,0,0x0,8
tick,0x7ffc909efd34,247297221,0,0x0,8
tick,0x7ffc909efd34,247313273,0,0x0,8
tick,0x7ffc909efd34,247329498,0,0x0,8
tick,0x7ffc909efd34,247344844,0,0x0,8
tick,0x7ffc909efd34,247360435,0,0x0,8
tick,0x7ffc909efd34,247375547,0,0x0,8
tick,0x7ffc909efd34,247391164,0,0x0,8
tick,0x7ffc909efd34,247406862,0,0x0,8
tick,0x7ffc909efd34,247422310,0,0x0,8
tick,0x7ffc909efd34,247437648,0,0x0,8
tick,0x7ffc909efd34,247453278,0,0x0,8
tick,0x7ffc909efd34,247469213,0,0x0,8
tick,0x7ffc909efd34,247484840,0,0x0,8
tick,0x7ffc909efd34,247499946,0,0x0,8
tick,0x7ffc909efd34,247515237,0,0x0,8
tick,0x7ffc909efd34,247530573,0,0x0,8
tick,0x7ffc909efd34,247546173,0,0x0,8
tick,0x7ffc909efd34,247562520,0,0x0,8
tick,0x7ffc909efd34,247577426,0,0x0,8
tick,0x7ffc909efd34,247592769,0,0x0,8
tick,0x7ffc909efd34,247608357,0,0x0,8
tick,0x7ffc909efd34,247624205,0,0x0,8
tick,0x7ffc909efd34,247640175,0,0x0,8
tick,0x7ffc909efd34,247655802,0,0x0,8
tick,0x7ffc909efd34,247671015,0,0x0,8
tick,0x7ffc909efd34,247686479,0,0x0,8
tick,0x7ffc909efd34,247701790,0,0x0,8
tick,0x7ffc909efd34,247717773,0,0x0,8
tick,0x7ffc909efd34,247733294,0,0x0,8
tick,0x7ffc909efd34,247748440,0,0x0,8
tick,0x7ffc909efd34,247763987,0,0x0,8
tick,0x7ffc909efd34,247779310,0,0x0,8
tick,0x7ffc909efd34,247794979,0,0x0,8
tick,0x7ffc909efd34,247810712,0,0x0,8
tick,0x7ffc909efd34,247826406,0,0x0,8
tick,0x7ffc909efd34,247842400,0,0x0,8
tick,0x7ffc909efd34,247858169,0,0x0,8
tick,0x7ffc909efd34,247874042,0,0x0,8
tick,0x7ffc909efd34,247890234,0,0x0,8
tick,0x7ffc909efd34,247906133,0,0x0,8
tick,0x7ffc909efd34,247921530,0,0x0,8
tick,0x7ffc909efd34,247937204,0,0x0,8
tick,0x7ffc909efd34,247953855,0,0x0,8
tick,0x7ffc909efd34,247969127,0,0x0,8
tick,0x7ffc909efd34,247984665,0,0x0,8
tick,0x7ffc909efd34,247999699,0,0x0,8
tick,0x7ffc909efd34,248016045,0,0x0,8
tick,0x7ffc909efd34,248031457,0,0x0,8
tick,0x7ffc909efd34,248047176,0,0x0,8
tick,0x7ffc909efd34,248063395,0,0x0,8
tick,0x7ffc909efd34,248078592,0,0x0,8
tick,0x7ffc909efd34,248094569,0,0x0,8
tick,0x7ffc909efd34,248110012,0,0x0,8
tick,0x7ffc909efd34,248125240,0,0x0,8
tick,0x7ffc909efd34,248140706,0,0x0,8
tick,0x7ffc909efd34,248156192,0,0x0,8
tick,0x7ffc909efd34,248171953,0,0x0,8
tick,0x7ffc909efd34,248187694,0,0x0,8
tick,0x7ffc909efd34,248203341,0,0x0,8
tick,0x7ffc909efd34,248219519,0,0x0,8
tick,0x7ffc909efd34,248234723,0,0x0,8
tick,0x7ffc909efd34,248250415,0,0x0,8
tick,0x7ffc909efd34,248266410,0,0x0,8
tick,0x7ffc909efd34,248282590,0,0x0,8
tick,0x7ffc909efd34,248298531,0,0x0,8
tick,0x7ffc909efd34,248314000,0,0x0,8
tick,0x7ffc909efd34,248329586,0,0x0,8
tick,0x7ffc909efd34,248345401,0,0x0,8
tick,0x7ffc909efd34,248361340,0,0x0,8
tick,0x7ffc909efd34,248377311,0,0x0,8
tick,0x7ffc909efd34,248392343,0,0x0,8
tick,0x7ffc909efd34,248408250,0,0x0,8
tick,0x7ffc909efd34,248423772,0,0x0,8
tick,0x7ffc909efd34,248439831,0,0x0,8
tick,0x7ffc909efd34,248455673,0,0x0,8
tick,0x7ffc909efd34,248471831,0,0x0,8
tick,0x7ffc909efd34,248486554,0,0x0,8
tick,0x7ffc909efd34,248501668,0,0x0,8
tick,0x7ffc909efd34,248517072,0,0x0,8
tick,0x7ffc909efd34,248532708,0,0x0,8
tick,0x7ffc909efd34,248548244,0,0x0,8
tick,0x7ffc909efd34,248563756,0,0x0,8
tick,0x7ffc909efd34,248578827,0,0x0,8
tick,0x7ffc909efd34,248594870,0,0x0,8
tick,0x7ffc909efd34,248610183,0,0x0,8
tick,0x7ffc909efd34,248625554,0,0x0,8
tick,0x7ffc909efd34,248640980,0,0x0,8
tick,0x7ffc909efd34,248656960,0,0x0,8
tick,0x7ffc909efd34,248673070,0,0x0,8
tick,0x7ffc909efd34,248689034,0,0x0,8
tick,0x7ffc909efd34,248706297,0,0x0,8
tick,0x7ffc909efd34,248721101,0,0x0,8
tick,0x7ffc909efd34,248736033,0,0x0,8
tick,0x7ffc909efd34,248752012,0,0x0,8
tick,0x7ffc909efd34,248768076,0,0x0,8
tick,0x7ffc909efd34,248783980,0,0x0,8
tick,0x7ffc909efd34,248800042,0,0x0,8
tick,0x7ffc909efd34,248816008,0,0x0,8
tick,0x7ffc909efd34,248832135,0,0x0,8
tick,0x7ffc909efd34,248848094,0,0x0,8
tick,0x7ffc909efd34,248863557,0,0x0,8
tick,0x7ffc909efd34,248878848,0,0x0,8
tick,0x7ffc909efd34,248895074,0,0x0,8
tick,0x7ffc909efd34,248910640,0,0x0,8
tick,0x7ffc909efd34,248925644,0,0x0,8
tick,0x7ffc909efd34,248941134,0,0x0,8
tick,0x7ffc909efd34,248956990,0,0x0,8
tick,0x7ffc909efd34,248972736,0,0x0,8
tick,0x7ffc909efd34,248988546,0,0x0,8
tick,0x7ffc909efd34,249003897,0,0x0,8
tick,0x7ffc909efd34,249019301,0,0x0,8
tick,0x7ffc909efd34,249034741,0,0x0,8
tick,0x7ffc909efd34,249050225,0,0x0,8
tick,0x7ffc909efd34,249066257,0,0x0,8
tick,0x7ffc909efd34,249081203,0,0x0,8
tick,0x7ffc909efd34,249096698,0,0x0,8
tick,0x7ffc909efd34,249112702,0,0x0,8
tick,0x7ffc909efd34,249127826,0,0x0,8
tick,0x7ffc909efd34,249143377,0,0x0,8
tick,0x7ffc909efd34,249159359,0,0x0,8
tick,0x7ffc909efd34,249174908,0,0x0,8
tick,0x7ffc909efd34,249190316,0,0x0,8
tick,0x7ffc909efd34,249205849,0,0x0,8
tick,0x7ffc909efd34,249221482,0,0x0,8
tick,0x7ffc909efd34,249236628,0,0x0,8
tick,0x7ffc909efd34,249252138,0,0x0,8
tick,0x7ffc909efd34,249267965,0,0x0,8
tick,0x7ffc909efd34,249283313,0,0x0,8
tick,0x7ffc909efd34,249299630,0,0x0,8
tick,0x7ffc909efd34,249315623,0,0x0,8
tick,0x7ffc909efd34,249331083,0,0x0,8
tick,0x7ffc909efd34,249346301,0,0x0,8
tick,0x7ffc909efd34,249362476,0,0x0,8
tick,0x7ffc909efd34,249378019,0,0x0,8
tick,0x7ffc909efd34,249393343,0,0x0,8
tick,0x7ffc909efd34,249408792,0,0x0,8
tick,0x7ffc909efd34,249424743,0,0x0,8
tick,0x7ffc909efd34,249440060,0,0x0,8
tick,0x7ffc909efd34,249455973,0,0x0,8
tick,0x7ffc909efd34,249471672,0,0x0,8
tick,0x7ffc909efd34,249487923,0,0x0,8
tick,0x7ffc909efd34,249503694,0,0x0,8
tick,0x7ffc909efd34,249519626,0,0x0,8
tick,0x7ffc909efd34,249533688,0,0x0,8
tick,0x7ffc909efd34,249549803,0,0x0,8
tick,0x7ffc909efd34,249564890,0,0x0,8
tick,0x7ffc909efd34,249579923,0,0x0,8
tick,0x7ffc909efd34,249595944,0,0x0,8
tick,0x7ffc909efd34,249611696,0,0x0,8
tick,0x7ffc909efd34,249627450,0,0x0,8
tick,0x7ffc909efd34,249643878,0,0x0,8
tick,0x7ffc909efd34,249659131,0,0x0,8
tick,0x7ffc909efd34,249674382,0,0x0,8
tick,0x7ffc909efd34,249689696,0,0x0,8
tick,0x7ffc909efd34,249705233,0,0x0,8
tick,0x7ffc909efd34,249720840,0,0x0,8
tick,0x7ffc909efd34,249736446,0,0x0,8
tick,0x7ffc909efd34,249752297,0,0x0,8
tick,0x7ffc909efd34,249767723,0,0x0,8
tick,0x7ffc909efd34,249782920,0,0x0,8
tick,0x7ffc909efd34,249798371,0,0x0,8
tick,0x7ffc909efd34,249813817,0,0x0,8
tick,0x7ffc909efd34,249829754,0,0x0,8
tick,0x7ffc909efd34,249845723,0,0x0,8
tick,0x7ffc909efd34,249861894,0,0x0,8
tick,0x7ffc909efd34,249877614,0,0x0,8
tick,0x7ffc909efd34,249893644,0,0x0,8
tick,0x7ffc909efd34,249908883,0,0x0,8
tick,0x7ffc909efd34,249924059,0,0x0,8
tick,0x7ffc909efd34,249940028,0,0x0,8
tick,0x7ffc909efd34,249955099,0,0x0,8
tick,0x7ffc909efd34,249970541,0,0x0,8
tick,0x7ffc909efd34,249985856,0,0x0,8
tick,0x7ffc909efd34,250001221,0,0x0,8
tick,0x7ffc909efd34,250016594,0,0x0,8
tick,0x7ffc909efd34,250031828,0,0x0,8
tick,0x7ffc909efd34,250047467,0,0x0,8
tick,0x7ffc909efd34,250063191,0,0x0,8
tick,0x7ffc909efd34,250079441,0,0x0,8
tick,0x7ffc909efd34,250095289,0,0x0,8
tick,0x7ffc909efd34,250110479,0,0x0,8
tick,0x7ffc909efd34,250126166,0,0x0,8
tick,0x7ffc909efd34,250141443,0,0x0,8
tick,0x7ffc909efd34,250157683,0,0x0,8
tick,0x7ffc909efd34,250172957,0,0x0,8
tick,0x7ffc909efd34,250187628,0,0x0,8
tick,0x7ffc909efd34,250203205,0,0x0,8
tick,0x7ffc909efd34,250218330,0,0x0,8
tick,0x7ffc909efd34,250233887,0,0x0,8
tick,0x7ffc909efd34,250250158,0,0x0,8
tick,0x7ffc909efd34,250265360,0,0x0,8
tick,0x7ffc909efd34,250280840,0,0x0,8
tick,0x7ffc909efd34,250296205,0,0x0,8
tick,0x7ffc909efd34,250311498,0,0x0,8
tick,0x7ffc909efd34,250327147,0,0x0,8
tick,0x7ffc909efd34,250343117,0,0x0,8
tick,0x7ffc909efd34,250358286,0,0x0,8
tick,0x7ffc909efd34,250373979,0,0x0,8
tick,0x7ffc909efd34,250389587,0,0x0,8
tick,0x7ffc909efd34,250405213,0,0x0,8
tick,0x7ffc909efd34,250420816,0,0x0,8
tick,0x7ffc909efd34,250436491,0,0x0,8
tick,0x7ffc909efd34,250452457,0,0x0,8
tick,0x7ffc909efd34,250468036,0,0x0,8
tick,0x7ffc909efd34,250484357,0,0x0,8
tick,0x7ffc909efd34,250499811,0,0x0,8
tick,0x7ffc909efd34,250515195,0,0x0,8
tick,0x7ffc909efd34,250530470,0,0x0,8
tick,0x7ffc909efd34,250546698,0,0x0,8
tick,0x7ffc909efd34,250562352,0,0x0,8
tick,0x7ffc909efd34,250577884,0,0x0,8
tick,0x7ffc909efd34,250593864,0,0x0,8
tick,0x7ffc909efd34,250609244,0,0x0,8
tick,0x7ffc909efd34,250624507,0,0x0,8
tick,0x7ffc909efd34,250639817,0,0x0,8
tick,0x7ffc909efd34,250655473,0,0x0,8
tick,0x7ffc909efd34,250670621,0,0x0,8
tick,0x7ffc909efd34,250686126,0,0x0,8
tick,0x7ffc909efd34,250701808,0,0x0,8
tick,0x7ffc909efd34,250717129,0,0x0,8
tick,0x7ffc909efd34,250732682,0,0x0,8
tick,0x7ffc909efd34,250748959,0,0x0,8
tick,0x7ffc909efd34,250764343,0,0x0,8
tick,0x7ffc909efd34,250780224,0,0x0,8
tick,0x7ffc909efd34,250795961,0,0x0,8
tick,0x7ffc909efd34,250811986,0,0x0,8
tick,0x7ffc909efd34,250827765,0,0x0,8
tick,0x7ffc909efd34,250843195,0,0x0,8
tick,0x7ffc909efd34,250858667,0,0x0,8
tick,0x7ffc909efd34,250874091,0,0x0,8
tick,0x7ffc909efd34,250890141,0,0x0,8
tick,0x7ffc909efd34,250905400,0,0x0,8
tick,0x7ffc909efd34,250921008,0,0x0,8
tick,0x7ffc909efd34,250936965,0,0x0,8
tick,0x7ffc909efd34,250952585,0,0x0,8
tick,0x7ffc909efd34,250967915,0,0x0,8
tick,0x7ffc909efd34,250983473,0,0x0,8
tick,0x7ffc909efd34,250998746,0,0x0,8
tick,0x7ffc909efd34,251014206,0,0x0,8
tick,0x7ffc909efd34,251029740,0,0x0,8
tick,0x7ffc909efd34,251044921,0,0x0,8
tick,0x7ffc909efd34,251060199,0,0x0,8
tick,0x7ffc909efd34,251075839,0,0x0,8
tick,0x7ffc909efd34,251091100,0,0x0,8
tick,0x7ffc909efd34,251106714,0,0x0,8
tick,0x7ffc909efd34,251122776,0,0x0,8
tick,0x7ffc909efd34,251138624,0,0x0,8
tick,0x7ffc909efd34,251154178,0,0x0,8
tick,0x7ffc909efd34,251169582,0,0x0,8
tick,0x7ffc909efd34,251185162,0,0x0,8
tick,0x7ffc909efd34,251200632,0,0x0,8
tick,0x7ffc909efd34,251215921,0,0x0,8
tick,0x7ffc909efd34,251231781,0,0x0,8
tick,0x7ffc909efd34,251247579,0,0x0,8
tick,0x7ffc909efd34,251263508,0,0x0,8
tick,0x7ffc909efd34,251279081,0,0x0,8
tick,0x7ffc909efd34,251294991,0,0x0,8
tick,0x7ffc909efd34,251310385,0,0x0,8
tick,0x7ffc909efd34,251325324,0,0x0,8
tick,0x7ffc909efd34,251340645,0,0x0,8
tick,0x7ffc909efd34,251356537,0,0x0,8
tick,0x7ffc909efd34,251371821,0,0x0,8
tick,0x7ffc909efd34,251387490,0,0x0,8
tick,0x7ffc909efd34,251403189,0,0x0,8
tick,0x7ffc909efd34,251418878,0,0x0,8
tick,0x7ffc909efd34,251434722,0,0x0,8
tick,0x7ffc909efd34,251450002,0,0x0,8
tick,0x7ffc909efd34,251465943,0,0x0,8
tick,0x7ffc909efd34,251481620,0,0x0,8
tick,0x7ffc909efd34,251497291,0,0x0,8
tick,0x7ffc909efd34,251513044,0,0x0,8
tick,0x7ffc909efd34,251528156,0,0x0,8
tick,0x7ffc909efd34,251544206,0,0x0,8
tick,0x7ffc909efd34,251559955,0,0x0,8
tick,0x7ffc909efd34,251574947,0,0x0,8
tick,0x7ffc909efd34,251590285,0,0x0,8
tick,0x7ffc909efd34,251605816,0,0x0,8
tick,0x7ffc909efd34,251621161,0,0x0,8
tick,0x7ffc909efd34,251636384,0,0x0,8
tick,0x7ffc909efd34,251651947,0,0x0,8
tick,0x7ffc909efd34,251667530,0,0x0,8
tick,0x7ffc909efd34,251683080,0,0x0,8
tick,0x7ffc909efd34,251699037,0,0x0,8
tick,0x7ffc909efd34,251714604,0,0x0,8
tick,0x7ffc909efd34,251729949,0,0x0,8
tick,0x7ffc909efd34,251745869,0,0x0,8
tick,0x7ffc909efd34,251761656,0,0x0,8
tick,0x7ffc909efd34,251777484,0,0x0,8
tick,0x7ffc909efd34,251793952,0,0x0,8
tick,0x7ffc909efd34,251808707,0,0x0,8
tick,0x7ffc909efd34,251824357,0,0x0,8
tick,0x7ffc909efd34,251840349,0,0x0,8
tick,0x7ffc909efd34,251856586,0,0x0,8
tick,0x7ffc909efd34,251872456,0,0x0,8
tick,0x7ffc909efd34,251888420,0,0x0,8
tick,0x7ffc909efd34,251903989,0,0x0,8
tick,0x7ffc909efd34,251919418,0,0x0,8
tick,0x7ffc909efd34,251935012,0,0x0,8
tick,0x7ffc909efd34,251951217,0,0x0,8
tick,0x7ffc909efd34,251967003,0,0x0,8
tick,0x7ffc909efd34,251982404,0,0x0,8
tick,0x7ffc909efd34,251997933,0,0x0,8
tick,0x7ffc909efd34,252013396,0,0x0,8
tick,0x7ffc909efd34,252029627,0,0x0,8
tick,0x7ffc909efd34,252045021,0,0x0,8
tick,0x7ffc909efd34,252060525,0,0x0,8
tick,0x7ffc909efd34,252076419,0,0x0,8
tick,0x7ffc909efd34,252092325,0,0x0,8
tick,0x7ffc909efd34,252108329,0,0x0,8
tick,0x7ffc909efd34,252123982,0,0x0,8
tick,0x7ffc909efd34,252140373,0,0x0,8
tick,0x7ffc909efd34,252155238,0,0x0,8
tick,0x7ffc909efd34,252171591,0,0x0,8
tick,0x7ffc909efd34,252187050,0,0x0,8
tick,0x7ffc909efd34,252202553,0,0x0,8
tick,0x7ffc909efd34,252218446,0,0x0,8
tick,0x7ffc909efd34,252234145,0,0x0,8
tick,0x7ffc909efd34,252250037,0,0x0,8
tick,0x7ffc909efd34,252265862,0,0x0,8
tick,0x7ffc909efd34,252281310,0,0x0,8
tick,0x7ffc909efd34,252297138,0,0x0,8
tick,0x7ffc909efd34,252312258,0,0x0,8
tick,0x7ffc909efd34,252328295,0,0x0,8
tick,0x7ffc909efd34,252343862,0,0x0,8
tick,0x7ffc909efd34,252359537,0,0x0,8
tick,0x7ffc909efd34,252375209,0,0x0,8
tick,0x7ffc909efd34,252390872,0,0x0,8
tick,0x7ffc909efd34,252406897,0,0x0,8
tick,0x7ffc909efd34,252422532,0,0x0,8
tick,0x7ffc909efd34,252438180,0,0x0,8
tick,0x7ffc909efd34,252453835,0,0x0,8
tick,0x7ffc909efd34,252469332,0,0x0,8
tick,0x7ffc909efd34,252484625,0,0x0,8
tick,0x7ffc909efd34,252500347,0,0x0,8
tick,0x7ffc909efd34,252515796,0,0x0,8
tick,0x7ffc909efd34,252531317,0,0x0,8
tick,0x7ffc909efd34,252547111,0,0x0,8
tick,0x7ffc909efd34,252562343,0,0x0,8
tick,0x7ffc909efd34,252577885,0,0x0,8
tick,0x7ffc909efd34,252593870,0,0x0,8
tick,0x7ffc909efd34,252609308,0,0x0,8
tick,0x7ffc909efd34,252625000,0,0x0,8
tick,0x7ffc909efd34,252641510,0,0x0,8
tick,0x7ffc909efd34,252656280,0,0x0,8
tick,0x7ffc909efd34,252672041,0,0x0,8
tick,0x7ffc909efd34,252687830,0,0x0,8
tick,0x7ffc909efd34,252703580,0,0x0,8
tick,0x7ffc909efd34,252719246,0,0x0,8
tick,0x7ffc909efd34,252734783,0,0x0,8
tick,0x7ffc909efd34,252750953,0,0x0,8
tick,0x7ffc909efd34,252766405,0,0x0,8
tick,0x7ffc909efd34,252782037,0,0x0,8
tick,0x7ffc909efd34,252798205,0,0x0,8
tick,0x7ffc909efd34,252813693,0,0x0,8
tick,0x7ffc909efd34,252830025,0,0x0,8
tick,0x7ffc909efd34,252845896,0,0x0,8
tick,0x7ffc909efd34,252861454,0,0x0,8
tick,0x7ffc909efd34,252877011,0,0x0,8
tick,0x7ffc909efd34,252892501,0,0x0,8
tick,0x7ffc909efd34,252907776,0,0x0,8
tick,0x7ffc909efd34,252923678,0,0x0,8
tick,0x7ffc909efd34,252939231,0,0x0,8
tick,0x7ffc909efd34,252954576,0,0x0,8
tick,0x7ffc909efd34,252970133,0,0x0,8
tick,0x7ffc909efd34,252986051,0,0x0,8
tick,0x7ffc909efd34,253001739,0,0x0,8
tick,0x7ffc909efd34,253017233,0,0x0,8
tick,0x7ffc909efd34,253032835,0,0x0,8
tick,0x7ffc909efd34,253048714,0,0x0,8
tick,0x7ffc909efd34,253064526,0,0x0,8
tick,0x7ffc909efd34,253080018,0,0x0,8
tick,0x7ffc909efd34,253095215,0,0x0,8
tick,0x7ffc909efd34,253110499,0,0x0,8
tick,0x7ffc909efd34,253125897,0,0x0,8
tick,0x7ffc909efd34,253141367,0,0x0,8
tick,0x7ffc909efd34,253156912,0,0x0,8
tick,0x7ffc909efd34,253172294,0,0x0,8
tick,0x7ffc909efd34,253187852,0,0x0,8
tick,0x7ffc909efd34,253203729,0,0x0,8
tick,0x7ffc909efd34,253219730,0,0x0,8
tick,0x7ffc909efd34,253235076,0,0x0,8
tick,0x7ffc909efd34,253250665,0,0x0,8
tick,0x7ffc909efd34,253266666,0,0x0,8
tick,0x7ffc909efd34,253282240,0,0x0,8
tick,0x7ffc909efd34,253298633,0,0x0,8
tick,0x7ffc909efd34,253313970,0,0x0,8
tick,0x7ffc909efd34,253329504,0,0x0,8
tick,0x7ffc909efd34,253345551,0,0x0,8
tick,0x7ffc909efd34,253361574,0,0x0,8
tick,0x7ffc909efd34,253376823,0,0x0,8
tick,0x7ffc909efd34,253392163,0,0x0,8
tick,0x7ffc909efd34,253407749,0,0x0,8
tick,0x7ffc909efd34,253423264,0,0x0,8
tick,0x7ffc909efd34,253438800,0,0x0,8
tick,0x7ffc909efd34,253454195,0,0x0,8
tick,0x7ffc909efd34,253469737,0,0x0,8
tick,0x7ffc909efd34,253485525,0,0x0,8
tick,0x7ffc909efd34,253501006,0,0x0,8
tick,0x7ffc909efd34,253516796,0,0x0,8
tick,0x7ffc909efd34,253532395,0,0x0,8
tick,0x7ffc909efd34,253548035,0,0x0,8
tick,0x7ffc909efd34,253563951,0,0x0,8
tick,0x7ffc909efd34,253579457,0,0x0,8
tick,0x7ffc909efd34,253595336,0,0x0,8
tick,0x7ffc909efd34,253610940,0,0x0,8
tick,0x7ffc909efd34,253626846,0,0x0,8
tick,0x7ffc909efd34,253642741,0,0x0,8
tick,0x7ffc909efd34,253657760,0,0x0,8
tick,0x7ffc909efd34,253673651,0,0x0,8
tick,0x7ffc909efd34,253689625,0,0x0,8
tick,0x7ffc909efd34,253705624,0,0x0,8
tick,0x7ffc909efd34,253721516,0,0x0,8
tick,0x7ffc909efd34,253737125,0,0x0,8
tick,0x7ffc909efd34,253752692,0,0x0,8
tick,0x7ffc909efd34,253767843,0,0x0,8
tick,0x7ffc909efd34,253783292,0,0x0,8
tick,0x7ffc909efd34,253799696,0,0x0,8
tick,0x7ffc909efd34,253815478,0,0x0,8
tick,0x7ffc909efd34,253830774,0,0x0,8
tick,0x7ffc909efd34,253846453,0,0x0,8
tick,0x7ffc909efd34,253861915,0,0x0,8
tick,0x7ffc909efd34,253877633,0,0x0,8
tick,0x7ffc909efd34,253892800,0,0x0,8
tick,0x7ffc909efd34,253908539,0,0x0,8
tick,0x7ffc909efd34,253923881,0,0x0,8
tick,0x7ffc909efd34,253939403,0,0x0,8
tick,0x7ffc909efd34,253954800,0,0x0,8
tick,0x7ffc909efd34,253971023,0,0x0,8
tick,0x7ffc909efd34,253987310,0,0x0,8
tick,0x7ffc909efd34,254002610,0,0x0,8
tick,0x7ffc909efd34,254018520,0,0x0,8
tick,0x7ffc909efd34,254034287,0,0x0,8
tick,0x7ffc909efd34,254049552,0,0x0,8
tick,0x7ffc909efd34,254064751,0,0x0,8
tick,0x7ffc909efd34,254079946,0,0x0,8
tick,0x7ffc909efd34,254095529,0,0x0,8
tick,0x7ffc909efd34,254111234,0,0x0,8
tick,0x7ffc909efd34,254126867,0,0x0,8
tick,0x7ffc909efd34,254142781,0,0x0,8
tick,0x7ffc909efd34,254157089,0,0x0,8
tick,0x7ffc909efd34,254172200,0,0x0,8
tick,0x7ffc909efd34,254187378,0,0x0,8
tick,0x7ffc909efd34,254203596,0,0x0,8
tick,0x7ffc909efd34,254218398,0,0x0,8
tick,0x7ffc909efd34,254233690,0,0x0,8
tick,0x7ffc909efd34,254249336,0,0x0,8
tick,0x7ffc909efd34,254264914,0,0x0,8
tick,0x7ffc909efd34,254280194,0,0x0,8
tick,0x7ffc909efd34,254295680,0,0x0,8
tick,0x7ffc909efd34,254311405,0,0x0,8
tick,0x7ffc909efd34,254327060,0,0x0,8
tick,0x7ffc909efd34,254342915,0,0x0,8
tick,0x7ffc909efd34,254358611,0,0x0,8
tick,0x7ffc909efd34,254374002,0,0x0,8
tick,0x7ffc909efd34,254389459,0,0x0,8
tick,0x7ffc909efd34,254405103,0,0x0,8
tick,0x7ffc909efd34,254420633,0,0x0,8
tick,0x7ffc909efd34,254436502,0,0x0,8
tick,0x7ffc909efd34,254452120,0,0x0,8
tick,0x7ffc909efd34,254467625,0,0x0,8
tick,0x7ffc909efd34,254483235,0,0x0,8
tick,0x7ffc909efd34,254498888,0,0x0,8
tick,0x7ffc909efd34,254514565,0,0x0,8
tick,0x7ffc909efd34,254530599,0,0x0,8
tick,0x7ffc909efd34,254546321,0,0x0,8
tick,0x7ffc909efd34,254561728,0,0x0,8
tick,0x7ffc909efd34,254577350,0,0x0,8
tick,0x7ffc909efd34,254592646,0,0x0,8
tick,0x7ffc909efd34,254607151,0,0x0,8
tick,0x7ffc909efd34,254622187,0,0x0,8
tick,0x7ffc909efd34,254638231,0,0x0,8
tick,0x7ffc909efd34,254653563,0,0x0,8
tick,0x7ffc909efd34,254669572,0,0x0,8
tick,0x7ffc909efd34,254685182,0,0x0,8
tick,0x7ffc909efd34,254701275,0,0x0,8
tick,0x7ffc909efd34,254716745,0,0x0,8
tick,0x7ffc909efd34,254732336,0,0x0,8
tick,0x7ffc909efd34,254747765,0,0x0,8
tick,0x7ffc909efd34,254763565,0,0x0,8
tick,0x7ffc909efd34,254781268,0,0x0,8
tick,0x7ffc909efd34,254794948,0,0x0,8
tick,0x7ffc909efd34,254810582,0,0x0,8
tick,0x7ffc909efd34,254826785,0,0x0,8
tick,0x7ffc909efd34,254842572,0,0x0,8
tick,0x7ffc909efd34,254859135,0,0x0,8
tick,0x7ffc909efd34,254874847,0,0x0,8
tick,0x7ffc909efd34,254890685,0,0x0,8
tick,0x7ffc909efd34,254906597,0,0x0,8
tick,0x7ffc909efd34,254922508,0,0x0,8
tick,0x7ffc909efd34,254938528,0,0x0,8
tick,0x7ffc909efd34,254953927,0,0x0,8
tick,0x7ffc909efd34,254968492,0,0x0,8
tick,0x7ffc909efd34,254984532,0,0x0,8
tick,0x7ffc909efd34,255000650,0,0x0,8
tick,0x7ffc909efd34,255016579,0,0x0,8
tick,0x7ffc909efd34,255032517,0,0x0,8
tick,0x7ffc909efd34,255048643,0,0x0,8
tick,0x7ffc909efd34,255064511,0,0x0,8
tick,0x7ffc909efd34,255079605,0,0x0,8
tick,0x7ffc909efd34,255095578,0,0x0,8
tick,0x7ffc909efd34,255111718,0,0x0,8
tick,0x7ffc909efd34,255127662,0,0x0,8
tick,0x7ffc909efd34,255143525,0,0x0,8
tick,0x7ffc909efd34,255159183,0,0x0,8
tick,0x7ffc909efd34,255174803,0,0x0,8
tick,0x7ffc909efd34,255190793,0,0x0,8
tick,0x7ffc909efd34,255206103,0,0x0,8
tick,0x7ffc909efd34,255221798,0,0x0,8
tick,0x7ffc909efd34,255237375,0,0x0,8
tick,0x7ffc909efd34,255253054,0,0x0,8
tick,0x7ffc909efd34,255268407,0,0x0,8
tick,0x7ffc909efd34,255283964,0,0x0,8
tick,0x7ffc909efd34,255299808,0,0x0,8
tick,0x7ffc909efd34,255315099,0,0x0,8
tick,0x7ffc909efd34,255330442,0,0x0,8
tick,0x7ffc909efd34,255346356,0,0x0,8
tick,0x7ffc909efd34,255362061,0,0x0,8
tick,0x7ffc909efd34,255377751,0,0x0,8
tick,0x7ffc909efd34,255393400,0,0x0,8
tick,0x7ffc909efd34,255408299,0,0x0,8
tick,0x7ffc909efd34,255424417,0,0x0,8
tick,0x7ffc909efd34,255440470,0,0x0,8
tick,0x7ffc909efd34,255455759,0,0x0,8
tick,0x7ffc909efd34,255471140,0,0x0,8
tick,0x7ffc909efd34,255486568,0,0x0,8
tick,0x7ffc909efd34,255501986,0,0x0,8
tick,0x7ffc909efd34,255517958,0,0x0,8
tick,0x7ffc909efd34,255533619,0,0x0,8
tick,0x7ffc909efd34,255549131,0,0x0,8
tick,0x7ffc909efd34,255564550,0,0x0,8
tick,0x7ffc909efd34,255580003,0,0x0,8
tick,0x7ffc909efd34,255595549,0,0x0,8
tick,0x7ffc909efd34,255611455,0,0x0,8
tick,0x7ffc909efd34,255627363,0,0x0,8
tick,0x7ffc909efd34,255643639,0,0x0,8
tick,0x7ffc909efd34,255659612,0,0x0,8
tick,0x7ffc909efd34,255675619,0,0x0,8
tick,0x7ffc909efd34,255690552,0,0x0,8
tick,0x7ffc909efd34,255706138,0,0x0,8
tick,0x7ffc909efd34,255721767,0,0x0,8
tick,0x7ffc909efd34,255737247,0,0x0,8
tick,0x7ffc909efd34,255752456,0,0x0,8
tick,0x7ffc909efd34,255767857,0,0x0,8
tick,0x7ffc909efd34,255783014,0,0x0,8
tick,0x7ffc909efd34,255799133,0,0x0,8
tick,0x7ffc909efd34,255814172,0,0x0,8
tick,0x7ffc909efd34,255829202,0,0x0,8
tick,0x7ffc909efd34,255845207,0,0x0,8
tick,0x7ffc909efd34,255860753,0,0x0,8
tick,0x7ffc909efd34,255876186,0,0x0,8
tick,0x7ffc909efd34,255892380,0,0x0,8
tick,0x7ffc909efd34,255907605,0,0x0,8
tick,0x7ffc909efd34,255923419,0,0x0,8
tick,0x7ffc909efd34,255939730,0,0x0,8
tick,0x7ffc909efd34,255955411,0,0x0,8
tick,0x7ffc909efd34,255970850,0,0x0,8
tick,0x7ffc909efd34,255986307,0,0x0,8
tick,0x7ffc909efd34,256001870,0,0x0,8
tick,0x7ffc909efd34,256017328,0,0x0,8
tick,0x7ffc909efd34,256032899,0,0x0,8
tick,0x7ffc909efd34,256048952,0,0x0,8
tick,0x7ffc909efd34,256064131,0,0x0,8
tick,0x7ffc909efd34,256079683,0,0x0,8
tick,0x7ffc909efd34,256095287,0,0x0,8
tick,0x7ffc909efd34,256110731,0,0x0,8
tick,0x7ffc909efd34,256126091,0,0x0,8
tick,0x7ffc909efd34,256142108,0,0x0,8
tick,0x7ffc909efd34,256157803,0,0x0,8
tick,0x7ffc909efd34,256173510,0,0x0,8
tick,0x7ffc909efd34,256189028,0,0x0,8
tick,0x7ffc909efd34,256204571,0,0x0,8
tick,0x7ffc909efd34,256220665,0,0x0,8
tick,0x7ffc909efd34,256235952,0,0x0,8
tick,0x7ffc909efd34,256251544,0,0x0,8
tick,0x7ffc909efd34,256267146,0,0x0,8
tick,0x7ffc909efd34,256282725,0,0x0,8
tick,0x7ffc909efd34,256298591,0,0x0,8
tick,0x7ffc909efd34,256314157,0,0x0,8
tick,0x7ffc909efd34,256329749,0,0x0,8
tick,0x7ffc909efd34,256345226,0,0x0,8
tick,0x7ffc909efd34,256360437,0,0x0,8
tick,0x7ffc909efd34,256375825,0,0x0,8
tick,0x7ffc909efd34,256391884,0,0x0,8
tick,0x7ffc909efd34,256406951,0,0x0,8
tick,0x7ffc909efd34,256422655,0,0x0,8
tick,0x7ffc909efd34,256438242,0,0x0,8
tick,0x7ffc909efd34,256453537,0,0x0,8
tick,0x7ffc909efd34,256469827,0,0x0,8
tick,0x7ffc909efd34,256485848,0,0x0,8
tick,0x7ffc909efd34,256501856,0,0x0,8
tick,0x7ffc909efd34,256518151,0,0x0,8
tick,0x7ffc909efd34,256534241,0,0x0,8
tick,0x7ffc909efd34,256549708,0,0x0,8
tick,0x7ffc909efd34,256564866,0,0x0,8
tick,0x7ffc909efd34,256580666,0,0x0,8
tick,0x7ffc909efd34,256596425,0,0x0,8
tick,0x7ffc909efd34,256612216,0,0x0,8
tick,0x7ffc909efd34,256627511,0,0x0,8
tick,0x7ffc909efd34,256644006,0,0x0,8
tick,0x7ffc909efd34,256659481,0,0x0,8
tick,0x7ffc909efd34,256675192,0,0x0,8
tick,0x7ffc909efd34,256690768,0,0x0,8
tick,0x7ffc909efd34,256706125,0,0x0,8
tick,0x7ffc909efd34,256721631,0,0x0,8
tick,0x7ffc909efd34,256737306,0,0x0,8
tick,0x7ffc909efd34,256752983,0,0x0,8
tick,0x7ffc909efd34,256768165,0,0x0,8
tick,0x7ffc909efd34,256783428,0,0x0,8
tick,0x7ffc909efd34,256799159,0,0x0,8
tick,0x7ffc909efd34,256814716,0,0x0,8
tick,0x7ffc909efd34,256830190,0,0x0,8
tick,0x7ffc909efd34,256845870,0,0x0,8
tick,0x7ffc909efd34,256861008,0,0x0,8
tick,0x7ffc909efd34,256877219,0,0x0,8
tick,0x7ffc909efd34,256893036,0,0x0,8
tick,0x7ffc909efd34,256908882,0,0x0,8
tick,0x7ffc909efd34,256924113,0,0x0,8
tick,0x7ffc909efd34,256939499,0,0x0,8
tick,0x7ffc909efd34,256955512,0,0x0,8
tick,0x7ffc909efd34,256970690,0,0x0,8
tick,0x7ffc909efd34,256986273,0,0x0,8
tick,0x7ffc909efd34,257001552,0,0x0,8
tick,0x7ffc909efd34,257017299,0,0x0,8
tick,0x7ffc909efd34,257033068,0,0x0,8
tick,0x7ffc909efd34,257048687,0,0x0,8
tick,0x7ffc909efd34,257064312,0,0x0,8
tick,0x7ffc909efd34,257079843,0,0x0,8
tick,0x7ffc909efd34,257095011,0,0x0,8
tick,0x7ffc909efd34,257110520,0,0x0,8
tick,0x7ffc909efd34,257126689,0,0x0,8
tick,0x7ffc909efd34,257142134,0,0x0,8
tick,0x7ffc909efd34,257157406,0,0x0,8
tick,0x7ffc909efd34,257173421,0,0x0,8
tick,0x7ffc909efd34,257189414,0,0x0,8
tick,0x7ffc909efd34,257205065,0,0x0,8
tick,0x7ffc909efd34,257220587,0,0x0,8
tick,0x7ffc909efd34,257236164,0,0x0,8
tick,0x7ffc909efd34,257251589,0,0x0,8
tick,0x7ffc909efd34,257266938,0,0x0,8
tick,0x7ffc909efd34,257282720,0,0x0,8
tick,0x7ffc909efd34,257299057,0,0x0,8
tick,0x7ffc909efd34,257315036,0,0x0,8
tick,0x7ffc909efd34,257330527,0,0x0,8
tick,0x7ffc909efd34,257346189,0,0x0,8
tick,0x7ffc909efd34,257361727,0,0x0,8
tick,0x7ffc909efd34,257377283,0,0x0,8
tick,0x7ffc909efd34,257393449,0,0x0,8
tick,0x7ffc909efd34,257408817,0,0x0,8
tick,0x7ffc909efd34,257424106,0,0x0,8
tick,0x7ffc909efd34,257439635,0,0x0,8
tick,0x7ffc909efd34,257455280,0,0x0,8
tick,0x7ffc909efd34,257470925,0,0x0,8
tick,0x7ffc909efd34,257486571,0,0x0,8
tick,0x7ffc909efd34,257501808,0,0x0,8
tick,0x7ffc909efd34,257517282,0,0x0,8
tick,0x7ffc909efd34,257532587,0,0x0,8
tick,0x7ffc909efd34,257548162,0,0x0,8
tick,0x7ffc909efd34,257564140,0,0x0,8
tick,0x7ffc909efd34,257579639,0,0x0,8
tick,0x7ffc909efd34,257594654,0,0x0,8
tick,0x7ffc909efd34,257610258,0,0x0,8
tick,0x7ffc909efd34,257625870,0,0x0,8
tick,0x7ffc909efd34,257641929,0,0x0,8
tick,0x7ffc909efd34,257657419,0,0x0,8
tick,0x7ffc909efd34,257673213,0,0x0,8
tick,0x7ffc909efd34,257689171,0,0x0,8
tick,0x7ffc909efd34,257705751,0,0x0,8
tick,0x7ffc909efd34,257720264,0,0x0,8
tick,0x7ffc909efd34,257736255,0,0x0,8
tick,0x7ffc909efd34,257753335,0,0x0,8
tick,0x7ffc909efd34,257768123,0,0x0,8
tick,0x7ffc909efd34,257783206,0,0x0,8
tick,0x7ffc909efd34,257798252,0,0x0,8
tick,0x7ffc909efd34,257814183,0,0x0,8
tick,0x7ffc909efd34,257829315,0,0x0,8
tick,0x7ffc909efd34,257845339,0,0x0,8
tick,0x7ffc909efd34,257860713,0,0x0,8
tick,0x7ffc909efd34,257875958,0,0x0,8
tick,0x7ffc909efd34,257891430,0,0x0,8
tick,0x7ffc909efd34,257906677,0,0x0,8
tick,0x7ffc909efd34,257922372,0,0x0,8
tick,0x7ffc909efd34,257937987,0,0x0,8
tick,0x7ffc909efd34,257952995,0,0x0,8
tick,0x7ffc909efd34,257968676,0,0x0,8
tick,0x7ffc909efd34,257983893,0,0x0,8
tick,0x7ffc909efd34,257999311,0,0x0,8
tick,0x7ffc909efd34,258014735,0,0x0,8
tick,0x7ffc909efd34,258029784,0,0x0,8
tick,0x7ffc909efd34,258045913,0,0x0,8
tick,0x7ffc909efd34,258061836,0,0x0,8
tick,0x7ffc909efd34,258077718,0,0x0,8
tick,0x7ffc909efd34,258093778,0,0x0,8
tick,0x7ffc909efd34,258109863,0,0x0,8
tick,0x7ffc909efd34,258125311,0,0x0,8
tick,0x7ffc909efd34,258140240,0,0x0,8
tick,0x7ffc909efd34,258155429,0,0x0,8
tick,0x7ffc909efd34,258171594,0,0x0,8
tick,0x7ffc909efd34,258187373,0,0x0,8
tick,0x7ffc909efd34,258202441,0,0x0,8
tick,0x7ffc909efd34,258217916,0,0x0,8
tick,0x7ffc909efd34,258233711,0,0x0,8
tick,0x7ffc909efd34,258249341,0,0x0,8
tick,0x7ffc909efd34,258264975,0,0x0,8
tick,0x7ffc909efd34,258280157,0,0x0,8
tick,0x7ffc909efd34,258296383,0,0x0,8
tick,0x7ffc909efd34,258311886,0,0x0,8
tick,0x7ffc909efd34,258327359,0,0x0,8
tick,0x7ffc909efd34,258343515,0,0x0,8
tick,0x7ffc909efd34,258359218,0,0x0,8
tick,0x7ffc909efd34,258375067,0,0x0,8
tick,0x7ffc909efd34,258390504,0,0x0,8
tick,0x7ffc909efd34,258406287,0,0x0,8
tick,0x7ffc909efd34,258422453,0,0x0,8
tick,0x7ffc909efd34,258437644,0,0x0,8
tick,0x7ffc909efd34,258453376,0,0x0,8
tick,0x7ffc909efd34,258469101,0,0x0,8
tick,0x7ffc909efd34,258484905,0,0x0,8
tick,0x7ffc909efd34,258500211,0,0x0,8
tick,0x7ffc909efd34,258515885,0,0x0,8
tick,0x7ffc909efd34,258531616,0,0x0,8
tick,0x7ffc909efd34,258547501,0,0x0,8
tick,0x7ffc909efd34,258562891,0,0x0,8
tick,0x7ffc909efd34,258578257,0,0x0,8
tick,0x7ffc909efd34,258594027,0,0x0,8
tick,0x7ffc909efd34,258609411,0,0x0,8
tick,0x7ffc909efd34,258624757,0,0x0,8
tick,0x7ffc909efd34,258640176,0,0x0,8
tick,0x7ffc909efd34,258655696,0,0x0,8
tick,0x7ffc909efd34,258671161,0,0x0,8
tick,0x7ffc909efd34,258687049,0,0x0,8
tick,0x7ffc909efd34,258702418,0,0x0,8
tick,0x7ffc909efd34,258718431,0,0x0,8
tick,0x7ffc909efd34,258733879,0,0x0,8
tick,0x7ffc909efd34,258749685,0,0x0,8
tick,0x7ffc909efd34,258765430,0,0x0,8
tick,0x7ffc909efd34,258781474,0,0x0,8
tick,0x7ffc909efd34,258796987,0,0x0,8
tick,0x7ffc909efd34,258812613,0,0x0,8
tick,0x7ffc909efd34,258827615,0,0x0,8
tick,0x7ffc909efd34,258844113,0,0x0,8
tick,0x7ffc909efd34,258860059,0,0x0,8
tick,0x7ffc909efd34,258876195,0,0x0,8
tick,0x7ffc909efd34,258891849,0,0x0,8
tick,0x7ffc909efd34,258907437,0,0x0,8
tick,0x7ffc909efd34,258923426,0,0x0,8
tick,0x7ffc909efd34,258939462,0,0x0,8
tick,0x7ffc909efd34,258955355,0,0x0,8
tick,0x7ffc909efd34,258970440,0,0x0,8
tick,0x7ffc909efd34,258985976,0,0x0,8
tick,0x7ffc909efd34,259001755,0,0x0,8
tick,0x7ffc909efd34,259017294,0,0x0,8
tick,0x7ffc909efd34,259032990,0,0x0,8
tick,0x7ffc909efd34,259048231,0,0x0,8
tick,0x7ffc909efd34,259064295,0,0x0,8
tick,0x7ffc909efd34,259079402,0,0x0,8
tick,0x7ffc909efd34,259094937,0,0x0,8
tick,0x7ffc909efd34,259110243,0,0x0,8
tick,0x7ffc909efd34,259125645,0,0x0,8
tick,0x7ffc909efd34,259141481,0,0x0,8
tick,0x7ffc909efd34,259156879,0,0x0,8
tick,0x7ffc909efd34,259172349,0,0x0,8
tick,0x7ffc909efd34,259187907,0,0x0,8
tick,0x7ffc909efd34,259203064,0,0x0,8
tick,0x7ffc909efd34,259218214,0,0x0,8
tick,0x7ffc909efd34,259233941,0,0x0,8
tick,0x7ffc909efd34,259249688,0,0x0,8
tick,0x7ffc909efd34,259265138,0,0x0,8
tick,0x7ffc909efd34,259280742,0,0x0,8
tick,0x7ffc909efd34,259295948,0,0x0,8
tick,0x7ffc909efd34,259311248,0,0x0,8
tick,0x7ffc909efd34,259327060,0,0x0,8
tick,0x7ffc909efd34,259342920,0,0x0,8
tick,0x7ffc909efd34,259358360,0,0x0,8
tick,0x7ffc909efd34,259374016,0,0x0,8
tick,0x7ffc909efd34,259389809,0,0x0,8
tick,0x7ffc909efd34,259405293,0,0x0,8
tick,0x7ffc909efd34,259420960,0,0x0,8
tick,0x7ffc909efd34,259436520,0,0x0,8
tick,0x7ffc909efd34,259452300,0,0x0,8
tick,0x7ffc909efd34,259467699,0,0x0,8
tick,0x7ffc909efd34,259483640,0,0x0,8
tick,0x7ffc909efd34,259499177,0,0x0,8
tick,0x7ffc909efd34,259514366,0,0x0,8
tick,0x7ffc909efd34,259529743,0,0x0,8
tick,0x7ffc909efd34,259545421,0,0x0,8
tick,0x7ffc909efd34,259561117,0,0x0,8
tick,0x7ffc909efd34,259577104,0,0x0,8
tick,0x7ffc909efd34,259592313,0,0x0,8
tick,0x7ffc909efd34,259608417,0,0x0,8
tick,0x7ffc909efd34,259623661,0,0x0,8
tick,0x7ffc909efd34,259639968,0,0x0,8
tick,0x7ffc909efd34,259655646,0,0x0,8
tick,0x7ffc909efd34,259672070,0,0x0,8
tick,0x7ffc909efd34,259687259,0,0x0,8
tick,0x7ffc909efd34,259703368,0,0x0,8
tick,0x7ffc909efd34,259719574,0,0x0,8
tick,0x7ffc909efd34,259734199,0,0x0,8
tick,0x7ffc909efd34,259749067,0,0x0,8
tick,0x7ffc909efd34,259764403,0,0x0,8
tick,0x7ffc909efd34,259780454,0,0x0,8
tick,0x7ffc909efd34,259795953,0,0x0,8
tick,0x7ffc909efd34,259811455,0,0x0,8
tick,0x7ffc909efd34,259827303,0,0x0,8
tick,0x7ffc909efd34,259842631,0,0x0,8
tick,0x7ffc909efd34,259858592,0,0x0,8
tick,0x7ffc909efd34,259873961,0,0x0,8
tick,0x7ffc909efd34,259889414,0,0x0,8
tick,0x7ffc909efd34,259905018,0,0x0,8
tick,0x7ffc909efd34,259920415,0,0x0,8
tick,0x7ffc909efd34,259936094,0,0x0,8
tick,0x7ffc909efd34,259951301,0,0x0,8
tick,0x7ffc909efd34,259967181,0,0x0,8
tick,0x7ffc909efd34,259983274,0,0x0,8
tick,0x7ffc909efd34,259998644,0,0x0,8
tick,0x7ffc909efd34,260013949,0,0x0,8
tick,0x7ffc909efd34,260029351,0,0x0,8
tick,0x7ffc909efd34,260044518,0,0x0,8
tick,0x7ffc909efd34,260059928,0,0x0,8
tick,0x7ffc909efd34,260075944,0,0x0,8
tick,0x7ffc909efd34,260091645,0,0x0,8
tick,0x7ffc909efd34,260106656,0,0x0,8
tick,0x7ffc909efd34,260122542,0,0x0,8
tick,0x7ffc909efd34,260138130,0,0x0,8
tick,0x7ffc909efd34,260153785,0,0x0,8
tick,0x7ffc909efd34,260170097,0,0x0,8
tick,0x7ffc909efd34,260185874,0,0x0,8
tick,0x7ffc909efd34,260200781,0,0x0,8
tick,0x7ffc909efd34,260216094,0,0x0,8
tick,0x7ffc909efd34,260231610,0,0x0,8
tick,0x7ffc909efd34,260247816,0,0x0,8
tick,0x7ffc909efd34,260262469,0,0x0,8
tick,0x7ffc909efd34,260277610,0,0x0,8
tick,0x7ffc909efd34,260293926,0,0x0,8
tick,0x7ffc909efd34,260309320,0,0x0,8
tick,0x7ffc909efd34,260324615,0,0x0,8
tick,0x7ffc909efd34,260340718,0,0x0,8
tick,0x7ffc909efd34,260356806,0,0x0,8
tick,0x7ffc909efd34,260372359,0,0x0,8
tick,0x7ffc909efd34,260387512,0,0x0,8
tick,0x7ffc909efd34,260403163,0,0x0,8
tick,0x7ffc909efd34,260418868,0,0x0,8
tick,0x7ffc909efd34,260434307,0,0x0,8
tick,0x7ffc909efd34,260450496,0,0x0,8
tick,0x7ffc909efd34,260466042,0,0x0,8
tick,0x7ffc909efd34,260481089,0,0x0,8
tick,0x7ffc909efd34,260496091,0,0x0,8
tick,0x7ffc909efd34,260511524,0,0x0,8
tick,0x7ffc909efd34,260527564,0,0x0,8
tick,0x7ffc909efd34,260543606,0,0x0,8
tick,0x7ffc909efd34,260559559,0,0x0,8
tick,0x7ffc909efd34,260574848,0,0x0,8
tick,0x7ffc909efd34,260590219,0,0x0,8
tick,0x7ffc909efd34,260605568,0,0x0,8
tick,0x7ffc909efd34,260621097,0,0x0,8
tick,0x7ffc909efd34,260636578,0,0x0,8
tick,0x7ffc909efd34,260652466,0,0x0,8
tick,0x7ffc909efd34,260668079,0,0x0,8
tick,0x7ffc909efd34,260683575,0,0x0,8
tick,0x7ffc909efd34,260699578,0,0x0,8
tick,0x7ffc909efd34,260715486,0,0x0,8
tick,0x7ffc909efd34,260731666,0,0x0,8
tick,0x7ffc909efd34,260748021,0,0x0,8
tick,0x7ffc909efd34,260763533,0,0x0,8
tick,0x7ffc909efd34,260848352,0,0x0,8
tick,0x7ffc909efd34,260869676,0,0x0,8
tick,0x7ffc909efd34,260918388,0,0x0,8
tick,0x7ffc909efd34,260946233,0,0x0,8
tick,0x7ffc909efd34,260977179,0,0x0,8
tick,0x7ffc909efd34,261018382,0,0x0,8
tick,0x7ffc909efd34,261047451,0,0x0,8
tick,0x7ffc909efd34,261049673,0,0x0,8
tick,0x7ffc909efd34,261072136,0,0x0,8
tick,0x7ffc909efd34,261083772,0,0x0,8
tick,0x7ffc909efd34,261097794,0,0x0,8
tick,0x7ffc909efd34,261115004,0,0x0,8
tick,0x7ffc909efd34,261134098,0,0x0,8
tick,0x7ffc909efd34,261146900,0,0x0,8
tick,0x7ffc909efd34,261160945,0,0x0,8
tick,0x7ffc909efd34,261176553,0,0x0,8
tick,0x7ffc909efd34,261209569,0,0x0,8
tick,0x7ffc909efd34,261236678,0,0x0,8
tick,0x7ffc909efd34,261239706,0,0x0,8
tick,0x7ffc909efd34,261264609,0,0x0,8
tick,0x7ffc909efd34,261271564,0,0x0,8
tick,0x7ffc909efd34,261287513,0,0x0,8
tick,0x7ffc909efd34,261303604,0,0x0,8
tick,0x7ffc909efd34,261319675,0,0x0,8
tick,0x7ffc909efd34,261335290,0,0x0,8
tick,0x7ffc909efd34,261351017,0,0x0,8
tick,0x7ffc909efd34,261367746,0,0x0,8
tick,0x7ffc909efd34,261382633,0,0x0,8
tick,0x7ffc909efd34,261404394,0,0x0,8
tick,0x7ffc909efd34,261414417,0,0x0,8
tick,0x7ffc909efd34,261430894,0,0x0,8
tick,0x7ffc909efd34,261446654,0,0x0,8
tick,0x7ffc909efd34,261462646,0,0x0,8
tick,0x7ffc909efd34,261477421,0,0x0,8
tick,0x7ffc909efd34,261494004,0,0x0,8
tick,0x7ffc909efd34,261509726,0,0x0,8
tick,0x7ffc909efd34,261526161,0,0x0,8
tick,0x7ffc909efd34,261541999,0,0x0,8
tick,0x7ffc909efd34,261558277,0,0x0,8
tick,0x7ffc909efd34,261573635,0,0x0,8
tick,0x7ffc909efd34,261589608,0,0x0,8
tick,0x7ffc909efd34,261605532,0,0x0,8
tick,0x7ffc909efd34,261621552,0,0x0,8
tick,0x7ffc909efd34,261637562,0,0x0,8
tick,0x7ffc909efd34,261653594,0,0x0,8
tick,0x7ffc909efd34,261669519,0,0x0,8
tick,0x7ffc909efd34,261685515,0,0x0,8
tick,0x7ffc909efd34,261702966,0,0x0,8
tick,0x7ffc909efd34,261715516,0,0x0,8
tick,0x7ffc909efd34,261752462,0,0x0,8
tick,0x7ffc909efd34,261765524,0,0x0,8
tick,0x7ffc909efd34,261779751,0,0x0,8
tick,0x7ffc909efd34,261795870,0,0x0,8
tick,0x7ffc909efd34,261811943,0,0x0,8
tick,0x7ffc909efd34,261827546,0,0x0,8
tick,0x7ffc909efd34,261846329,0,0x0,8
tick,0x7ffc909efd34,261862381,0,0x0,8
tick,0x7ffc909efd34,261876335,0,0x0,8
tick,0x7ffc909efd34,261893558,0,0x0,8
tick,0x7ffc909efd34,261908170,0,0x0,8
tick,0x7ffc909efd34,261931534,0,0x0,8
tick,0x7ffc909efd34,261945745,0,0x0,8
tick,0x7ffc909efd34,261961245,0,0x0,8
tick,0x7ffc909efd34,261971645,0,0x0,8
tick,0x7ffc909efd34,261987768,0,0x0,8
tick,0x7ffc909efd34,262005862,0,0x0,8
tick,0x7ffc909efd34,262019719,0,0x0,8
tick,0x7ffc909efd34,262034466,0,0x0,8
tick,0x7ffc909efd34,262049432,0,0x0,8
tick,0x7ffc909efd34,262078795,0,0x0,8
tick,0x7ffc909efd34,262083711,0,0x0,8
tick,0x7ffc909efd34,262097134,0,0x0,8
tick,0x7ffc909efd34,262112696,0,0x0,8
tick,0x7ffc909efd34,262128451,0,0x0,8
tick,0x7ffc909efd34,262158462,0,0x0,8
tick,0x7ffc909efd34,262170981,0,0x0,8
tick,0x7ffc909efd34,262176842,0,0x0,8
tick,0x7ffc909efd34,262195464,0,0x0,8
tick,0x7ffc909efd34,262209653,0,0x0,8
tick,0x7ffc909efd34,262225670,0,0x0,8
tick,0x7ffc909efd34,262241466,0,0x0,8
tick,0x7ffc909efd34,262264439,0,0x0,8
tick,0x7ffc909efd34,262280985,0,0x0,8
tick,0x7ffc909efd34,262317257,0,0x0,8
tick,0x7ffc909efd34,262339549,0,0x0,8
tick,0x7ffc909efd34,262354048,0,0x0,8
tick,0x7ffc909efd34,262369436,0,0x0,8
tick,0x7ffc909efd34,262387644,0,0x0,8
tick,0x7ffc909efd34,262405955,0,0x0,8
tick,0x7ffc909efd34,262420706,0,0x0,8
tick,0x7ffc909efd34,262438199,0,0x0,8
tick,0x7ffc909efd34,262443634,0,0x0,8
tick,0x7ffc909efd34,262468357,0,0x0,8
tick,0x7ffc909efd34,262479355,0,0x0,8
tick,0x7ffc909efd34,262491443,0,0x0,8
tick,0x7ffc909efd34,262511504,0,0x0,8
tick,0x7ffc909efd34,262526444,0,0x0,8
tick,0x7ffc909efd34,262546461,0,0x0,8
tick,0x7ffc909efd34,262562150,0,0x0,8
tick,0x7ffc909efd34,262572381,0,0x0,8
tick,0x7ffc909efd34,262586696,0,0x0,8
tick,0x7ffc909efd34,262613460,0,0x0,8
tick,0x7ffc909efd34,262617853,0,0x0,8
tick,0x7ffc909efd34,262639283,0,0x0,8
tick,0x7ffc909efd34,262652440,0,0x0,8
tick,0x7ffc909efd34,262678562,0,0x0,8
tick,0x7ffc909efd34,262694473,0,0x0,8
tick,0x7ffc909efd34,262709582,0,0x0,8
tick,0x7ffc909efd34,262725529,0,0x0,8
tick,0x7ffc909efd34,262741677,0,0x0,8
tick,0x7ffc909efd34,262757680,0,0x0,8
tick,0x7ffc909efd34,262774099,0,0x0,8
tick,0x7ffc909efd34,262789475,0,0x0,8
tick,0x7ffc909efd34,262804504,0,0x0,8
tick,0x7ffc909efd34,262819942,0,0x0,8
tick,0x7ffc909efd34,262835196,0,0x0,8
tick,0x7ffc909efd34,262851372,0,0x0,8
tick,0x7ffc909efd34,262867495,0,0x0,8
tick,0x7ffc909efd34,262883664,0,0x0,8
tick,0x7ffc909efd34,262899869,0,0x0,8
tick,0x7ffc909efd34,262915644,0,0x0,8
tick,0x7ffc909efd34,262931478,0,0x0,8
tick,0x7ffc909efd34,262947499,0,0x0,8
tick,0x7ffc909efd34,262963193,0,0x0,8
tick,0x7ffc909efd34,262978394,0,0x0,8
tick,0x7ffc909efd34,262993808,0,0x0,8
tick,0x7ffc909efd34,263009204,0,0x0,8
tick,0x7ffc909efd34,263025191,0,0x0,8
tick,0x7ffc909efd34,263041054,0,0x0,8
tick,0x7ffc909efd34,263055858,0,0x0,8
tick,0x7ffc909efd34,263071732,0,0x0,8
tick,0x7ffc909efd34,263087189,0,0x0,8
tick,0x7ffc909efd34,263103218,0,0x0,8
tick,0x7ffc909efd34,263118718,0,0x0,8
tick,0x7ffc909efd34,263134375,0,0x0,8
tick,0x7ffc909efd34,263150590,0,0x0,8
tick,0x7ffc909efd34,263165747,0,0x0,8
tick,0x7ffc909efd34,263181135,0,0x0,8
tick,0x7ffc909efd34,263196481,0,0x0,8
tick,0x7ffc909efd34,263212088,0,0x0,8
tick,0x7ffc909efd34,263227865,0,0x0,8
tick,0x7ffc909efd34,263242964,0,0x0,8
tick,0x7ffc909efd34,263258473,0,0x0,8
tick,0x7ffc909efd34,263274349,0,0x0,8
tick,0x7ffc909efd34,263289921,0,0x0,8
tick,0x7ffc909efd34,263305393,0,0x0,8
tick,0x7ffc909efd34,263321012,0,0x0,8
tick,0x7ffc909efd34,263336788,0,0x0,8
tick,0x7ffc909efd34,263352149,0,0x0,8
tick,0x7ffc909efd34,263368227,0,0x0,8
tick,0x7ffc909efd34,263383403,0,0x0,8
tick,0x7ffc909efd34,263398984,0,0x0,8
tick,0x7ffc909efd34,263414370,0,0x0,8
tick,0x7ffc909efd34,263429589,0,0x0,8
tick,0x7ffc909efd34,263445106,0,0x0,8
tick,0x7ffc909efd34,263460281,0,0x0,8
tick,0x7ffc909efd34,263475183,0,0x0,8
tick,0x7ffc909efd34,263490972,0,0x0,8
tick,0x7ffc909efd34,263506147,0,0x0,8
tick,0x7ffc909efd34,263521921,0,0x0,8
tick,0x7ffc909efd34,263537366,0,0x0,8
tick,0x7ffc909efd34,263552732,0,0x0,8
tick,0x7ffc909efd34,263569007,0,0x0,8
tick,0x7ffc909efd34,263584636,0,0x0,8
tick,0x7ffc909efd34,263600216,0,0x0,8
tick,0x7ffc909efd34,263615866,0,0x0,8
tick,0x7ffc909efd34,263631688,0,0x0,8
tick,0x7ffc909efd34,263646826,0,0x0,8
tick,0x7ffc909efd34,263662281,0,0x0,8
tick,0x7ffc909efd34,263677442,0,0x0,8
tick,0x7ffc909efd34,263693274,0,0x0,8
tick,0x7ffc909efd34,263708871,0,0x0,8
tick,0x7ffc909efd34,263724647,0,0x0,8
tick,0x7ffc909efd34,263740942,0,0x0,8
tick,0x7ffc909efd34,263756013,0,0x0,8
tick,0x7ffc909efd34,263771494,0,0x0,8
tick,0x7ffc909efd34,263787100,0,0x0,8
tick,0x7ffc909efd34,263803476,0,0x0,8
tick,0x7ffc909efd34,263818572,0,0x0,8
tick,0x7ffc909efd34,263834261,0,0x0,8
tick,0x7ffc909efd34,263850036,0,0x0,8
tick,0x7ffc909efd34,263865223,0,0x0,8
tick,0x7ffc909efd34,263881383,0,0x0,8
tick,0x7ffc909efd34,263896482,0,0x0,8
tick,0x7ffc909efd34,263911729,0,0x0,8
tick,0x7ffc909efd34,263927550,0,0x0,8
tick,0x7ffc909efd34,263943659,0,0x0,8
tick,0x7ffc909efd34,263959475,0,0x0,8
tick,0x7ffc909efd34,263975623,0,0x0,8
tick,0x7ffc909efd34,263991836,0,0x0,8
tick,0x7ffc909efd34,264007290,0,0x0,8
tick,0x7ffc909efd34,264022534,0,0x0,8
tick,0x7ffc909efd34,264037670,0,0x0,8
tick,0x7ffc909efd34,264053541,0,0x0,8
tick,0x7ffc909efd34,264069020,0,0x0,8
tick,0x7ffc909efd34,264084827,0,0x0,8
tick,0x7ffc909efd34,264100126,0,0x0,8
tick,0x7ffc909efd34,264114892,0,0x0,8
tick,0x7ffc909efd34,264130064,0,0x0,8
tick,0x7ffc909efd34,264145793,0,0x0,8
tick,0x7ffc909efd34,264161235,0,0x0,8
tick,0x7ffc909efd34,264177217,0,0x0,8
tick,0x7ffc909efd34,264193022,0,0x0,8
tick,0x7ffc909efd34,264208398,0,0x0,8
tick,0x7ffc909efd34,264224040,0,0x0,8
tick,0x7ffc909efd34,264239875,0,0x0,8
tick,0x7ffc909efd34,264255413,0,0x0,8
tick,0x7ffc909efd34,264271146,0,0x0,8
tick,0x7ffc909efd34,264286799,0,0x0,8
tick,0x7ffc909efd34,264302165,0,0x0,8
tick,0x7ffc909efd34,264317444,0,0x0,8
tick,0x7ffc909efd34,264333422,0,0x0,8
tick,0x7ffc909efd34,264349058,0,0x0,8
tick,0x7ffc909efd34,264364645,0,0x0,8
tick,0x7ffc909efd34,264380508,0,0x0,8
tick,0x7ffc909efd34,264396310,0,0x0,8
tick,0x7ffc909efd34,264412155,0,0x0,8
tick,0x7ffc909efd34,264428137,0,0x0,8
tick,0x7ffc909efd34,264443450,0,0x0,8
tick,0x7ffc909efd34,264459443,0,0x0,8
tick,0x7ffc909efd34,264474992,0,0x0,8
tick,0x7ffc909efd34,264490599,0,0x0,8
tick,0x7ffc909efd34,264506226,0,0x0,8
tick,0x7ffc909efd34,264522134,0,0x0,8
tick,0x7ffc909efd34,264537774,0,0x0,8
tick,0x7ffc909efd34,264553081,0,0x0,8
tick,0x7ffc909efd34,264568713,0,0x0,8
tick,0x7ffc909efd34,264584335,0,0x0,8
tick,0x7ffc909efd34,264599730,0,0x0,8
tick,0x7ffc909efd34,264615279,0,0x0,8
tick,0x7ffc909efd34,264630689,0,0x0,8
tick,0x7ffc909efd34,264645875,0,0x0,8
tick,0x7ffc909efd34,264661118,0,0x0,8
tick,0x7ffc909efd34,264675825,0,0x0,8
tick,0x7ffc909efd34,264690825,0,0x0,8
tick,0x7ffc909efd34,264706995,0,0x0,8
tick,0x7ffc909efd34,264722342,0,0x0,8
tick,0x7ffc909efd34,264737641,0,0x0,8
tick,0x7ffc909efd34,264753327,0,0x0,8
tick,0x7ffc909efd34,264769338,0,0x0,8
tick,0x7ffc909efd34,264785099,0,0x0,8
tick,0x7ffc909efd34,264801190,0,0x0,8
tick,0x7ffc909efd34,264817250,0,0x0,8
tick,0x7ffc909efd34,264833260,0,0x0,8
tick,0x7ffc909efd34,264849479,0,0x0,8
tick,0x7ffc909efd34,264865248,0,0x0,8
tick,0x7ffc909efd34,264880730,0,0x0,8
tick,0x7ffc909efd34,264896351,0,0x0,8
tick,0x7ffc909efd34,264912134,0,0x0,8
tick,0x7ffc909efd34,264927739,0,0x0,8
tick,0x7ffc909efd34,264943371,0,0x0,8
tick,0x7ffc909efd34,264958885,0,0x0,8
tick,0x7ffc909efd34,264974771,0,0x0,8
tick,0x7ffc909efd34,264990496,0,0x0,8
tick,0x7ffc909efd34,265005654,0,0x0,8
tick,0x7ffc909efd34,265021145,0,0x0,8
tick,0x7ffc909efd34,265036475,0,0x0,8
tick,0x7ffc909efd34,265052555,0,0x0,8
tick,0x7ffc909efd34,265067940,0,0x0,8
tick,0x7ffc909efd34,265083221,0,0x0,8
tick,0x7ffc909efd34,265099124,0,0x0,8
tick,0x7ffc909efd34,265114279,0,0x0,8
tick,0x7ffc909efd34,265129911,0,0x0,8
tick,0x7ffc909efd34,265145307,0,0x0,8
tick,0x7ffc909efd34,265161110,0,0x0,8
tick,0x7ffc909efd34,265176307,0,0x0,8
tick,0x7ffc909efd34,265192608,0,0x0,8
tick,0x7ffc909efd34,265207981,0,0x0,8
tick,0x7ffc909efd34,265224133,0,0x0,8
tick,0x7ffc909efd34,265239209,0,0x0,8
tick,0x7ffc909efd34,265254575,0,0x0,8
tick,0x7ffc909efd34,265270079,0,0x0,8
tick,0x7ffc909efd34,265285418,0,0x0,8
tick,0x7ffc909efd34,265301458,0,0x0,8
tick,0x7ffc909efd34,265316153,0,0x0,8
tick,0x7ffc909efd34,265331385,0,0x0,8
tick,0x7ffc909efd34,265346758,0,0x0,8
tick,0x7ffc909efd34,265362458,0,0x0,8
tick,0x7ffc909efd34,265378186,0,0x0,8
tick,0x7ffc909efd34,265394406,0,0x0,8
tick,0x7ffc909efd34,265409719,0,0x0,8
tick,0x7ffc909efd34,265425650,0,0x0,8
tick,0x7ffc909efd34,265441308,0,0x0,8
tick,0x7ffc909efd34,265456539,0,0x0,8
tick,0x7ffc909efd34,265472351,0,0x0,8
tick,0x7ffc909efd34,265487819,0,0x0,8
tick,0x7ffc909efd34,265503404,0,0x0,8
tick,0x7ffc909efd34,265519697,0,0x0,8
tick,0x7ffc909efd34,265535424,0,0x0,8
tick,0x7ffc909efd34,265551098,0,0x0,8
tick,0x7ffc909efd34,265566545,0,0x0,8
tick,0x7ffc909efd34,265581900,0,0x0,8
tick,0x7ffc909efd34,265597270,0,0x0,8
tick,0x7ffc909efd34,265613029,0,0x0,8
tick,0x7ffc909efd34,265628724,0,0x0,8
tick,0x7ffc909efd34,265643985,0,0x0,8
tick,0x7ffc909efd34,265660176,0,0x0,8
tick,0x7ffc909efd34,265675646,0,0x0,8
tick,0x7ffc909efd34,265691928,0,0x0,8
tick,0x7ffc909efd34,265707122,0,0x0,8
tick,0x7ffc909efd34,265722399,0,0x0,8
tick,0x7ffc909efd34,265737665,0,0x0,8
tick,0x7ffc909efd34,265753480,0,0x0,8
tick,0x7ffc909efd34,265769708,0,0x0,8
tick,0x7ffc909efd34,265785469,0,0x0,8
tick,0x7ffc909efd34,265800779,0,0x0,8
tick,0x7ffc909efd34,265816424,0,0x0,8
tick,0x7ffc909efd34,265832035,0,0x0,8
tick,0x7ffc909efd34,265847553,0,0x0,8
tick,0x7ffc909efd34,265863563,0,0x0,8
tick,0x7ffc909efd34,265879421,0,0x0,8
tick,0x7ffc909efd34,265894856,0,0x0,8
tick,0x7ffc909efd34,265910184,0,0x0,8
tick,0x7ffc909efd34,265925746,0,0x0,8
tick,0x7ffc909efd34,265941670,0,0x0,8
tick,0x7ffc909efd34,265957241,0,0x0,8
tick,0x7ffc909efd34,265972485,0,0x0,8
tick,0x7ffc909efd34,265988416,0,0x0,8
tick,0x7ffc909efd34,266003543,0,0x0,8
tick,0x7ffc909efd34,266019482,0,0x0,8
tick,0x7ffc909efd34,266034576,0,0x0,8
tick,0x7ffc909efd34,266050195,0,0x0,8
tick,0x7ffc909efd34,266065688,0,0x0,8
tick,0x7ffc909efd34,266081718,0,0x0,8
tick,0x7ffc909efd34,266097180,0,0x0,8
tick,0x7ffc909efd34,266113039,0,0x0,8
tick,0x7ffc909efd34,266128260,0,0x0,8
tick,0x7ffc909efd34,266143802,0,0x0,8
tick,0x7ffc909efd34,266159428,0,0x0,8
tick,0x7ffc909efd34,266175375,0,0x0,8
tick,0x7ffc909efd34,266191133,0,0x0,8
tick,0x7ffc909efd34,266206850,0,0x0,8
tick,0x7ffc909efd34,266222022,0,0x0,8
tick,0x7ffc909efd34,266237845,0,0x0,8
tick,0x7ffc909efd34,266253584,0,0x0,8
tick,0x7ffc909efd34,266269506,0,0x0,8
tick,0x7ffc909efd34,266285617,0,0x0,8
tick,0x7ffc909efd34,266300933,0,0x0,8
tick,0x7ffc909efd34,266316615,0,0x0,8
tick,0x7ffc909efd34,266332206,0,0x0,8
tick,0x7ffc909efd34,266348193,0,0x0,8
tick,0x7ffc909efd34,266363814,0,0x0,8
tick,0x7ffc909efd34,266380249,0,0x0,8
tick,0x7ffc909efd34,266396165,0,0x0,8
tick,0x7ffc909efd34,266411443,0,0x0,8
tick,0x7ffc909efd34,266426996,0,0x0,8
tick,0x7ffc909efd34,266442592,0,0x0,8
tick,0x7ffc909efd34,266458022,0,0x0,8
tick,0x7ffc909efd34,266473549,0,0x0,8
tick,0x7ffc909efd34,266488673,0,0x0,8
tick,0x7ffc909efd34,266504498,0,0x0,8
tick,0x7ffc909efd34,266519937,0,0x0,8
tick,0x7ffc909efd34,266535497,0,0x0,8
tick,0x7ffc909efd34,266551010,0,0x0,8
tick,0x7ffc909efd34,266566571,0,0x0,8
tick,0x7ffc909efd34,266582146,0,0x0,8
tick,0x7ffc909efd34,266597510,0,0x0,8
tick,0x7ffc909efd34,266613115,0,0x0,8
tick,0x7ffc909efd34,266628505,0,0x0,8
tick,0x7ffc909efd34,266643728,0,0x0,8
tick,0x7ffc909efd34,266659107,0,0x0,8
tick,0x7ffc909efd34,266674208,0,0x0,8
tick,0x7ffc909efd34,266690325,0,0x0,8
tick,0x7ffc909efd34,266705140,0,0x0,8
tick,0x7ffc909efd34,266721368,0,0x0,8
tick,0x7ffc909efd34,266737072,0,0x0,8
tick,0x7ffc909efd34,266752785,0,0x0,8
tick,0x7ffc909efd34,266767939,0,0x0,8
tick,0x7ffc909efd34,266783733,0,0x0,8
tick,0x7ffc909efd34,266799531,0,0x0,8
tick,0x7ffc909efd34,266815239,0,0x0,8
tick,0x7ffc909efd34,266830849,0,0x0,8
tick,0x7ffc909efd34,266846255,0,0x0,8
tick,0x7ffc909efd34,266861369,0,0x0,8
tick,0x7ffc909efd34,266877400,0,0x0,8
tick,0x7ffc909efd34,266893128,0,0x0,8
tick,0x7ffc909efd34,266908811,0,0x0,8
tick,0x7ffc909efd34,266924113,0,0x0,8
tick,0x7ffc909efd34,266939749,0,0x0,8
tick,0x7ffc909efd34,266955848,0,0x0,8
tick,0x7ffc909efd34,266971351,0,0x0,8
tick,0x7ffc909efd34,266986838,0,0x0,8
tick,0x7ffc909efd34,267002897,0,0x0,8
tick,0x7ffc909efd34,267018450,0,0x0,8
tick,0x7ffc909efd34,267034411,0,0x0,8
tick,0x7ffc909efd34,267050164,0,0x0,8
tick,0x7ffc909efd34,267065704,0,0x0,8
tick,0x7ffc909efd34,267081025,0,0x0,8
tick,0x7ffc909efd34,267097056,0,0x0,8
tick,0x7ffc909efd34,267112602,0,0x0,8
tick,0x7ffc909efd34,267128527,0,0x0,8
tick,0x7ffc909efd34,267144263,0,0x0,8
tick,0x7ffc909efd34,267159629,0,0x0,8
tick,0x7ffc909efd34,267175425,0,0x0,8
tick,0x7ffc909efd34,267191274,0,0x0,8
tick,0x7ffc909efd34,267206638,0,0x0,8
tick,0x7ffc909efd34,267222366,0,0x0,8
tick,0x7ffc909efd34,267237952,0,0x0,8
tick,0x7ffc909efd34,267254414,0,0x0,8
tick,0x7ffc909efd34,267269271,0,0x0,8
tick,0x7ffc909efd34,267284882,0,0x0,8
tick,0x7ffc909efd34,267300095,0,0x0,8
tick,0x7ffc909efd34,267315883,0,0x0,8
tick,0x7ffc909efd34,267331525,0,0x0,8
tick,0x7ffc909efd34,267347049,0,0x0,8
tick,0x7ffc909efd34,267362557,0,0x0,8
tick,0x7ffc909efd34,267378484,0,0x0,8
tick,0x7ffc909efd34,267394063,0,0x0,8
tick,0x7ffc909efd34,267409424,0,0x0,8
tick,0x7ffc909efd34,267424563,0,0x0,8
tick,0x7ffc909efd34,267440217,0,0x0,8
tick,0x7ffc909efd34,267455362,0,0x0,8
tick,0x7ffc909efd34,267470557,0,0x0,8
tick,0x7ffc909efd34,267485921,0,0x0,8
tick,0x7ffc909efd34,267501281,0,0x0,8
tick,0x7ffc909efd34,267516624,0,0x0,8
tick,0x7ffc909efd34,267532098,0,0x0,8
tick,0x7ffc909efd34,267547655,0,0x0,8
tick,0x7ffc909efd34,267563028,0,0x0,8
tick,0x7ffc909efd34,267578294,0,0x0,8
tick,0x7ffc909efd34,267593994,0,0x0,8
tick,0x7ffc909efd34,267609152,0,0x0,8
tick,0x7ffc909efd34,267625356,0,0x0,8
tick,0x7ffc909efd34,267641211,0,0x0,8
tick,0x7ffc909efd34,267656792,0,0x0,8
tick,0x7ffc909efd34,267672404,0,0x0,8
tick,0x7ffc909efd34,267688575,0,0x0,8
tick,0x7ffc909efd34,267704046,0,0x0,8
tick,0x7ffc909efd34,267719266,0,0x0,8
tick,0x7ffc909efd34,267734677,0,0x0,8
tick,0x7ffc909efd34,267750056,0,0x0,8
tick,0x7ffc909efd34,267766041,0,0x0,8
tick,0x7ffc909efd34,267781308,0,0x0,8
tick,0x7ffc909efd34,267797244,0,0x0,8
tick,0x7ffc909efd34,267812386,0,0x0,8
tick,0x7ffc909efd34,267827745,0,0x0,8
tick,0x7ffc909efd34,267843060,0,0x0,8
tick,0x7ffc909efd34,267858180,0,0x0,8
tick,0x7ffc909efd34,267873575,0,0x0,8
tick,0x7ffc909efd34,267889294,0,0x0,8
tick,0x7ffc909efd34,267904759,0,0x0,8
tick,0x7ffc909efd34,267920410,0,0x0,8
tick,0x7ffc909efd34,267936122,0,0x0,8
tick,0x7ffc909efd34,267951526,0,0x0,8
tick,0x7ffc909efd34,267967114,0,0x0,8
tick,0x7ffc909efd34,267982675,0,0x0,8
tick,0x7ffc909efd34,267998273,0,0x0,8
tick,0x7ffc909efd34,268013910,0,0x0,8
tick,0x7ffc909efd34,268029867,0,0x0,8
tick,0x7ffc909efd34,268045913,0,0x0,8
tick,0x7ffc909efd34,268061804,0,0x0,8
tick,0x7ffc909efd34,268077542,0,0x0,8
tick,0x7ffc909efd34,268093561,0,0x0,8
tick,0x7ffc909efd34,268109295,0,0x0,8
tick,0x7ffc909efd34,268125200,0,0x0,8
tick,0x7ffc909efd34,268141151,0,0x0,8
tick,0x7ffc909efd34,268156400,0,0x0,8
tick,0x7ffc909efd34,268171738,0,0x0,8
tick,0x7ffc909efd34,268187504,0,0x0,8
tick,0x7ffc909efd34,268202865,0,0x0,8
tick,0x7ffc909efd34,268218600,0,0x0,8
tick,0x7ffc909efd34,268234273,0,0x0,8
tick,0x7ffc909efd34,268249387,0,0x0,8
tick,0x7ffc909efd34,268264976,0,0x0,8
tick,0x7ffc909efd34,268280222,0,0x0,8
tick,0x7ffc909efd34,268295720,0,0x0,8
tick,0x7ffc909efd34,268311188,0,0x0,8
tick,0x7ffc909efd34,268327414,0,0x0,8
tick,0x7ffc909efd34,268343046,0,0x0,8
tick,0x7ffc909efd34,268358728,0,0x0,8
tick,0x7ffc909efd34,268374153,0,0x0,8
tick,0x7ffc909efd34,268389653,0,0x0,8
tick,0x7ffc909efd34,268404572,0,0x0,8
tick,0x7ffc909efd34,268420372,0,0x0,8
tick,0x7ffc909efd34,268436078,0,0x0,8
tick,0x7ffc909efd34,268451883,0,0x0,8
tick,0x7ffc909efd34,268467265,0,0x0,8
tick,0x7ffc909efd34,268483530,0,0x0,8
tick,0x7ffc909efd34,268499725,0,0x0,8
tick,0x7ffc909efd34,268515799,0,0x0,8
tick,0x7ffc909efd34,268530878,0,0x0,8
tick,0x7ffc909efd34,268546089,0,0x0,8
tick,0x7ffc909efd34,268561730,0,0x0,8
tick,0x7ffc909efd34,268577554,0,0x0,8
tick,0x7ffc909efd34,268592723,0,0x0,8
tick,0x7ffc909efd34,268607943,0,0x0,8
tick,0x7ffc909efd34,268623428,0,0x0,8
tick,0x7ffc909efd34,268639931,0,0x0,8
tick,0x7ffc909efd34,268655659,0,0x0,8
tick,0x7ffc909efd34,268671608,0,0x0,8
tick,0x7ffc909efd34,268687765,0,0x0,8
tick,0x7ffc909efd34,268703324,0,0x0,8
tick,0x7ffc909efd34,268718296,0,0x0,8
tick,0x7ffc909efd34,268733957,0,0x0,8
tick,0x7ffc909efd34,268749490,0,0x0,8
tick,0x7ffc909efd34,268765040,0,0x0,8
tick,0x7ffc909efd34,268780165,0,0x0,8
tick,0x7ffc909efd34,268795684,0,0x0,8
tick,0x7ffc909efd34,268811006,0,0x0,8
tick,0x7ffc909efd34,268826394,0,0x0,8
tick,0x7ffc909efd34,268842064,0,0x0,8
tick,0x7ffc909efd34,268857566,0,0x0,8
tick,0x7ffc909efd34,268873874,0,0x0,8
tick,0x7ffc909efd34,268889201,0,0x0,8
tick,0x7ffc909efd34,268905143,0,0x0,8
tick,0x7ffc909efd34,268920221,0,0x0,8
tick,0x7ffc909efd34,268936539,0,0x0,8
tick,0x7ffc909efd34,268952072,0,0x0,8
tick,0x7ffc909efd34,268968451,0,0x0,8
tick,0x7ffc909efd34,268984386,0,0x0,8
tick,0x7ffc909efd34,269000333,0,0x0,8
tick,0x7ffc909efd34,269016337,0,0x0,8
tick,0x7ffc909efd34,269032015,0,0x0,8
tick,0x7ffc909efd34,269047869,0,0x0,8
tick,0x7ffc909efd34,269063451,0,0x0,8
tick,0x7ffc909efd34,269079204,0,0x0,8
tick,0x7ffc909efd34,269095119,0,0x0,8
tick,0x7ffc909efd34,269110865,0,0x0,8
tick,0x7ffc909efd34,269126871,0,0x0,8
tick,0x7ffc909efd34,269142513,0,0x0,8
tick,0x7ffc909efd34,269157818,0,0x0,8
tick,0x7ffc909efd34,269173302,0,0x0,8
tick,0x7ffc909efd34,269189095,0,0x0,8
tick,0x7ffc909efd34,269204241,0,0x0,8
tick,0x7ffc909efd34,269219433,0,0x0,8
tick,0x7ffc909efd34,269234983,0,0x0,8
tick,0x7ffc909efd34,269250102,0,0x0,8
tick,0x7ffc909efd34,269265141,0,0x0,8
tick,0x7ffc909efd34,269280307,0,0x0,8
tick,0x7ffc909efd34,269295902,0,0x0,8
tick,0x7ffc909efd34,269311290,0,0x0,8
tick,0x7ffc909efd34,269327384,0,0x0,8
tick,0x7ffc909efd34,269341875,0,0x0,8
tick,0x7ffc909efd34,269357478,0,0x0,8
tick,0x7ffc909efd34,269372467,0,0x0,8
tick,0x7ffc909efd34,269387831,0,0x0,8
tick,0x7ffc909efd34,269402969,0,0x0,8
tick,0x7ffc909efd34,269418713,0,0x0,8
tick,0x7ffc909efd34,269434378,0,0x0,8
tick,0x7ffc909efd34,269450021,0,0x0,8
tick,0x7ffc909efd34,269465253,0,0x0,8
tick,0x7ffc909efd34,269480704,0,0x0,8
tick,0x7ffc909efd34,269497027,0,0x0,8
tick,0x7ffc909efd34,269512292,0,0x0,8
tick,0x7ffc909efd34,269527824,0,0x0,8
tick,0x7ffc909efd34,269543662,0,0x0,8
tick,0x7ffc909efd34,269559548,0,0x0,8
tick,0x7ffc909efd34,269575363,0,0x0,8
tick,0x7ffc909efd34,269590529,0,0x0,8
tick,0x7ffc909efd34,269606427,0,0x0,8
tick,0x7ffc909efd34,269621410,0,0x0,8
tick,0x7ffc909efd34,269637200,0,0x0,8
tick,0x7ffc909efd34,269652482,0,0x0,8
tick,0x7ffc909efd34,269668067,0,0x0,8
tick,0x7ffc909efd34,269683168,0,0x0,8
tick,0x7ffc909efd34,269699497,0,0x0,8
tick,0x7ffc909efd34,269715495,0,0x0,8
tick,0x7ffc909efd34,269731218,0,0x0,8
tick,0x7ffc909efd34,269747494,0,0x0,8
tick,0x7ffc909efd34,269763395,0,0x0,8
tick,0x7ffc909efd34,269779491,0,0x0,8
tick,0x7ffc909efd34,269795724,0,0x0,8
tick,0x7ffc909efd34,269811099,0,0x0,8
tick,0x7ffc909efd34,269826167,0,0x0,8
tick,0x7ffc909efd34,269841797,0,0x0,8
tick,0x7ffc909efd34,269857269,0,0x0,8
tick,0x7ffc909efd34,269873834,0,0x0,8
tick,0x7ffc909efd34,269888265,0,0x0,8
tick,0x7ffc909efd34,269903414,0,0x0,8
tick,0x7ffc909efd34,269919760,0,0x0,8
tick,0x7ffc909efd34,269935252,0,0x0,8
tick,0x7ffc909efd34,269951262,0,0x0,8
tick,0x7ffc909efd34,269966727,0,0x0,8
tick,0x7ffc909efd34,269982173,0,0x0,8
tick,0x7ffc909efd34,269997390,0,0x0,8
tick,0x7ffc909efd34,270013074,0,0x0,8
tick,0x7ffc909efd34,270028339,0,0x0,8
tick,0x7ffc909efd34,270044379,0,0x0,8
tick,0x7ffc909efd34,270060378,0,0x0,8
tick,0x7ffc909efd34,270075466,0,0x0,8
tick,0x7ffc909efd34,270091240,0,0x0,8
tick,0x7ffc909efd34,270107009,0,0x0,8
tick,0x7ffc909efd34,270122022,0,0x0,8
tick,0x7ffc909efd34,270137995,0,0x0,8
tick,0x7ffc909efd34,270153616,0,0x0,8
tick,0x7ffc909efd34,270169975,0,0x0,8
tick,0x7ffc909efd34,270185837,0,0x0,8
tick,0x7ffc909efd34,270200731,0,0x0,8
tick,0x7ffc909efd34,270216419,0,0x0,8
tick,0x7ffc909efd34,270231896,0,0x0,8
tick,0x7ffc909efd34,270247413,0,0x0,8
tick,0x7ffc909efd34,270262801,0,0x0,8
tick,0x7ffc909efd34,270278403,0,0x0,8
tick,0x7ffc909efd34,270294274,0,0x0,8
tick,0x7ffc909efd34,270309951,0,0x0,8
tick,0x7ffc909efd34,270325641,0,0x0,8
tick,0x7ffc909efd34,270340742,0,0x0,8
tick,0x7ffc909efd34,270357006,0,0x0,8
tick,0x7ffc909efd34,270372778,0,0x0,8
tick,0x7ffc909efd34,270387876,0,0x0,8
tick,0x7ffc909efd34,270403538,0,0x0,8
tick,0x7ffc909efd34,270419880,0,0x0,8
tick,0x7ffc909efd34,270435632,0,0x0,8
tick,0x7ffc909efd34,270450905,0,0x0,8
tick,0x7ffc909efd34,270466135,0,0x0,8
tick,0x7ffc909efd34,270481815,0,0x0,8
tick,0x7ffc909efd34,270497248,0,0x0,8
tick,0x7ffc909efd34,270512650,0,0x0,8
tick,0x7ffc909efd34,270527869,0,0x0,8
tick,0x7ffc909efd34,270543049,0,0x0,8
tick,0x7ffc909efd34,270558650,0,0x0,8
tick,0x7ffc909efd34,270574737,0,0x0,8
tick,0x7ffc909efd34,270590050,0,0x0,8
tick,0x7ffc909efd34,270606008,0,0x0,8
tick,0x7ffc909efd34,270622150,0,0x0,8
tick,0x7ffc909efd34,270637417,0,0x0,8
tick,0x7ffc909efd34,270652971,0,0x0,8
tick,0x7ffc909efd34,270668132,0,0x0,8
tick,0x7ffc909efd34,270683559,0,0x0,8
tick,0x7ffc909efd34,270699641,0,0x0,8
tick,0x7ffc909efd34,270715028,0,0x0,8
tick,0x7ffc909efd34,270731190,0,0x0,8
tick,0x7ffc909efd34,270746824,0,0x0,8
tick,0x7ffc909efd34,270762662,0,0x0,8
tick,0x7ffc909efd34,270778152,0,0x0,8
tick,0x7ffc909efd34,270793618,0,0x0,8
tick,0x7ffc909efd34,270809995,0,0x0,8
tick,0x7ffc909efd34,270825076,0,0x0,8
tick,0x7ffc909efd34,270840318,0,0x0,8
tick,0x7ffc909efd34,270855712,0,0x0,8
tick,0x7ffc909efd34,270871540,0,0x0,8
tick,0x7ffc909efd34,270887238,0,0x0,8
tick,0x7ffc909efd34,270903172,0,0x0,8
tick,0x7ffc909efd34,270918656,0,0x0,8
tick,0x7ffc909efd34,270934198,0,0x0,8
tick,0x7ffc909efd34,270949912,0,0x0,8
tick,0x7ffc909efd34,270965539,0,0x0,8
tick,0x7ffc909efd34,270981037,0,0x0,8
tick,0x7ffc909efd34,270997057,0,0x0,8
tick,0x7ffc909efd34,271012524,0,0x0,8
tick,0x7ffc909efd34,271028273,0,0x0,8
tick,0x7ffc909efd34,271043202,0,0x0,8
tick,0x7ffc909efd34,271058640,0,0x0,8
tick,0x7ffc909efd34,271074651,0,0x0,8
tick,0x7ffc909efd34,271090187,0,0x0,8
tick,0x7ffc909efd34,271105939,0,0x0,8
tick,0x7ffc909efd34,271121716,0,0x0,8
tick,0x7ffc909efd34,271137624,0,0x0,8
tick,0x7ffc909efd34,271152385,0,0x0,8
tick,0x7ffc909efd34,271168250,0,0x0,8
tick,0x7ffc909efd34,271184217,0,0x0,8
tick,0x7ffc909efd34,271199691,0,0x0,8
tick,0x7ffc909efd34,271215614,0,0x0,8
tick,0x7ffc909efd34,271231177,0,0x0,8
tick,0x7ffc909efd34,271246833,0,0x0,8
tick,0x7ffc909efd34,271262455,0,0x0,8
tick,0x7ffc909efd34,271277789,0,0x0,8
tick,0x7ffc909efd34,271293242,0,0x0,8
tick,0x7ffc909efd34,271308631,0,0x0,8
tick,0x7ffc909efd34,271324647,0,0x0,8
tick,0x7ffc909efd34,271340669,0,0x0,8
tick,0x7ffc909efd34,271355947,0,0x0,8
tick,0x7ffc909efd34,271371590,0,0x0,8
tick,0x7ffc909efd34,271387423,0,0x0,8
tick,0x7ffc909efd34,271402612,0,0x0,8
tick,0x7ffc909efd34,271417979,0,0x0,8
tick,0x7ffc909efd34,271433530,0,0x0,8
tick,0x7ffc909efd34,271448629,0,0x0,8
tick,0x7ffc909efd34,271464433,0,0x0,8
tick,0x7ffc909efd34,271480734,0,0x0,8
tick,0x7ffc909efd34,271496199,0,0x0,8
tick,0x7ffc909efd34,271511770,0,0x0,8
tick,0x7ffc909efd34,271527677,0,0x0,8
tick,0x7ffc909efd34,271543266,0,0x0,8
tick,0x7ffc909efd34,271558920,0,0x0,8
tick,0x7ffc909efd34,271574476,0,0x0,8
tick,0x7ffc909efd34,271589838,0,0x0,8
tick,0x7ffc909efd34,271605730,0,0x0,8
tick,0x7ffc909efd34,271622047,0,0x0,8
tick,0x7ffc909efd34,271637295,0,0x0,8
tick,0x7ffc909efd34,271652411,0,0x0,8
tick,0x7ffc909efd34,271667733,0,0x0,8
tick,0x7ffc909efd34,271683307,0,0x0,8
tick,0x7ffc909efd34,271698350,0,0x0,8
tick,0x7ffc909efd34,271713575,0,0x0,8
tick,0x7ffc909efd34,271729653,0,0x0,8
tick,0x7ffc909efd34,271745252,0,0x0,8
tick,0x7ffc909efd34,271760736,0,0x0,8
tick,0x7ffc909efd34,271775996,0,0x0,8
tick,0x7ffc909efd34,271791279,0,0x0,8
tick,0x7ffc909efd34,271807025,0,0x0,8
tick,0x7ffc909efd34,271822307,0,0x0,8
tick,0x7ffc909efd34,271837676,0,0x0,8
tick,0x7ffc909efd34,271853114,0,0x0,8
tick,0x7ffc909efd34,271868850,0,0x0,8
tick,0x7ffc909efd34,271885056,0,0x0,8
tick,0x7ffc909efd34,271900370,0,0x0,8
tick,0x7ffc909efd34,271915963,0,0x0,8
tick,0x7ffc909efd34,271931244,0,0x0,8
tick,0x7ffc909efd34,271946816,0,0x0,8
tick,0x7ffc909efd34,271962355,0,0x0,8
tick,0x7ffc909efd34,271978470,0,0x0,8
tick,0x7ffc909efd34,271993810,0,0x0,8
tick,0x7ffc909efd34,272009392,0,0x0,8
tick,0x7ffc909efd34,272024812,0,0x0,8
tick,0x7ffc909efd34,272040513,0,0x0,8
tick,0x7ffc909efd34,272055745,0,0x0,8
tick,0x7ffc909efd34,272071349,0,0x0,8
tick,0x7ffc909efd34,272086982,0,0x0,8
tick,0x7ffc909efd34,272102868,0,0x0,8
tick,0x7ffc909efd34,272118802,0,0x0,8
tick,0x7ffc909efd34,272134714,0,0x0,8
tick,0x7ffc909efd34,272150197,0,0x0,8
tick,0x7ffc909efd34,272165470,0,0x0,8
tick,0x7ffc909efd34,272180729,0,0x0,8
tick,0x7ffc909efd34,272196178,0,0x0,8
tick,0x7ffc909efd34,272211803,0,0x0,8
tick,0x7ffc909efd34,272227264,0,0x0,8
tick,0x7ffc909efd34,272242781,0,0x0,8
tick,0x7ffc909efd34,272257924,0,0x0,8
tick,0x7ffc909efd34,272273814,0,0x0,8
tick,0x7ffc909efd34,272289420,0,0x0,8
tick,0x7ffc909efd34,272304773,0,0x0,8
tick,0x7ffc909efd34,272320301,0,0x0,8
tick,0x7ffc909efd34,272336235,0,0x0,8
tick,0x7ffc909efd34,272351493,0,0x0,8
tick,0x7ffc909efd34,272367085,0,0x0,8
tick,0x7ffc909efd34,272383087,0,0x0,8
tick,0x7ffc909efd34,272398593,0,0x0,8
tick,0x7ffc909efd34,272414020,0,0x0,8
tick,0x7ffc909efd34,272429165,0,0x0,8
tick,0x7ffc909efd34,272444669,0,0x0,8
tick,0x7ffc909efd34,272461005,0,0x0,8
tick,0x7ffc909efd34,272476708,0,0x0,8
tick,0x7ffc909efd34,272492638,0,0x0,8
tick,0x7ffc909efd34,272508169,0,0x0,8
tick,0x7ffc909efd34,272524395,0,0x0,8
tick,0x7ffc909efd34,272539707,0,0x0,8
tick,0x7ffc909efd34,272555524,0,0x0,8
tick,0x7ffc909efd34,272570385,0,0x0,8
tick,0x7ffc909efd34,272585678,0,0x0,8
tick,0x7ffc909efd34,272601161,0,0x0,8
tick,0x7ffc909efd34,272616920,0,0x0,8
tick,0x7ffc909efd34,272632423,0,0x0,8
tick,0x7ffc909efd34,272648246,0,0x0,8
tick,0x7ffc909efd34,272663662,0,0x0,8
tick,0x7ffc909efd34,272679132,0,0x0,8
tick,0x7ffc909efd34,272694235,0,0x0,8
tick,0x7ffc909efd34,272709587,0,0x0,8
tick,0x7ffc909efd34,272725374,0,0x0,8
tick,0x7ffc909efd34,272741270,0,0x0,8
tick,0x7ffc909efd34,272756808,0,0x0,8
tick,0x7ffc909efd34,272772581,0,0x0,8
tick,0x7ffc909efd34,272788331,0,0x0,8
tick,0x7ffc909efd34,272803938,0,0x0,8
tick,0x7ffc909efd34,272819624,0,0x0,8
tick,0x7ffc909efd34,272835244,0,0x0,8
tick,0x7ffc909efd34,272850872,0,0x0,8
tick,0x7ffc909efd34,272866803,0,0x0,8
tick,0x7ffc909efd34,272882364,0,0x0,8
tick,0x7ffc909efd34,272898400,0,0x0,8
tick,0x7ffc909efd34,272913955,0,0x0,8
tick,0x7ffc909efd34,272929460,0,0x0,8
tick,0x7ffc909efd34,272945079,0,0x0,8
tick,0x7ffc909efd34,272961411,0,0x0,8
tick,0x7ffc909efd34,272977176,0,0x0,8
tick,0x7ffc909efd34,272993041,0,0x0,8
tick,0x7ffc909efd34,273008931,0,0x0,8
tick,0x7ffc909efd34,273024407,0,0x0,8
tick,0x7ffc909efd34,273039583,0,0x0,8
tick,0x7ffc909efd34,273055489,0,0x0,8
tick,0x7ffc909efd34,273070524,0,0x0,8
tick,0x7ffc909efd34,273085906,0,0x0,8
tick,0x7ffc909efd34,273101201,0,0x0,8
tick,0x7ffc909efd34,273116559,0,0x0,8
tick,0x7ffc909efd34,273132586,0,0x0,8
tick,0x7ffc909efd34,273148118,0,0x0,8
tick,0x7ffc909efd34,273163327,0,0x0,8
tick,0x7ffc909efd34,273179369,0,0x0,8
tick,0x7ffc909efd34,273195184,0,0x0,8
tick,0x7ffc909efd34,273210521,0,0x0,8
tick,0x7ffc909efd34,273226519,0,0x0,8
tick,0x7ffc909efd34,273242157,0,0x0,8
tick,0x7ffc909efd34,273257713,0,0x0,8
tick,0x7ffc909efd34,273273669,0,0x0,8
tick,0x7ffc909efd34,273289126,0,0x0,8
tick,0x7ffc909efd34,273305345,0,0x0,8
tick,0x7ffc909efd34,273320402,0,0x0,8
tick,0x7ffc909efd34,273336286,0,0x0,8
tick,0x7ffc909efd34,273352025,0,0x0,8
tick,0x7ffc909efd34,273367334,0,0x0,8
tick,0x7ffc909efd34,273382643,0,0x0,8
tick,0x7ffc909efd34,273398628,0,0x0,8
tick,0x7ffc909efd34,273414050,0,0x0,8
tick,0x7ffc909efd34,273429185,0,0x0,8
tick,0x7ffc909efd34,273444364,0,0x0,8
tick,0x7ffc909efd34,273459577,0,0x0,8
tick,0x7ffc909efd34,273474578,0,0x0,8
tick,0x7ffc909efd34,273489879,0,0x0,8
tick,0x7ffc909efd34,273505477,0,0x0,8
tick,0x7ffc909efd34,273520503,0,0x0,8
tick,0x7ffc909efd34,273535936,0,0x0,8
tick,0x7ffc909efd34,273551432,0,0x0,8
tick,0x7ffc909efd34,273567234,0,0x0,8
tick,0x7ffc909efd34,273582545,0,0x0,8
tick,0x7ffc909efd34,273597991,0,0x0,8
tick,0x7ffc909efd34,273613353,0,0x0,8
tick,0x7ffc909efd34,273629046,0,0x0,8
tick,0x7ffc909efd34,273644088,0,0x0,8
tick,0x7ffc909efd34,273659476,0,0x0,8
tick,0x7ffc909efd34,273674947,0,0x0,8
tick,0x7ffc909efd34,273690535,0,0x0,8
tick,0x7ffc909efd34,273706521,0,0x0,8
tick,0x7ffc909efd34,273721912,0,0x0,8
tick,0x7ffc909efd34,273737183,0,0x0,8
tick,0x7ffc909efd34,273753082,0,0x0,8
tick,0x7ffc909efd34,273768452,0,0x0,8
tick,0x7ffc909efd34,273784034,0,0x0,8
tick,0x7ffc909efd34,273800365,0,0x0,8
tick,0x7ffc909efd34,273816082,0,0x0,8
tick,0x7ffc909efd34,273831256,0,0x0,8
tick,0x7ffc909efd34,273846833,0,0x0,8
tick,0x7ffc909efd34,273862369,0,0x0,8
tick,0x7ffc909efd34,273878639,0,0x0,8
tick,0x7ffc909efd34,273894089,0,0x0,8
tick,0x7ffc909efd34,273910472,0,0x0,8
tick,0x7ffc909efd34,273925860,0,0x0,8
tick,0x7ffc909efd34,273941235,0,0x0,8
tick,0x7ffc909efd34,273957008,0,0x0,8
tick,0x7ffc909efd34,273972533,0,0x0,8
tick,0x7ffc909efd34,273988145,0,0x0,8
tick,0x7ffc909efd34,274003662,0,0x0,8
tick,0x7ffc909efd34,274019313,0,0x0,8
tick,0x7ffc909efd34,274034877,0,0x0,8
tick,0x7ffc909efd34,274050104,0,0x0,8
tick,0x7ffc909efd34,274065821,0,0x0,8
tick,0x7ffc909efd34,274081162,0,0x0,8
tick,0x7ffc909efd34,274096434,0,0x0,8
tick,0x7ffc909efd34,274111984,0,0x0,8
tick,0x7ffc909efd34,274127832,0,0x0,8
tick,0x7ffc909efd34,274143035,0,0x0,8
tick,0x7ffc909efd34,274159159,0,0x0,8
tick,0x7ffc909efd34,274174322,0,0x0,8
tick,0x7ffc909efd34,274189587,0,0x0,8
tick,0x7ffc909efd34,274205458,0,0x0,8
tick,0x7ffc909efd34,274220504,0,0x0,8
tick,0x7ffc909efd34,274236179,0,0x0,8
tick,0x7ffc909efd34,274252039,0,0x0,8
tick,0x7ffc909efd34,274267211,0,0x0,8
tick,0x7ffc909efd34,274283222,0,0x0,8
tick,0x7ffc909efd34,274298440,0,0x0,8
tick,0x7ffc909efd34,274313865,0,0x0,8
tick,0x7ffc909efd34,274329241,0,0x0,8
tick,0x7ffc909efd34,274345172,0,0x0,8
tick,0x7ffc909efd34,274361152,0,0x0,8
tick,0x7ffc909efd34,274376602,0,0x0,8
tick,0x7ffc909efd34,274392504,0,0x0,8
tick,0x7ffc909efd34,274408058,0,0x0,8
tick,0x7ffc909efd34,274424269,0,0x0,8
tick,0x7ffc909efd34,274439212,0,0x0,8
tick,0x7ffc909efd34,274454242,0,0x0,8
tick,0x7ffc909efd34,274469802,0,0x0,8
tick,0x7ffc909efd34,274485386,0,0x0,8
tick,0x7ffc909efd34,274500849,0,0x0,8
tick,0x7ffc909efd34,274516486,0,0x0,8
tick,0x7ffc909efd34,274531916,0,0x0,8
tick,0x7ffc909efd34,274547460,0,0x0,8
tick,0x7ffc909efd34,274563121,0,0x0,8
tick,0x7ffc909efd34,274579383,0,0x0,8
tick,0x7ffc909efd34,274594869,0,0x0,8
tick,0x7ffc909efd34,274610470,0,0x0,8
tick,0x7ffc909efd34,274626220,0,0x0,8
tick,0x7ffc909efd34,274642079,0,0x0,8
tick,0x7ffc909efd34,274657616,0,0x0,8
tick,0x7ffc909efd34,274673634,0,0x0,8
tick,0x7ffc909efd34,274689309,0,0x0,8
tick,0x7ffc909efd34,274704919,0,0x0,8
tick,0x7ffc909efd34,274720420,0,0x0,8
tick,0x7ffc909efd34,274735992,0,0x0,8
tick,0x7ffc909efd34,274751467,0,0x0,8
tick,0x7ffc909efd34,274766820,0,0x0,8
tick,0x7ffc909efd34,274782170,0,0x0,8
tick,0x7ffc909efd34,274798183,0,0x0,8
tick,0x7ffc909efd34,274813834,0,0x0,8
tick,0x7ffc909efd34,274829992,0,0x0,8
tick,0x7ffc909efd34,274844285,0,0x0,8
tick,0x7ffc909efd34,274860623,0,0x0,8
tick,0x7ffc909efd34,274875922,0,0x0,8
tick,0x7ffc909efd34,274891274,0,0x0,8
tick,0x7ffc909efd34,274906998,0,0x0,8
tick,0x7ffc909efd34,274922646,0,0x0,8
tick,0x7ffc909efd34,274938434,0,0x0,8
tick,0x7ffc909efd34,274953841,0,0x0,8
tick,0x7ffc909efd34,274969451,0,0x0,8
tick,0x7ffc909efd34,274985563,0,0x0,8
tick,0x7ffc909efd34,275000802,0,0x0,8
tick,0x7ffc909efd34,275016104,0,0x0,8
tick,0x7ffc909efd34,275031760,0,0x0,8
tick,0x7ffc909efd34,275047601,0,0x0,8
tick,0x7ffc909efd34,275063037,0,0x0,8
tick,0x7ffc909efd34,275078453,0,0x0,8
tick,0x7ffc909efd34,275093926,0,0x0,8
tick,0x7ffc909efd34,275109379,0,0x0,8
tick,0x7ffc909efd34,275125320,0,0x0,8
tick,0x7ffc909efd34,275140696,0,0x0,8
tick,0x7ffc909efd34,275156521,0,0x0,8
tick,0x7ffc909efd34,275172017,0,0x0,8
tick,0x7ffc909efd34,275187252,0,0x0,8
tick,0x7ffc909efd34,275203407,0,0x0,8
tick,0x7ffc909efd34,275219464,0,0x0,8
tick,0x7ffc909efd34,275234922,0,0x0,8
tick,0x7ffc909efd34,275250223,0,0x0,8
tick,0x7ffc909efd34,275266154,0,0x0,8
tick,0x7ffc909efd34,275282030,0,0x0,8
tick,0x7ffc909efd34,275297929,0,0x0,8
tick,0x7ffc909efd34,275313765,0,0x0,8
tick,0x7ffc909efd34,275329310,0,0x0,8
tick,0x7ffc909efd34,275345426,0,0x0,8
tick,0x7ffc909efd34,275360847,0,0x0,8
tick,0x7ffc909efd34,275376251,0,0x0,8
tick,0x7ffc909efd34,275391640,0,0x0,8
tick,0x7ffc909efd34,275406947,0,0x0,8
tick,0x7ffc909efd34,275422973,0,0x0,8
tick,0x7ffc909efd34,275438287,0,0x0,8
tick,0x7ffc909efd34,275453244,0,0x0,8
tick,0x7ffc909efd34,275468248,0,0x0,8
tick,0x7ffc909efd34,275483576,0,0x0,8
tick,0x7ffc909efd34,275498725,0,0x0,8
tick,0x7ffc909efd34,275514368,0,0x0,8
tick,0x7ffc909efd34,275530359,0,0x0,8
tick,0x7ffc909efd34,275545960,0,0x0,8
tick,0x7ffc909efd34,275561472,0,0x0,8
tick,0x7ffc909efd34,275576855,0,0x0,8
tick,0x7ffc909efd34,275592360,0,0x0,8
tick,0x7ffc909efd34,275608156,0,0x0,8
tick,0x7ffc909efd34,275624154,0,0x0,8
tick,0x7ffc909efd34,275639463,0,0x0,8
tick,0x7ffc909efd34,275654952,0,0x0,8
tick,0x7ffc909efd34,275670256,0,0x0,8
tick,0x7ffc909efd34,275686525,0,0x0,8
tick,0x7ffc909efd34,275702395,0,0x0,8
tick,0x7ffc909efd34,275717755,0,0x0,8
tick,0x7ffc909efd34,275733386,0,0x0,8
tick,0x7ffc909efd34,275748937,0,0x0,8
tick,0x7ffc909efd34,275764648,0,0x0,8
tick,0x7ffc909efd34,275780505,0,0x0,8
tick,0x7ffc909efd34,275796414,0,0x0,8
tick,0x7ffc909efd34,275811956,0,0x0,8
tick,0x7ffc909efd34,275827329,0,0x0,8
tick,0x7ffc909efd34,275842850,0,0x0,8
tick,0x7ffc909efd34,275859148,0,0x0,8
tick,0x7ffc909efd34,275874414,0,0x0,8
tick,0x7ffc909efd34,275890393,0,0x0,8
tick,0x7ffc909efd34,275905949,0,0x0,8
tick,0x7ffc909efd34,275921506,0,0x0,8
tick,0x7ffc909efd34,275937073,0,0x0,8
tick,0x7ffc909efd34,275952451,0,0x0,8
tick,0x7ffc909efd34,275968593,0,0x0,8
tick,0x7ffc909efd34,275984116,0,0x0,8
tick,0x7ffc909efd34,275999700,0,0x0,8
tick,0x7ffc909efd34,276015461,0,0x0,8
tick,0x7ffc909efd34,276031278,0,0x0,8
tick,0x7ffc909efd34,276046956,0,0x0,8
tick,0x7ffc909efd34,276062429,0,0x0,8
tick,0x7ffc909efd34,276078068,0,0x0,8
tick,0x7ffc909efd34,276094062,0,0x0,8
tick,0x7ffc909efd34,276108713,0,0x0,8
tick,0x7ffc909efd34,276124520,0,0x0,8
tick,0x7ffc909efd34,276139951,0,0x0,8
tick,0x7ffc909efd34,276155550,0,0x0,8
tick,0x7ffc909efd34,276171257,0,0x0,8
tick,0x7ffc909efd34,276186929,0,0x0,8
tick,0x7ffc909efd34,276202273,0,0x0,8
tick,0x7ffc909efd34,276217637,0,0x0,8
tick,0x7ffc909efd34,276233344,0,0x0,8
tick,0x7ffc909efd34,276249010,0,0x0,8
tick,0x7ffc909efd34,276264689,0,0x0,8
tick,0x7ffc909efd34,276280008,0,0x0,8
tick,0x7ffc909efd34,276296371,0,0x0,8
tick,0x7ffc909efd34,276311539,0,0x0,8
tick,0x7ffc909efd34,276327259,0,0x0,8
tick,0x7ffc909efd34,276342940,0,0x0,8
tick,0x7ffc909efd34,276359028,0,0x0,8
tick,0x7ffc909efd34,276373849,0,0x0,8
tick,0x7ffc909efd34,276389195,0,0x0,8
tick,0x7ffc909efd34,276404462,0,0x0,8
tick,0x7ffc909efd34,276419684,0,0x0,8
tick,0x7ffc909efd34,276435155,0,0x0,8
tick,0x7ffc909efd34,276450707,0,0x0,8
tick,0x7ffc909efd34,276466374,0,0x0,8
tick,0x7ffc909efd34,276481829,0,0x0,8
tick,0x7ffc909efd34,276497516,0,0x0,8
tick,0x7ffc909efd34,276513069,0,0x0,8
tick,0x7ffc909efd34,276528198,0,0x0,8
tick,0x7ffc909efd34,276543470,0,0x0,8
tick,0x7ffc909efd34,276559198,0,0x0,8
tick,0x7ffc909efd34,276575138,0,0x0,8
tick,0x7ffc909efd34,276590804,0,0x0,8
tick,0x7ffc909efd34,276606766,0,0x0,8
tick,0x7ffc909efd34,276622322,0,0x0,8
tick,0x7ffc909efd34,276638141,0,0x0,8
tick,0x7ffc909efd34,276653514,0,0x0,8
tick,0x7ffc909efd34,276669733,0,0x0,8
tick,0x7ffc909efd34,276684614,0,0x0,8
tick,0x7ffc909efd34,276700000,0,0x0,8
tick,0x7ffc909efd34,276715519,0,0x0,8
tick,0x7ffc909efd34,276730827,0,0x0,8
tick,0x7ffc909efd34,276746440,0,0x0,8
tick,0x7ffc909efd34,276761902,0,0x0,8
tick,0x7ffc909efd34,276777479,0,0x0,8
tick,0x7ffc909efd34,276792703,0,0x0,8
tick,0x7ffc909efd34,276808352,0,0x0,8
tick,0x7ffc909efd34,276823687,0,0x0,8
tick,0x7ffc909efd34,276839036,0,0x0,8
tick,0x7ffc909efd34,276854752,0,0x0,8
tick,0x7ffc909efd34,276870880,0,0x0,8
tick,0x7ffc909efd34,276886239,0,0x0,8
tick,0x7ffc909efd34,276901741,0,0x0,8
tick,0x7ffc909efd34,276917268,0,0x0,8
tick,0x7ffc909efd34,276933346,0,0x0,8
tick,0x7ffc909efd34,276948870,0,0x0,8
tick,0x7ffc909efd34,276964344,0,0x0,8
tick,0x7ffc909efd34,276979901,0,0x0,8
tick,0x7ffc909efd34,276995000,0,0x0,8
tick,0x7ffc909efd34,277010182,0,0x0,8
tick,0x7ffc909efd34,277025462,0,0x0,8
tick,0x7ffc909efd34,277041258,0,0x0,8
tick,0x7ffc909efd34,277056695,0,0x0,8
tick,0x7ffc909efd34,277072473,0,0x0,8
tick,0x7ffc909efd34,277088264,0,0x0,8
tick,0x7ffc909efd34,277103445,0,0x0,8
tick,0x7ffc909efd34,277119557,0,0x0,8
tick,0x7ffc909efd34,277134767,0,0x0,8
tick,0x7ffc909efd34,277150005,0,0x0,8
tick,0x7ffc909efd34,277165281,0,0x0,8
tick,0x7ffc909efd34,277180490,0,0x0,8
tick,0x7ffc909efd34,277196389,0,0x0,8
tick,0x7ffc909efd34,277212239,0,0x0,8
tick,0x7ffc909efd34,277228009,0,0x0,8
tick,0x7ffc909efd34,277243829,0,0x0,8
tick,0x7ffc909efd34,277259870,0,0x0,8
tick,0x7ffc909efd34,277275220,0,0x0,8
tick,0x7ffc909efd34,277291009,0,0x0,8
tick,0x7ffc909efd34,277306631,0,0x0,8
tick,0x7ffc909efd34,277321955,0,0x0,8
tick,0x7ffc909efd34,277337364,0,0x0,8
tick,0x7ffc909efd34,277353057,0,0x0,8
tick,0x7ffc909efd34,277368450,0,0x0,8
tick,0x7ffc909efd34,277383800,0,0x0,8
tick,0x7ffc909efd34,277399894,0,0x0,8
tick,0x7ffc909efd34,277415967,0,0x0,8
tick,0x7ffc909efd34,277431269,0,0x0,8
tick,0x7ffc909efd34,277446881,0,0x0,8
tick,0x7ffc909efd34,277462575,0,0x0,8
tick,0x7ffc909efd34,277478273,0,0x0,8
tick,0x7ffc909efd34,277494465,0,0x0,8
tick,0x7ffc909efd34,277510082,0,0x0,8
tick,0x7ffc909efd34,277525701,0,0x0,8
tick,0x7ffc909efd34,277540774,0,0x0,8
tick,0x7ffc909efd34,277556279,0,0x0,8
tick,0x7ffc909efd34,277572028,0,0x0,8
tick,0x7ffc909efd34,277587820,0,0x0,8
tick,0x7ffc909efd34,277603210,0,0x0,8
tick,0x7ffc909efd34,277618847,0,0x0,8
tick,0x7ffc909efd34,277634276,0,0x0,8
tick,0x7ffc909efd34,277649937,0,0x0,8
tick,0x7ffc909efd34,277665445,0,0x0,8
tick,0x7ffc909efd34,277680888,0,0x0,8
tick,0x7ffc909efd34,277696174,0,0x0,8
tick,0x7ffc909efd34,277711736,0,0x0,8
tick,0x7ffc909efd34,277727105,0,0x0,8
tick,0x7ffc909efd34,277742669,0,0x0,8
tick,0x7ffc909efd34,277758059,0,0x0,8
tick,0x7ffc909efd34,277773713,0,0x0,8
tick,0x7ffc909efd34,277789556,0,0x0,8
tick,0x7ffc909efd34,277805606,0,0x0,8
tick,0x7ffc909efd34,277821009,0,0x0,8
tick,0x7ffc909efd34,277836257,0,0x0,8
tick,0x7ffc909efd34,277851875,0,0x0,8
tick,0x7ffc909efd34,277867582,0,0x0,8
tick,0x7ffc909efd34,277883376,0,0x0,8
tick,0x7ffc909efd34,277899504,0,0x0,8
tick,0x7ffc909efd34,277914939,0,0x0,8
tick,0x7ffc909efd34,277930547,0,0x0,8
tick,0x7ffc909efd34,277945803,0,0x0,8
tick,0x7ffc909efd34,277962072,0,0x0,8
tick,0x7ffc909efd34,277977354,0,0x0,8
tick,0x7ffc909efd34,277993352,0,0x0,8
tick,0x7ffc909efd34,278009118,0,0x0,8
tick,0x7ffc909efd34,278024612,0,0x0,8
tick,0x7ffc909efd34,278039936,0,0x0,8
tick,0x7ffc909efd34,278055287,0,0x0,8
tick,0x7ffc909efd34,278071372,0,0x0,8
tick,0x7ffc909efd34,278086443,0,0x0,8
tick,0x7ffc909efd34,278102349,0,0x0,8
tick,0x7ffc909efd34,278118051,0,0x0,8
tick,0x7ffc909efd34,278133485,0,0x0,8
tick,0x7ffc909efd34,278149826,0,0x0,8
tick,0x7ffc909efd34,278165896,0,0x0,8
tick,0x7ffc909efd34,278181171,0,0x0,8
tick,0x7ffc909efd34,278196897,0,0x0,8
tick,0x7ffc909efd34,278212419,0,0x0,8
tick,0x7ffc909efd34,278228478,0,0x0,8
tick,0x7ffc909efd34,278244103,0,0x0,8
tick,0x7ffc909efd34,278259321,0,0x0,8
tick,0x7ffc909efd34,278275388,0,0x0,8
tick,0x7ffc909efd34,278291079,0,0x0,8
tick,0x7ffc909efd34,278307016,0,0x0,8
tick,0x7ffc909efd34,278322550,0,0x0,8
tick,0x7ffc909efd34,278338733,0,0x0,8
tick,0x7ffc909efd34,278353885,0,0x0,8
tick,0x7ffc909efd34,278369542,0,0x0,8
tick,0x7ffc909efd34,278385191,0,0x0,8
tick,0x7ffc909efd34,278400728,0,0x0,8
tick,0x7ffc909efd34,278416467,0,0x0,8
tick,0x7ffc909efd34,278431788,0,0x0,8
tick,0x7ffc909efd34,278447031,0,0x0,8
tick,0x7ffc909efd34,278462559,0,0x0,8
tick,0x7ffc909efd34,278478014,0,0x0,8
tick,0x7ffc909efd34,278493603,0,0x0,8
tick,0x7ffc909efd34,278508562,0,0x0,8
tick,0x7ffc909efd34,278524001,0,0x0,8
tick,0x7ffc909efd34,278539361,0,0x0,8
tick,0x7ffc909efd34,278555146,0,0x0,8
tick,0x7ffc909efd34,278571351,0,0x0,8
tick,0x7ffc909efd34,278587025,0,0x0,8
tick,0x7ffc909efd34,278602662,0,0x0,8
tick,0x7ffc909efd34,278617913,0,0x0,8
tick,0x7ffc909efd34,278633753,0,0x0,8
tick,0x7ffc909efd34,278648565,0,0x0,8
tick,0x7ffc909efd34,278663363,0,0x0,8
tick,0x7ffc909efd34,278678713,0,0x0,8
tick,0x7ffc909efd34,278694156,0,0x0,8
tick,0x7ffc909efd34,278709988,0,0x0,8
tick,0x7ffc909efd34,278725190,0,0x0,8
tick,0x7ffc909efd34,278740426,0,0x0,8
tick,0x7ffc909efd34,278756440,0,0x0,8
tick,0x7ffc909efd34,278771714,0,0x0,8
tick,0x7ffc909efd34,278786939,0,0x0,8
tick,0x7ffc909efd34,278803039,0,0x0,8
tick,0x7ffc909efd34,278819164,0,0x0,8
tick,0x7ffc909efd34,278835405,0,0x0,8
tick,0x7ffc909efd34,278851690,0,0x0,8
tick,0x7ffc909efd34,278866994,0,0x0,8
tick,0x7ffc909efd34,278883253,0,0x0,8
tick,0x7ffc909efd34,278898486,0,0x0,8
tick,0x7ffc909efd34,278914113,0,0x0,8
tick,0x7ffc909efd34,278930083,0,0x0,8
tick,0x7ffc909efd34,278945389,0,0x0,8
tick,0x7ffc909efd34,278961029,0,0x0,8
tick,0x7ffc909efd34,278976547,0,0x0,8
tick,0x7ffc909efd34,278992337,0,0x0,8
tick,0x7ffc909efd34,279008112,0,0x0,8
tick,0x7ffc909efd34,279024108,0,0x0,8
tick,0x7ffc909efd34,279039132,0,0x0,8
tick,0x7ffc909efd34,279055175,0,0x0,8
tick,0x7ffc909efd34,279070311,0,0x0,8
tick,0x7ffc909efd34,279086489,0,0x0,8
tick,0x7ffc909efd34,279102122,0,0x0,8
tick,0x7ffc909efd34,279117190,0,0x0,8
tick,0x7ffc909efd34,279133199,0,0x0,8
tick,0x7ffc909efd34,279148380,0,0x0,8
tick,0x7ffc909efd34,279163406,0,0x0,8
tick,0x7ffc909efd34,279179400,0,0x0,8
tick,0x7ffc909efd34,279194724,0,0x0,8
tick,0x7ffc909efd34,279210148,0,0x0,8
tick,0x7ffc909efd34,279226508,0,0x0,8
tick,0x7ffc909efd34,279242219,0,0x0,8
tick,0x7ffc909efd34,279257638,0,0x0,8
tick,0x7ffc909efd34,279273434,0,0x0,8
tick,0x7ffc909efd34,279289008,0,0x0,8
tick,0x7ffc909efd34,279304316,0,0x0,8
tick,0x7ffc909efd34,279320052,0,0x0,8
tick,0x7ffc909efd34,279335452,0,0x0,8
tick,0x7ffc909efd34,279350857,0,0x0,8
tick,0x7ffc909efd34,279366493,0,0x0,8
tick,0x7ffc909efd34,279381891,0,0x0,8
tick,0x7ffc909efd34,279397188,0,0x0,8
tick,0x7ffc909efd34,279412394,0,0x0,8
tick,0x7ffc909efd34,279428316,0,0x0,8
tick,0x7ffc909efd34,279443403,0,0x0,8
tick,0x7ffc909efd34,279459432,0,0x0,8
tick,0x7ffc909efd34,279475651,0,0x0,8
tick,0x7ffc909efd34,279491108,0,0x0,8
tick,0x7ffc909efd34,279507357,0,0x0,8
tick,0x7ffc909efd34,279522976,0,0x0,8
tick,0x7ffc909efd34,279538793,0,0x0,8
tick,0x7ffc909efd34,279554585,0,0x0,8
tick,0x7ffc909efd34,279569836,0,0x0,8
tick,0x7ffc909efd34,279585161,0,0x0,8
tick,0x7ffc909efd34,279600481,0,0x0,8
tick,0x7ffc909efd34,279616082,0,0x0,8
tick,0x7ffc909efd34,279631946,0,0x0,8
tick,0x7ffc909efd34,279648008,0,0x0,8
tick,0x7ffc909efd34,279664110,0,0x0,8
tick,0x7ffc909efd34,279680080,0,0x0,8
tick,0x7ffc909efd34,279695088,0,0x0,8
tick,0x7ffc909efd34,279710698,0,0x0,8
tick,0x7ffc909efd34,279726704,0,0x0,8
tick,0x7ffc909efd34,279742185,0,0x0,8
tick,0x7ffc909efd34,279757648,0,0x0,8
tick,0x7ffc909efd34,279772932,0,0x0,8
tick,0x7ffc909efd34,279788129,0,0x0,8
tick,0x7ffc909efd34,279803398,0,0x0,8
tick,0x7ffc909efd34,279819297,0,0x0,8
tick,0x7ffc909efd34,279835183,0,0x0,8
tick,0x7ffc909efd34,279850827,0,0x0,8
tick,0x7ffc909efd34,279866889,0,0x0,8
tick,0x7ffc909efd34,279882074,0,0x0,8
tick,0x7ffc909efd34,279898145,0,0x0,8
tick,0x7ffc909efd34,279912978,0,0x0,8
tick,0x7ffc909efd34,279929016,0,0x0,8
tick,0x7ffc909efd34,279944199,0,0x0,8
tick,0x7ffc909efd34,279959478,0,0x0,8
tick,0x7ffc909efd34,279975598,0,0x0,8
tick,0x7ffc909efd34,279991523,0,0x0,8
tick,0x7ffc909efd34,280007427,0,0x0,8
tick,0x7ffc909efd34,280023513,0,0x0,8
tick,0x7ffc909efd34,280039017,0,0x0,8
tick,0x7ffc909efd34,280054304,0,0x0,8
tick,0x7ffc909efd34,280069359,0,0x0,8
tick,0x7ffc909efd34,280085037,0,0x0,8
tick,0x7ffc909efd34,280100289,0,0x0,8
tick,0x7ffc909efd34,280116331,0,0x0,8
tick,0x7ffc909efd34,280131730,0,0x0,8
tick,0x7ffc909efd34,280147110,0,0x0,8
tick,0x7ffc909efd34,280163056,0,0x0,8
tick,0x7ffc909efd34,280179296,0,0x0,8
tick,0x7ffc909efd34,280195452,0,0x0,8
tick,0x7ffc909efd34,280211210,0,0x0,8
tick,0x7ffc909efd34,280226452,0,0x0,8
tick,0x7ffc909efd34,280241794,0,0x0,8
tick,0x7ffc909efd34,280257228,0,0x0,8
tick,0x7ffc909efd34,280272343,0,0x0,8
tick,0x7ffc909efd34,280288132,0,0x0,8
tick,0x7ffc909efd34,280304110,0,0x0,8
tick,0x7ffc909efd34,280319215,0,0x0,8
tick,0x7ffc909efd34,280335039,0,0x0,8
tick,0x7ffc909efd34,280350727,0,0x0,8
tick,0x7ffc909efd34,280366381,0,0x0,8
tick,0x7ffc909efd34,280381999,0,0x0,8
tick,0x7ffc909efd34,280397550,0,0x0,8
tick,0x7ffc909efd34,280413255,0,0x0,8
tick,0x7ffc909efd34,280429399,0,0x0,8
tick,0x7ffc909efd34,280445188,0,0x0,8
tick,0x7ffc909efd34,280460992,0,0x0,8
tick,0x7ffc909efd34,280476560,0,0x0,8
tick,0x7ffc909efd34,280492101,0,0x0,8
tick,0x7ffc909efd34,280506958,0,0x0,8
tick,0x7ffc909efd34,280521909,0,0x0,8
tick,0x7ffc909efd34,280537826,0,0x0,8
tick,0x7ffc909efd34,280553460,0,0x0,8
tick,0x7ffc909efd34,280568742,0,0x0,8
tick,0x7ffc909efd34,280584274,0,0x0,8
tick,0x7ffc909efd34,280599886,0,0x0,8
tick,0x7ffc909efd34,280615309,0,0x0,8
tick,0x7ffc909efd34,280630578,0,0x0,8
tick,0x7ffc909efd34,280646204,0,0x0,8
tick,0x7ffc909efd34,280661835,0,0x0,8
tick,0x7ffc909efd34,280677475,0,0x0,8
tick,0x7ffc909efd34,280693113,0,0x0,8
tick,0x7ffc909efd34,280709378,0,0x0,8
tick,0x7ffc909efd34,280724518,0,0x0,8
tick,0x7ffc909efd34,280740076,0,0x0,8
tick,0x7ffc909efd34,280756079,0,0x0,8
tick,0x7ffc909efd34,280772067,0,0x0,8
tick,0x7ffc909efd34,280787426,0,0x0,8
tick,0x7ffc909efd34,280802995,0,0x0,8
tick,0x7ffc909efd34,280818895,0,0x0,8
tick,0x7ffc909efd34,280835147,0,0x0,8
tick,0x7ffc909efd34,280850490,0,0x0,8
tick,0x7ffc909efd34,280865878,0,0x0,8
tick,0x7ffc909efd34,280881604,0,0x0,8
tick,0x7ffc909efd34,280897130,0,0x0,8
tick,0x7ffc909efd34,280912762,0,0x0,8
tick,0x7ffc909efd34,280928516,0,0x0,8
tick,0x7ffc909efd34,280944104,0,0x0,8
tick,0x7ffc909efd34,280959580,0,0x0,8
tick,0x7ffc909efd34,280975172,0,0x0,8
tick,0x7ffc909efd34,280990403,0,0x0,8
tick,0x7ffc909efd34,281006662,0,0x0,8
tick,0x7ffc909efd34,281022620,0,0x0,8
tick,0x7ffc909efd34,281038249,0,0x0,8
tick,0x7ffc909efd34,281053554,0,0x0,8
tick,0x7ffc909efd34,281068780,0,0x0,8
tick,0x7ffc909efd34,281084505,0,0x0,8
tick,0x7ffc909efd34,281099980,0,0x0,8
tick,0x7ffc909efd34,281114992,0,0x0,8
tick,0x7ffc909efd34,281130972,0,0x0,8
tick,0x7ffc909efd34,281146989,0,0x0,8
tick,0x7ffc909efd34,281163066,0,0x0,8
tick,0x7ffc909efd34,281177953,0,0x0,8
tick,0x7ffc909efd34,281193043,0,0x0,8
tick,0x7ffc909efd34,281209065,0,0x0,8
tick,0x7ffc909efd34,281225084,0,0x0,8
tick,0x7ffc909efd34,281239826,0,0x0,8
tick,0x7ffc909efd34,281254751,0,0x0,8
tick,0x7ffc909efd34,281270081,0,0x0,8
tick,0x7ffc909efd34,281285460,0,0x0,8
tick,0x7ffc909efd34,281301196,0,0x0,8
tick,0x7ffc909efd34,281316620,0,0x0,8
tick,0x7ffc909efd34,281332692,0,0x0,8
tick,0x7ffc909efd34,281347909,0,0x0,8
tick,0x7ffc909efd34,281363987,0,0x0,8
tick,0x7ffc909efd34,281379340,0,0x0,8
tick,0x7ffc909efd34,281395020,0,0x0,8
tick,0x7ffc909efd34,281410470,0,0x0,8
tick,0x7ffc909efd34,281425899,0,0x0,8
tick,0x7ffc909efd34,281441179,0,0x0,8
tick,0x7ffc909efd34,281456954,0,0x0,8
tick,0x7ffc909efd34,281472432,0,0x0,8
tick,0x7ffc909efd34,281487979,0,0x0,8
tick,0x7ffc909efd34,281503880,0,0x0,8
tick,0x7ffc909efd34,281519142,0,0x0,8
tick,0x7ffc909efd34,281534683,0,0x0,8
tick,0x7ffc909efd34,281550478,0,0x0,8
tick,0x7ffc909efd34,281566397,0,0x0,8
tick,0x7ffc909efd34,281581881,0,0x0,8
tick,0x7ffc909efd34,281597317,0,0x0,8
tick,0x7ffc909efd34,281613171,0,0x0,8
tick,0x7ffc909efd34,281629401,0,0x0,8
tick,0x7ffc909efd34,281644732,0,0x0,8
tick,0x7ffc909efd34,281661263,0,0x0,8
tick,0x7ffc909efd34,281676595,0,0x0,8
tick,0x7ffc909efd34,281691856,0,0x0,8
tick,0x7ffc909efd34,281707171,0,0x0,8
tick,0x7ffc909efd34,281723493,0,0x0,8
tick,0x7ffc909efd34,281739185,0,0x0,8
tick,0x7ffc909efd34,281754528,0,0x0,8
tick,0x7ffc909efd34,281769869,0,0x0,8
tick,0x7ffc909efd34,281785952,0,0x0,8
tick,0x7ffc909efd34,281801220,0,0x0,8
tick,0x7ffc909efd34,281817058,0,0x0,8
tick,0x7ffc909efd34,281832517,0,0x0,8
tick,0x7ffc909efd34,281848654,0,0x0,8
tick,0x7ffc909efd34,281864109,0,0x0,8
tick,0x7ffc909efd34,281880513,0,0x0,8
tick,0x7ffc909efd34,281896553,0,0x0,8
tick,0x7ffc909efd34,281912556,0,0x0,8
tick,0x7ffc909efd34,281928486,0,0x0,8
tick,0x7ffc909efd34,281943869,0,0x0,8
tick,0x7ffc909efd34,281959819,0,0x0,8
tick,0x7ffc909efd34,281975813,0,0x0,8
tick,0x7ffc909efd34,281992617,0,0x0,8
tick,0x7ffc909efd34,282006968,0,0x0,8
tick,0x7ffc909efd34,282021819,0,0x0,8
tick,0x7ffc909efd34,282037401,0,0x0,8
tick,0x7ffc909efd34,282053068,0,0x0,8
tick,0x7ffc909efd34,282069078,0,0x0,8
tick,0x7ffc909efd34,282085362,0,0x0,8
tick,0x7ffc909efd34,282100745,0,0x0,8
tick,0x7ffc909efd34,282116770,0,0x0,8
tick,0x7ffc909efd34,282132672,0,0x0,8
tick,0x7ffc909efd34,282148111,0,0x0,8
tick,0x7ffc909efd34,282163754,0,0x0,8
tick,0x7ffc909efd34,282178796,0,0x0,8
tick,0x7ffc909efd34,282194164,0,0x0,8
tick,0x7ffc909efd34,282209812,0,0x0,8
tick,0x7ffc909efd34,282225453,0,0x0,8
tick,0x7ffc909efd34,282240809,0,0x0,8
tick,0x7ffc909efd34,282256315,0,0x0,8
tick,0x7ffc909efd34,282271597,0,0x0,8
tick,0x7ffc909efd34,282287427,0,0x0,8
tick,0x7ffc909efd34,282303074,0,0x0,8
tick,0x7ffc909efd34,282318368,0,0x0,8
tick,0x7ffc909efd34,282334177,0,0x0,8
tick,0x7ffc909efd34,282349668,0,0x0,8
tick,0x7ffc909efd34,282365130,0,0x0,8
tick,0x7ffc909efd34,282380542,0,0x0,8
tick,0x7ffc909efd34,282395714,0,0x0,8
tick,0x7ffc909efd34,282410912,0,0x0,8
tick,0x7ffc909efd34,282426185,0,0x0,8
tick,0x7ffc909efd34,282442086,0,0x0,8
tick,0x7ffc909efd34,282457568,0,0x0,8
tick,0x7ffc909efd34,282473228,0,0x0,8
tick,0x7ffc909efd34,282488361,0,0x0,8
tick,0x7ffc909efd34,282504006,0,0x0,8
tick,0x7ffc909efd34,282519806,0,0x0,8
tick,0x7ffc909efd34,282535115,0,0x0,8
tick,0x7ffc909efd34,282550497,0,0x0,8
tick,0x7ffc909efd34,282565901,0,0x0,8
tick,0x7ffc909efd34,282581140,0,0x0,8
tick,0x7ffc909efd34,282597026,0,0x0,8
tick,0x7ffc909efd34,282612221,0,0x0,8
tick,0x7ffc909efd34,282628404,0,0x0,8
tick,0x7ffc909efd34,282644057,0,0x0,8
tick,0x7ffc909efd34,282659303,0,0x0,8
tick,0x7ffc909efd34,282675448,0,0x0,8
tick,0x7ffc909efd34,282690140,0,0x0,8
tick,0x7ffc909efd34,282705161,0,0x0,8
tick,0x7ffc909efd34,282720595,0,0x0,8
tick,0x7ffc909efd34,282735764,0,0x0,8
tick,0x7ffc909efd34,282751067,0,0x0,8
tick,0x7ffc909efd34,282766796,0,0x0,8
tick,0x7ffc909efd34,282782192,0,0x0,8
tick,0x7ffc909efd34,282798281,0,0x0,8
tick,0x7ffc909efd34,282813809,0,0x0,8
tick,0x7ffc909efd34,282829749,0,0x0,8
tick,0x7ffc909efd34,282845151,0,0x0,8
tick,0x7ffc909efd34,282861111,0,0x0,8
tick,0x7ffc909efd34,282877285,0,0x0,8
tick,0x7ffc909efd34,282893468,0,0x0,8
tick,0x7ffc909efd34,282908540,0,0x0,8
tick,0x7ffc909efd34,282923930,0,0x0,8
tick,0x7ffc909efd34,282939129,0,0x0,8
tick,0x7ffc909efd34,282954889,0,0x0,8
tick,0x7ffc909efd34,282971248,0,0x0,8
tick,0x7ffc909efd34,282986879,0,0x0,8
tick,0x7ffc909efd34,283002316,0,0x0,8
tick,0x7ffc909efd34,283018121,0,0x0,8
tick,0x7ffc909efd34,283033294,0,0x0,8
tick,0x7ffc909efd34,283048733,0,0x0,8
tick,0x7ffc909efd34,283064290,0,0x0,8
tick,0x7ffc909efd34,283079492,0,0x0,8
tick,0x7ffc909efd34,283095531,0,0x0,8
tick,0x7ffc909efd34,283110784,0,0x0,8
tick,0x7ffc909efd34,283126312,0,0x0,8
tick,0x7ffc909efd34,283141559,0,0x0,8
tick,0x7ffc909efd34,283157608,0,0x0,8
tick,0x7ffc909efd34,283173202,0,0x0,8
tick,0x7ffc909efd34,283188610,0,0x0,8
tick,0x7ffc909efd34,283204589,0,0x0,8
tick,0x7ffc909efd34,283220204,0,0x0,8
tick,0x7ffc909efd34,283235326,0,0x0,8
tick,0x7ffc909efd34,283250583,0,0x0,8
tick,0x7ffc909efd34,283266428,0,0x0,8
tick,0x7ffc909efd34,283281961,0,0x0,8
tick,0x7ffc909efd34,283297842,0,0x0,8
tick,0x7ffc909efd34,283313799,0,0x0,8
tick,0x7ffc909efd34,283329042,0,0x0,8
tick,0x7ffc909efd34,283345171,0,0x0,8
tick,0x7ffc909efd34,283361193,0,0x0,8
tick,0x7ffc909efd34,283376674,0,0x0,8
tick,0x7ffc909efd34,283392694,0,0x0,8
tick,0x7ffc909efd34,283409052,0,0x0,8
tick,0x7ffc909efd34,283424422,0,0x0,8
tick,0x7ffc909efd34,283440387,0,0x0,8
tick,0x7ffc909efd34,283456440,0,0x0,8
tick,0x7ffc909efd34,283472608,0,0x0,8
tick,0x7ffc909efd34,283488442,0,0x0,8
tick,0x7ffc909efd34,283504486,0,0x0,8
tick,0x7ffc909efd34,283519744,0,0x0,8
tick,0x7ffc909efd34,283535211,0,0x0,8
tick,0x7ffc909efd34,283551400,0,0x0,8
tick,0x7ffc909efd34,283567086,0,0x0,8
tick,0x7ffc909efd34,283582798,0,0x0,8
tick,0x7ffc909efd34,283598764,0,0x0,8
tick,0x7ffc909efd34,283614897,0,0x0,8
tick,0x7ffc909efd34,283630095,0,0x0,8
tick,0x7ffc909efd34,283645909,0,0x0,8
tick,0x7ffc909efd34,283661347,0,0x0,8
tick,0x7ffc909efd34,283677586,0,0x0,8
tick,0x7ffc909efd34,283692781,0,0x0,8
tick,0x7ffc909efd34,283708098,0,0x0,8
tick,0x7ffc909efd34,283723147,0,0x0,8
tick,0x7ffc909efd34,283738516,0,0x0,8
tick,0x7ffc909efd34,283754120,0,0x0,8
tick,0x7ffc909efd34,283770121,0,0x0,8
tick,0x7ffc909efd34,283785346,0,0x0,8
tick,0x7ffc909efd34,283801638,0,0x0,8
tick,0x7ffc909efd34,283816537,0,0x0,8
tick,0x7ffc909efd34,283831915,0,0x0,8
tick,0x7ffc909efd34,283848095,0,0x0,8
tick,0x7ffc909efd34,283863544,0,0x0,8
tick,0x7ffc909efd34,283878989,0,0x0,8
tick,0x7ffc909efd34,283895177,0,0x0,8
tick,0x7ffc909efd34,283910241,0,0x0,8
tick,0x7ffc909efd34,283926311,0,0x0,8
tick,0x7ffc909efd34,283942176,0,0x0,8
tick,0x7ffc909efd34,283958012,0,0x0,8
tick,0x7ffc909efd34,283974094,0,0x0,8
tick,0x7ffc909efd34,283989972,0,0x0,8
tick,0x7ffc909efd34,284005575,0,0x0,8
tick,0x7ffc909efd34,284021599,0,0x0,8
tick,0x7ffc909efd34,284036960,0,0x0,8
tick,0x7ffc909efd34,284052245,0,0x0,8
tick,0x7ffc909efd34,284068336,0,0x0,8
tick,0x7ffc909efd34,284084100,0,0x0,8
tick,0x7ffc909efd34,284100145,0,0x0,8
tick,0x7ffc909efd34,284115508,0,0x0,8
tick,0x7ffc909efd34,284131475,0,0x0,8
tick,0x7ffc909efd34,284146905,0,0x0,8
tick,0x7ffc909efd34,284163220,0,0x0,8
tick,0x7ffc909efd34,284178597,0,0x0,8
tick,0x7ffc909efd34,284194047,0,0x0,8
tick,0x7ffc909efd34,284209566,0,0x0,8
tick,0x7ffc909efd34,284225241,0,0x0,8
tick,0x7ffc909efd34,284240866,0,0x0,8
tick,0x7ffc909efd34,284256368,0,0x0,8
tick,0x7ffc909efd34,284271757,0,0x0,8
tick,0x7ffc909efd34,284287128,0,0x0,8
tick,0x7ffc909efd34,284302516,0,0x0,8
tick,0x7ffc909efd34,284318201,0,0x0,8
tick,0x7ffc909efd34,284333560,0,0x0,8
tick,0x7ffc909efd34,284349906,0,0x0,8
tick,0x7ffc909efd34,284364902,0,0x0,8
tick,0x7ffc909efd34,284380045,0,0x0,8
tick,0x7ffc909efd34,284395771,0,0x0,8
tick,0x7ffc909efd34,284411706,0,0x0,8
tick,0x7ffc909efd34,284426803,0,0x0,8
tick,0x7ffc909efd34,284442423,0,0x0,8
tick,0x7ffc909efd34,284457619,0,0x0,8
tick,0x7ffc909efd34,284473221,0,0x0,8
tick,0x7ffc909efd34,284489384,0,0x0,8
tick,0x7ffc909efd34,284504902,0,0x0,8
tick,0x7ffc909efd34,284520529,0,0x0,8
tick,0x7ffc909efd34,284536614,0,0x0,8
tick,0x7ffc909efd34,284552287,0,0x0,8
tick,0x7ffc909efd34,284567687,0,0x0,8
tick,0x7ffc909efd34,284583727,0,0x0,8
tick,0x7ffc909efd34,284599995,0,0x0,8
tick,0x7ffc909efd34,284616187,0,0x0,8
tick,0x7ffc909efd34,284631777,0,0x0,8
tick,0x7ffc909efd34,284647761,0,0x0,8
tick,0x7ffc909efd34,284663949,0,0x0,8
tick,0x7ffc909efd34,284679022,0,0x0,8
tick,0x7ffc909efd34,284695132,0,0x0,8
tick,0x7ffc909efd34,284710979,0,0x0,8
tick,0x7ffc909efd34,284727255,0,0x0,8
tick,0x7ffc909efd34,284743027,0,0x0,8
tick,0x7ffc909efd34,284758502,0,0x0,8
tick,0x7ffc909efd34,284773891,0,0x0,8
tick,0x7ffc909efd34,284789741,0,0x0,8
tick,0x7ffc909efd34,284805337,0,0x0,8
tick,0x7ffc909efd34,284821232,0,0x0,8
tick,0x7ffc909efd34,284836626,0,0x0,8
tick,0x7ffc909efd34,284852293,0,0x0,8
tick,0x7ffc909efd34,284867575,0,0x0,8
tick,0x7ffc909efd34,284883119,0,0x0,8
tick,0x7ffc909efd34,284898837,0,0x0,8
tick,0x7ffc909efd34,284914228,0,0x0,8
tick,0x7ffc909efd34,284930041,0,0x0,8
tick,0x7ffc909efd34,284945751,0,0x0,8
tick,0x7ffc909efd34,284961117,0,0x0,8
tick,0x7ffc909efd34,284976508,0,0x0,8
tick,0x7ffc909efd34,284991945,0,0x0,8
tick,0x7ffc909efd34,285007648,0,0x0,8
tick,0x7ffc909efd34,285023361,0,0x0,8
tick,0x7ffc909efd34,285038841,0,0x0,8
tick,0x7ffc909efd34,285054469,0,0x0,8
tick,0x7ffc909efd34,285069695,0,0x0,8
tick,0x7ffc909efd34,285085126,0,0x0,8
tick,0x7ffc909efd34,285100939,0,0x0,8
tick,0x7ffc909efd34,285116398,0,0x0,8
tick,0x7ffc909efd34,285131808,0,0x0,8
tick,0x7ffc909efd34,285147465,0,0x0,8
tick,0x7ffc909efd34,285163246,0,0x0,8
tick,0x7ffc909efd34,285179122,0,0x0,8
tick,0x7ffc909efd34,285195250,0,0x0,8
tick,0x7ffc909efd34,285210299,0,0x0,8
tick,0x7ffc909efd34,285225572,0,0x0,8
tick,0x7ffc909efd34,285241302,0,0x0,8
tick,0x7ffc909efd34,285256927,0,0x0,8
tick,0x7ffc909efd34,285272280,0,0x0,8
tick,0x7ffc909efd34,285287722,0,0x0,8
tick,0x7ffc909efd34,285303452,0,0x0,8
tick,0x7ffc909efd34,285319211,0,0x0,8
tick,0x7ffc909efd34,285334303,0,0x0,8
tick,0x7ffc909efd34,285350817,0,0x0,8
tick,0x7ffc909efd34,285366085,0,0x0,8
tick,0x7ffc909efd34,285381999,0,0x0,8
tick,0x7ffc909efd34,285397636,0,0x0,8
tick,0x7ffc909efd34,285413534,0,0x0,8
tick,0x7ffc909efd34,285428822,0,0x0,8
tick,0x7ffc909efd34,285444439,0,0x0,8
tick,0x7ffc909efd34,285459502,0,0x0,8
tick,0x7ffc909efd34,285475009,0,0x0,8
tick,0x7ffc909efd34,285490363,0,0x0,8
tick,0x7ffc909efd34,285506401,0,0x0,8
tick,0x7ffc909efd34,285522138,0,0x0,8
tick,0x7ffc909efd34,285537609,0,0x0,8
tick,0x7ffc909efd34,285553438,0,0x0,8
tick,0x7ffc909efd34,285568287,0,0x0,8
tick,0x7ffc909efd34,285583618,0,0x0,8
tick,0x7ffc909efd34,285599048,0,0x0,8
tick,0x7ffc909efd34,285614463,0,0x0,8
tick,0x7ffc909efd34,285629679,0,0x0,8
tick,0x7ffc909efd34,285645179,0,0x0,8
tick,0x7ffc909efd34,285661254,0,0x0,8
tick,0x7ffc909efd34,285676834,0,0x0,8
tick,0x7ffc909efd34,285692071,0,0x0,8
tick,0x7ffc909efd34,285707308,0,0x0,8
tick,0x7ffc909efd34,285723110,0,0x0,8
tick,0x7ffc909efd34,285739090,0,0x0,8
tick,0x7ffc909efd34,285755308,0,0x0,8
tick,0x7ffc909efd34,285771424,0,0x0,8
tick,0x7ffc909efd34,285787431,0,0x0,8
tick,0x7ffc909efd34,285802614,0,0x0,8
tick,0x7ffc909efd34,285818706,0,0x0,8
tick,0x7ffc909efd34,285834031,0,0x0,8
tick,0x7ffc909efd34,285849578,0,0x0,8
tick,0x7ffc909efd34,285865344,0,0x0,8
tick,0x7ffc909efd34,285880888,0,0x0,8
tick,0x7ffc909efd34,285895790,0,0x0,8
tick,0x7ffc909efd34,285911212,0,0x0,8
tick,0x7ffc909efd34,285926336,0,0x0,8
tick,0x7ffc909efd34,285941955,0,0x0,8
tick,0x7ffc909efd34,285957895,0,0x0,8
tick,0x7ffc909efd34,285973654,0,0x0,8
tick,0x7ffc909efd34,285989222,0,0x0,8
tick,0x7ffc909efd34,286005181,0,0x0,8
tick,0x7ffc909efd34,286020539,0,0x0,8
tick,0x7ffc909efd34,286036602,0,0x0,8
tick,0x7ffc909efd34,286051680,0,0x0,8
tick,0x7ffc909efd34,286067290,0,0x0,8
tick,0x7ffc909efd34,286083038,0,0x0,8
tick,0x7ffc909efd34,286099186,0,0x0,8
tick,0x7ffc909efd34,286114269,0,0x0,8
tick,0x7ffc909efd34,286129583,0,0x0,8
tick,0x7ffc909efd34,286144403,0,0x0,8
tick,0x7ffc909efd34,286160209,0,0x0,8
tick,0x7ffc909efd34,286175517,0,0x0,8
tick,0x7ffc909efd34,286190932,0,0x0,8
tick,0x7ffc909efd34,286206284,0,0x0,8
tick,0x7ffc909efd34,286221603,0,0x0,8
tick,0x7ffc909efd34,286237637,0,0x0,8
tick,0x7ffc909efd34,286253120,0,0x0,8
tick,0x7ffc909efd34,286268776,0,0x0,8
tick,0x7ffc909efd34,286283963,0,0x0,8
tick,0x7ffc909efd34,286299191,0,0x0,8
tick,0x7ffc909efd34,286315207,0,0x0,8
tick,0x7ffc909efd34,286330319,0,0x0,8
tick,0x7ffc909efd34,286346127,0,0x0,8
tick,0x7ffc909efd34,286361786,0,0x0,8
tick,0x7ffc909efd34,286376895,0,0x0,8
tick,0x7ffc909efd34,286392519,0,0x0,8
tick,0x7ffc909efd34,286408293,0,0x0,8
tick,0x7ffc909efd34,286423779,0,0x0,8
tick,0x7ffc909efd34,286438953,0,0x0,8
tick,0x7ffc909efd34,286454791,0,0x0,8
tick,0x7ffc909efd34,286470080,0,0x0,8
tick,0x7ffc909efd34,286485809,0,0x0,8
tick,0x7ffc909efd34,286501223,0,0x0,8
tick,0x7ffc909efd34,286517162,0,0x0,8
tick,0x7ffc909efd34,286533372,0,0x0,8
tick,0x7ffc909efd34,286549030,0,0x0,8
tick,0x7ffc909efd34,286564227,0,0x0,8
tick,0x7ffc909efd34,286580391,0,0x0,8
tick,0x7ffc909efd34,286596152,0,0x0,8
tick,0x7ffc909efd34,286611683,0,0x0,8
tick,0x7ffc909efd34,286627046,0,0x0,8
tick,0x7ffc909efd34,286643180,0,0x0,8
tick,0x7ffc909efd34,286659310,0,0x0,8
tick,0x7ffc909efd34,286674792,0,0x0,8
tick,0x7ffc909efd34,286690340,0,0x0,8
tick,0x7ffc909efd34,286706134,0,0x0,8
tick,0x7ffc909efd34,286721427,0,0x0,8
tick,0x7ffc909efd34,286737265,0,0x0,8
tick,0x7ffc909efd34,286752426,0,0x0,8
tick,0x7ffc909efd34,286768064,0,0x0,8
tick,0x7ffc909efd34,286783618,0,0x0,8
tick,0x7ffc909efd34,286799921,0,0x0,8
tick,0x7ffc909efd34,286815805,0,0x0,8
tick,0x7ffc909efd34,286831173,0,0x0,8
tick,0x7ffc909efd34,286847301,0,0x0,8
tick,0x7ffc909efd34,286862741,0,0x0,8
tick,0x7ffc909efd34,286878223,0,0x0,8
tick,0x7ffc909efd34,286893773,0,0x0,8
tick,0x7ffc909efd34,286910242,0,0x0,8
tick,0x7ffc909efd34,286926111,0,0x0,8
tick,0x7ffc909efd34,286941366,0,0x0,8
tick,0x7ffc909efd34,286957213,0,0x0,8
tick,0x7ffc909efd34,286973119,0,0x0,8
tick,0x7ffc909efd34,286989171,0,0x0,8
tick,0x7ffc909efd34,287022053,0,0x0,8
tick,0x7ffc909efd34,287049645,0,0x0,8
tick,0x7ffc909efd34,287053444,0,0x0,8
tick,0x7ffc909efd34,287069080,0,0x0,8
tick,0x7ffc909efd34,287085172,0,0x0,8
tick,0x7ffc909efd34,287101116,0,0x0,8
tick,0x7ffc909efd34,287117026,0,0x0,8
tick,0x7ffc909efd34,287133025,0,0x0,8
tick,0x7ffc909efd34,287147913,0,0x0,8
tick,0x7ffc909efd34,287163332,0,0x0,8
tick,0x7ffc909efd34,287178591,0,0x0,8
tick,0x7ffc909efd34,287194002,0,0x0,8
tick,0x7ffc909efd34,287209259,0,0x0,8
tick,0x7ffc909efd34,287225381,0,0x0,8
tick,0x7ffc909efd34,287240613,0,0x0,8
tick,0x7ffc909efd34,287255989,0,0x0,8
tick,0x7ffc909efd34,287271200,0,0x0,8
tick,0x7ffc909efd34,287287192,0,0x0,8
tick,0x7ffc909efd34,287302977,0,0x0,8
tick,0x7ffc909efd34,287318305,0,0x0,8
tick,0x7ffc909efd34,287333708,0,0x0,8
tick,0x7ffc909efd34,287349316,0,0x0,8
tick,0x7ffc909efd34,287365415,0,0x0,8
tick,0x7ffc909efd34,287380684,0,0x0,8
tick,0x7ffc909efd34,287396228,0,0x0,8
tick,0x7ffc909efd34,287412391,0,0x0,8
tick,0x7ffc909efd34,287427745,0,0x0,8
tick,0x7ffc909efd34,287443245,0,0x0,8
tick,0x7ffc909efd34,287459462,0,0x0,8
tick,0x7ffc909efd34,287475657,0,0x0,8
tick,0x7ffc909efd34,287490987,0,0x0,8
tick,0x7ffc909efd34,287506298,0,0x0,8
tick,0x7ffc909efd34,287521507,0,0x0,8
tick,0x7ffc909efd34,287536732,0,0x0,8
tick,0x7ffc909efd34,287552244,0,0x0,8
tick,0x7ffc909efd34,287567442,0,0x0,8
tick,0x7ffc909efd34,287583218,0,0x0,8
tick,0x7ffc909efd34,287599247,0,0x0,8
tick,0x7ffc909efd34,287613884,0,0x0,8
tick,0x7ffc909efd34,287628910,0,0x0,8
tick,0x7ffc909efd34,287644417,0,0x0,8
tick,0x7ffc909efd34,287660363,0,0x0,8
tick,0x7ffc909efd34,287676444,0,0x0,8
tick,0x7ffc909efd34,287709464,0,0x0,8
tick,0x7ffc909efd34,287731659,0,0x0,8
tick,0x7ffc909efd34,287740864,0,0x0,8
tick,0x7ffc909efd34,287755414,0,0x0,8
tick,0x7ffc909efd34,287770575,0,0x0,8
tick,0x7ffc909efd34,287786633,0,0x0,8
tick,0x7ffc909efd34,287801711,0,0x0,8
tick,0x7ffc909efd34,287816594,0,0x0,8
tick,0x7ffc909efd34,287832563,0,0x0,8
tick,0x7ffc909efd34,287848007,0,0x0,8
tick,0x7ffc909efd34,287863455,0,0x0,8
tick,0x7ffc909efd34,287879263,0,0x0,8
tick,0x7ffc909efd34,287894962,0,0x0,8
tick,0x7ffc909efd34,287910646,0,0x0,8
tick,0x7ffc909efd34,287926663,0,0x0,8
tick,0x7ffc909efd34,287942156,0,0x0,8
tick,0x7ffc909efd34,287957459,0,0x0,8
tick,0x7ffc909efd34,287972912,0,0x0,8
tick,0x7ffc909efd34,287988404,0,0x0,8
tick,0x7ffc909efd34,288003776,0,0x0,8
tick,0x7ffc909efd34,288019240,0,0x0,8
tick,0x7ffc909efd34,288034511,0,0x0,8
tick,0x7ffc909efd34,288050224,0,0x0,8
tick,0x7ffc909efd34,288065894,0,0x0,8
tick,0x7ffc909efd34,288081450,0,0x0,8
tick,0x7ffc909efd34,288097444,0,0x0,8
tick,0x7ffc909efd34,288113014,0,0x0,8
tick,0x7ffc909efd34,288128375,0,0x0,8
tick,0x7ffc909efd34,288144598,0,0x0,8
tick,0x7ffc909efd34,288160307,0,0x0,8
tick,0x7ffc909efd34,288175639,0,0x0,8
tick,0x7ffc909efd34,288191148,0,0x0,8
tick,0x7ffc909efd34,288206800,0,0x0,8
tick,0x7ffc909efd34,288221859,0,0x0,8
tick,0x7ffc909efd34,288237291,0,0x0,8
tick,0x7ffc909efd34,288253300,0,0x0,8
tick,0x7ffc909efd34,288269057,0,0x0,8
tick,0x7ffc909efd34,288284372,0,0x0,8
tick,0x7ffc909efd34,288300102,0,0x0,8
tick,0x7ffc909efd34,288315724,0,0x0,8
tick,0x7ffc909efd34,288331393,0,0x0,8
tick,0x7ffc909efd34,288347555,0,0x0,8
tick,0x7ffc909efd34,288380121,0,0x0,8
tick,0x7ffc909efd34,288399960,0,0x0,8
tick,0x7ffc909efd34,288411550,0,0x0,8
tick,0x7ffc909efd34,288426380,0,0x0,8
tick,0x7ffc909efd34,288442398,0,0x0,8
tick,0x7ffc909efd34,288458416,0,0x0,8
tick,0x7ffc909efd34,288474430,0,0x0,8
tick,0x7ffc909efd34,288490382,0,0x0,8
tick,0x7ffc909efd34,288505928,0,0x0,8
tick,0x7ffc909efd34,288521796,0,0x0,8
tick,0x7ffc909efd34,288537031,0,0x0,8
tick,0x7ffc909efd34,288552680,0,0x0,8
tick,0x7ffc909efd34,288568107,0,0x0,8
tick,0x7ffc909efd34,288583300,0,0x0,8
tick,0x7ffc909efd34,288599244,0,0x0,8
tick,0x7ffc909efd34,288614546,0,0x0,8
tick,0x7ffc909efd34,288630076,0,0x0,8
tick,0x7ffc909efd34,288645428,0,0x0,8
tick,0x7ffc909efd34,288661016,0,0x0,8
tick,0x7ffc909efd34,288676981,0,0x0,8
tick,0x7ffc909efd34,288692507,0,0x0,8
tick,0x7ffc909efd34,288708319,0,0x0,8
tick,0x7ffc909efd34,288724312,0,0x0,8
tick,0x7ffc909efd34,288739948,0,0x0,8
tick,0x7ffc909efd34,288755752,0,0x0,8
tick,0x7ffc909efd34,288771625,0,0x0,8
tick,0x7ffc909efd34,288786839,0,0x0,8
tick,0x7ffc909efd34,288802053,0,0x0,8
tick,0x7ffc909efd34,288817427,0,0x0,8
tick,0x7ffc909efd34,288833138,0,0x0,8
tick,0x7ffc909efd34,288848847,0,0x0,8
tick,0x7ffc909efd34,288864633,0,0x0,8
tick,0x7ffc909efd34,288880517,0,0x0,8
tick,0x7ffc909efd34,288896137,0,0x0,8
tick,0x7ffc909efd34,288912034,0,0x0,8
tick,0x7ffc909efd34,288927444,0,0x0,8
tick,0x7ffc909efd34,288943061,0,0x0,8
tick,0x7ffc909efd34,288958968,0,0x0,8
tick,0x7ffc909efd34,288974313,0,0x0,8
tick,0x7ffc909efd34,288990002,0,0x0,8
tick,0x7ffc909efd34,289005287,0,0x0,8
tick,0x7ffc909efd34,289021264,0,0x0,8
tick,0x7ffc909efd34,289036725,0,0x0,8
tick,0x7ffc909efd34,289051835,0,0x0,8
tick,0x7ffc909efd34,289067146,0,0x0,8
tick,0x7ffc909efd34,289082448,0,0x0,8
tick,0x7ffc909efd34,289098226,0,0x0,8
tick,0x7ffc909efd34,289113699,0,0x0,8
tick,0x7ffc909efd34,289129665,0,0x0,8
tick,0x7ffc909efd34,289145282,0,0x0,8
tick,0x7ffc909efd34,289160779,0,0x0,8
tick,0x7ffc909efd34,289176301,0,0x0,8
tick,0x7ffc909efd34,289191813,0,0x0,8
tick,0x7ffc909efd34,289207673,0,0x0,8
tick,0x7ffc909efd34,289222186,0,0x0,8
tick,0x7ffc909efd34,289237879,0,0x0,8
tick,0x7ffc909efd34,289253099,0,0x0,8
tick,0x7ffc909efd34,289268838,0,0x0,8
tick,0x7ffc909efd34,289284225,0,0x0,8
tick,0x7ffc909efd34,289299278,0,0x0,8
tick,0x7ffc909efd34,289315434,0,0x0,8
tick,0x7ffc909efd34,289331305,0,0x0,8
tick,0x7ffc909efd34,289346748,0,0x0,8
tick,0x7ffc909efd34,289362371,0,0x0,8
tick,0x7ffc909efd34,289378147,0,0x0,8
tick,0x7ffc909efd34,289393737,0,0x0,8
tick,0x7ffc909efd34,289409517,0,0x0,8
tick,0x7ffc909efd34,289425445,0,0x0,8
tick,0x7ffc909efd34,289440920,0,0x0,8
tick,0x7ffc909efd34,289456523,0,0x0,8
tick,0x7ffc909efd34,289472474,0,0x0,8
tick,0x7ffc909efd34,289488082,0,0x0,8
tick,0x7ffc909efd34,289504030,0,0x0,8
tick,0x7ffc909efd34,289519921,0,0x0,8
tick,0x7ffc909efd34,289535575,0,0x0,8
tick,0x7ffc909efd34,289550862,0,0x0,8
tick,0x7ffc909efd34,289566344,0,0x0,8
tick,0x7ffc909efd34,289581922,0,0x0,8
tick,0x7ffc909efd34,289597380,0,0x0,8
tick,0x7ffc909efd34,289613166,0,0x0,8
tick,0x7ffc909efd34,289628712,0,0x0,8
tick,0x7ffc909efd34,289644091,0,0x0,8
tick,0x7ffc909efd34,289659540,0,0x0,8
tick,0x7ffc909efd34,289674635,0,0x0,8
tick,0x7ffc909efd34,289690099,0,0x0,8
tick,0x7ffc909efd34,289705922,0,0x0,8
tick,0x7ffc909efd34,289721845,0,0x0,8
tick,0x7ffc909efd34,289737511,0,0x0,8
tick,0x7ffc909efd34,289752479,0,0x0,8
tick,0x7ffc909efd34,289767734,0,0x0,8
tick,0x7ffc909efd34,289783227,0,0x0,8
tick,0x7ffc909efd34,289799247,0,0x0,8
tick,0x7ffc909efd34,289815022,0,0x0,8
tick,0x7ffc909efd34,289830941,0,0x0,8
tick,0x7ffc909efd34,289846740,0,0x0,8
tick,0x7ffc909efd34,289862207,0,0x0,8
tick,0x7ffc909efd34,289877533,0,0x0,8
tick,0x7ffc909efd34,289892885,0,0x0,8
tick,0x7ffc909efd34,289909032,0,0x0,8
tick,0x7ffc909efd34,289924730,0,0x0,8
tick,0x7ffc909efd34,289940772,0,0x0,8
tick,0x7ffc909efd34,289956700,0,0x0,8
tick,0x7ffc909efd34,289972228,0,0x0,8
tick,0x7ffc909efd34,289987618,0,0x0,8
tick,0x7ffc909efd34,290003379,0,0x0,8
tick,0x7ffc909efd34,290019095,0,0x0,8
tick,0x7ffc909efd34,290035563,0,0x0,8
tick,0x7ffc909efd34,290050009,0,0x0,8
tick,0x7ffc909efd34,290065093,0,0x0,8
tick,0x7ffc909efd34,290080925,0,0x0,8
tick,0x7ffc909efd34,290096277,0,0x0,8
tick,0x7ffc909efd34,290111983,0,0x0,8
tick,0x7ffc909efd34,290127222,0,0x0,8
tick,0x7ffc909efd34,290142502,0,0x0,8
tick,0x7ffc909efd34,290158355,0,0x0,8
tick,0x7ffc909efd34,290173879,0,0x0,8
tick,0x7ffc909efd34,290189330,0,0x0,8
tick,0x7ffc909efd34,290204538,0,0x0,8
tick,0x7ffc909efd34,290219847,0,0x0,8
tick,0x7ffc909efd34,290235381,0,0x0,8
tick,0x7ffc909efd34,290250476,0,0x0,8
tick,0x7ffc909efd34,290266022,0,0x0,8
tick,0x7ffc909efd34,290281775,0,0x0,8
tick,0x7ffc909efd34,290297486,0,0x0,8
tick,0x7ffc909efd34,290312687,0,0x0,8
tick,0x7ffc909efd34,290328729,0,0x0,8
tick,0x7ffc909efd34,290344738,0,0x0,8
tick,0x7ffc909efd34,290360170,0,0x0,8
tick,0x7ffc909efd34,290375660,0,0x0,8
tick,0x7ffc909efd34,290391170,0,0x0,8
tick,0x7ffc909efd34,290406805,0,0x0,8
tick,0x7ffc909efd34,290421927,0,0x0,8
tick,0x7ffc909efd34,290438159,0,0x0,8
tick,0x7ffc909efd34,290454243,0,0x0,8
tick,0x7ffc909efd34,290470286,0,0x0,8
tick,0x7ffc909efd34,290485874,0,0x0,8
tick,0x7ffc909efd34,290501651,0,0x0,8
tick,0x7ffc909efd34,290517179,0,0x0,8
tick,0x7ffc909efd34,290532523,0,0x0,8
tick,0x7ffc909efd34,290547633,0,0x0,8
tick,0x7ffc909efd34,290563241,0,0x0,8
tick,0x7ffc909efd34,290578612,0,0x0,8
tick,0x7ffc909efd34,290594186,0,0x0,8
tick,0x7ffc909efd34,290610014,0,0x0,8
tick,0x7ffc909efd34,290625785,0,0x0,8
tick,0x7ffc909efd34,290641281,0,0x0,8
tick,0x7ffc909efd34,290657091,0,0x0,8
tick,0x7ffc909efd34,290672169,0,0x0,8
tick,0x7ffc909efd34,290687742,0,0x0,8
tick,0x7ffc909efd34,290702914,0,0x0,8
tick,0x7ffc909efd34,290719113,0,0x0,8
tick,0x7ffc909efd34,290734073,0,0x0,8
tick,0x7ffc909efd34,290749792,0,0x0,8
tick,0x7ffc909efd34,290764942,0,0x0,8
tick,0x7ffc909efd34,290780242,0,0x0,8
tick,0x7ffc909efd34,290796225,0,0x0,8
tick,0x7ffc909efd34,290811782,0,0x0,8
tick,0x7ffc909efd34,290827051,0,0x0,8
tick,0x7ffc909efd34,290843084,0,0x0,8
tick,0x7ffc909efd34,290858569,0,0x0,8
tick,0x7ffc909efd34,290874061,0,0x0,8
tick,0x7ffc909efd34,290889680,0,0x0,8
tick,0x7ffc909efd34,290905205,0,0x0,8
tick,0x7ffc909efd34,290920828,0,0x0,8
tick,0x7ffc909efd34,290935777,0,0x0,8
tick,0x7ffc909efd34,290951558,0,0x0,8
tick,0x7ffc909efd34,290967415,0,0x0,8
tick,0x7ffc909efd34,290983197,0,0x0,8
tick,0x7ffc909efd34,290998534,0,0x0,8
tick,0x7ffc909efd34,291013736,0,0x0,8
tick,0x7ffc909efd34,291030057,0,0x0,8
tick,0x7ffc909efd34,291045937,0,0x0,8
tick,0x7ffc909efd34,291061939,0,0x0,8
tick,0x7ffc909efd34,291077271,0,0x0,8
tick,0x7ffc909efd34,291092995,0,0x0,8
tick,0x7ffc909efd34,291108955,0,0x0,8
tick,0x7ffc909efd34,291124463,0,0x0,8
tick,0x7ffc909efd34,291140940,0,0x0,8
tick,0x7ffc909efd34,291156150,0,0x0,8
tick,0x7ffc909efd34,291171445,0,0x0,8
tick,0x7ffc909efd34,291187140,0,0x0,8
tick,0x7ffc909efd34,291202627,0,0x0,8
tick,0x7ffc909efd34,291218331,0,0x0,8
tick,0x7ffc909efd34,291233586,0,0x0,8
tick,0x7ffc909efd34,291249964,0,0x0,8
tick,0x7ffc909efd34,291264748,0,0x0,8
tick,0x7ffc909efd34,291280548,0,0x0,8
tick,0x7ffc909efd34,291295746,0,0x0,8
tick,0x7ffc909efd34,291311793,0,0x0,8
tick,0x7ffc909efd34,291327077,0,0x0,8
tick,0x7ffc909efd34,291342639,0,0x0,8
tick,0x7ffc909efd34,291358054,0,0x0,8
tick,0x7ffc909efd34,291373189,0,0x0,8
tick,0x7ffc909efd34,291389380,0,0x0,8
tick,0x7ffc909efd34,291405024,0,0x0,8
tick,0x7ffc909efd34,291420624,0,0x0,8
tick,0x7ffc909efd34,291436164,0,0x0,8
tick,0x7ffc909efd34,291451867,0,0x0,8
tick,0x7ffc909efd34,291467029,0,0x0,8
tick,0x7ffc909efd34,291482673,0,0x0,8
tick,0x7ffc909efd34,291498461,0,0x0,8
tick,0x7ffc909efd34,291514238,0,0x0,8
tick,0x7ffc909efd34,291529655,0,0x0,8
tick,0x7ffc909efd34,291545587,0,0x0,8
tick,0x7ffc909efd34,291561842,0,0x0,8
tick,0x7ffc909efd34,291577314,0,0x0,8
tick,0x7ffc909efd34,291592731,0,0x0,8
tick,0x7ffc909efd34,291609040,0,0x0,8
tick,0x7ffc909efd34,291624757,0,0x0,8
tick,0x7ffc909efd34,291640139,0,0x0,8
tick,0x7ffc909efd34,291656041,0,0x0,8
tick,0x7ffc909efd34,291671381,0,0x0,8
tick,0x7ffc909efd34,291687423,0,0x0,8
tick,0x7ffc909efd34,291703120,0,0x0,8
tick,0x7ffc909efd34,291718692,0,0x0,8
tick,0x7ffc909efd34,291734290,0,0x0,8
tick,0x7ffc909efd34,291750492,0,0x0,8
tick,0x7ffc909efd34,291765373,0,0x0,8
tick,0x7ffc909efd34,291780829,0,0x0,8
tick,0x7ffc909efd34,291796643,0,0x0,8
tick,0x7ffc909efd34,291812231,0,0x0,8
tick,0x7ffc909efd34,291827646,0,0x0,8
tick,0x7ffc909efd34,291843186,0,0x0,8
tick,0x7ffc909efd34,291858734,0,0x0,8
tick,0x7ffc909efd34,291874343,0,0x0,8
tick,0x7ffc909efd34,291889729,0,0x0,8
tick,0x7ffc909efd34,291905433,0,0x0,8
tick,0x7ffc909efd34,291920676,0,0x0,8
tick,0x7ffc909efd34,291936358,0,0x0,8
tick,0x7ffc909efd34,291952123,0,0x0,8
tick,0x7ffc909efd34,291967983,0,0x0,8
tick,0x7ffc909efd34,291983293,0,0x0,8
tick,0x7ffc909efd34,291998928,0,0x0,8
tick,0x7ffc909efd34,292014758,0,0x0,8
tick,0x7ffc909efd34,292030386,0,0x0,8
tick,0x7ffc909efd34,292045943,0,0x0,8
tick,0x7ffc909efd34,292061910,0,0x0,8
tick,0x7ffc909efd34,292077331,0,0x0,8
tick,0x7ffc909efd34,292092845,0,0x0,8
tick,0x7ffc909efd34,292108172,0,0x0,8
tick,0x7ffc909efd34,292123743,0,0x0,8
tick,0x7ffc909efd34,292139821,0,0x0,8
tick,0x7ffc909efd34,292155473,0,0x0,8
tick,0x7ffc909efd34,292170664,0,0x0,8
tick,0x7ffc909efd34,292186669,0,0x0,8
tick,0x7ffc909efd34,292202686,0,0x0,8
tick,0x7ffc909efd34,292218428,0,0x0,8
tick,0x7ffc909efd34,292233747,0,0x0,8
tick,0x7ffc909efd34,292249488,0,0x0,8
tick,0x7ffc909efd34,292265163,0,0x0,8
tick,0x7ffc909efd34,292280713,0,0x0,8
tick,0x7ffc909efd34,292296305,0,0x0,8
tick,0x7ffc909efd34,292311546,0,0x0,8
tick,0x7ffc909efd34,292327138,0,0x0,8
tick,0x7ffc909efd34,292342619,0,0x0,8
tick,0x7ffc909efd34,292358226,0,0x0,8
tick,0x7ffc909efd34,292373727,0,0x0,8
tick,0x7ffc909efd34,292389348,0,0x0,8
tick,0x7ffc909efd34,292404974,0,0x0,8
tick,0x7ffc909efd34,292420352,0,0x0,8
tick,0x7ffc909efd34,292436316,0,0x0,8
tick,0x7ffc909efd34,292451821,0,0x0,8
tick,0x7ffc909efd34,292467062,0,0x0,8
tick,0x7ffc909efd34,292482775,0,0x0,8
tick,0x7ffc909efd34,292498393,0,0x0,8
tick,0x7ffc909efd34,292513332,0,0x0,8
tick,0x7ffc909efd34,292528497,0,0x0,8
tick,0x7ffc909efd34,292543904,0,0x0,8
tick,0x7ffc909efd34,292560215,0,0x0,8
tick,0x7ffc909efd34,292575881,0,0x0,8
tick,0x7ffc909efd34,292591283,0,0x0,8
tick,0x7ffc909efd34,292607494,0,0x0,8
tick,0x7ffc909efd34,292622482,0,0x0,8
tick,0x7ffc909efd34,292638271,0,0x0,8
tick,0x7ffc909efd34,292653873,0,0x0,8
tick,0x7ffc909efd34,292669154,0,0x0,8
tick,0x7ffc909efd34,292684890,0,0x0,8
tick,0x7ffc909efd34,292700608,0,0x0,8
tick,0x7ffc909efd34,292716175,0,0x0,8
tick,0x7ffc909efd34,292731702,0,0x0,8
tick,0x7ffc909efd34,292747046,0,0x0,8
tick,0x7ffc909efd34,292762436,0,0x0,8
tick,0x7ffc909efd34,292777928,0,0x0,8
tick,0x7ffc909efd34,292793467,0,0x0,8
tick,0x7ffc909efd34,292808599,0,0x0,8
tick,0x7ffc909efd34,292824196,0,0x0,8
tick,0x7ffc909efd34,292840735,0,0x0,8
tick,0x7ffc909efd34,292856335,0,0x0,8
tick,0x7ffc909efd34,292872195,0,0x0,8
tick,0x7ffc909efd34,292888530,0,0x0,8
tick,0x7ffc909efd34,292904497,0,0x0,8
tick,0x7ffc909efd34,292920156,0,0x0,8
tick,0x7ffc909efd34,292935426,0,0x0,8
tick,0x7ffc909efd34,292951211,0,0x0,8
tick,0x7ffc909efd34,292967048,0,0x0,8
tick,0x7ffc909efd34,292982379,0,0x0,8
tick,0x7ffc909efd34,292997885,0,0x0,8
tick,0x7ffc909efd34,293013392,0,0x0,8
tick,0x7ffc909efd34,293028843,0,0x0,8
tick,0x7ffc909efd34,293044002,0,0x0,8
tick,0x7ffc909efd34,293059475,0,0x0,8
tick,0x7ffc909efd34,293075626,0,0x0,8
tick,0x7ffc909efd34,293090681,0,0x0,8
tick,0x7ffc909efd34,293106193,0,0x0,8
tick,0x7ffc909efd34,293121392,0,0x0,8
tick,0x7ffc909efd34,293137184,0,0x0,8
tick,0x7ffc909efd34,293152400,0,0x0,8
tick,0x7ffc909efd34,293168064,0,0x0,8
tick,0x7ffc909efd34,293183691,0,0x0,8
tick,0x7ffc909efd34,293199724,0,0x0,8
tick,0x7ffc909efd34,293214466,0,0x0,8
tick,0x7ffc909efd34,293229699,0,0x0,8
tick,0x7ffc909efd34,293245842,0,0x0,8
tick,0x7ffc909efd34,293262039,0,0x0,8
tick,0x7ffc909efd34,293277224,0,0x0,8
tick,0x7ffc909efd34,293293165,0,0x0,8
tick,0x7ffc909efd34,293309059,0,0x0,8
tick,0x7ffc909efd34,293324529,0,0x0,8
tick,0x7ffc909efd34,293340017,0,0x0,8
tick,0x7ffc909efd34,293355615,0,0x0,8
tick,0x7ffc909efd34,293371002,0,0x0,8
tick,0x7ffc909efd34,293386672,0,0x0,8
tick,0x7ffc909efd34,293402185,0,0x0,8
tick,0x7ffc909efd34,293417744,0,0x0,8
tick,0x7ffc909efd34,293433547,0,0x0,8
tick,0x7ffc909efd34,293449300,0,0x0,8
tick,0x7ffc909efd34,293465375,0,0x0,8
tick,0x7ffc909efd34,293480614,0,0x0,8
tick,0x7ffc909efd34,293496254,0,0x0,8
tick,0x7ffc909efd34,293512551,0,0x0,8
tick,0x7ffc909efd34,293527820,0,0x0,8
tick,0x7ffc909efd34,293543512,0,0x0,8
tick,0x7ffc909efd34,293558921,0,0x0,8
tick,0x7ffc909efd34,293574590,0,0x0,8
tick,0x7ffc909efd34,293589272,0,0x0,8
tick,0x7ffc909efd34,293604729,0,0x0,8
tick,0x7ffc909efd34,293620288,0,0x0,8
tick,0x7ffc909efd34,293635634,0,0x0,8
tick,0x7ffc909efd34,293651693,0,0x0,8
tick,0x7ffc909efd34,293666856,0,0x0,8
tick,0x7ffc909efd34,293682575,0,0x0,8
tick,0x7ffc909efd34,293698685,0,0x0,8
tick,0x7ffc909efd34,293714436,0,0x0,8
tick,0x7ffc909efd34,293730165,0,0x0,8
tick,0x7ffc909efd34,293745492,0,0x0,8
tick,0x7ffc909efd34,293760906,0,0x0,8
tick,0x7ffc909efd34,293776552,0,0x0,8
tick,0x7ffc909efd34,293792279,0,0x0,8
tick,0x7ffc909efd34,293807965,0,0x0,8
tick,0x7ffc909efd34,293823597,0,0x0,8
tick,0x7ffc909efd34,293839263,0,0x0,8
tick,0x7ffc909efd34,293854548,0,0x0,8
tick,0x7ffc909efd34,293869964,0,0x0,8
tick,0x7ffc909efd34,293885537,0,0x0,8
tick,0x7ffc909efd34,293901604,0,0x0,8
tick,0x7ffc909efd34,293916863,0,0x0,8
tick,0x7ffc909efd34,293932538,0,0x0,8
tick,0x7ffc909efd34,293948350,0,0x0,8
tick,0x7ffc909efd34,293964100,0,0x0,8
tick,0x7ffc909efd34,293979606,0,0x0,8
tick,0x7ffc909efd34,293995782,0,0x0,8
tick,0x7ffc909efd34,294011135,0,0x0,8
tick,0x7ffc909efd34,294026620,0,0x0,8
tick,0x7ffc909efd34,294042316,0,0x0,8
tick,0x7ffc909efd34,294058272,0,0x0,8
tick,0x7ffc909efd34,294074155,0,0x0,8
tick,0x7ffc909efd34,294090247,0,0x0,8
tick,0x7ffc909efd34,294105638,0,0x0,8
tick,0x7ffc909efd34,294121356,0,0x0,8
tick,0x7ffc909efd34,294137051,0,0x0,8
tick,0x7ffc909efd34,294152999,0,0x0,8
tick,0x7ffc909efd34,294168394,0,0x0,8
tick,0x7ffc909efd34,294183597,0,0x0,8
tick,0x7ffc909efd34,294198931,0,0x0,8
tick,0x7ffc909efd34,294214386,0,0x0,8
tick,0x7ffc909efd34,294230027,0,0x0,8
tick,0x7ffc909efd34,294245799,0,0x0,8
tick,0x7ffc909efd34,294261078,0,0x0,8
tick,0x7ffc909efd34,294276916,0,0x0,8
tick,0x7ffc909efd34,294291974,0,0x0,8
tick,0x7ffc909efd34,294307850,0,0x0,8
tick,0x7ffc909efd34,294323124,0,0x0,8
tick,0x7ffc909efd34,294338269,0,0x0,8
tick,0x7ffc909efd34,294353569,0,0x0,8
tick,0x7ffc909efd34,294369146,0,0x0,8
tick,0x7ffc909efd34,294385023,0,0x0,8
tick,0x7ffc909efd34,294400371,0,0x0,8
tick,0x7ffc909efd34,294416109,0,0x0,8
tick,0x7ffc909efd34,294431679,0,0x0,8
tick,0x7ffc909efd34,294447719,0,0x0,8
tick,0x7ffc909efd34,294463223,0,0x0,8
tick,0x7ffc909efd34,294478910,0,0x0,8
tick,0x7ffc909efd34,294494815,0,0x0,8
tick,0x7ffc909efd34,294510039,0,0x0,8
tick,0x7ffc909efd34,294526168,0,0x0,8
tick,0x7ffc909efd34,294542020,0,0x0,8
tick,0x7ffc909efd34,294557187,0,0x0,8
tick,0x7ffc909efd34,294572716,0,0x0,8
tick,0x7ffc909efd34,294588139,0,0x0,8
tick,0x7ffc909efd34,294603641,0,0x0,8
tick,0x7ffc909efd34,294618665,0,0x0,8
tick,0x7ffc909efd34,294635070,0,0x0,8
tick,0x7ffc909efd34,294649994,0,0x0,8
tick,0x7ffc909efd34,294665702,0,0x0,8
tick,0x7ffc909efd34,294681242,0,0x0,8
tick,0x7ffc909efd34,294697290,0,0x0,8
tick,0x7ffc909efd34,294712950,0,0x0,8
tick,0x7ffc909efd34,294728189,0,0x0,8
tick,0x7ffc909efd34,294744353,0,0x0,8
tick,0x7ffc909efd34,294760580,0,0x0,8
tick,0x7ffc909efd34,294776302,0,0x0,8
tick,0x7ffc909efd34,294791918,0,0x0,8
tick,0x7ffc909efd34,294807602,0,0x0,8
tick,0x7ffc909efd34,294822956,0,0x0,8
tick,0x7ffc909efd34,294838371,0,0x0,8
tick,0x7ffc909efd34,294853722,0,0x0,8
tick,0x7ffc909efd34,294869395,0,0x0,8
tick,0x7ffc909efd34,294884729,0,0x0,8
tick,0x7ffc909efd34,294899687,0,0x0,8
tick,0x7ffc909efd34,294915038,0,0x0,8
tick,0x7ffc909efd34,294931417,0,0x0,8
tick,0x7ffc909efd34,294946912,0,0x0,8
tick,0x7ffc909efd34,294962277,0,0x0,8
tick,0x7ffc909efd34,294977863,0,0x0,8
tick,0x7ffc909efd34,294993664,0,0x0,8
tick,0x7ffc909efd34,295008816,0,0x0,8
tick,0x7ffc909efd34,295024586,0,0x0,8
tick,0x7ffc909efd34,295040162,0,0x0,8
tick,0x7ffc909efd34,295055406,0,0x0,8
tick,0x7ffc909efd34,295070695,0,0x0,8
tick,0x7ffc909efd34,295086124,0,0x0,8
tick,0x7ffc909efd34,295101389,0,0x0,8
tick,0x7ffc909efd34,295116906,0,0x0,8
tick,0x7ffc909efd34,295132110,0,0x0,8
tick,0x7ffc909efd34,295147889,0,0x0,8
tick,0x7ffc909efd34,295163487,0,0x0,8
tick,0x7ffc909efd34,295179272,0,0x0,8
tick,0x7ffc909efd34,295194825,0,0x0,8
tick,0x7ffc909efd34,295210977,0,0x0,8
tick,0x7ffc909efd34,295226392,0,0x0,8
tick,0x7ffc909efd34,295241918,0,0x0,8
tick,0x7ffc909efd34,295257217,0,0x0,8
tick,0x7ffc909efd34,295272699,0,0x0,8
tick,0x7ffc909efd34,295288009,0,0x0,8
tick,0x7ffc909efd34,295303393,0,0x0,8
tick,0x7ffc909efd34,295318878,0,0x0,8
tick,0x7ffc909efd34,295334560,0,0x0,8
tick,0x7ffc909efd34,295350280,0,0x0,8
tick,0x7ffc909efd34,295366005,0,0x0,8
tick,0x7ffc909efd34,295381301,0,0x0,8
tick,0x7ffc909efd34,295396917,0,0x0,8
tick,0x7ffc909efd34,295412520,0,0x0,8
tick,0x7ffc909efd34,295427666,0,0x0,8
tick,0x7ffc909efd34,295443003,0,0x0,8
tick,0x7ffc909efd34,295459262,0,0x0,8
tick,0x7ffc909efd34,295474877,0,0x0,8
tick,0x7ffc909efd34,295491172,0,0x0,8
tick,0x7ffc909efd34,295506556,0,0x0,8
tick,0x7ffc909efd34,295521995,0,0x0,8
tick,0x7ffc909efd34,295536954,0,0x0,8
tick,0x7ffc909efd34,295551705,0,0x0,8
tick,0x7ffc909efd34,295567574,0,0x0,8
tick,0x7ffc909efd34,295582926,0,0x0,8
tick,0x7ffc909efd34,295598583,0,0x0,8
tick,0x7ffc909efd34,295613916,0,0x0,8
tick,0x7ffc909efd34,295630226,0,0x0,8
tick,0x7ffc909efd34,295646279,0,0x0,8
tick,0x7ffc909efd34,295661164,0,0x0,8
tick,0x7ffc909efd34,295677324,0,0x0,8
tick,0x7ffc909efd34,295692462,0,0x0,8
tick,0x7ffc909efd34,295708190,0,0x0,8
tick,0x7ffc909efd34,295723948,0,0x0,8
tick,0x7ffc909efd34,295739716,0,0x0,8
tick,0x7ffc909efd34,295755476,0,0x0,8
tick,0x7ffc909efd34,295771117,0,0x0,8
tick,0x7ffc909efd34,295787242,0,0x0,8
tick,0x7ffc909efd34,295803097,0,0x0,8
tick,0x7ffc909efd34,295818387,0,0x0,8
tick,0x7ffc909efd34,295834699,0,0x0,8
tick,0x7ffc909efd34,295850180,0,0x0,8
tick,0x7ffc909efd34,295866151,0,0x0,8
tick,0x7ffc909efd34,295881759,0,0x0,8
tick,0x7ffc909efd34,295897539,0,0x0,8
tick,0x7ffc909efd34,295913323,0,0x0,8
tick,0x7ffc909efd34,295929228,0,0x0,8
tick,0x7ffc909efd34,295944851,0,0x0,8
tick,0x7ffc909efd34,295960237,0,0x0,8
tick,0x7ffc909efd34,295976269,0,0x0,8
tick,0x7ffc909efd34,295991842,0,0x0,8
tick,0x7ffc909efd34,296007269,0,0x0,8
tick,0x7ffc909efd34,296022434,0,0x0,8
tick,0x7ffc909efd34,296037708,0,0x0,8
tick,0x7ffc909efd34,296053531,0,0x0,8
tick,0x7ffc909efd34,296069244,0,0x0,8
tick,0x7ffc909efd34,296084685,0,0x0,8
tick,0x7ffc909efd34,296100017,0,0x0,8
tick,0x7ffc909efd34,296115100,0,0x0,8
tick,0x7ffc909efd34,296130260,0,0x0,8
tick,0x7ffc909efd34,296146038,0,0x0,8
tick,0x7ffc909efd34,296161349,0,0x0,8
tick,0x7ffc909efd34,296176728,0,0x0,8
tick,0x7ffc909efd34,296192565,0,0x0,8
tick,0x7ffc909efd34,296207710,0,0x0,8
tick,0x7ffc909efd34,296223252,0,0x0,8
tick,0x7ffc909efd34,296238811,0,0x0,8
tick,0x7ffc909efd34,296253957,0,0x0,8
tick,0x7ffc909efd34,296269947,0,0x0,8
tick,0x7ffc909efd34,296285539,0,0x0,8
tick,0x7ffc909efd34,296301305,0,0x0,8
tick,0x7ffc909efd34,296316288,0,0x0,8
tick,0x7ffc909efd34,296331933,0,0x0,8
tick,0x7ffc909efd34,296347097,0,0x0,8
tick,0x7ffc909efd34,296362471,0,0x0,8
tick,0x7ffc909efd34,296377886,0,0x0,8
tick,0x7ffc909efd34,296393604,0,0x0,8
tick,0x7ffc909efd34,296409242,0,0x0,8
tick,0x7ffc909efd34,296424593,0,0x0,8
tick,0x7ffc909efd34,296440494,0,0x0,8
tick,0x7ffc909efd34,296455970,0,0x0,8
tick,0x7ffc909efd34,296471999,0,0x0,8
tick,0x7ffc909efd34,296487427,0,0x0,8
tick,0x7ffc909efd34,296503403,0,0x0,8
tick,0x7ffc909efd34,296519296,0,0x0,8
tick,0x7ffc909efd34,296534609,0,0x0,8
tick,0x7ffc909efd34,296551489,0,0x0,8
tick,0x7ffc909efd34,296566344,0,0x0,8
tick,0x7ffc909efd34,296581370,0,0x0,8
tick,0x7ffc909efd34,296597567,0,0x0,8
tick,0x7ffc909efd34,296612370,0,0x0,8
tick,0x7ffc909efd34,296628397,0,0x0,8
tick,0x7ffc909efd34,296644454,0,0x0,8
tick,0x7ffc909efd34,296659996,0,0x0,8
tick,0x7ffc909efd34,296675387,0,0x0,8
tick,0x7ffc909efd34,296690588,0,0x0,8
tick,0x7ffc909efd34,296705972,0,0x0,8
tick,0x7ffc909efd34,296721580,0,0x0,8
tick,0x7ffc909efd34,296737028,0,0x0,8
tick,0x7ffc909efd34,296752479,0,0x0,8
tick,0x7ffc909efd34,296767794,0,0x0,8
tick,0x7ffc909efd34,296783430,0,0x0,8
tick,0x7ffc909efd34,296798731,0,0x0,8
tick,0x7ffc909efd34,296813855,0,0x0,8
tick,0x7ffc909efd34,296829576,0,0x0,8
tick,0x7ffc909efd34,296845944,0,0x0,8
tick,0x7ffc909efd34,296861272,0,0x0,8
tick,0x7ffc909efd34,296876718,0,0x0,8
tick,0x7ffc909efd34,296892157,0,0x0,8
tick,0x7ffc909efd34,296907444,0,0x0,8
tick,0x7ffc909efd34,296922635,0,0x0,8
tick,0x7ffc909efd34,296938020,0,0x0,8
tick,0x7ffc909efd34,296954044,0,0x0,8
tick,0x7ffc909efd34,296969425,0,0x0,8
tick,0x7ffc909efd34,296985420,0,0x0,8
tick,0x7ffc909efd34,297001126,0,0x0,8
tick,0x7ffc909efd34,297016278,0,0x0,8
tick,0x7ffc909efd34,297031880,0,0x0,8
tick,0x7ffc909efd34,297047755,0,0x0,8
tick,0x7ffc909efd34,297063163,0,0x0,8
tick,0x7ffc909efd34,297078920,0,0x0,8
tick,0x7ffc909efd34,297094105,0,0x0,8
tick,0x7ffc909efd34,297109599,0,0x0,8
tick,0x7ffc909efd34,297125091,0,0x0,8
tick,0x7ffc909efd34,297140865,0,0x0,8
tick,0x7ffc909efd34,297156377,0,0x0,8
tick,0x7ffc909efd34,297171637,0,0x0,8
tick,0x7ffc909efd34,297187252,0,0x0,8
tick,0x7ffc909efd34,297202605,0,0x0,8
tick,0x7ffc909efd34,297217831,0,0x0,8
tick,0x7ffc909efd34,297233289,0,0x0,8
tick,0x7ffc909efd34,297248670,0,0x0,8
tick,0x7ffc909efd34,297264671,0,0x0,8
tick,0x7ffc909efd34,297280217,0,0x0,8
tick,0x7ffc909efd34,297296367,0,0x0,8
tick,0x7ffc909efd34,297311730,0,0x0,8
tick,0x7ffc909efd34,297328080,0,0x0,8
tick,0x7ffc909efd34,297343178,0,0x0,8
tick,0x7ffc909efd34,297358692,0,0x0,8
tick,0x7ffc909efd34,297374270,0,0x0,8
tick,0x7ffc909efd34,297389681,0,0x0,8
tick,0x7ffc909efd34,297405330,0,0x0,8
tick,0x7ffc909efd34,297420838,0,0x0,8
tick,0x7ffc909efd34,297436093,0,0x0,8
tick,0x7ffc909efd34,297452153,0,0x0,8
tick,0x7ffc909efd34,297467659,0,0x0,8
tick,0x7ffc909efd34,297483328,0,0x0,8
tick,0x7ffc909efd34,297499547,0,0x0,8
tick,0x7ffc909efd34,297515583,0,0x0,8
tick,0x7ffc909efd34,297531042,0,0x0,8
tick,0x7ffc909efd34,297547309,0,0x0,8
tick,0x7ffc909efd34,297563453,0,0x0,8
tick,0x7ffc909efd34,297579799,0,0x0,8
tick,0x7ffc909efd34,297595054,0,0x0,8
tick,0x7ffc909efd34,297610889,0,0x0,8
tick,0x7ffc909efd34,297626261,0,0x0,8
tick,0x7ffc909efd34,297641817,0,0x0,8
tick,0x7ffc909efd34,297657468,0,0x0,8
tick,0x7ffc909efd34,297673182,0,0x0,8
tick,0x7ffc909efd34,297688609,0,0x0,8
tick,0x7ffc909efd34,297703929,0,0x0,8
tick,0x7ffc909efd34,297720101,0,0x0,8
tick,0x7ffc909efd34,297735237,0,0x0,8
tick,0x7ffc909efd34,297750934,0,0x0,8
tick,0x7ffc909efd34,297766266,0,0x0,8
tick,0x7ffc909efd34,297781717,0,0x0,8
tick,0x7ffc909efd34,297797010,0,0x0,8
tick,0x7ffc909efd34,297812353,0,0x0,8
tick,0x7ffc909efd34,297827871,0,0x0,8
tick,0x7ffc909efd34,297843194,0,0x0,8
tick,0x7ffc909efd34,297858638,0,0x0,8
tick,0x7ffc909efd34,297873968,0,0x0,8
tick,0x7ffc909efd34,297890302,0,0x0,8
tick,0x7ffc909efd34,297905571,0,0x0,8
tick,0x7ffc909efd34,297920976,0,0x0,8
tick,0x7ffc909efd34,297936454,0,0x0,8
tick,0x7ffc909efd34,297951776,0,0x0,8
tick,0x7ffc909efd34,297967405,0,0x0,8
tick,0x7ffc909efd34,297982719,0,0x0,8
tick,0x7ffc909efd34,297998333,0,0x0,8
tick,0x7ffc909efd34,298014189,0,0x0,8
tick,0x7ffc909efd34,298029572,0,0x0,8
tick,0x7ffc909efd34,298045070,0,0x0,8
tick,0x7ffc909efd34,298060550,0,0x0,8
tick,0x7ffc909efd34,298076264,0,0x0,8
tick,0x7ffc909efd34,298091864,0,0x0,8
tick,0x7ffc909efd34,298107353,0,0x0,8
tick,0x7ffc909efd34,298122529,0,0x0,8
tick,0x7ffc909efd34,298137917,0,0x0,8
tick,0x7ffc909efd34,298153254,0,0x0,8
tick,0x7ffc909efd34,298168341,0,0x0,8
tick,0x7ffc909efd34,298184012,0,0x0,8
tick,0x7ffc909efd34,298199306,0,0x0,8
tick,0x7ffc909efd34,298214526,0,0x0,8
tick,0x7ffc909efd34,298229918,0,0x0,8
tick,0x7ffc909efd34,298245362,0,0x0,8
tick,0x7ffc909efd34,298261033,0,0x0,8
tick,0x7ffc909efd34,298276979,0,0x0,8
tick,0x7ffc909efd34,298292559,0,0x0,8
tick,0x7ffc909efd34,298307958,0,0x0,8
tick,0x7ffc909efd34,298323491,0,0x0,8
tick,0x7ffc909efd34,298339854,0,0x0,8
tick,0x7ffc909efd34,298355147,0,0x0,8
tick,0x7ffc909efd34,298371707,0,0x0,8
tick,0x7ffc909efd34,298386963,0,0x0,8
tick,0x7ffc909efd34,298402902,0,0x0,8
tick,0x7ffc909efd34,298418269,0,0x0,8
tick,0x7ffc909efd34,298434097,0,0x0,8
tick,0x7ffc909efd34,298449890,0,0x0,8
tick,0x7ffc909efd34,298465117,0,0x0,8
tick,0x7ffc909efd34,298480932,0,0x0,8
tick,0x7ffc909efd34,298496950,0,0x0,8
tick,0x7ffc909efd34,298512125,0,0x0,8
tick,0x7ffc909efd34,298527689,0,0x0,8
tick,0x7ffc909efd34,298543270,0,0x0,8
tick,0x7ffc909efd34,298558604,0,0x0,8
tick,0x7ffc909efd34,298574302,0,0x0,8
tick,0x7ffc909efd34,298589947,0,0x0,8
tick,0x7ffc909efd34,298605332,0,0x0,8
tick,0x7ffc909efd34,298620648,0,0x0,8
tick,0x7ffc909efd34,298636759,0,0x0,8
tick,0x7ffc909efd34,298652739,0,0x0,8
tick,0x7ffc909efd34,298668106,0,0x0,8
tick,0x7ffc909efd34,298684079,0,0x0,8
tick,0x7ffc909efd34,298699291,0,0x0,8
tick,0x7ffc909efd34,298714777,0,0x0,8
tick,0x7ffc909efd34,298730432,0,0x0,8
tick,0x7ffc909efd34,298746167,0,0x0,8
tick,0x7ffc909efd34,298762495,0,0x0,8
tick,0x7ffc909efd34,298777709,0,0x0,8
tick,0x7ffc909efd34,298793390,0,0x0,8
tick,0x7ffc909efd34,298808747,0,0x0,8
tick,0x7ffc909efd34,298824230,0,0x0,8
tick,0x7ffc909efd34,298839661,0,0x0,8
tick,0x7ffc909efd34,298855155,0,0x0,8
tick,0x7ffc909efd34,298870589,0,0x0,8
tick,0x7ffc909efd34,298886111,0,0x0,8
tick,0x7ffc909efd34,298901554,0,0x0,8
tick,0x7ffc909efd34,298917170,0,0x0,8
tick,0x7ffc909efd34,298932621,0,0x0,8
tick,0x7ffc909efd34,298948017,0,0x0,8
tick,0x7ffc909efd34,298963559,0,0x0,8
tick,0x7ffc909efd34,298979027,0,0x0,8
tick,0x7ffc909efd34,298994468,0,0x0,8
tick,0x7ffc909efd34,299010402,0,0x0,8
tick,0x7ffc909efd34,299025880,0,0x0,8
tick,0x7ffc909efd34,299041454,0,0x0,8
tick,0x7ffc909efd34,299057134,0,0x0,8
tick,0x7ffc909efd34,299073279,0,0x0,8
tick,0x7ffc909efd34,299088335,0,0x0,8
tick,0x7ffc909efd34,299103822,0,0x0,8
tick,0x7ffc909efd34,299119104,0,0x0,8
tick,0x7ffc909efd34,299134723,0,0x0,8
tick,0x7ffc909efd34,299149897,0,0x0,8
tick,0x7ffc909efd34,299165227,0,0x0,8
tick,0x7ffc909efd34,299181256,0,0x0,8
tick,0x7ffc909efd34,299196865,0,0x0,8
tick,0x7ffc909efd34,299212163,0,0x0,8
tick,0x7ffc909efd34,299227467,0,0x0,8
tick,0x7ffc909efd34,299243047,0,0x0,8
tick,0x7ffc909efd34,299258226,0,0x0,8
tick,0x7ffc909efd34,299273855,0,0x0,8
tick,0x7ffc909efd34,299289220,0,0x0,8
tick,0x7ffc909efd34,299304686,0,0x0,8
tick,0x7ffc909efd34,299320777,0,0x0,8
tick,0x7ffc909efd34,299336445,0,0x0,8
tick,0x7ffc909efd34,299352149,0,0x0,8
tick,0x7ffc909efd34,299367890,0,0x0,8
tick,0x7ffc909efd34,299384083,0,0x0,8
tick,0x7ffc909efd34,299399147,0,0x0,8
tick,0x7ffc909efd34,299414551,0,0x0,8
tick,0x7ffc909efd34,299430051,0,0x0,8
tick,0x7ffc909efd34,299445227,0,0x0,8
tick,0x7ffc909efd34,299461197,0,0x0,8
tick,0x7ffc909efd34,299477144,0,0x0,8
tick,0x7ffc909efd34,299493027,0,0x0,8
tick,0x7ffc909efd34,299508371,0,0x0,8
tick,0x7ffc909efd34,299523398,0,0x0,8
tick,0x7ffc909efd34,299539393,0,0x0,8
tick,0x7ffc909efd34,299555167,0,0x0,8
tick,0x7ffc909efd34,299571018,0,0x0,8
tick,0x7ffc909efd34,299586976,0,0x0,8
tick,0x7ffc909efd34,299602714,0,0x0,8
tick,0x7ffc909efd34,299617919,0,0x0,8
tick,0x7ffc909efd34,299633906,0,0x0,8
tick,0x7ffc909efd34,299649371,0,0x0,8
tick,0x7ffc909efd34,299665199,0,0x0,8
tick,0x7ffc909efd34,299681488,0,0x0,8
tick,0x7ffc909efd34,299696913,0,0x0,8
tick,0x7ffc909efd34,299712092,0,0x0,8
tick,0x7ffc909efd34,299728172,0,0x0,8
tick,0x7ffc909efd34,299743865,0,0x0,8
tick,0x7ffc909efd34,299759806,0,0x0,8
tick,0x7ffc909efd34,299775692,0,0x0,8
tick,0x7ffc909efd34,299791229,0,0x0,8
tick,0x7ffc909efd34,299806297,0,0x0,8
tick,0x7ffc909efd34,299821689,0,0x0,8
tick,0x7ffc909efd34,299837405,0,0x0,8
tick,0x7ffc909efd34,299852640,0,0x0,8
tick,0x7ffc909efd34,299867861,0,0x0,8
tick,0x7ffc909efd34,299883872,0,0x0,8
tick,0x7ffc909efd34,299899692,0,0x0,8
tick,0x7ffc909efd34,299915034,0,0x0,8
tick,0x7ffc909efd34,299930301,0,0x0,8
tick,0x7ffc909efd34,299945744,0,0x0,8
tick,0x7ffc909efd34,299961217,0,0x0,8
tick,0x7ffc909efd34,299976394,0,0x0,8
tick,0x7ffc909efd34,299991972,0,0x0,8
tick,0x7ffc909efd34,300008207,0,0x0,8
tick,0x7ffc909efd34,300023366,0,0x0,8
tick,0x7ffc909efd34,300038663,0,0x0,8
tick,0x7ffc909efd34,300054523,0,0x0,8
tick,0x7ffc909efd34,300070501,0,0x0,8
tick,0x7ffc909efd34,300086482,0,0x0,8
tick,0x7ffc909efd34,300102457,0,0x0,8
tick,0x7ffc909efd34,300117652,0,0x0,8
tick,0x7ffc909efd34,300132894,0,0x0,8
tick,0x7ffc909efd34,300148995,0,0x0,8
tick,0x7ffc909efd34,300164501,0,0x0,8
tick,0x7ffc909efd34,300180734,0,0x0,8
tick,0x7ffc909efd34,300195923,0,0x0,8
tick,0x7ffc909efd34,300211251,0,0x0,8
tick,0x7ffc909efd34,300226486,0,0x0,8
tick,0x7ffc909efd34,300242111,0,0x0,8
tick,0x7ffc909efd34,300257266,0,0x0,8
tick,0x7ffc909efd34,300273273,0,0x0,8
tick,0x7ffc909efd34,300288444,0,0x0,8
tick,0x7ffc909efd34,300304798,0,0x0,8
tick,0x7ffc909efd34,300319893,0,0x0,8
tick,0x7ffc909efd34,300334666,0,0x0,8
tick,0x7ffc909efd34,300350446,0,0x0,8
tick,0x7ffc909efd34,300367062,0,0x0,8
tick,0x7ffc909efd34,300382598,0,0x0,8
tick,0x7ffc909efd34,300398497,0,0x0,8
tick,0x7ffc909efd34,300414547,0,0x0,8
tick,0x7ffc909efd34,300430507,0,0x0,8
tick,0x7ffc909efd34,300445683,0,0x0,8
tick,0x7ffc909efd34,300461182,0,0x0,8
tick,0x7ffc909efd34,300476980,0,0x0,8
tick,0x7ffc909efd34,300493061,0,0x0,8
tick,0x7ffc909efd34,300509304,0,0x0,8
tick,0x7ffc909efd34,300524423,0,0x0,8
tick,0x7ffc909efd34,300540187,0,0x0,8
tick,0x7ffc909efd34,300555884,0,0x0,8
tick,0x7ffc909efd34,300571908,0,0x0,8
tick,0x7ffc909efd34,300587424,0,0x0,8
tick,0x7ffc909efd34,300602847,0,0x0,8
tick,0x7ffc909efd34,300618100,0,0x0,8
tick,0x7ffc909efd34,300633781,0,0x0,8
tick,0x7ffc909efd34,300649523,0,0x0,8
tick,0x7ffc909efd34,300665373,0,0x0,8
tick,0x7ffc909efd34,300680611,0,0x0,8
tick,0x7ffc909efd34,300695945,0,0x0,8
tick,0x7ffc909efd34,300711286,0,0x0,8
tick,0x7ffc909efd34,300727274,0,0x0,8
tick,0x7ffc909efd34,300743157,0,0x0,8
tick,0x7ffc909efd34,300758740,0,0x0,8
tick,0x7ffc909efd34,300774383,0,0x0,8
tick,0x7ffc909efd34,300789812,0,0x0,8
tick,0x7ffc909efd34,300805836,0,0x0,8
tick,0x7ffc909efd34,300821111,0,0x0,8
tick,0x7ffc909efd34,300836901,0,0x0,8
tick,0x7ffc909efd34,300852821,0,0x0,8
tick,0x7ffc909efd34,300868846,0,0x0,8
tick,0x7ffc909efd34,300884867,0,0x0,8
tick,0x7ffc909efd34,300900156,0,0x0,8
tick,0x7ffc909efd34,300915981,0,0x0,8
tick,0x7ffc909efd34,300930437,0,0x0,8
tick,0x7ffc909efd34,300945191,0,0x0,8
tick,0x7ffc909efd34,300960396,0,0x0,8
tick,0x7ffc909efd34,300976225,0,0x0,8
tick,0x7ffc909efd34,300991585,0,0x0,8
tick,0x7ffc909efd34,301006846,0,0x0,8
tick,0x7ffc909efd34,301022179,0,0x0,8
tick,0x7ffc909efd34,301037763,0,0x0,8
tick,0x7ffc909efd34,301052854,0,0x0,8
tick,0x7ffc909efd34,301068905,0,0x0,8
tick,0x7ffc909efd34,301084556,0,0x0,8
tick,0x7ffc909efd34,301099915,0,0x0,8
tick,0x7ffc909efd34,301115843,0,0x0,8
tick,0x7ffc909efd34,301131641,0,0x0,8
tick,0x7ffc909efd34,301147175,0,0x0,8
tick,0x7ffc909efd34,301163157,0,0x0,8
tick,0x7ffc909efd34,301178615,0,0x0,8
tick,0x7ffc909efd34,301194187,0,0x0,8
tick,0x7ffc909efd34,301209319,0,0x0,8
tick,0x7ffc909efd34,301225204,0,0x0,8
tick,0x7ffc909efd34,301240469,0,0x0,8
tick,0x7ffc909efd34,301256145,0,0x0,8
tick,0x7ffc909efd34,301271567,0,0x0,8
tick,0x7ffc909efd34,301286604,0,0x0,8
tick,0x7ffc909efd34,301302085,0,0x0,8
tick,0x7ffc909efd34,301317576,0,0x0,8
tick,0x7ffc909efd34,301333057,0,0x0,8
tick,0x7ffc909efd34,301348455,0,0x0,8
tick,0x7ffc909efd34,301363656,0,0x0,8
tick,0x7ffc909efd34,301379468,0,0x0,8
tick,0x7ffc909efd34,301394852,0,0x0,8
tick,0x7ffc909efd34,301410203,0,0x0,8
tick,0x7ffc909efd34,301425553,0,0x0,8
tick,0x7ffc909efd34,301441083,0,0x0,8
tick,0x7ffc909efd34,301456591,0,0x0,8
tick,0x7ffc909efd34,301472188,0,0x0,8
tick,0x7ffc909efd34,301487751,0,0x0,8
tick,0x7ffc909efd34,301503848,0,0x0,8
tick,0x7ffc909efd34,301519246,0,0x0,8
tick,0x7ffc909efd34,301535279,0,0x0,8
tick,0x7ffc909efd34,301551249,0,0x0,8
tick,0x7ffc909efd34,301567373,0,0x0,8
tick,0x7ffc909efd34,301583355,0,0x0,8
tick,0x7ffc909efd34,301599171,0,0x0,8
tick,0x7ffc909efd34,301615062,0,0x0,8
tick,0x7ffc909efd34,301630375,0,0x0,8
tick,0x7ffc909efd34,301646234,0,0x0,8
tick,0x7ffc909efd34,301662092,0,0x0,8
tick,0x7ffc909efd34,301677986,0,0x0,8
tick,0x7ffc909efd34,301693267,0,0x0,8
tick,0x7ffc909efd34,301709144,0,0x0,8
tick,0x7ffc909efd34,301724657,0,0x0,8
tick,0x7ffc909efd34,301740816,0,0x0,8
tick,0x7ffc909efd34,301755562,0,0x0,8
tick,0x7ffc909efd34,301771331,0,0x0,8
tick,0x7ffc909efd34,301786864,0,0x0,8
tick,0x7ffc909efd34,301802699,0,0x0,8
tick,0x7ffc909efd34,301818521,0,0x0,8
tick,0x7ffc909efd34,301834135,0,0x0,8
tick,0x7ffc909efd34,301850184,0,0x0,8
tick,0x7ffc909efd34,301865384,0,0x0,8
tick,0x7ffc909efd34,301881436,0,0x0,8
tick,0x7ffc909efd34,301897111,0,0x0,8
tick,0x7ffc909efd34,301912492,0,0x0,8
tick,0x7ffc909efd34,301928754,0,0x0,8
tick,0x7ffc909efd34,301943989,0,0x0,8
tick,0x7ffc909efd34,301959850,0,0x0,8
tick,0x7ffc909efd34,301975466,0,0x0,8
tick,0x7ffc909efd34,301990888,0,0x0,8
tick,0x7ffc909efd34,302006069,0,0x0,8
tick,0x7ffc909efd34,302021576,0,0x0,8
tick,0x7ffc909efd34,302037533,0,0x0,8
tick,0x7ffc909efd34,302052833,0,0x0,8
tick,0x7ffc909efd34,302068784,0,0x0,8
tick,0x7ffc909efd34,302084558,0,0x0,8
tick,0x7ffc909efd34,302100075,0,0x0,8
tick,0x7ffc909efd34,302115272,0,0x0,8
tick,0x7ffc909efd34,302130733,0,0x0,8
tick,0x7ffc909efd34,302146267,0,0x0,8
tick,0x7ffc909efd34,302162066,0,0x0,8
tick,0x7ffc909efd34,302177290,0,0x0,8
tick,0x7ffc909efd34,302193057,0,0x0,8
tick,0x7ffc909efd34,302208883,0,0x0,8
tick,0x7ffc909efd34,302224564,0,0x0,8
tick,0x7ffc909efd34,302240885,0,0x0,8
tick,0x7ffc909efd34,302256643,0,0x0,8
tick,0x7ffc909efd34,302272369,0,0x0,8
tick,0x7ffc909efd34,302287906,0,0x0,8
tick,0x7ffc909efd34,302303496,0,0x0,8
tick,0x7ffc909efd34,302319761,0,0x0,8
tick,0x7ffc909efd34,302335279,0,0x0,8
tick,0x7ffc909efd34,302351532,0,0x0,8
tick,0x7ffc909efd34,302366834,0,0x0,8
tick,0x7ffc909efd34,302382646,0,0x0,8
tick,0x7ffc909efd34,302398499,0,0x0,8
tick,0x7ffc909efd34,302414074,0,0x0,8
tick,0x7ffc909efd34,302429572,0,0x0,8
tick,0x7ffc909efd34,302445023,0,0x0,8
tick,0x7ffc909efd34,302460606,0,0x0,8
tick,0x7ffc909efd34,302476214,0,0x0,8
tick,0x7ffc909efd34,302491976,0,0x0,8
tick,0x7ffc909efd34,302507413,0,0x0,8
tick,0x7ffc909efd34,302523082,0,0x0,8
tick,0x7ffc909efd34,302538880,0,0x0,8
tick,0x7ffc909efd34,302554057,0,0x0,8
tick,0x7ffc909efd34,302570123,0,0x0,8
tick,0x7ffc909efd34,302585672,0,0x0,8
tick,0x7ffc909efd34,302601665,0,0x0,8
tick,0x7ffc909efd34,302617591,0,0x0,8
tick,0x7ffc909efd34,302633205,0,0x0,8
tick,0x7ffc909efd34,302649173,0,0x0,8
tick,0x7ffc909efd34,302664440,0,0x0,8
tick,0x7ffc909efd34,302680086,0,0x0,8
tick,0x7ffc909efd34,302695842,0,0x0,8
tick,0x7ffc909efd34,302711885,0,0x0,8
tick,0x7ffc909efd34,302728201,0,0x0,8
tick,0x7ffc909efd34,302744022,0,0x0,8
tick,0x7ffc909efd34,302760136,0,0x0,8
tick,0x7ffc909efd34,302775973,0,0x0,8
tick,0x7ffc909efd34,302791456,0,0x0,8
tick,0x7ffc909efd34,302807468,0,0x0,8
tick,0x7ffc909efd34,302822874,0,0x0,8
tick,0x7ffc909efd34,302837832,0,0x0,8
tick,0x7ffc909efd34,302853144,0,0x0,8
tick,0x7ffc909efd34,302869287,0,0x0,8
tick,0x7ffc909efd34,302885085,0,0x0,8
tick,0x7ffc909efd34,302901144,0,0x0,8
tick,0x7ffc909efd34,302917307,0,0x0,8
tick,0x7ffc909efd34,302931994,0,0x0,8
tick,0x7ffc909efd34,302947571,0,0x0,8
tick,0x7ffc909efd34,302963123,0,0x0,8
tick,0x7ffc909efd34,302978643,0,0x0,8
tick,0x7ffc909efd34,302994221,0,0x0,8
tick,0x7ffc909efd34,303010189,0,0x0,8
tick,0x7ffc909efd34,303025427,0,0x0,8
tick,0x7ffc909efd34,303041304,0,0x0,8
tick,0x7ffc909efd34,303056861,0,0x0,8
tick,0x7ffc909efd34,303072502,0,0x0,8
tick,0x7ffc909efd34,303087467,0,0x0,8
tick,0x7ffc909efd34,303102751,0,0x0,8
tick,0x7ffc909efd34,303118632,0,0x0,8
tick,0x7ffc909efd34,303134514,0,0x0,8
tick,0x7ffc909efd34,303150121,0,0x0,8
tick,0x7ffc909efd34,303165710,0,0x0,8
tick,0x7ffc909efd34,303181499,0,0x0,8
tick,0x7ffc909efd34,303196758,0,0x0,8
tick,0x7ffc909efd34,303212704,0,0x0,8
tick,0x7ffc909efd34,303228732,0,0x0,8
tick,0x7ffc909efd34,303244863,0,0x0,8
tick,0x7ffc909efd34,303260105,0,0x0,8
tick,0x7ffc909efd34,303276309,0,0x0,8
tick,0x7ffc909efd34,303292218,0,0x0,8
tick,0x7ffc909efd34,303306969,0,0x0,8
tick,0x7ffc909efd34,303321863,0,0x0,8
tick,0x7ffc909efd34,303337322,0,0x0,8
tick,0x7ffc909efd34,303353170,0,0x0,8
tick,0x7ffc909efd34,303368390,0,0x0,8
tick,0x7ffc909efd34,303384534,0,0x0,8
tick,0x7ffc909efd34,303399324,0,0x0,8
tick,0x7ffc909efd34,303415179,0,0x0,8
tick,0x7ffc909efd34,303430669,0,0x0,8
tick,0x7ffc909efd34,303446593,0,0x0,8
tick,0x7ffc909efd34,303462139,0,0x0,8
tick,0x7ffc909efd34,303477478,0,0x0,8
tick,0x7ffc909efd34,303492766,0,0x0,8
tick,0x7ffc909efd34,303508781,0,0x0,8
tick,0x7ffc909efd34,303524434,0,0x0,8
tick,0x7ffc909efd34,303540103,0,0x0,8
tick,0x7ffc909efd34,303556354,0,0x0,8
tick,0x7ffc909efd34,303572222,0,0x0,8
tick,0x7ffc909efd34,303588183,0,0x0,8
tick,0x7ffc909efd34,303604078,0,0x0,8
tick,0x7ffc909efd34,303619337,0,0x0,8
tick,0x7ffc909efd34,303634867,0,0x0,8
tick,0x7ffc909efd34,303651312,0,0x0,8
tick,0x7ffc909efd34,303666494,0,0x0,8
tick,0x7ffc909efd34,303681784,0,0x0,8
tick,0x7ffc909efd34,303696975,0,0x0,8
tick,0x7ffc909efd34,303712347,0,0x0,8
tick,0x7ffc909efd34,303728249,0,0x0,8
tick,0x7ffc909efd34,303744126,0,0x0,8
tick,0x7ffc909efd34,303759380,0,0x0,8
tick,0x7ffc909efd34,303774966,0,0x0,8
tick,0x7ffc909efd34,303790210,0,0x0,8
tick,0x7ffc909efd34,303806075,0,0x0,8
tick,0x7ffc909efd34,303821473,0,0x0,8
tick,0x7ffc909efd34,303837147,0,0x0,8
tick,0x7ffc909efd34,303852686,0,0x0,8
tick,0x7ffc909efd34,303868192,0,0x0,8
tick,0x7ffc909efd34,303883884,0,0x0,8
tick,0x7ffc909efd34,303899135,0,0x0,8
tick,0x7ffc909efd34,303915479,0,0x0,8
tick,0x7ffc909efd34,303931657,0,0x0,8
tick,0x7ffc909efd34,303947388,0,0x0,8
tick,0x7ffc909efd34,303962554,0,0x0,8
tick,0x7ffc909efd34,303978723,0,0x0,8
tick,0x7ffc909efd34,303994054,0,0x0,8
tick,0x7ffc909efd34,304010143,0,0x0,8
tick,0x7ffc909efd34,304025460,0,0x0,8
tick,0x7ffc909efd34,304041102,0,0x0,8
tick,0x7ffc909efd34,304057049,0,0x0,8
tick,0x7ffc909efd34,304072239,0,0x0,8
tick,0x7ffc909efd34,304087883,0,0x0,8
tick,0x7ffc909efd34,304107352,0,0x0,8
tick,0x7ffc909efd34,304121126,0,0x0,8
tick,0x7ffc909efd34,304160061,0,0x0,8
tick,0x7ffc909efd34,304187381,0,0x0,8
tick,0x7ffc909efd34,304206517,0,0x0,8
tick,0x7ffc909efd34,304215598,0,0x0,8
tick,0x7ffc909efd34,304231639,0,0x0,8
tick,0x7ffc909efd34,304247447,0,0x0,8
tick,0x7ffc909efd34,304263623,0,0x0,8
tick,0x7ffc909efd34,304279614,0,0x0,8
tick,0x7ffc909efd34,304294778,0,0x0,8
tick,0x7ffc909efd34,304309565,0,0x0,8
tick,0x7ffc909efd34,304325260,0,0x0,8
tick,0x7ffc909efd34,304340497,0,0x0,8
tick,0x7ffc909efd34,304356589,0,0x0,8
tick,0x7ffc909efd34,304371702,0,0x0,8
tick,0x7ffc909efd34,304387593,0,0x0,8
tick,0x7ffc909efd34,304403567,0,0x0,8
tick,0x7ffc909efd34,304419557,0,0x0,8
tick,0x7ffc909efd34,304435471,0,0x0,8
tick,0x7ffc909efd34,304451787,0,0x0,8
tick,0x7ffc909efd34,304467049,0,0x0,8
tick,0x7ffc909efd34,304483145,0,0x0,8
tick,0x7ffc909efd34,304498237,0,0x0,8
tick,0x7ffc909efd34,304514158,0,0x0,8
tick,0x7ffc909efd34,304530167,0,0x0,8
tick,0x7ffc909efd34,304545945,0,0x0,8
tick,0x7ffc909efd34,304561417,0,0x0,8
tick,0x7ffc909efd34,304576430,0,0x0,8
tick,0x7ffc909efd34,304592558,0,0x0,8
tick,0x7ffc909efd34,304608068,0,0x0,8
tick,0x7ffc909efd34,304623553,0,0x0,8
tick,0x7ffc909efd34,304639189,0,0x0,8
tick,0x7ffc909efd34,304654668,0,0x0,8
tick,0x7ffc909efd34,304670230,0,0x0,8
tick,0x7ffc909efd34,304686034,0,0x0,8
tick,0x7ffc909efd34,304701353,0,0x0,8
tick,0x7ffc909efd34,304716420,0,0x0,8
tick,0x7ffc909efd34,304731263,0,0x0,8
tick,0x7ffc909efd34,304746639,0,0x0,8
tick,0x7ffc909efd34,304762059,0,0x0,8
tick,0x7ffc909efd34,304777462,0,0x0,8
tick,0x7ffc909efd34,304793156,0,0x0,8
tick,0x7ffc909efd34,304808868,0,0x0,8
tick,0x7ffc909efd34,304824788,0,0x0,8
tick,0x7ffc909efd34,304840118,0,0x0,8
tick,0x7ffc909efd34,304855523,0,0x0,8
tick,0x7ffc909efd34,304871263,0,0x0,8
tick,0x7ffc909efd34,304886514,0,0x0,8
tick,0x7ffc909efd34,304902544,0,0x0,8
tick,0x7ffc909efd34,304918740,0,0x0,8
tick,0x7ffc909efd34,304934252,0,0x0,8
tick,0x7ffc909efd34,304949950,0,0x0,8
tick,0x7ffc909efd34,304965393,0,0x0,8
tick,0x7ffc909efd34,304980758,0,0x0,8
tick,0x7ffc909efd34,304996703,0,0x0,8
tick,0x7ffc909efd34,305012613,0,0x0,8
tick,0x7ffc909efd34,305028197,0,0x0,8
tick,0x7ffc909efd34,305043578,0,0x0,8
tick,0x7ffc909efd34,305059201,0,0x0,8
tick,0x7ffc909efd34,305074476,0,0x0,8
tick,0x7ffc909efd34,305090395,0,0x0,8
tick,0x7ffc909efd34,305105368,0,0x0,8
tick,0x7ffc909efd34,305121386,0,0x0,8
tick,0x7ffc909efd34,305137109,0,0x0,8
tick,0x7ffc909efd34,305153331,0,0x0,8
tick,0x7ffc909efd34,305168874,0,0x0,8
tick,0x7ffc909efd34,305184761,0,0x0,8
tick,0x7ffc909efd34,305200073,0,0x0,8
tick,0x7ffc909efd34,305215638,0,0x0,8
tick,0x7ffc909efd34,305231187,0,0x0,8
tick,0x7ffc909efd34,305246650,0,0x0,8
tick,0x7ffc909efd34,305261957,0,0x0,8
tick,0x7ffc909efd34,305277193,0,0x0,8
tick,0x7ffc909efd34,305293132,0,0x0,8
tick,0x7ffc909efd34,305308785,0,0x0,8
tick,0x7ffc909efd34,305324682,0,0x0,8
tick,0x7ffc909efd34,305339830,0,0x0,8
tick,0x7ffc909efd34,305355744,0,0x0,8
tick,0x7ffc909efd34,305371012,0,0x0,8
tick,0x7ffc909efd34,305387240,0,0x0,8
tick,0x7ffc909efd34,305401703,0,0x0,8
tick,0x7ffc909efd34,305417146,0,0x0,8
tick,0x7ffc909efd34,305432982,0,0x0,8
tick,0x7ffc909efd34,305449805,0,0x0,8
tick,0x7ffc909efd34,305464693,0,0x0,8
tick,0x7ffc909efd34,305480968,0,0x0,8
tick,0x7ffc909efd34,305496832,0,0x0,8
tick,0x7ffc909efd34,305512399,0,0x0,8
tick,0x7ffc909efd34,305528103,0,0x0,8
tick,0x7ffc909efd34,305544011,0,0x0,8
tick,0x7ffc909efd34,305559400,0,0x0,8
tick,0x7ffc909efd34,305574771,0,0x0,8
tick,0x7ffc909efd34,305590407,0,0x0,8
tick,0x7ffc909efd34,305605998,0,0x0,8
tick,0x7ffc909efd34,305621186,0,0x0,8
tick,0x7ffc909efd34,305636913,0,0x0,8
tick,0x7ffc909efd34,305653100,0,0x0,8
tick,0x7ffc909efd34,305668426,0,0x0,8
tick,0x7ffc909efd34,305684188,0,0x0,8
tick,0x7ffc909efd34,305699385,0,0x0,8
tick,0x7ffc909efd34,305715280,0,0x0,8
tick,0x7ffc909efd34,305730941,0,0x0,8
tick,0x7ffc909efd34,305746739,0,0x0,8
tick,0x7ffc909efd34,305762217,0,0x0,8
tick,0x7ffc909efd34,305777310,0,0x0,8
tick,0x7ffc909efd34,305792077,0,0x0,8
tick,0x7ffc909efd34,305808049,0,0x0,8
tick,0x7ffc909efd34,305823978,0,0x0,8
tick,0x7ffc909efd34,305840176,0,0x0,8
tick,0x7ffc909efd34,305855234,0,0x0,8
tick,0x7ffc909efd34,305870550,0,0x0,8
tick,0x7ffc909efd34,305886702,0,0x0,8
tick,0x7ffc909efd34,305902064,0,0x0,8
tick,0x7ffc909efd34,305917575,0,0x0,8
tick,0x7ffc909efd34,305933068,0,0x0,8
tick,0x7ffc909efd34,305948447,0,0x0,8
tick,0x7ffc909efd34,305963982,0,0x0,8
tick,0x7ffc909efd34,305980316,0,0x0,8
tick,0x7ffc909efd34,305996116,0,0x0,8
tick,0x7ffc909efd34,306011700,0,0x0,8
tick,0x7ffc909efd34,306027020,0,0x0,8
tick,0x7ffc909efd34,306042526,0,0x0,8
tick,0x7ffc909efd34,306057816,0,0x0,8
tick,0x7ffc909efd34,306073315,0,0x0,8
tick,0x7ffc909efd34,306088558,0,0x0,8
tick,0x7ffc909efd34,306104480,0,0x0,8
tick,0x7ffc909efd34,306120603,0,0x0,8
tick,0x7ffc909efd34,306136552,0,0x0,8
tick,0x7ffc909efd34,306152640,0,0x0,8
tick,0x7ffc909efd34,306168273,0,0x0,8
tick,0x7ffc909efd34,306183356,0,0x0,8
tick,0x7ffc909efd34,306199123,0,0x0,8
tick,0x7ffc909efd34,306214353,0,0x0,8
tick,0x7ffc909efd34,306230050,0,0x0,8
tick,0x7ffc909efd34,306245575,0,0x0,8
tick,0x7ffc909efd34,306261051,0,0x0,8
tick,0x7ffc909efd34,306276613,0,0x0,8
tick,0x7ffc909efd34,306292241,0,0x0,8
tick,0x7ffc909efd34,306307494,0,0x0,8
tick,0x7ffc909efd34,306322932,0,0x0,8
tick,0x7ffc909efd34,306338564,0,0x0,8
tick,0x7ffc909efd34,306354089,0,0x0,8
tick,0x7ffc909efd34,306370399,0,0x0,8
tick,0x7ffc909efd34,306385577,0,0x0,8
tick,0x7ffc909efd34,306400967,0,0x0,8
tick,0x7ffc909efd34,306416640,0,0x0,8
tick,0x7ffc909efd34,306432506,0,0x0,8
tick,0x7ffc909efd34,306447885,0,0x0,8
tick,0x7ffc909efd34,306463267,0,0x0,8
tick,0x7ffc909efd34,306478716,0,0x0,8
tick,0x7ffc909efd34,306495031,0,0x0,8
tick,0x7ffc909efd34,306510542,0,0x0,8
tick,0x7ffc909efd34,306525897,0,0x0,8
tick,0x7ffc909efd34,306541124,0,0x0,8
tick,0x7ffc909efd34,306556911,0,0x0,8
tick,0x7ffc909efd34,306572539,0,0x0,8
tick,0x7ffc909efd34,306588099,0,0x0,8
tick,0x7ffc909efd34,306603986,0,0x0,8
tick,0x7ffc909efd34,306620026,0,0x0,8
tick,0x7ffc909efd34,306635428,0,0x0,8
tick,0x7ffc909efd34,306651165,0,0x0,8
tick,0x7ffc909efd34,306666891,0,0x0,8
tick,0x7ffc909efd34,306682323,0,0x0,8
tick,0x7ffc909efd34,306697638,0,0x0,8
tick,0x7ffc909efd34,306712720,0,0x0,8
tick,0x7ffc909efd34,306728435,0,0x0,8
tick,0x7ffc909efd34,306743904,0,0x0,8
tick,0x7ffc909efd34,306759971,0,0x0,8
tick,0x7ffc909efd34,306774882,0,0x0,8
tick,0x7ffc909efd34,306790187,0,0x0,8
tick,0x7ffc909efd34,306805679,0,0x0,8
tick,0x7ffc909efd34,306821101,0,0x0,8
tick,0x7ffc909efd34,306836675,0,0x0,8
tick,0x7ffc909efd34,306851872,0,0x0,8
tick,0x7ffc909efd34,306867254,0,0x0,8
tick,0x7ffc909efd34,306883508,0,0x0,8
tick,0x7ffc909efd34,306899090,0,0x0,8
tick,0x7ffc909efd34,306914556,0,0x0,8
tick,0x7ffc909efd34,306930172,0,0x0,8
tick,0x7ffc909efd34,306945994,0,0x0,8
tick,0x7ffc909efd34,306961280,0,0x0,8
tick,0x7ffc909efd34,306976710,0,0x0,8
tick,0x7ffc909efd34,306991922,0,0x0,8
tick,0x7ffc909efd34,307007416,0,0x0,8
tick,0x7ffc909efd34,307023116,0,0x0,8
tick,0x7ffc909efd34,307038215,0,0x0,8
tick,0x7ffc909efd34,307053751,0,0x0,8
tick,0x7ffc909efd34,307069106,0,0x0,8
tick,0x7ffc909efd34,307085111,0,0x0,8
tick,0x7ffc909efd34,307101289,0,0x0,8
tick,0x7ffc909efd34,307116861,0,0x0,8
tick,0x7ffc909efd34,307132677,0,0x0,8
tick,0x7ffc909efd34,307147533,0,0x0,8
tick,0x7ffc909efd34,307163199,0,0x0,8
tick,0x7ffc909efd34,307178811,0,0x0,8
tick,0x7ffc909efd34,307194123,0,0x0,8
tick,0x7ffc909efd34,307210542,0,0x0,8
tick,0x7ffc909efd34,307225044,0,0x0,8
tick,0x7ffc909efd34,307241002,0,0x0,8
tick,0x7ffc909efd34,307256220,0,0x0,8
tick,0x7ffc909efd34,307272205,0,0x0,8
tick,0x7ffc909efd34,307287836,0,0x0,8
tick,0x7ffc909efd34,307303580,0,0x0,8
tick,0x7ffc909efd34,307318941,0,0x0,8
tick,0x7ffc909efd34,307334714,0,0x0,8
tick,0x7ffc909efd34,307350637,0,0x0,8
tick,0x7ffc909efd34,307366856,0,0x0,8
tick,0x7ffc909efd34,307382416,0,0x0,8
tick,0x7ffc909efd34,307397775,0,0x0,8
tick,0x7ffc909efd34,307413538,0,0x0,8
tick,0x7ffc909efd34,307429064,0,0x0,8
tick,0x7ffc909efd34,307444930,0,0x0,8
tick,0x7ffc909efd34,307461103,0,0x0,8
tick,0x7ffc909efd34,307475833,0,0x0,8
tick,0x7ffc909efd34,307491062,0,0x0,8
tick,0x7ffc909efd34,307506476,0,0x0,8
tick,0x7ffc909efd34,307522124,0,0x0,8
tick,0x7ffc909efd34,307538158,0,0x0,8
tick,0x7ffc909efd34,307553669,0,0x0,8
tick,0x7ffc909efd34,307569934,0,0x0,8
tick,0x7ffc909efd34,307585641,0,0x0,8
tick,0x7ffc909efd34,307601038,0,0x0,8
tick,0x7ffc909efd34,307616386,0,0x0,8
tick,0x7ffc909efd34,307631773,0,0x0,8
tick,0x7ffc909efd34,307647193,0,0x0,8
tick,0x7ffc909efd34,307662340,0,0x0,8
tick,0x7ffc909efd34,307678113,0,0x0,8
tick,0x7ffc909efd34,307693212,0,0x0,8
tick,0x7ffc909efd34,307708803,0,0x0,8
tick,0x7ffc909efd34,307724535,0,0x0,8
tick,0x7ffc909efd34,307739735,0,0x0,8
tick,0x7ffc909efd34,307755418,0,0x0,8
tick,0x7ffc909efd34,307771013,0,0x0,8
tick,0x7ffc909efd34,307786526,0,0x0,8
tick,0x7ffc909efd34,307802344,0,0x0,8
tick,0x7ffc909efd34,307817602,0,0x0,8
tick,0x7ffc909efd34,307832990,0,0x0,8
tick,0x7ffc909efd34,307848760,0,0x0,8
tick,0x7ffc909efd34,307863884,0,0x0,8
tick,0x7ffc909efd34,307879381,0,0x0,8
tick,0x7ffc909efd34,307895271,0,0x0,8
tick,0x7ffc909efd34,307910713,0,0x0,8
tick,0x7ffc909efd34,307926345,0,0x0,8
tick,0x7ffc909efd34,307941916,0,0x0,8
tick,0x7ffc909efd34,307957432,0,0x0,8
tick,0x7ffc909efd34,307972971,0,0x0,8
tick,0x7ffc909efd34,307988089,0,0x0,8
tick,0x7ffc909efd34,308003731,0,0x0,8
tick,0x7ffc909efd34,308020000,0,0x0,8
tick,0x7ffc909efd34,308035811,0,0x0,8
tick,0x7ffc909efd34,308050862,0,0x0,8
tick,0x7ffc909efd34,308066557,0,0x0,8
tick,0x7ffc909efd34,308082101,0,0x0,8
tick,0x7ffc909efd34,308097289,0,0x0,8
tick,0x7ffc909efd34,308112542,0,0x0,8
tick,0x7ffc909efd34,308128460,0,0x0,8
tick,0x7ffc909efd34,308144336,0,0x0,8
tick,0x7ffc909efd34,308160126,0,0x0,8
tick,0x7ffc909efd34,308176043,0,0x0,8
tick,0x7ffc909efd34,308191500,0,0x0,8
tick,0x7ffc909efd34,308207167,0,0x0,8
tick,0x7ffc909efd34,308222491,0,0x0,8
tick,0x7ffc909efd34,308238246,0,0x0,8
tick,0x7ffc909efd34,308253951,0,0x0,8
tick,0x7ffc909efd34,308269424,0,0x0,8
tick,0x7ffc909efd34,308285141,0,0x0,8
tick,0x7ffc909efd34,308300934,0,0x0,8
tick,0x7ffc909efd34,308316976,0,0x0,8
tick,0x7ffc909efd34,308333137,0,0x0,8
tick,0x7ffc909efd34,308347561,0,0x0,8
tick,0x7ffc909efd34,308363234,0,0x0,8
tick,0x7ffc909efd34,308378627,0,0x0,8
tick,0x7ffc909efd34,308394441,0,0x0,8
tick,0x7ffc909efd34,308410140,0,0x0,8
tick,0x7ffc909efd34,308425725,0,0x0,8
tick,0x7ffc909efd34,308441167,0,0x0,8
tick,0x7ffc909efd34,308457496,0,0x0,8
tick,0x7ffc909efd34,308472281,0,0x0,8
tick,0x7ffc909efd34,308487939,0,0x0,8
tick,0x7ffc909efd34,308503288,0,0x0,8
tick,0x7ffc909efd34,308518920,0,0x0,8
tick,0x7ffc909efd34,308534322,0,0x0,8
tick,0x7ffc909efd34,308549807,0,0x0,8
tick,0x7ffc909efd34,308565186,0,0x0,8
tick,0x7ffc909efd34,308581059,0,0x0,8
tick,0x7ffc909efd34,308596020,0,0x0,8
tick,0x7ffc909efd34,308611655,0,0x0,8
tick,0x7ffc909efd34,308626932,0,0x0,8
tick,0x7ffc909efd34,308642496,0,0x0,8
tick,0x7ffc909efd34,308657864,0,0x0,8
tick,0x7ffc909efd34,308673467,0,0x0,8
tick,0x7ffc909efd34,308689384,0,0x0,8
tick,0x7ffc909efd34,308704963,0,0x0,8
tick,0x7ffc909efd34,308720372,0,0x0,8
tick,0x7ffc909efd34,308736303,0,0x0,8
tick,0x7ffc909efd34,308751471,0,0x0,8
tick,0x7ffc909efd34,308767097,0,0x0,8
tick,0x7ffc909efd34,308783082,0,0x0,8
tick,0x7ffc909efd34,308798719,0,0x0,8
tick,0x7ffc909efd34,308813949,0,0x0,8
tick,0x7ffc909efd34,308829561,0,0x0,8
tick,0x7ffc909efd34,308845044,0,0x0,8
tick,0x7ffc909efd34,308860898,0,0x0,8
tick,0x7ffc909efd34,308877151,0,0x0,8
tick,0x7ffc909efd34,308892506,0,0x0,8
tick,0x7ffc909efd34,308908084,0,0x0,8
tick,0x7ffc909efd34,308923636,0,0x0,8
tick,0x7ffc909efd34,308939948,0,0x0,8
tick,0x7ffc909efd34,308955598,0,0x0,8
tick,0x7ffc909efd34,308971121,0,0x0,8
tick,0x7ffc909efd34,308987298,0,0x0,8
tick,0x7ffc909efd34,309002772,0,0x0,8
tick,0x7ffc909efd34,309018614,0,0x0,8
tick,0x7ffc909efd34,309034385,0,0x0,8
tick,0x7ffc909efd34,309049668,0,0x0,8
tick,0x7ffc909efd34,309064677,0,0x0,8
tick,0x7ffc909efd34,309080498,0,0x0,8
tick,0x7ffc909efd34,309096102,0,0x0,8
tick,0x7ffc909efd34,309112104,0,0x0,8
tick,0x7ffc909efd34,309127609,0,0x0,8
tick,0x7ffc909efd34,309143585,0,0x0,8
tick,0x7ffc909efd34,309159204,0,0x0,8
tick,0x7ffc909efd34,309174787,0,0x0,8
tick,0x7ffc909efd34,309191136,0,0x0,8
tick,0x7ffc909efd34,309206652,0,0x0,8
tick,0x7ffc909efd34,309222183,0,0x0,8
tick,0x7ffc909efd34,309238321,0,0x0,8
tick,0x7ffc909efd34,309253559,0,0x0,8
tick,0x7ffc909efd34,309269697,0,0x0,8
tick,0x7ffc909efd34,309285275,0,0x0,8
tick,0x7ffc909efd34,309301273,0,0x0,8
tick,0x7ffc909efd34,309316405,0,0x0,8
tick,0x7ffc909efd34,309331967,0,0x0,8
tick,0x7ffc909efd34,309347237,0,0x0,8
tick,0x7ffc909efd34,309362764,0,0x0,8
tick,0x7ffc909efd34,309378294,0,0x0,8
tick,0x7ffc909efd34,309394031,0,0x0,8
tick,0x7ffc909efd34,309410310,0,0x0,8
tick,0x7ffc909efd34,309426099,0,0x0,8
tick,0x7ffc909efd34,309442053,0,0x0,8
tick,0x7ffc909efd34,309457475,0,0x0,8
tick,0x7ffc909efd34,309473349,0,0x0,8
tick,0x7ffc909efd34,309488722,0,0x0,8
tick,0x7ffc909efd34,309504114,0,0x0,8
tick,0x7ffc909efd34,309520440,0,0x0,8
tick,0x7ffc909efd34,309536132,0,0x0,8
tick,0x7ffc909efd34,309551274,0,0x0,8
tick,0x7ffc909efd34,309567142,0,0x0,8
tick,0x7ffc909efd34,309582828,0,0x0,8
tick,0x7ffc909efd34,309598436,0,0x0,8
tick,0x7ffc909efd34,309613665,0,0x0,8
tick,0x7ffc909efd34,309629549,0,0x0,8
tick,0x7ffc909efd34,309645296,0,0x0,8
tick,0x7ffc909efd34,309660754,0,0x0,8
tick,0x7ffc909efd34,309676365,0,0x0,8
tick,0x7ffc909efd34,309691826,0,0x0,8
tick,0x7ffc909efd34,309707760,0,0x0,8
tick,0x7ffc909efd34,309723029,0,0x0,8
tick,0x7ffc909efd34,309738611,0,0x0,8
tick,0x7ffc909efd34,309754792,0,0x0,8
tick,0x7ffc909efd34,309770001,0,0x0,8
tick,0x7ffc909efd34,309786236,0,0x0,8
tick,0x7ffc909efd34,309801489,0,0x0,8
tick,0x7ffc909efd34,309816499,0,0x0,8
tick,0x7ffc909efd34,309832616,0,0x0,8
tick,0x7ffc909efd34,309848568,0,0x0,8
tick,0x7ffc909efd34,309863524,0,0x0,8
tick,0x7ffc909efd34,309879326,0,0x0,8
tick,0x7ffc909efd34,309894853,0,0x0,8
tick,0x7ffc909efd34,309910030,0,0x0,8
tick,0x7ffc909efd34,309925642,0,0x0,8
tick,0x7ffc909efd34,309941147,0,0x0,8
tick,0x7ffc909efd34,309956832,0,0x0,8
tick,0x7ffc909efd34,309972426,0,0x0,8
tick,0x7ffc909efd34,309987682,0,0x0,8
tick,0x7ffc909efd34,310003262,0,0x0,8
tick,0x7ffc909efd34,310019352,0,0x0,8
tick,0x7ffc909efd34,310034834,0,0x0,8
tick,0x7ffc909efd34,310050582,0,0x0,8
tick,0x7ffc909efd34,310066189,0,0x0,8
tick,0x7ffc909efd34,310081729,0,0x0,8
tick,0x7ffc909efd34,310097022,0,0x0,8
tick,0x7ffc909efd34,310112523,0,0x0,8
tick,0x7ffc909efd34,310127996,0,0x0,8
tick,0x7ffc909efd34,310143871,0,0x0,8
tick,0x7ffc909efd34,310159462,0,0x0,8
tick,0x7ffc909efd34,310175029,0,0x0,8
tick,0x7ffc909efd34,310190379,0,0x0,8
tick,0x7ffc909efd34,310205906,0,0x0,8
tick,0x7ffc909efd34,310221244,0,0x0,8
tick,0x7ffc909efd34,310236656,0,0x0,8
tick,0x7ffc909efd34,310252136,0,0x0,8
tick,0x7ffc909efd34,310267744,0,0x0,8
tick,0x7ffc909efd34,310283056,0,0x0,8
tick,0x7ffc909efd34,310299393,0,0x0,8
tick,0x7ffc909efd34,310315286,0,0x0,8
tick,0x7ffc909efd34,310330363,0,0x0,8
tick,0x7ffc909efd34,310345863,0,0x0,8
tick,0x7ffc909efd34,310362110,0,0x0,8
tick,0x7ffc909efd34,310377590,0,0x0,8
tick,0x7ffc909efd34,310393440,0,0x0,8
tick,0x7ffc909efd34,310408537,0,0x0,8
tick,0x7ffc909efd34,310424020,0,0x0,8
tick,0x7ffc909efd34,310439590,0,0x0,8
tick,0x7ffc909efd34,310455433,0,0x0,8
tick,0x7ffc909efd34,310470822,0,0x0,8
tick,0x7ffc909efd34,310486881,0,0x0,8
tick,0x7ffc909efd34,310502387,0,0x0,8
tick,0x7ffc909efd34,310517788,0,0x0,8
tick,0x7ffc909efd34,310533658,0,0x0,8
tick,0x7ffc909efd34,310549091,0,0x0,8
tick,0x7ffc909efd34,310565640,0,0x0,8
tick,0x7ffc909efd34,310580850,0,0x0,8
tick,0x7ffc909efd34,310596013,0,0x0,8
tick,0x7ffc909efd34,310611394,0,0x0,8
tick,0x7ffc909efd34,310626624,0,0x0,8
tick,0x7ffc909efd34,310642158,0,0x0,8
tick,0x7ffc909efd34,310657650,0,0x0,8
tick,0x7ffc909efd34,310673849,0,0x0,8
tick,0x7ffc909efd34,310689929,0,0x0,8
tick,0x7ffc909efd34,310705590,0,0x0,8
tick,0x7ffc909efd34,310721121,0,0x0,8
tick,0x7ffc909efd34,310737206,0,0x0,8
tick,0x7ffc909efd34,310752679,0,0x0,8
tick,0x7ffc909efd34,310768324,0,0x0,8
tick,0x7ffc909efd34,310783620,0,0x0,8
tick,0x7ffc909efd34,310798942,0,0x0,8
tick,0x7ffc909efd34,310814463,0,0x0,8
tick,0x7ffc909efd34,310830107,0,0x0,8
tick,0x7ffc909efd34,310845588,0,0x0,8
tick,0x7ffc909efd34,310861072,0,0x0,8
tick,0x7ffc909efd34,310877294,0,0x0,8
tick,0x7ffc909efd34,310891989,0,0x0,8
tick,0x7ffc909efd34,310906921,0,0x0,8
tick,0x7ffc909efd34,310922410,0,0x0,8
tick,0x7ffc909efd34,310937650,0,0x0,8
tick,0x7ffc909efd34,310953540,0,0x0,8
tick,0x7ffc909efd34,310969211,0,0x0,8
tick,0x7ffc909efd34,310984505,0,0x0,8
tick,0x7ffc909efd34,310999681,0,0x0,8
tick,0x7ffc909efd34,311015990,0,0x0,8
tick,0x7ffc909efd34,311031547,0,0x0,8
tick,0x7ffc909efd34,311046963,0,0x0,8
tick,0x7ffc909efd34,311062491,0,0x0,8
tick,0x7ffc909efd34,311078032,0,0x0,8
tick,0x7ffc909efd34,311093522,0,0x0,8
tick,0x7ffc909efd34,311109777,0,0x0,8
tick,0x7ffc909efd34,311125617,0,0x0,8
tick,0x7ffc909efd34,311142284,0,0x0,8
tick,0x7ffc909efd34,311158338,0,0x0,8
tick,0x7ffc909efd34,311173608,0,0x0,8
tick,0x7ffc909efd34,311189052,0,0x0,8
tick,0x7ffc909efd34,311204681,0,0x0,8
tick,0x7ffc909efd34,311220136,0,0x0,8
tick,0x7ffc909efd34,311235813,0,0x0,8
tick,0x7ffc909efd34,311251056,0,0x0,8
tick,0x7ffc909efd34,311267017,0,0x0,8
tick,0x7ffc909efd34,311282648,0,0x0,8
tick,0x7ffc909efd34,311298141,0,0x0,8
tick,0x7ffc909efd34,311314109,0,0x0,8
tick,0x7ffc909efd34,311329733,0,0x0,8
tick,0x7ffc909efd34,311344557,0,0x0,8
tick,0x7ffc909efd34,311359896,0,0x0,8
tick,0x7ffc909efd34,311375909,0,0x0,8
tick,0x7ffc909efd34,311391189,0,0x0,8
tick,0x7ffc909efd34,311407082,0,0x0,8
tick,0x7ffc909efd34,311423269,0,0x0,8
tick,0x7ffc909efd34,311439302,0,0x0,8
tick,0x7ffc909efd34,311455297,0,0x0,8
tick,0x7ffc909efd34,311470114,0,0x0,8
tick,0x7ffc909efd34,311485139,0,0x0,8
tick,0x7ffc909efd34,311501366,0,0x0,8
tick,0x7ffc909efd34,311517204,0,0x0,8
tick,0x7ffc909efd34,311533229,0,0x0,8
tick,0x7ffc909efd34,311549193,0,0x0,8
tick,0x7ffc909efd34,311565106,0,0x0,8
tick,0x7ffc909efd34,311581518,0,0x0,8
tick,0x7ffc909efd34,311596631,0,0x0,8
tick,0x7ffc909efd34,311612185,0,0x0,8
tick,0x7ffc909efd34,311628111,0,0x0,8
tick,0x7ffc909efd34,311644208,0,0x0,8
tick,0x7ffc909efd34,311660142,0,0x0,8
tick,0x7ffc909efd34,311676266,0,0x0,8
tick,0x7ffc909efd34,311692158,0,0x0,8
tick,0x7ffc909efd34,311708277,0,0x0,8
tick,0x7ffc909efd34,311724237,0,0x0,8
tick,0x7ffc909efd34,311740103,0,0x0,8
tick,0x7ffc909efd34,311756134,0,0x0,8
tick,0x7ffc909efd34,311771369,0,0x0,8
tick,0x7ffc909efd34,311787187,0,0x0,8
tick,0x7ffc909efd34,311803089,0,0x0,8
tick,0x7ffc909efd34,311819096,0,0x0,8
tick,0x7ffc909efd34,311835195,0,0x0,8
tick,0x7ffc909efd34,311851212,0,0x0,8
tick,0x7ffc909efd34,311867130,0,0x0,8
tick,0x7ffc909efd34,311883084,0,0x0,8
tick,0x7ffc909efd34,311899250,0,0x0,8
tick,0x7ffc909efd34,311914080,0,0x0,8
tick,0x7ffc909efd34,311929151,0,0x0,8
tick,0x7ffc909efd34,311945118,0,0x0,8
tick,0x7ffc909efd34,311961122,0,0x0,8
tick,0x7ffc909efd34,311977431,0,0x0,8
tick,0x7ffc909efd34,311993266,0,0x0,8
tick,0x7ffc909efd34,312008433,0,0x0,8
tick,0x7ffc909efd34,312024115,0,0x0,8
tick,0x7ffc909efd34,312040299,0,0x0,8
tick,0x7ffc909efd34,312056264,0,0x0,8
tick,0x7ffc909efd34,312072497,0,0x0,8
tick,0x7ffc909efd34,312088262,0,0x0,8
tick,0x7ffc909efd34,312104143,0,0x0,8
tick,0x7ffc909efd34,312120096,0,0x0,8
tick,0x7ffc909efd34,312136182,0,0x0,8
tick,0x7ffc909efd34,312152335,0,0x0,8
tick,0x7ffc909efd34,312167402,0,0x0,8
tick,0x7ffc909efd34,312183238,0,0x0,8
tick,0x7ffc909efd34,312199331,0,0x0,8
tick,0x7ffc909efd34,312215266,0,0x0,8
tick,0x7ffc909efd34,312231426,0,0x0,8
tick,0x7ffc909efd34,312248319,0,0x0,8
tick,0x7ffc909efd34,312263562,0,0x0,8
tick,0x7ffc909efd34,312278322,0,0x0,8
tick,0x7ffc909efd34,312294221,0,0x0,8
tick,0x7ffc909efd34,312310720,0,0x0,8
tick,0x7ffc909efd34,312326619,0,0x0,8
tick,0x7ffc909efd34,312342361,0,0x0,8
tick,0x7ffc909efd34,312358216,0,0x0,8
tick,0x7ffc909efd34,312374236,0,0x0,8
tick,0x7ffc909efd34,312390254,0,0x0,8
tick,0x7ffc909efd34,312406321,0,0x0,8
tick,0x7ffc909efd34,312422539,0,0x0,8
tick,0x7ffc909efd34,312438329,0,0x0,8
tick,0x7ffc909efd34,312454298,0,0x0,8
tick,0x7ffc909efd34,312470390,0,0x0,8
tick,0x7ffc909efd34,312486382,0,0x0,8
tick,0x7ffc909efd34,312502279,0,0x0,8
tick,0x7ffc909efd34,312518256,0,0x0,8
tick,0x7ffc909efd34,312534342,0,0x0,8
tick,0x7ffc909efd34,312550326,0,0x0,8
tick,0x7ffc909efd34,312566347,0,0x0,8
tick,0x7ffc909efd34,312582293,0,0x0,8
tick,0x7ffc909efd34,312598325,0,0x0,8
tick,0x7ffc909efd34,312614431,0,0x0,8
tick,0x7ffc909efd34,312629440,0,0x0,8
tick,0x7ffc909efd34,312645670,0,0x0,8
tick,0x7ffc909efd34,312660750,0,0x0,8
tick,0x7ffc909efd34,312676525,0,0x0,8
tick,0x7ffc909efd34,312692453,0,0x0,8
tick,0x7ffc909efd34,312707724,0,0x0,8
tick,0x7ffc909efd34,312723920,0,0x0,8
tick,0x7ffc909efd34,312739794,0,0x0,8
tick,0x7ffc909efd34,312755313,0,0x0,8
tick,0x7ffc909efd34,312770863,0,0x0,8
tick,0x7ffc909efd34,312787678,0,0x0,8
tick,0x7ffc909efd34,312802899,0,0x0,8
tick,0x7ffc909efd34,312818781,0,0x0,8
tick,0x7ffc909efd34,312834827,0,0x0,8
tick,0x7ffc909efd34,312850890,0,0x0,8
tick,0x7ffc909efd34,312867121,0,0x0,8
tick,0x7ffc909efd34,312882785,0,0x0,8
tick,0x7ffc909efd34,312899013,0,0x0,8
tick,0x7ffc909efd34,312913891,0,0x0,8
tick,0x7ffc909efd34,312928795,0,0x0,8
tick,0x7ffc909efd34,312944813,0,0x0,8
tick,0x7ffc909efd34,312961126,0,0x0,8
tick,0x7ffc909efd34,312983194,0,0x0,8
tick,0x7ffc909efd34,312994133,0,0x0,8
tick,0x7ffc909efd34,313013201,0,0x0,8
tick,0x7ffc909efd34,313026883,0,0x0,8
tick,0x7ffc909efd34,313041626,0,0x0,8
tick,0x7ffc909efd34,313059071,0,0x0,8
tick,0x7ffc909efd34,313075912,0,0x0,8
tick,0x7ffc909efd34,313086922,0,0x0,8
tick,0x7ffc909efd34,313103380,0,0x0,8
tick,0x7ffc909efd34,313118855,0,0x0,8
tick,0x7ffc909efd34,313134864,0,0x0,8
tick,0x7ffc909efd34,313151065,0,0x0,8
tick,0x7ffc909efd34,313167361,0,0x0,8
tick,0x7ffc909efd34,313183213,0,0x0,8
tick,0x7ffc909efd34,313198856,0,0x0,8
tick,0x7ffc909efd34,313214870,0,0x0,8
tick,0x7ffc909efd34,313231829,0,0x0,8
tick,0x7ffc909efd34,313247244,0,0x0,8
tick,0x7ffc909efd34,313262937,0,0x0,8
tick,0x7ffc909efd34,313279045,0,0x0,8
tick,0x7ffc909efd34,313294923,0,0x0,8
tick,0x7ffc909efd34,313310978,0,0x0,8
tick,0x7ffc909efd34,313325906,0,0x0,8
tick,0x7ffc909efd34,313341986,0,0x0,8
tick,0x7ffc909efd34,313358389,0,0x0,8
tick,0x7ffc909efd34,313373791,0,0x0,8
tick,0x7ffc909efd34,313390099,0,0x0,8
tick,0x7ffc909efd34,313405889,0,0x0,8
tick,0x7ffc909efd34,313422447,0,0x0,8
tick,0x7ffc909efd34,313437822,0,0x0,8
tick,0x7ffc909efd34,313454262,0,0x0,8
tick,0x7ffc909efd34,313468842,0,0x0,8
tick,0x7ffc909efd34,313483975,0,0x0,8
tick,0x7ffc909efd34,313500132,0,0x0,8
tick,0x7ffc909efd34,313516055,0,0x0,8
tick,0x7ffc909efd34,313532145,0,0x0,8
tick,0x7ffc909efd34,313546930,0,0x0,8
tick,0x7ffc909efd34,313562101,0,0x0,8
tick,0x7ffc909efd34,313578173,0,0x0,8
tick,0x7ffc909efd34,313593889,0,0x0,8
tick,0x7ffc909efd34,313609915,0,0x0,8
tick,0x7ffc909efd34,313626120,0,0x0,8
tick,0x7ffc909efd34,313641878,0,0x0,8
tick,0x7ffc909efd34,313657885,0,0x0,8
tick,0x7ffc909efd34,313673104,0,0x0,8
tick,0x7ffc909efd34,313688921,0,0x0,8
tick,0x7ffc909efd34,313704785,0,0x0,8
tick,0x7ffc909efd34,313720825,0,0x0,8
tick,0x7ffc909efd34,313736808,0,0x0,8
tick,0x7ffc909efd34,313752948,0,0x0,8
tick,0x7ffc909efd34,313768898,0,0x0,8
tick,0x7ffc909efd34,313783959,0,0x0,8
tick,0x7ffc909efd34,313801017,0,0x0,8
tick,0x7ffc909efd34,313816694,0,0x0,8
tick,0x7ffc909efd34,313832002,0,0x0,8
tick,0x7ffc909efd34,313847929,0,0x0,8
tick,0x7ffc909efd34,313864691,0,0x0,8
tick,0x7ffc909efd34,313880059,0,0x0,8
tick,0x7ffc909efd34,313895940,0,0x0,8
tick,0x7ffc909efd34,313912079,0,0x0,8
tick,0x7ffc909efd34,313929635,0,0x0,8
tick,0x7ffc909efd34,313965070,0,0x0,8
tick,0x7ffc909efd34,313974962,0,0x0,8
tick,0x7ffc909efd34,314000773,0,0x0,8
tick,0x7ffc909efd34,314006853,0,0x0,8
tick,0x7ffc909efd34,314022953,0,0x0,8
tick,0x7ffc909efd34,314038831,0,0x0,8
tick,0x7ffc909efd34,314054991,0,0x0,8
tick,0x7ffc909efd34,314072182,0,0x0,8
tick,0x7ffc909efd34,314102952,0,0x0,8
tick,0x7ffc909efd34,314122741,0,0x0,8
tick,0x7ffc909efd34,314150643,0,0x0,8
tick,0x7ffc909efd34,314167513,0,0x0,8
tick,0x7ffc909efd34,314183730,0,0x0,8
tick,0x7ffc909efd34,314198957,0,0x0,8
tick,0x7ffc909efd34,314214865,0,0x0,8
tick,0x7ffc909efd34,314235262,0,0x0,8
tick,0x7ffc909efd34,314246928,0,0x0,8
tick,0x7ffc909efd34,314263284,0,0x0,8
tick,0x7ffc909efd34,314283517,0,0x0,8
tick,0x7ffc909efd34,314294987,0,0x0,8
tick,0x7ffc909efd34,314310501,0,0x0,8
tick,0x7ffc909efd34,314325953,0,0x0,8
tick,0x7ffc909efd34,314342215,0,0x0,8
tick,0x7ffc909efd34,314357846,0,0x0,8
tick,0x7ffc909efd34,314373894,0,0x0,8
tick,0x7ffc909efd34,314390173,0,0x0,8
tick,0x7ffc909efd34,314404841,0,0x0,8
tick,0x7ffc909efd34,314419831,0,0x0,8
tick,0x7ffc909efd34,314435875,0,0x0,8
tick,0x7ffc909efd34,314452136,0,0x0,8
tick,0x7ffc909efd34,314466806,0,0x0,8
tick,0x7ffc909efd34,314482825,0,0x0,8
tick,0x7ffc909efd34,314499056,0,0x0,8
tick,0x7ffc909efd34,314514038,0,0x0,8
tick,0x7ffc909efd34,314528829,0,0x0,8
tick,0x7ffc909efd34,314544049,0,0x0,8
tick,0x7ffc909efd34,314559897,0,0x0,8
tick,0x7ffc909efd34,314574964,0,0x0,8
tick,0x7ffc909efd34,314589945,0,0x0,8
tick,0x7ffc909efd34,314605928,0,0x0,8
tick,0x7ffc909efd34,314621990,0,0x0,8
tick,0x7ffc909efd34,314637971,0,0x0,8
tick,0x7ffc909efd34,314654068,0,0x0,8
tick,0x7ffc909efd34,314669849,0,0x0,8
tick,0x7ffc909efd34,314685897,0,0x0,8
tick,0x7ffc909efd34,314700854,0,0x0,8
tick,0x7ffc909efd34,314716859,0,0x0,8
tick,0x7ffc909efd34,314733078,0,0x0,8
tick,0x7ffc909efd34,314748869,0,0x0,8
tick,0x7ffc909efd34,314764863,0,0x0,8
tick,0x7ffc909efd34,314780975,0,0x0,8
tick,0x7ffc909efd34,314809371,0,0x0,8
tick,0x7ffc909efd34,314812892,0,0x0,8
tick,0x7ffc909efd34,314832518,0,0x0,8
tick,0x7ffc909efd34,314844890,0,0x0,8
tick,0x7ffc909efd34,314860778,0,0x0,8
tick,0x7ffc909efd34,314875950,0,0x0,8
tick,0x7ffc909efd34,314892011,0,0x0,8
tick,0x7ffc909efd34,314907930,0,0x0,8
tick,0x7ffc909efd34,314923814,0,0x0,8
tick,0x7ffc909efd34,314939993,0,0x0,8
tick,0x7ffc909efd34,314955915,0,0x0,8
tick,0x7ffc909efd34,314971884,0,0x0,8
tick,0x7ffc909efd34,314988013,0,0x0,8
tick,0x7ffc909efd34,315003916,0,0x0,8
tick,0x7ffc909efd34,315019886,0,0x0,8
tick,0x7ffc909efd34,315035839,0,0x0,8
tick,0x7ffc909efd34,315051879,0,0x0,8
tick,0x7ffc909efd34,315066951,0,0x0,8
tick,0x7ffc909efd34,315082132,0,0x0,8
tick,0x7ffc909efd34,315099590,0,0x0,8
tick,0x7ffc909efd34,315117005,0,0x0,8
tick,0x7ffc909efd34,315130220,0,0x0,8
tick,0x7ffc909efd34,315146474,0,0x0,8
tick,0x7ffc909efd34,315162646,0,0x0,8
tick,0x7ffc909efd34,315180134,0,0x0,8
tick,0x7ffc909efd34,315194208,0,0x0,8
tick,0x7ffc909efd34,315211068,0,0x0,8
tick,0x7ffc909efd34,315226011,0,0x0,8
tick,0x7ffc909efd34,315240975,0,0x0,8
tick,0x7ffc909efd34,315256941,0,0x0,8
tick,0x7ffc909efd34,315273069,0,0x0,8
tick,0x7ffc909efd34,315289384,0,0x0,8
tick,0x7ffc909efd34,315306316,0,0x0,8
tick,0x7ffc909efd34,315321818,0,0x0,8
tick,0x7ffc909efd34,315336275,0,0x0,8
tick,0x7ffc909efd34,315353988,0,0x0,8
tick,0x7ffc909efd34,315367943,0,0x0,8
tick,0x7ffc909efd34,315386081,0,0x0,8
tick,0x7ffc909efd34,315399083,0,0x0,8
tick,0x7ffc909efd34,315416070,0,0x0,8
tick,0x7ffc909efd34,315431910,0,0x0,8
tick,0x7ffc909efd34,315446208,0,0x0,8
tick,0x7ffc909efd34,315462050,0,0x0,8
tick,0x7ffc909efd34,315481951,0,0x0,8
tick,0x7ffc909efd34,315493778,0,0x0,8
tick,0x7ffc909efd34,315508974,0,0x0,8
tick,0x7ffc909efd34,315524819,0,0x0,8
tick,0x7ffc909efd34,315540883,0,0x0,8
tick,0x7ffc909efd34,315556841,0,0x0,8
tick,0x7ffc909efd34,315572815,0,0x0,8
tick,0x7ffc909efd34,315589016,0,0x0,8
tick,0x7ffc909efd34,315604804,0,0x0,8
tick,0x7ffc909efd34,315620943,0,0x0,8
tick,0x7ffc909efd34,315636981,0,0x0,8
tick,0x7ffc909efd34,315652903,0,0x0,8
tick,0x7ffc909efd34,315668839,0,0x0,8
tick,0x7ffc909efd34,315684887,0,0x0,8
tick,0x7ffc909efd34,315700919,0,0x0,8
tick,0x7ffc909efd34,315716791,0,0x0,8
tick,0x7ffc909efd34,315732360,0,0x0,8
tick,0x7ffc909efd34,315748073,0,0x0,8
tick,0x7ffc909efd34,315764253,0,0x0,8
tick,0x7ffc909efd34,315779950,0,0x0,8
tick,0x7ffc909efd34,315795944,0,0x0,8
tick,0x7ffc909efd34,315811920,0,0x0,8
tick,0x7ffc909efd34,315827878,0,0x0,8
tick,0x7ffc909efd34,315843837,0,0x0,8
tick,0x7ffc909efd34,315860951,0,0x0,8
tick,0x7ffc909efd34,315885784,0,0x0,8
tick,0x7ffc909efd34,315890872,0,0x0,8
tick,0x7ffc909efd34,315907072,0,0x0,8
tick,0x7ffc909efd34,315922799,0,0x0,8
tick,0x7ffc909efd34,315938779,0,0x0,8
tick,0x7ffc909efd34,315954176,0,0x0,8
tick,0x7ffc909efd34,315969983,0,0x0,8
tick,0x7ffc909efd34,315985824,0,0x0,8
tick,0x7ffc909efd34,316001076,0,0x0,8
tick,0x7ffc909efd34,316016853,0,0x0,8
tick,0x7ffc909efd34,316032997,0,0x0,8
tick,0x7ffc909efd34,316048834,0,0x0,8
tick,0x7ffc909efd34,316064851,0,0x0,8
tick,0x7ffc909efd34,316081225,0,0x0,8
tick,0x7ffc909efd34,316097872,0,0x0,8
tick,0x7ffc909efd34,316113218,0,0x0,8
tick,0x7ffc909efd34,316128994,0,0x0,8
tick,0x7ffc909efd34,316144856,0,0x0,8
tick,0x7ffc909efd34,316160887,0,0x0,8
tick,0x7ffc909efd34,316177218,0,0x0,8
tick,0x7ffc909efd34,316192839,0,0x0,8
tick,0x7ffc909efd34,316209113,0,0x0,8
tick,0x7ffc909efd34,316225017,0,0x0,8
tick,0x7ffc909efd34,316241022,0,0x0,8
tick,0x7ffc909efd34,316256812,0,0x0,8
tick,0x7ffc909efd34,316272928,0,0x0,8
tick,0x7ffc909efd34,316287866,0,0x0,8
tick,0x7ffc909efd34,316303879,0,0x0,8
tick,0x7ffc909efd34,316319821,0,0x0,8
tick,0x7ffc909efd34,316335916,0,0x0,8
tick,0x7ffc909efd34,316351897,0,0x0,8
tick,0x7ffc909efd34,316367821,0,0x0,8
tick,0x7ffc909efd34,316382776,0,0x0,8
tick,0x7ffc909efd34,316397911,0,0x0,8
tick,0x7ffc909efd34,316413925,0,0x0,8
tick,0x7ffc909efd34,316429825,0,0x0,8
tick,0x7ffc909efd34,316445950,0,0x0,8
tick,0x7ffc909efd34,316461866,0,0x0,8
tick,0x7ffc909efd34,316477791,0,0x0,8
tick,0x7ffc909efd34,316493821,0,0x0,8
tick,0x7ffc909efd34,316509831,0,0x0,8
tick,0x7ffc909efd34,316525879,0,0x0,8
tick,0x7ffc909efd34,316541903,0,0x0,8
tick,0x7ffc909efd34,316557870,0,0x0,8
tick,0x7ffc909efd34,316573796,0,0x0,8
tick,0x7ffc909efd34,316589944,0,0x0,8
tick,0x7ffc909efd34,316606097,0,0x0,8
tick,0x7ffc909efd34,316621900,0,0x0,8
tick,0x7ffc909efd34,316637922,0,0x0,8
tick,0x7ffc909efd34,316654008,0,0x0,8
tick,0x7ffc909efd34,316696187,0,0x0,8
tick,0x7ffc909efd34,316700850,0,0x0,8
tick,0x7ffc909efd34,316719538,0,0x0,8
tick,0x7ffc909efd34,316732953,0,0x0,8
tick,0x7ffc909efd34,316748944,0,0x0,8
tick,0x7ffc909efd34,316764873,0,0x0,8
tick,0x7ffc909efd34,316780903,0,0x0,8
tick,0x7ffc909efd34,316797065,0,0x0,8
tick,0x7ffc909efd34,316811835,0,0x0,8
tick,0x7ffc909efd34,316826766,0,0x0,8
tick,0x7ffc909efd34,316842930,0,0x0,8
tick,0x7ffc909efd34,316857796,0,0x0,8
tick,0x7ffc909efd34,316873875,0,0x0,8
tick,0x7ffc909efd34,316889783,0,0x0,8
tick,0x7ffc909efd34,316905915,0,0x0,8
tick,0x7ffc909efd34,316921910,0,0x0,8
tick,0x7ffc909efd34,316937829,0,0x0,8
tick,0x7ffc909efd34,316953941,0,0x0,8
tick,0x7ffc909efd34,316968995,0,0x0,8
tick,0x7ffc909efd34,316986615,0,0x0,8
tick,0x7ffc909efd34,317000872,0,0x0,8
tick,0x7ffc909efd34,317015929,0,0x0,8
tick,0x7ffc909efd34,317031947,0,0x0,8
tick,0x7ffc909efd34,317047898,0,0x0,8
tick,0x7ffc909efd34,317063889,0,0x0,8
tick,0x7ffc909efd34,317079809,0,0x0,8
tick,0x7ffc909efd34,317095897,0,0x0,8
tick,0x7ffc909efd34,317111980,0,0x0,8
tick,0x7ffc909efd34,317127868,0,0x0,8
tick,0x7ffc909efd34,317143847,0,0x0,8
tick,0x7ffc909efd34,317159918,0,0x0,8
tick,0x7ffc909efd34,317175823,0,0x0,8
tick,0x7ffc909efd34,317190933,0,0x0,8
tick,0x7ffc909efd34,317206104,0,0x0,8
tick,0x7ffc909efd34,317221915,0,0x0,8
tick,0x7ffc909efd34,317238785,0,0x0,8
tick,0x7ffc909efd34,317253861,0,0x0,8
tick,0x7ffc909efd34,317269815,0,0x0,8
tick,0x7ffc909efd34,317285920,0,0x0,8
tick,0x7ffc909efd34,317300870,0,0x0,8
tick,0x7ffc909efd34,317316792,0,0x0,8
tick,0x7ffc909efd34,317332852,0,0x0,8
tick,0x7ffc909efd34,317348888,0,0x0,8
tick,0x7ffc909efd34,317364799,0,0x0,8
tick,0x7ffc909efd34,317380901,0,0x0,8
tick,0x7ffc909efd34,317397097,0,0x0,8
tick,0x7ffc909efd34,317412931,0,0x0,8
tick,0x7ffc909efd34,317428797,0,0x0,8
tick,0x7ffc909efd34,317444907,0,0x0,8
tick,0x7ffc909efd34,317460966,0,0x0,8
tick,0x7ffc909efd34,317476867,0,0x0,8
tick,0x7ffc909efd34,317492790,0,0x0,8
tick,0x7ffc909efd34,317508846,0,0x0,8
tick,0x7ffc909efd34,317524806,0,0x0,8
tick,0x7ffc909efd34,317540826,0,0x0,8
tick,0x7ffc909efd34,317556838,0,0x0,8
tick,0x7ffc909efd34,317571906,0,0x0,8
tick,0x7ffc909efd34,317587819,0,0x0,8
tick,0x7ffc909efd34,317603943,0,0x0,8
tick,0x7ffc909efd34,317619903,0,0x0,8
tick,0x7ffc909efd34,317635909,0,0x0,8
tick,0x7ffc909efd34,317651877,0,0x0,8
tick,0x7ffc909efd34,317667930,0,0x0,8
tick,0x7ffc909efd34,317683895,0,0x0,8
tick,0x7ffc909efd34,317699810,0,0x0,8
tick,0x7ffc909efd34,317714974,0,0x0,8
tick,0x7ffc909efd34,317731417,0,0x0,8
tick,0x7ffc909efd34,317746951,0,0x0,8
tick,0x7ffc909efd34,317761895,0,0x0,8
tick,0x7ffc909efd34,317777816,0,0x0,8
tick,0x7ffc909efd34,317796273,0,0x0,8
tick,0x7ffc909efd34,317809772,0,0x0,8
tick,0x7ffc909efd34,317825852,0,0x0,8
tick,0x7ffc909efd34,317841978,0,0x0,8
tick,0x7ffc909efd34,317857887,0,0x0,8
tick,0x7ffc909efd34,317873870,0,0x0,8
tick,0x7ffc909efd34,317889888,0,0x0,8
tick,0x7ffc909efd34,317905839,0,0x0,8
tick,0x7ffc909efd34,317921897,0,0x0,8
tick,0x7ffc909efd34,317937848,0,0x0,8
tick,0x7ffc909efd34,317953853,0,0x0,8
tick,0x7ffc909efd34,317969883,0,0x0,8
tick,0x7ffc909efd34,317985826,0,0x0,8
tick,0x7ffc909efd34,318000861,0,0x0,8
tick,0x7ffc909efd34,318016845,0,0x0,8
tick,0x7ffc909efd34,318032820,0,0x0,8
tick,0x7ffc909efd34,318048933,0,0x0,8
tick,0x7ffc909efd34,318064903,0,0x0,8
tick,0x7ffc909efd34,318080839,0,0x0,8
tick,0x7ffc909efd34,318096860,0,0x0,8
tick,0x7ffc909efd34,318112942,0,0x0,8
tick,0x7ffc909efd34,318128970,0,0x0,8
tick,0x7ffc909efd34,318144964,0,0x0,8
tick,0x7ffc909efd34,318160837,0,0x0,8
tick,0x7ffc909efd34,318177648,0,0x0,8
tick,0x7ffc909efd34,318191907,0,0x0,8
tick,0x7ffc909efd34,318206805,0,0x0,8
tick,0x7ffc909efd34,318223032,0,0x0,8
tick,0x7ffc909efd34,318239011,0,0x0,8
tick,0x7ffc909efd34,318254820,0,0x0,8
tick,0x7ffc909efd34,318270814,0,0x0,8
tick,0x7ffc909efd34,318285818,0,0x0,8
tick,0x7ffc909efd34,318300884,0,0x0,8
tick,0x7ffc909efd34,318316877,0,0x0,8
tick,0x7ffc909efd34,318332784,0,0x0,8
tick,0x7ffc909efd34,318348830,0,0x0,8
tick,0x7ffc909efd34,318364931,0,0x0,8
tick,0x7ffc909efd34,318381043,0,0x0,8
tick,0x7ffc909efd34,318396927,0,0x0,8
tick,0x7ffc909efd34,318412848,0,0x0,8
tick,0x7ffc909efd34,318428907,0,0x0,8
tick,0x7ffc909efd34,318444799,0,0x0,8
tick,0x7ffc909efd34,318459891,0,0x0,8
tick,0x7ffc909efd34,318475823,0,0x0,8
tick,0x7ffc909efd34,318491903,0,0x0,8
tick,0x7ffc909efd34,318507872,0,0x0,8
tick,0x7ffc909efd34,318523786,0,0x0,8
tick,0x7ffc909efd34,318539881,0,0x0,8
tick,0x7ffc909efd34,318555931,0,0x0,8
tick,0x7ffc909efd34,318571931,0,0x0,8
tick,0x7ffc909efd34,318587862,0,0x0,8
tick,0x7ffc909efd34,318603918,0,0x0,8
tick,0x7ffc909efd34,318619960,0,0x0,8
tick,0x7ffc909efd34,318635873,0,0x0,8
tick,0x7ffc909efd34,318651869,0,0x0,8
tick,0x7ffc909efd34,318667803,0,0x0,8
tick,0x7ffc909efd34,318683883,0,0x0,8
tick,0x7ffc909efd34,318699817,0,0x0,8
tick,0x7ffc909efd34,318715816,0,0x0,8
tick,0x7ffc909efd34,318732416,0,0x0,8
tick,0x7ffc909efd34,318746866,0,0x0,8
tick,0x7ffc909efd34,318762948,0,0x0,8
tick,0x7ffc909efd34,318778921,0,0x0,8
tick,0x7ffc909efd34,318794865,0,0x0,8
tick,0x7ffc909efd34,318810916,0,0x0,8
tick,0x7ffc909efd34,318826822,0,0x0,8
tick,0x7ffc909efd34,318842873,0,0x0,8
tick,0x7ffc909efd34,318858792,0,0x0,8
tick,0x7ffc909efd34,318874903,0,0x0,8
tick,0x7ffc909efd34,318890846,0,0x0,8
tick,0x7ffc909efd34,318906807,0,0x0,8
tick,0x7ffc909efd34,318922786,0,0x0,8
tick,0x7ffc909efd34,318938921,0,0x0,8
tick,0x7ffc909efd34,318954879,0,0x0,8
tick,0x7ffc909efd34,318970863,0,0x0,8
tick,0x7ffc909efd34,318985821,0,0x0,8
tick,0x7ffc909efd34,319001109,0,0x0,8
tick,0x7ffc909efd34,319015846,0,0x0,8
tick,0x7ffc909efd34,319031774,0,0x0,8
tick,0x7ffc909efd34,319047963,0,0x0,8
tick,0x7ffc909efd34,319064128,0,0x0,8
tick,0x7ffc909efd34,319080132,0,0x0,8
tick,0x7ffc909efd34,319095853,0,0x0,8
tick,0x7ffc909efd34,319111810,0,0x0,8
tick,0x7ffc909efd34,319128390,0,0x0,8
tick,0x7ffc909efd34,319143957,0,0x0,8
tick,0x7ffc909efd34,319159809,0,0x0,8
tick,0x7ffc909efd34,319175848,0,0x0,8
tick,0x7ffc909efd34,319192161,0,0x0,8
tick,0x7ffc909efd34,319207795,0,0x0,8
tick,0x7ffc909efd34,319223853,0,0x0,8
tick,0x7ffc909efd34,319240288,0,0x0,8
tick,0x7ffc909efd34,319255925,0,0x0,8
tick,0x7ffc909efd34,319271787,0,0x0,8
tick,0x7ffc909efd34,319287891,0,0x0,8
tick,0x7ffc909efd34,319303839,0,0x0,8
tick,0x7ffc909efd34,319319836,0,0x0,8
tick,0x7ffc909efd34,319335873,0,0x0,8
tick,0x7ffc909efd34,319351906,0,0x0,8
tick,0x7ffc909efd34,319367844,0,0x0,8
tick,0x7ffc909efd34,319382892,0,0x0,8
tick,0x7ffc909efd34,319399380,0,0x0,8
tick,0x7ffc909efd34,319414832,0,0x0,8
tick,0x7ffc909efd34,319430959,0,0x0,8
tick,0x7ffc909efd34,319447295,0,0x0,8
tick,0x7ffc909efd34,319462913,0,0x0,8
tick,0x7ffc909efd34,319478889,0,0x0,8
tick,0x7ffc909efd34,319495048,0,0x0,8
tick,0x7ffc909efd34,319510913,0,0x0,8
tick,0x7ffc909efd34,319526852,0,0x0,8
tick,0x7ffc909efd34,319542820,0,0x0,8
tick,0x7ffc909efd34,319558811,0,0x0,8
tick,0x7ffc909efd34,319574942,0,0x0,8
tick,0x7ffc909efd34,319590844,0,0x0,8
tick,0x7ffc909efd34,319606867,0,0x0,8
tick,0x7ffc909efd34,319622885,0,0x0,8
tick,0x7ffc909efd34,319638871,0,0x0,8
tick,0x7ffc909efd34,319654856,0,0x0,8
tick,0x7ffc909efd34,319670793,0,0x0,8
tick,0x7ffc909efd34,319686915,0,0x0,8
tick,0x7ffc909efd34,319702890,0,0x0,8
tick,0x7ffc909efd34,319718809,0,0x0,8
tick,0x7ffc909efd34,319735009,0,0x0,8
tick,0x7ffc909efd34,319750963,0,0x0,8
tick,0x7ffc909efd34,319766905,0,0x0,8
tick,0x7ffc909efd34,319782834,0,0x0,8
tick,0x7ffc909efd34,319798887,0,0x0,8
tick,0x7ffc909efd34,319814834,0,0x0,8
tick,0x7ffc909efd34,319830933,0,0x0,8
tick,0x7ffc909efd34,319846998,0,0x0,8
tick,0x7ffc909efd34,319863170,0,0x0,8
tick,0x7ffc909efd34,319878895,0,0x0,8
tick,0x7ffc909efd34,319894847,0,0x0,8
tick,0x7ffc909efd34,319910877,0,0x0,8
tick,0x7ffc909efd34,319926781,0,0x0,8
tick,0x7ffc909efd34,319941796,0,0x0,8
tick,0x7ffc909efd34,319957955,0,0x0,8
tick,0x7ffc909efd34,319973894,0,0x0,8
tick,0x7ffc909efd34,319989857,0,0x0,8
tick,0x7ffc909efd34,320005813,0,0x0,8
tick,0x7ffc909efd34,320021912,0,0x0,8
tick,0x7ffc909efd34,320037809,0,0x0,8
tick,0x7ffc909efd34,320053854,0,0x0,8
tick,0x7ffc909efd34,320069926,0,0x0,8
tick,0x7ffc909efd34,320085900,0,0x0,8
tick,0x7ffc909efd34,320100825,0,0x0,8
tick,0x7ffc909efd34,320115794,0,0x0,8
tick,0x7ffc909efd34,320132150,0,0x0,8
tick,0x7ffc909efd34,320147851,0,0x0,8
tick,0x7ffc909efd34,320164010,0,0x0,8
tick,0x7ffc909efd34,320179898,0,0x0,8
tick,0x7ffc909efd34,320195853,0,0x0,8
tick,0x7ffc909efd34,320210892,0,0x0,8
tick,0x7ffc909efd34,320225832,0,0x0,8
tick,0x7ffc909efd34,320241880,0,0x0,8
tick,0x7ffc909efd34,320258039,0,0x0,8
tick,0x7ffc909efd34,320273834,0,0x0,8
tick,0x7ffc909efd34,320289903,0,0x0,8
tick,0x7ffc909efd34,320304869,0,0x0,8
tick,0x7ffc909efd34,320320831,0,0x0,8
tick,0x7ffc909efd34,320336832,0,0x0,8
tick,0x7ffc909efd34,320352895,0,0x0,8
tick,0x7ffc909efd34,320368892,0,0x0,8
tick,0x7ffc909efd34,320384828,0,0x0,8
tick,0x7ffc909efd34,320402532,0,0x0,8
tick,0x7ffc909efd34,320416824,0,0x0,8
tick,0x7ffc909efd34,320431869,0,0x0,8
tick,0x7ffc909efd34,320447833,0,0x0,8
tick,0x7ffc909efd34,320463898,0,0x0,8
tick,0x7ffc909efd34,320479800,0,0x0,8
tick,0x7ffc909efd34,320495867,0,0x0,8
tick,0x7ffc909efd34,320511900,0,0x0,8
tick,0x7ffc909efd34,320527878,0,0x0,8
tick,0x7ffc909efd34,320542848,0,0x0,8
tick,0x7ffc909efd34,320557832,0,0x0,8
tick,0x7ffc909efd34,320573840,0,0x0,8
tick,0x7ffc909efd34,320589924,0,0x0,8
tick,0x7ffc909efd34,320605827,0,0x0,8
tick,0x7ffc909efd34,320620862,0,0x0,8
tick,0x7ffc909efd34,320635829,0,0x0,8
tick,0x7ffc909efd34,320651904,0,0x0,8
tick,0x7ffc909efd34,320668604,0,0x0,8
tick,0x7ffc909efd34,320684046,0,0x0,8
tick,0x7ffc909efd34,320699891,0,0x0,8
tick,0x7ffc909efd34,320715881,0,0x0,8
tick,0x7ffc909efd34,320731998,0,0x0,8
tick,0x7ffc909efd34,320747813,0,0x0,8
tick,0x7ffc909efd34,320763870,0,0x0,8
tick,0x7ffc909efd34,320780862,0,0x0,8
tick,0x7ffc909efd34,320795924,0,0x0,8
tick,0x7ffc909efd34,320811856,0,0x0,8
tick,0x7ffc909efd34,320826811,0,0x0,8
tick,0x7ffc909efd34,320841930,0,0x0,8
tick,0x7ffc909efd34,320857812,0,0x0,8
tick,0x7ffc909efd34,320873802,0,0x0,8
tick,0x7ffc909efd34,320889840,0,0x0,8
tick,0x7ffc909efd34,320905907,0,0x0,8
tick,0x7ffc909efd34,320921911,0,0x0,8
tick,0x7ffc909efd34,320937828,0,0x0,8
tick,0x7ffc909efd34,320953888,0,0x0,8
tick,0x7ffc909efd34,320969879,0,0x0,8
tick,0x7ffc909efd34,320985944,0,0x0,8
tick,0x7ffc909efd34,321000821,0,0x0,8
tick,0x7ffc909efd34,321015902,0,0x0,8
tick,0x7ffc909efd34,321032041,0,0x0,8
tick,0x7ffc909efd34,321047866,0,0x0,8
tick,0x7ffc909efd34,321063165,0,0x0,8
tick,0x7ffc909efd34,321079093,0,0x0,8
tick,0x7ffc909efd34,321094914,0,0x0,8
tick,0x7ffc909efd34,321110930,0,0x0,8
tick,0x7ffc909efd34,321126926,0,0x0,8
tick,0x7ffc909efd34,321142825,0,0x0,8
tick,0x7ffc909efd34,321158816,0,0x0,8
tick,0x7ffc909efd34,321174956,0,0x0,8
tick,0x7ffc909efd34,321190819,0,0x0,8
tick,0x7ffc909efd34,321206886,0,0x0,8
tick,0x7ffc909efd34,321222907,0,0x0,8
tick,0x7ffc909efd34,321238982,0,0x0,8
tick,0x7ffc909efd34,321253821,0,0x0,8
tick,0x7ffc909efd34,321269201,0,0x0,8
tick,0x7ffc909efd34,321284989,0,0x0,8
tick,0x7ffc909efd34,321300918,0,0x0,8
tick,0x7ffc909efd34,321316860,0,0x0,8
tick,0x7ffc909efd34,321332832,0,0x0,8
tick,0x7ffc909efd34,321348919,0,0x0,8
tick,0x7ffc909efd34,321364869,0,0x0,8
tick,0x7ffc909efd34,321380839,0,0x0,8
tick,0x7ffc909efd34,321396865,0,0x0,8
tick,0x7ffc909efd34,321413191,0,0x0,8
tick,0x7ffc909efd34,321427873,0,0x0,8
tick,0x7ffc909efd34,321443826,0,0x0,8
tick,0x7ffc909efd34,321459880,0,0x0,8
tick,0x7ffc909efd34,321475902,0,0x0,8
tick,0x7ffc909efd34,321491903,0,0x0,8
tick,0x7ffc909efd34,321506833,0,0x0,8
tick,0x7ffc909efd34,321522774,0,0x0,8
tick,0x7ffc909efd34,321538874,0,0x0,8
tick,0x7ffc909efd34,321553868,0,0x0,8
tick,0x7ffc909efd34,321569918,0,0x0,8
tick,0x7ffc909efd34,321586050,0,0x0,8
tick,0x7ffc909efd34,321601765,0,0x0,8
tick,0x7ffc909efd34,321616794,0,0x0,8
tick,0x7ffc909efd34,321632476,0,0x0,8
tick,0x7ffc909efd34,321647874,0,0x0,8
tick,0x7ffc909efd34,321663582,0,0x0,8
tick,0x7ffc909efd34,321678973,0,0x0,8
tick,0x7ffc909efd34,321695233,0,0x0,8
tick,0x7ffc909efd34,321710850,0,0x0,8
tick,0x7ffc909efd34,321727124,0,0x0,8
tick,0x7ffc909efd34,321742824,0,0x0,8
tick,0x7ffc909efd34,321758800,0,0x0,8
tick,0x7ffc909efd34,321775205,0,0x0,8
tick,0x7ffc909efd34,321791222,0,0x0,8
tick,0x7ffc909efd34,321806905,0,0x0,8
tick,0x7ffc909efd34,321821840,0,0x0,8
tick,0x7ffc909efd34,321837852,0,0x0,8
tick,0x7ffc909efd34,321853881,0,0x0,8
tick,0x7ffc909efd34,321868821,0,0x0,8
tick,0x7ffc909efd34,321883868,0,0x0,8
tick,0x7ffc909efd34,321899888,0,0x0,8
tick,0x7ffc909efd34,321915932,0,0x0,8
tick,0x7ffc909efd34,321932183,0,0x0,8
tick,0x7ffc909efd34,321947901,0,0x0,8
tick,0x7ffc909efd34,321963862,0,0x0,8
tick,0x7ffc909efd34,321980158,0,0x0,8
tick,0x7ffc909efd34,321996175,0,0x0,8
tick,0x7ffc909efd34,322011893,0,0x0,8
tick,0x7ffc909efd34,322044464,0,0x0,8
tick,0x7ffc909efd34,322059499,0,0x0,8
tick,0x7ffc909efd34,322074836,0,0x0,8
tick,0x7ffc909efd34,322090897,0,0x0,8
tick,0x7ffc909efd34,322106907,0,0x0,8
tick,0x7ffc909efd34,322121874,0,0x0,8
tick,0x7ffc909efd34,322137799,0,0x0,8
tick,0x7ffc909efd34,322153792,0,0x0,8
tick,0x7ffc909efd34,322169872,0,0x0,8
tick,0x7ffc909efd34,322185881,0,0x0,8
tick,0x7ffc909efd34,322200798,0,0x0,8
tick,0x7ffc909efd34,322215795,0,0x0,8
tick,0x7ffc909efd34,322230985,0,0x0,8
tick,0x7ffc909efd34,322246862,0,0x0,8
tick,0x7ffc909efd34,322264888,0,0x0,8
tick,0x7ffc909efd34,322279517,0,0x0,8
tick,0x7ffc909efd34,322293866,0,0x0,8
tick,0x7ffc909efd34,322309878,0,0x0,8
tick,0x7ffc909efd34,322324870,0,0x0,8
tick,0x7ffc909efd34,322343010,0,0x0,8
tick,0x7ffc909efd34,322357001,0,0x0,8
tick,0x7ffc909efd34,322371909,0,0x0,8
tick,0x7ffc909efd34,322387973,0,0x0,8
tick,0x7ffc909efd34,322403808,0,0x0,8
tick,0x7ffc909efd34,322419869,0,0x0,8
tick,0x7ffc909efd34,322435880,0,0x0,8
tick,0x7ffc909efd34,322453002,0,0x0,8
tick,0x7ffc909efd34,322472377,0,0x0,8
tick,0x7ffc909efd34,322482207,0,0x0,8
tick,0x7ffc909efd34,322499367,0,0x0,8
tick,0x7ffc909efd34,322514332,0,0x0,8
tick,0x7ffc909efd34,322532475,0,0x0,8
tick,0x7ffc909efd34,322546618,0,0x0,8
tick,0x7ffc909efd34,322561985,0,0x0,8
tick,0x7ffc909efd34,322576844,0,0x0,8
tick,0x7ffc909efd34,322592855,0,0x0,8
tick,0x7ffc909efd34,322608927,0,0x0,8
tick,0x7ffc909efd34,322623890,0,0x0,8
tick,0x7ffc909efd34,322639469,0,0x0,8
tick,0x7ffc909efd34,322654920,0,0x0,8
tick,0x7ffc909efd34,322671309,0,0x0,8
tick,0x7ffc909efd34,322688875,0,0x0,8
tick,0x7ffc909efd34,322704591,0,0x0,8
tick,0x7ffc909efd34,322718265,0,0x0,8
tick,0x7ffc909efd34,322735252,0,0x0,8
tick,0x7ffc909efd34,322749768,0,0x0,8
tick,0x7ffc909efd34,322765088,0,0x0,8
tick,0x7ffc909efd34,322782081,0,0x0,8
tick,0x7ffc909efd34,322794942,0,0x0,8
tick,0x7ffc909efd34,322809867,0,0x0,8
tick,0x7ffc909efd34,322825883,0,0x0,8
tick,0x7ffc909efd34,322841899,0,0x0,8
tick,0x7ffc909efd34,322857903,0,0x0,8
tick,0x7ffc909efd34,322873801,0,0x0,8
tick,0x7ffc909efd34,322888843,0,0x0,8
tick,0x7ffc909efd34,322903777,0,0x0,8
tick,0x7ffc909efd34,322919874,0,0x0,8
tick,0x7ffc909efd34,322935818,0,0x0,8
tick,0x7ffc909efd34,322952099,0,0x0,8
tick,0x7ffc909efd34,322967877,0,0x0,8
tick,0x7ffc909efd34,322982912,0,0x0,8
tick,0x7ffc909efd34,322999016,0,0x0,8
tick,0x7ffc909efd34,323015238,0,0x0,8
tick,0x7ffc909efd34,323031601,0,0x0,8
tick,0x7ffc909efd34,323047544,0,0x0,8
tick,0x7ffc909efd34,323065927,0,0x0,8
tick,0x7ffc909efd34,323079171,0,0x0,8
tick,0x7ffc909efd34,323094890,0,0x0,8
tick,0x7ffc909efd34,323111066,0,0x0,8
tick,0x7ffc909efd34,323126783,0,0x0,8
tick,0x7ffc909efd34,323142788,0,0x0,8
tick,0x7ffc909efd34,323158887,0,0x0,8
tick,0x7ffc909efd34,323174855,0,0x0,8
tick,0x7ffc909efd34,323190848,0,0x0,8
tick,0x7ffc909efd34,323206823,0,0x0,8
tick,0x7ffc909efd34,323222035,0,0x0,8
tick,0x7ffc909efd34,323236905,0,0x0,8
tick,0x7ffc909efd34,323252903,0,0x0,8
tick,0x7ffc909efd34,323267921,0,0x0,8
tick,0x7ffc909efd34,323283118,0,0x0,8
tick,0x7ffc909efd34,323298125,0,0x0,8
tick,0x7ffc909efd34,323313948,0,0x0,8
tick,0x7ffc909efd34,323330168,0,0x0,8
tick,0x7ffc909efd34,323346006,0,0x0,8
tick,0x7ffc909efd34,323361926,0,0x0,8
tick,0x7ffc909efd34,323377072,0,0x0,8
tick,0x7ffc909efd34,323391852,0,0x0,8
tick,0x7ffc909efd34,323406828,0,0x0,8
tick,0x7ffc909efd34,323421926,0,0x0,8
tick,0x7ffc909efd34,323438046,0,0x0,8
tick,0x7ffc909efd34,323453912,0,0x0,8
tick,0x7ffc909efd34,323469987,0,0x0,8
tick,0x7ffc909efd34,323485845,0,0x0,8
tick,0x7ffc909efd34,323500984,0,0x0,8
tick,0x7ffc909efd34,323515948,0,0x0,8
tick,0x7ffc909efd34,323531931,0,0x0,8
tick,0x7ffc909efd34,323548096,0,0x0,8
tick,0x7ffc909efd34,323563995,0,0x0,8
tick,0x7ffc909efd34,323579950,0,0x0,8
tick,0x7ffc909efd34,323596332,0,0x0,8
tick,0x7ffc909efd34,323611929,0,0x0,8
tick,0x7ffc909efd34,323652819,0,0x0,8
tick,0x7ffc909efd34,323674554,0,0x0,8
tick,0x7ffc909efd34,323701085,0,0x0,8
tick,0x7ffc909efd34,323706516,0,0x0,8
tick,0x7ffc909efd34,323721965,0,0x0,8
tick,0x7ffc909efd34,323737988,0,0x0,8
tick,0x7ffc909efd34,323753895,0,0x0,8
tick,0x7ffc909efd34,323768977,0,0x0,8
tick,0x7ffc909efd34,323783958,0,0x0,8
tick,0x7ffc909efd34,323799878,0,0x0,8
tick,0x7ffc909efd34,323814861,0,0x0,8
tick,0x7ffc909efd34,323830923,0,0x0,8
tick,0x7ffc909efd34,323846814,0,0x0,8
tick,0x7ffc909efd34,323862864,0,0x0,8
tick,0x7ffc909efd34,323879177,0,0x0,8
tick,0x7ffc909efd34,323894994,0,0x0,8
tick,0x7ffc909efd34,323910802,0,0x0,8
tick,0x7ffc909efd34,323926851,0,0x0,8
tick,0x7ffc909efd34,323942825,0,0x0,8
tick,0x7ffc909efd34,323957801,0,0x0,8
tick,0x7ffc909efd34,323972804,0,0x0,8
tick,0x7ffc909efd34,323987970,0,0x0,8
tick,0x7ffc909efd34,324003955,0,0x0,8
tick,0x7ffc909efd34,324019550,0,0x0,8
tick,0x7ffc909efd34,324034935,0,0x0,8
tick,0x7ffc909efd34,324050836,0,0x0,8
tick,0x7ffc909efd34,324066909,0,0x0,8
tick,0x7ffc909efd34,324082938,0,0x0,8
tick,0x7ffc909efd34,324098881,0,0x0,8
tick,0x7ffc909efd34,324115025,0,0x0,8
tick,0x7ffc909efd34,324130786,0,0x0,8
tick,0x7ffc909efd34,324146895,0,0x0,8
tick,0x7ffc909efd34,324162820,0,0x0,8
tick,0x7ffc909efd34,324178960,0,0x0,8
tick,0x7ffc909efd34,324194900,0,0x0,8
tick,0x7ffc909efd34,324210966,0,0x0,8
tick,0x7ffc909efd34,324226952,0,0x0,8
tick,0x7ffc909efd34,324242834,0,0x0,8
tick,0x7ffc909efd34,324258832,0,0x0,8
tick,0x7ffc909efd34,324273871,0,0x0,8
tick,0x7ffc909efd34,324290216,0,0x0,8
tick,0x7ffc909efd34,324305927,0,0x0,8
tick,0x7ffc909efd34,324321882,0,0x0,8
tick,0x7ffc909efd34,324337897,0,0x0,8
tick,0x7ffc909efd34,324353860,0,0x0,8
tick,0x7ffc909efd34,324369925,0,0x0,8
tick,0x7ffc909efd34,324385896,0,0x0,8
tick,0x7ffc909efd34,324400996,0,0x0,8
tick,0x7ffc909efd34,324416869,0,0x0,8
tick,0x7ffc909efd34,324432896,0,0x0,8
tick,0x7ffc909efd34,324449015,0,0x0,8
tick,0x7ffc909efd34,324464850,0,0x0,8
tick,0x7ffc909efd34,324480973,0,0x0,8
tick,0x7ffc909efd34,324497233,0,0x0,8
tick,0x7ffc909efd34,324512956,0,0x0,8
tick,0x7ffc909efd34,324529658,0,0x0,8
tick,0x7ffc909efd34,324544885,0,0x0,8
tick,0x7ffc909efd34,324560966,0,0x0,8
tick,0x7ffc909efd34,324576805,0,0x0,8
tick,0x7ffc909efd34,324592912,0,0x0,8
tick,0x7ffc909efd34,324608933,0,0x0,8
tick,0x7ffc909efd34,324624998,0,0x0,8
tick,0x7ffc909efd34,324640815,0,0x0,8
tick,0x7ffc909efd34,324656379,0,0x0,8
tick,0x7ffc909efd34,324672419,0,0x0,8
tick,0x7ffc909efd34,324688473,0,0x0,8
tick,0x7ffc909efd34,324704410,0,0x0,8
tick,0x7ffc909efd34,324720455,0,0x0,8
tick,0x7ffc909efd34,324736409,0,0x0,8
tick,0x7ffc909efd34,324752403,0,0x0,8
tick,0x7ffc909efd34,324768420,0,0x0,8
tick,0x7ffc909efd34,324784563,0,0x0,8
tick,0x7ffc909efd34,324800759,0,0x0,8
tick,0x7ffc909efd34,324816422,0,0x0,8
tick,0x7ffc909efd34,324832350,0,0x0,8
tick,0x7ffc909efd34,324848415,0,0x0,8
tick,0x7ffc909efd34,324864335,0,0x0,8
tick,0x7ffc909efd34,324880432,0,0x0,8
tick,0x7ffc909efd34,324896505,0,0x0,8
tick,0x7ffc909efd34,324912517,0,0x0,8
tick,0x7ffc909efd34,324928358,0,0x0,8
tick,0x7ffc909efd34,324943436,0,0x0,8
tick,0x7ffc909efd34,324958344,0,0x0,8
tick,0x7ffc909efd34,324973443,0,0x0,8
tick,0x7ffc909efd34,324989358,0,0x0,8
tick,0x7ffc909efd34,325005507,0,0x0,8
tick,0x7ffc909efd34,325021436,0,0x0,8
tick,0x7ffc909efd34,325037419,0,0x0,8
tick,0x7ffc909efd34,325053424,0,0x0,8
tick,0x7ffc909efd34,325069385,0,0x0,8
tick,0x7ffc909efd34,325085451,0,0x0,8
tick,0x7ffc909efd34,325101668,0,0x0,8
tick,0x7ffc909efd34,325117442,0,0x0,8
tick,0x7ffc909efd34,325133402,0,0x0,8
tick,0x7ffc909efd34,325151166,0,0x0,8
tick,0x7ffc909efd34,325165359,0,0x0,8
tick,0x7ffc909efd34,325180362,0,0x0,8
tick,0x7ffc909efd34,325196396,0,0x0,8
tick,0x7ffc909efd34,325212351,0,0x0,8
tick,0x7ffc909efd34,325228920,0,0x0,8
tick,0x7ffc909efd34,325244418,0,0x0,8
tick,0x7ffc909efd34,325260534,0,0x0,8
tick,0x7ffc909efd34,325278084,0,0x0,8
tick,0x7ffc909efd34,325292402,0,0x0,8
tick,0x7ffc909efd34,325307652,0,0x0,8
tick,0x7ffc909efd34,325323372,0,0x0,8
tick,0x7ffc909efd34,325338973,0,0x0,8
tick,0x7ffc909efd34,325354668,0,0x0,8
tick,0x7ffc909efd34,325370446,0,0x0,8
tick,0x7ffc909efd34,325385487,0,0x0,8
tick,0x7ffc909efd34,325400387,0,0x0,8
tick,0x7ffc909efd34,325415424,0,0x0,8
tick,0x7ffc909efd34,325431424,0,0x0,8
tick,0x7ffc909efd34,325447517,0,0x0,8
tick,0x7ffc909efd34,325463342,0,0x0,8
tick,0x7ffc909efd34,325479803,0,0x0,8
tick,0x7ffc909efd34,325495447,0,0x0,8
tick,0x7ffc909efd34,325510380,0,0x0,8
tick,0x7ffc909efd34,325525345,0,0x0,8
tick,0x7ffc909efd34,325542812,0,0x0,8
tick,0x7ffc909efd34,325557470,0,0x0,8
tick,0x7ffc909efd34,325573403,0,0x0,8
tick,0x7ffc909efd34,325589389,0,0x0,8
tick,0x7ffc909efd34,325605370,0,0x0,8
tick,0x7ffc909efd34,325620465,0,0x0,8
tick,0x7ffc909efd34,325636417,0,0x0,8
tick,0x7ffc909efd34,325652370,0,0x0,8
tick,0x7ffc909efd34,325668456,0,0x0,8
tick,0x7ffc909efd34,325684347,0,0x0,8
tick,0x7ffc909efd34,325700565,0,0x0,8
tick,0x7ffc909efd34,325716354,0,0x0,8
tick,0x7ffc909efd34,325732585,0,0x0,8
tick,0x7ffc909efd34,325748345,0,0x0,8
tick,0x7ffc909efd34,325764359,0,0x0,8
tick,0x7ffc909efd34,325780441,0,0x0,8
tick,0x7ffc909efd34,325796439,0,0x0,8
tick,0x7ffc909efd34,325812648,0,0x0,8
tick,0x7ffc909efd34,325828529,0,0x0,8
tick,0x7ffc909efd34,325844431,0,0x0,8
tick,0x7ffc909efd34,325860449,0,0x0,8
tick,0x7ffc909efd34,325876349,0,0x0,8
tick,0x7ffc909efd34,325892452,0,0x0,8
tick,0x7ffc909efd34,325908418,0,0x0,8
tick,0x7ffc909efd34,325924534,0,0x0,8
tick,0x7ffc909efd34,325940450,0,0x0,8
tick,0x7ffc909efd34,325956375,0,0x0,8
tick,0x7ffc909efd34,325972357,0,0x0,8
tick,0x7ffc909efd34,325988454,0,0x0,8
tick,0x7ffc909efd34,326004392,0,0x0,8
tick,0x7ffc909efd34,326020427,0,0x0,8
tick,0x7ffc909efd34,326036376,0,0x0,8
tick,0x7ffc909efd34,326052442,0,0x0,8
tick,0x7ffc909efd34,326067414,0,0x0,8
tick,0x7ffc909efd34,326082399,0,0x0,8
tick,0x7ffc909efd34,326098441,0,0x0,8
tick,0x7ffc909efd34,326114405,0,0x0,8
tick,0x7ffc909efd34,326130403,0,0x0,8
tick,0x7ffc909efd34,326146652,0,0x0,8
tick,0x7ffc909efd34,326162444,0,0x0,8
tick,0x7ffc909efd34,326178701,0,0x0,8
tick,0x7ffc909efd34,326194383,0,0x0,8
tick,0x7ffc909efd34,326210499,0,0x0,8
tick,0x7ffc909efd34,326226484,0,0x0,8
tick,0x7ffc909efd34,326242399,0,0x0,8
tick,0x7ffc909efd34,326258374,0,0x0,8
tick,0x7ffc909efd34,326274420,0,0x0,8
tick,0x7ffc909efd34,326290343,0,0x0,8
tick,0x7ffc909efd34,326306468,0,0x0,8
tick,0x7ffc909efd34,326322570,0,0x0,8
tick,0x7ffc909efd34,326338480,0,0x0,8
tick,0x7ffc909efd34,326353371,0,0x0,8
tick,0x7ffc909efd34,326369426,0,0x0,8
tick,0x7ffc909efd34,326385340,0,0x0,8
tick,0x7ffc909efd34,326401408,0,0x0,8
tick,0x7ffc909efd34,326417351,0,0x0,8
tick,0x7ffc909efd34,326433347,0,0x0,8
tick,0x7ffc909efd34,326449428,0,0x0,8
tick,0x7ffc909efd34,326465410,0,0x0,8
tick,0x7ffc909efd34,326481393,0,0x0,8
tick,0x7ffc909efd34,326496376,0,0x0,8
tick,0x7ffc909efd34,326511433,0,0x0,8
tick,0x7ffc909efd34,326527484,0,0x0,8
tick,0x7ffc909efd34,326543335,0,0x0,8
tick,0x7ffc909efd34,326559406,0,0x0,8
tick,0x7ffc909efd34,326575361,0,0x0,8
tick,0x7ffc909efd34,326591425,0,0x0,8
tick,0x7ffc909efd34,326607378,0,0x0,8
tick,0x7ffc909efd34,326623559,0,0x0,8
tick,0x7ffc909efd34,326639830,0,0x0,8
tick,0x7ffc909efd34,326655540,0,0x0,8
tick,0x7ffc909efd34,326670432,0,0x0,8
tick,0x7ffc909efd34,326685383,0,0x0,8
tick,0x7ffc909efd34,326701405,0,0x0,8
tick,0x7ffc909efd34,326717375,0,0x0,8
tick,0x7ffc909efd34,326733444,0,0x0,8
tick,0x7ffc909efd34,326749614,0,0x0,8
tick,0x7ffc909efd34,326765363,0,0x0,8
tick,0x7ffc909efd34,326781516,0,0x0,8
tick,0x7ffc909efd34,326797574,0,0x0,8
tick,0x7ffc909efd34,326814191,0,0x0,8
tick,0x7ffc909efd34,326829563,0,0x0,8
tick,0x7ffc909efd34,326845482,0,0x0,8
tick,0x7ffc909efd34,326861362,0,0x0,8
tick,0x7ffc909efd34,326877490,0,0x0,8
tick,0x7ffc909efd34,326893450,0,0x0,8
tick,0x7ffc909efd34,326909380,0,0x0,8
tick,0x7ffc909efd34,326924398,0,0x0,8
tick,0x7ffc909efd34,326940353,0,0x0,8
tick,0x7ffc909efd34,326956335,0,0x0,8
tick,0x7ffc909efd34,326972464,0,0x0,8
tick,0x7ffc909efd34,326988414,0,0x0,8
tick,0x7ffc909efd34,327004414,0,0x0,8
tick,0x7ffc909efd34,327020400,0,0x0,8
tick,0x7ffc909efd34,327035567,0,0x0,8
tick,0x7ffc909efd34,327050439,0,0x0,8
tick,0x7ffc909efd34,327066574,0,0x0,8
tick,0x7ffc909efd34,327082398,0,0x0,8
tick,0x7ffc909efd34,327097522,0,0x0,8
tick,0x7ffc909efd34,327113483,0,0x0,8
tick,0x7ffc909efd34,327128491,0,0x0,8
tick,0x7ffc909efd34,327144524,0,0x0,8
tick,0x7ffc909efd34,327160548,0,0x0,8
tick,0x7ffc909efd34,327176359,0,0x0,8
tick,0x7ffc909efd34,327192417,0,0x0,8
tick,0x7ffc909efd34,327208347,0,0x0,8
tick,0x7ffc909efd34,327224446,0,0x0,8
tick,0x7ffc909efd34,327240438,0,0x0,8
tick,0x7ffc909efd34,327256498,0,0x0,8
tick,0x7ffc909efd34,327272352,0,0x0,8
tick,0x7ffc909efd34,327289490,0,0x0,8
tick,0x7ffc909efd34,327325798,0,0x0,8
tick,0x7ffc909efd34,327335700,0,0x0,8
tick,0x7ffc909efd34,327351610,0,0x0,8
tick,0x7ffc909efd34,327370205,0,0x0,8
tick,0x7ffc909efd34,327383443,0,0x0,8
tick,0x7ffc909efd34,327399350,0,0x0,8
tick,0x7ffc909efd34,327415363,0,0x0,8
tick,0x7ffc909efd34,327431377,0,0x0,8
tick,0x7ffc909efd34,327447491,0,0x0,8
tick,0x7ffc909efd34,327463386,0,0x0,8
tick,0x7ffc909efd34,327479500,0,0x0,8
tick,0x7ffc909efd34,327494438,0,0x0,8
tick,0x7ffc909efd34,327510450,0,0x0,8
tick,0x7ffc909efd34,327526355,0,0x0,8
tick,0x7ffc909efd34,327541409,0,0x0,8
tick,0x7ffc909efd34,327556411,0,0x0,8
tick,0x7ffc909efd34,327572360,0,0x0,8
tick,0x7ffc909efd34,327588434,0,0x0,8
tick,0x7ffc909efd34,327604435,0,0x0,8
tick,0x7ffc909efd34,327620343,0,0x0,8
tick,0x7ffc909efd34,327636385,0,0x0,8
tick,0x7ffc909efd34,327652384,0,0x0,8
tick,0x7ffc909efd34,327668434,0,0x0,8
tick,0x7ffc909efd34,327683467,0,0x0,8
tick,0x7ffc909efd34,327698403,0,0x0,8
tick,0x7ffc909efd34,327714340,0,0x0,8
tick,0x7ffc909efd34,327729643,0,0x0,8
tick,0x7ffc909efd34,327744381,0,0x0,8
tick,0x7ffc909efd34,327760660,0,0x0,8
tick,0x7ffc909efd34,327776416,0,0x0,8
tick,0x7ffc909efd34,327792459,0,0x0,8
tick,0x7ffc909efd34,327808449,0,0x0,8
tick,0x7ffc909efd34,327823325,0,0x0,8
tick,0x7ffc909efd34,327838421,0,0x0,8
tick,0x7ffc909efd34,327853616,0,0x0,8
tick,0x7ffc909efd34,327868462,0,0x0,8
tick,0x7ffc909efd34,327883513,0,0x0,8
tick,0x7ffc909efd34,327898425,0,0x0,8
tick,0x7ffc909efd34,327914464,0,0x0,8
tick,0x7ffc909efd34,327930460,0,0x0,8
tick,0x7ffc909efd34,327946347,0,0x0,8
tick,0x7ffc909efd34,327962574,0,0x0,8
tick,0x7ffc909efd34,327979180,0,0x0,8
tick,0x7ffc909efd34,327993484,0,0x0,8
tick,0x7ffc909efd34,328008406,0,0x0,8
tick,0x7ffc909efd34,328024428,0,0x0,8
tick,0x7ffc909efd34,328039519,0,0x0,8
tick,0x7ffc909efd34,328055420,0,0x0,8
tick,0x7ffc909efd34,328071435,0,0x0,8
tick,0x7ffc909efd34,328087371,0,0x0,8
tick,0x7ffc909efd34,328103421,0,0x0,8
tick,0x7ffc909efd34,328118397,0,0x0,8
tick,0x7ffc909efd34,328133537,0,0x0,8
tick,0x7ffc909efd34,328149477,0,0x0,8
tick,0x7ffc909efd34,328165437,0,0x0,8
tick,0x7ffc909efd34,328181599,0,0x0,8
tick,0x7ffc909efd34,328197369,0,0x0,8
tick,0x7ffc909efd34,328213431,0,0x0,8
tick,0x7ffc909efd34,328229464,0,0x0,8
tick,0x7ffc909efd34,328245400,0,0x0,8
tick,0x7ffc909efd34,328261572,0,0x0,8
tick,0x7ffc909efd34,328277484,0,0x0,8
tick,0x7ffc909efd34,328293666,0,0x0,8
tick,0x7ffc909efd34,328308404,0,0x0,8
tick,0x7ffc909efd34,328324418,0,0x0,8
tick,0x7ffc909efd34,328341171,0,0x0,8
tick,0x7ffc909efd34,328356432,0,0x0,8
tick,0x7ffc909efd34,328372383,0,0x0,8
tick,0x7ffc909efd34,328388372,0,0x0,8
tick,0x7ffc909efd34,328404345,0,0x0,8
tick,0x7ffc909efd34,328420400,0,0x0,8
tick,0x7ffc909efd34,328436360,0,0x0,8
tick,0x7ffc909efd34,328453094,0,0x0,8
tick,0x7ffc909efd34,328468394,0,0x0,8
tick,0x7ffc909efd34,328483379,0,0x0,8
tick,0x7ffc909efd34,328498374,0,0x0,8
tick,0x7ffc909efd34,328514393,0,0x0,8
tick,0x7ffc909efd34,328530392,0,0x0,8
tick,0x7ffc909efd34,328546393,0,0x0,8
tick,0x7ffc909efd34,328562337,0,0x0,8
tick,0x7ffc909efd34,328578418,0,0x0,8
tick,0x7ffc909efd34,328594370,0,0x0,8
tick,0x7ffc909efd34,328610475,0,0x0,8
tick,0x7ffc909efd34,328626505,0,0x0,8
tick,0x7ffc909efd34,328642363,0,0x0,8
tick,0x7ffc909efd34,328658439,0,0x0,8
tick,0x7ffc909efd34,328674412,0,0x0,8
tick,0x7ffc909efd34,328693051,0,0x0,8
tick,0x7ffc909efd34,328706347,0,0x0,8
tick,0x7ffc909efd34,328722353,0,0x0,8
tick,0x7ffc909efd34,328738508,0,0x0,8
tick,0x7ffc909efd34,328754329,0,0x0,8
tick,0x7ffc909efd34,328769571,0,0x0,8
tick,0x7ffc909efd34,328785669,0,0x0,8
tick,0x7ffc909efd34,328801956,0,0x0,8
tick,0x7ffc909efd34,328817545,0,0x0,8
tick,0x7ffc909efd34,328833427,0,0x0,8
tick,0x7ffc909efd34,328849853,0,0x0,8
tick,0x7ffc909efd34,328865402,0,0x0,8
tick,0x7ffc909efd34,328881416,0,0x0,8
tick,0x7ffc909efd34,328897458,0,0x0,8
tick,0x7ffc909efd34,328912405,0,0x0,8
tick,0x7ffc909efd34,328928366,0,0x0,8
tick,0x7ffc909efd34,328944782,0,0x0,8
tick,0x7ffc909efd34,328960434,0,0x0,8
tick,0x7ffc909efd34,328976412,0,0x0,8
tick,0x7ffc909efd34,328992550,0,0x0,8
tick,0x7ffc909efd34,329008338,0,0x0,8
tick,0x7ffc909efd34,329024433,0,0x0,8
tick,0x7ffc909efd34,329040420,0,0x0,8
tick,0x7ffc909efd34,329056462,0,0x0,8
tick,0x7ffc909efd34,329072366,0,0x0,8
tick,0x7ffc909efd34,329088367,0,0x0,8
tick,0x7ffc909efd34,329104379,0,0x0,8
tick,0x7ffc909efd34,329120377,0,0x0,8
tick,0x7ffc909efd34,329136475,0,0x0,8
tick,0x7ffc909efd34,329152483,0,0x0,8
tick,0x7ffc909efd34,329168356,0,0x0,8
tick,0x7ffc909efd34,329184394,0,0x0,8
tick,0x7ffc909efd34,329200622,0,0x0,8
tick,0x7ffc909efd34,329216467,0,0x0,8
tick,0x7ffc909efd34,329232380,0,0x0,8
tick,0x7ffc909efd34,329247641,0,0x0,8
tick,0x7ffc909efd34,329262522,0,0x0,8
tick,0x7ffc909efd34,329278457,0,0x0,8
tick,0x7ffc909efd34,329294516,0,0x0,8
tick,0x7ffc909efd34,329310546,0,0x0,8
tick,0x7ffc909efd34,329326438,0,0x0,8
tick,0x7ffc909efd34,329342471,0,0x0,8
tick,0x7ffc909efd34,329358600,0,0x0,8
tick,0x7ffc909efd34,329374389,0,0x0,8
tick,0x7ffc909efd34,329390351,0,0x0,8
tick,0x7ffc909efd34,329406383,0,0x0,8
tick,0x7ffc909efd34,329422337,0,0x0,8
tick,0x7ffc909efd34,329438484,0,0x0,8
tick,0x7ffc909efd34,329454344,0,0x0,8
tick,0x7ffc909efd34,329470523,0,0x0,8
tick,0x7ffc909efd34,329486346,0,0x0,8
tick,0x7ffc909efd34,329502406,0,0x0,8
tick,0x7ffc909efd34,329518362,0,0x0,8
tick,0x7ffc909efd34,329534423,0,0x0,8
tick,0x7ffc909efd34,329550417,0,0x0,8
tick,0x7ffc909efd34,329566428,0,0x0,8
tick,0x7ffc909efd34,329582418,0,0x0,8
tick,0x7ffc909efd34,329598399,0,0x0,8
tick,0x7ffc909efd34,329614430,0,0x0,8
tick,0x7ffc909efd34,329630426,0,0x0,8
tick,0x7ffc909efd34,329646440,0,0x0,8
tick,0x7ffc909efd34,329662472,0,0x0,8
tick,0x7ffc909efd34,329678587,0,0x0,8
tick,0x7ffc909efd34,329694575,0,0x0,8
tick,0x7ffc909efd34,329710414,0,0x0,8
tick,0x7ffc909efd34,329726441,0,0x0,8
tick,0x7ffc909efd34,329742451,0,0x0,8
tick,0x7ffc909efd34,329757381,0,0x0,8
tick,0x7ffc909efd34,329773497,0,0x0,8
tick,0x7ffc909efd34,329789532,0,0x0,8
tick,0x7ffc909efd34,329805422,0,0x0,8
tick,0x7ffc909efd34,329821500,0,0x0,8
tick,0x7ffc909efd34,329837347,0,0x0,8
tick,0x7ffc909efd34,329853419,0,0x0,8
tick,0x7ffc909efd34,329869368,0,0x0,8
tick,0x7ffc909efd34,329885534,0,0x0,8
tick,0x7ffc909efd34,329900525,0,0x0,8
tick,0x7ffc909efd34,329916382,0,0x0,8
tick,0x7ffc909efd34,329932374,0,0x0,8
tick,0x7ffc909efd34,329948414,0,0x0,8
tick,0x7ffc909efd34,329964358,0,0x0,8
tick,0x7ffc909efd34,329980411,0,0x0,8
tick,0x7ffc909efd34,329996481,0,0x0,8
tick,0x7ffc909efd34,330012378,0,0x0,8
tick,0x7ffc909efd34,330028371,0,0x0,8
tick,0x7ffc909efd34,330043696,0,0x0,8
tick,0x7ffc909efd34,330059462,0,0x0,8
tick,0x7ffc909efd34,330075398,0,0x0,8
tick,0x7ffc909efd34,330091399,0,0x0,8
tick,0x7ffc909efd34,330107495,0,0x0,8
tick,0x7ffc909efd34,330123361,0,0x0,8
tick,0x7ffc909efd34,330139500,0,0x0,8
tick,0x7ffc909efd34,330155434,0,0x0,8
tick,0x7ffc909efd34,330171416,0,0x0,8
tick,0x7ffc909efd34,330186787,0,0x0,8
tick,0x7ffc909efd34,330202632,0,0x0,8
tick,0x7ffc909efd34,330218454,0,0x0,8
tick,0x7ffc909efd34,330234406,0,0x0,8
tick,0x7ffc909efd34,330250440,0,0x0,8
tick,0x7ffc909efd34,330266367,0,0x0,8
tick,0x7ffc909efd34,330282377,0,0x0,8
tick,0x7ffc909efd34,330298414,0,0x0,8
tick,0x7ffc909efd34,330314353,0,0x0,8
tick,0x7ffc909efd34,330329453,0,0x0,8
tick,0x7ffc909efd34,330344469,0,0x0,8
tick,0x7ffc909efd34,330360531,0,0x0,8
tick,0x7ffc909efd34,330376662,0,0x0,8
tick,0x7ffc909efd34,330392393,0,0x0,8
tick,0x7ffc909efd34,330408488,0,0x0,8
tick,0x7ffc909efd34,330424363,0,0x0,8
tick,0x7ffc909efd34,330442519,0,0x0,8
tick,0x7ffc909efd34,330456475,0,0x0,8
tick,0x7ffc909efd34,330472389,0,0x0,8
tick,0x7ffc909efd34,330488521,0,0x0,8
tick,0x7ffc909efd34,330504390,0,0x0,8
tick,0x7ffc909efd34,330520407,0,0x0,8
tick,0x7ffc909efd34,330536407,0,0x0,8
tick,0x7ffc909efd34,330552521,0,0x0,8
tick,0x7ffc909efd34,330568398,0,0x0,8
tick,0x7ffc909efd34,330584425,0,0x0,8
tick,0x7ffc909efd34,330600401,0,0x0,8
tick,0x7ffc909efd34,330616391,0,0x0,8
tick,0x7ffc909efd34,330632363,0,0x0,8
tick,0x7ffc909efd34,330648462,0,0x0,8
tick,0x7ffc909efd34,330664570,0,0x0,8
tick,0x7ffc909efd34,330680381,0,0x0,8
tick,0x7ffc909efd34,330695432,0,0x0,8
tick,0x7ffc909efd34,330711439,0,0x0,8
tick,0x7ffc909efd34,330727349,0,0x0,8
tick,0x7ffc909efd34,330742479,0,0x0,8
tick,0x7ffc909efd34,330758368,0,0x0,8
tick,0x7ffc909efd34,330774408,0,0x0,8
tick,0x7ffc909efd34,330790437,0,0x0,8
tick,0x7ffc909efd34,330806472,0,0x0,8
tick,0x7ffc909efd34,330822337,0,0x0,8
tick,0x7ffc909efd34,330837700,0,0x0,8
tick,0x7ffc909efd34,330853373,0,0x0,8
tick,0x7ffc909efd34,330869681,0,0x0,8
tick,0x7ffc909efd34,330885728,0,0x0,8
tick,0x7ffc909efd34,330901709,0,0x0,8
tick,0x7ffc909efd34,330917541,0,0x0,8
tick,0x7ffc909efd34,330933362,0,0x0,8
tick,0x7ffc909efd34,330949418,0,0x0,8
tick,0x7ffc909efd34,330965529,0,0x0,8
tick,0x7ffc909efd34,330981425,0,0x0,8
tick,0x7ffc909efd34,330997469,0,0x0,8
tick,0x7ffc909efd34,331013357,0,0x0,8
tick,0x7ffc909efd34,331029449,0,0x0,8
tick,0x7ffc909efd34,331044560,0,0x0,8
tick,0x7ffc909efd34,331060421,0,0x0,8
tick,0x7ffc909efd34,331076564,0,0x0,8
tick,0x7ffc909efd34,331094960,0,0x0,8
tick,0x7ffc909efd34,331108518,0,0x0,8
tick,0x7ffc909efd34,331124384,0,0x0,8
tick,0x7ffc909efd34,331140442,0,0x0,8
tick,0x7ffc909efd34,331156427,0,0x0,8
tick,0x7ffc909efd34,331172411,0,0x0,8
tick,0x7ffc909efd34,331187366,0,0x0,8
tick,0x7ffc909efd34,331202353,0,0x0,8
tick,0x7ffc909efd34,331218532,0,0x0,8
tick,0x7ffc909efd34,331234385,0,0x0,8
tick,0x7ffc909efd34,331249573,0,0x0,8
tick,0x7ffc909efd34,331264327,0,0x0,8
tick,0x7ffc909efd34,331280423,0,0x0,8
tick,0x7ffc909efd34,331296365,0,0x0,8
tick,0x7ffc909efd34,331312538,0,0x0,8
tick,0x7ffc909efd34,331328364,0,0x0,8
tick,0x7ffc909efd34,331344696,0,0x0,8
tick,0x7ffc909efd34,331360421,0,0x0,8
tick,0x7ffc909efd34,331376375,0,0x0,8
tick,0x7ffc909efd34,331392665,0,0x0,8
tick,0x7ffc909efd34,331407561,0,0x0,8
tick,0x7ffc909efd34,331423414,0,0x0,8
tick,0x7ffc909efd34,331439435,0,0x0,8
tick,0x7ffc909efd34,331457830,0,0x0,8
tick,0x7ffc909efd34,331471497,0,0x0,8
tick,0x7ffc909efd34,331487456,0,0x0,8
tick,0x7ffc909efd34,331503355,0,0x0,8
tick,0x7ffc909efd34,331519358,0,0x0,8
tick,0x7ffc909efd34,331535407,0,0x0,8
tick,0x7ffc909efd34,331551434,0,0x0,8
tick,0x7ffc909efd34,331566360,0,0x0,8
tick,0x7ffc909efd34,331582436,0,0x0,8
tick,0x7ffc909efd34,331598443,0,0x0,8
tick,0x7ffc909efd34,331613397,0,0x0,8
tick,0x7ffc909efd34,331629383,0,0x0,8
tick,0x7ffc909efd34,331645357,0,0x0,8
tick,0x7ffc909efd34,331661464,0,0x0,8
tick,0x7ffc909efd34,331677480,0,0x0,8
tick,0x7ffc909efd34,331693444,0,0x0,8
tick,0x7ffc909efd34,331709496,0,0x0,8
tick,0x7ffc909efd34,331725371,0,0x0,8
tick,0x7ffc909efd34,331741371,0,0x0,8
tick,0x7ffc909efd34,331757508,0,0x0,8
tick,0x7ffc909efd34,331773390,0,0x0,8
tick,0x7ffc909efd34,331789433,0,0x0,8
tick,0x7ffc909efd34,331805650,0,0x0,8
tick,0x7ffc909efd34,331822259,0,0x0,8
tick,0x7ffc909efd34,331837383,0,0x0,8
tick,0x7ffc909efd34,331853466,0,0x0,8
tick,0x7ffc909efd34,331869348,0,0x0,8
tick,0x7ffc909efd34,331885398,0,0x0,8
tick,0x7ffc909efd34,331900600,0,0x0,8
tick,0x7ffc909efd34,331916453,0,0x0,8
tick,0x7ffc909efd34,331932368,0,0x0,8
tick,0x7ffc909efd34,331948462,0,0x0,8
tick,0x7ffc909efd34,331964370,0,0x0,8
tick,0x7ffc909efd34,331980392,0,0x0,8
tick,0x7ffc909efd34,331996419,0,0x0,8
tick,0x7ffc909efd34,332012424,0,0x0,8
tick,0x7ffc909efd34,332028386,0,0x0,8
tick,0x7ffc909efd34,332043454,0,0x0,8
tick,0x7ffc909efd34,332059518,0,0x0,8
tick,0x7ffc909efd34,332075369,0,0x0,8
tick,0x7ffc909efd34,332091375,0,0x0,8
tick,0x7ffc909efd34,332107812,0,0x0,8
tick,0x7ffc909efd34,332122321,0,0x0,8
tick,0x7ffc909efd34,332137626,0,0x0,8
tick,0x7ffc909efd34,332153486,0,0x0,8
tick,0x7ffc909efd34,332169440,0,0x0,8
tick,0x7ffc909efd34,332185378,0,0x0,8
tick,0x7ffc909efd34,332201527,0,0x0,8
tick,0x7ffc909efd34,332234746,0,0x0,8
tick,0x7ffc909efd34,332249377,0,0x0,8
tick,0x7ffc909efd34,332264720,0,0x0,8
tick,0x7ffc909efd34,332280398,0,0x0,8
tick,0x7ffc909efd34,332296352,0,0x0,8
tick,0x7ffc909efd34,332312458,0,0x0,8
tick,0x7ffc909efd34,332328415,0,0x0,8
tick,0x7ffc909efd34,332344410,0,0x0,8
tick,0x7ffc909efd34,332360760,0,0x0,8
tick,0x7ffc909efd34,332376418,0,0x0,8
tick,0x7ffc909efd34,332392451,0,0x0,8
tick,0x7ffc909efd34,332408595,0,0x0,8
tick,0x7ffc909efd34,332424394,0,0x0,8
tick,0x7ffc909efd34,332440408,0,0x0,8
tick,0x7ffc909efd34,332456525,0,0x0,8
tick,0x7ffc909efd34,332471506,0,0x0,8
tick,0x7ffc909efd34,332486481,0,0x0,8
tick,0x7ffc909efd34,332501461,0,0x0,8
tick,0x7ffc909efd34,332517400,0,0x0,8
tick,0x7ffc909efd34,332533345,0,0x0,8
tick,0x7ffc909efd34,332549392,0,0x0,8
tick,0x7ffc909efd34,332564391,0,0x0,8
tick,0x7ffc909efd34,332580432,0,0x0,8
tick,0x7ffc909efd34,332596360,0,0x0,8
tick,0x7ffc909efd34,332612416,0,0x0,8
tick,0x7ffc909efd34,332627475,0,0x0,8
tick,0x7ffc909efd34,332643596,0,0x0,8
tick,0x7ffc909efd34,332659431,0,0x0,8
tick,0x7ffc909efd34,332675697,0,0x0,8
tick,0x7ffc909efd34,332691390,0,0x0,8
tick,0x7ffc909efd34,332707378,0,0x0,8
tick,0x7ffc909efd34,332723435,0,0x0,8
tick,0x7ffc909efd34,332739379,0,0x0,8
tick,0x7ffc909efd34,332755426,0,0x0,8
tick,0x7ffc909efd34,332771584,0,0x0,8
tick,0x7ffc909efd34,332787370,0,0x0,8
tick,0x7ffc909efd34,332803471,0,0x0,8
tick,0x7ffc909efd34,332819592,0,0x0,8
tick,0x7ffc909efd34,332835514,0,0x0,8
tick,0x7ffc909efd34,332851351,0,0x0,8
tick,0x7ffc909efd34,332867435,0,0x0,8
tick,0x7ffc909efd34,332883370,0,0x0,8
tick,0x7ffc909efd34,332899496,0,0x0,8
tick,0x7ffc909efd34,332915715,0,0x0,8
tick,0x7ffc909efd34,332931509,0,0x0,8
tick,0x7ffc909efd34,332947361,0,0x0,8
tick,0x7ffc909efd34,332963358,0,0x0,8
tick,0x7ffc909efd34,332979326,0,0x0,8
tick,0x7ffc909efd34,332995391,0,0x0,8
tick,0x7ffc909efd34,333011402,0,0x0,8
tick,0x7ffc909efd34,333026560,0,0x0,8
tick,0x7ffc909efd34,333041472,0,0x0,8
tick,0x7ffc909efd34,333056486,0,0x0,8
tick,0x7ffc909efd34,333072473,0,0x0,8
tick,0x7ffc909efd34,333087547,0,0x0,8
tick,0x7ffc909efd34,333102477,0,0x0,8
tick,0x7ffc909efd34,333118479,0,0x0,8
tick,0x7ffc909efd34,333134746,0,0x0,8
tick,0x7ffc909efd34,333150523,0,0x0,8
tick,0x7ffc909efd34,333166419,0,0x0,8
tick,0x7ffc909efd34,333182696,0,0x0,8
tick,0x7ffc909efd34,333198587,0,0x0,8
tick,0x7ffc909efd34,333214387,0,0x0,8
tick,0x7ffc909efd34,333230385,0,0x0,8
tick,0x7ffc909efd34,333246463,0,0x0,8
tick,0x7ffc909efd34,333264828,0,0x0,8
tick,0x7ffc909efd34,333278427,0,0x0,8
tick,0x7ffc909efd34,333294344,0,0x0,8
tick,0x7ffc909efd34,333309424,0,0x0,8
tick,0x7ffc909efd34,333324413,0,0x0,8
tick,0x7ffc909efd34,333340463,0,0x0,8
tick,0x7ffc909efd34,333356403,0,0x0,8
tick,0x7ffc909efd34,333372511,0,0x0,8
tick,0x7ffc909efd34,333388357,0,0x0,8
tick,0x7ffc909efd34,333403419,0,0x0,8
tick,0x7ffc909efd34,333418517,0,0x0,8
tick,0x7ffc909efd34,333434498,0,0x0,8
tick,0x7ffc909efd34,333450894,0,0x0,8
tick,0x7ffc909efd34,333466700,0,0x0,8
tick,0x7ffc909efd34,333482719,0,0x0,8
tick,0x7ffc909efd34,333498827,0,0x0,8
tick,0x7ffc909efd34,333514595,0,0x0,8
tick,0x7ffc909efd34,333531959,0,0x0,8
tick,0x7ffc909efd34,333551333,0,0x0,8
tick,0x7ffc909efd34,333561225,0,0x0,8
tick,0x7ffc909efd34,333575676,0,0x0,8
tick,0x7ffc909efd34,333592092,0,0x0,8
tick,0x7ffc909efd34,333607568,0,0x0,8
tick,0x7ffc909efd34,333622448,0,0x0,8
tick,0x7ffc909efd34,333639684,0,0x0,8
tick,0x7ffc909efd34,333653338,0,0x0,8
tick,0x7ffc909efd34,333669395,0,0x0,8
tick,0x7ffc909efd34,333685448,0,0x0,8
tick,0x7ffc909efd34,333701447,0,0x0,8
tick,0x7ffc909efd34,333717351,0,0x0,8
tick,0x7ffc909efd34,333733389,0,0x0,8
tick,0x7ffc909efd34,333748467,0,0x0,8
tick,0x7ffc909efd34,333763351,0,0x0,8
tick,0x7ffc909efd34,333778689,0,0x0,8
tick,0x7ffc909efd34,333794304,0,0x0,8
tick,0x7ffc909efd34,333809074,0,0x0,8
tick,0x7ffc909efd34,333824484,0,0x0,8
tick,0x7ffc909efd34,333840921,0,0x0,8
tick,0x7ffc909efd34,333856819,0,0x0,8
tick,0x7ffc909efd34,333872976,0,0x0,8
tick,0x7ffc909efd34,333888425,0,0x0,8
tick,0x7ffc909efd34,333904073,0,0x0,8
tick,0x7ffc909efd34,333919261,0,0x0,8
tick,0x7ffc909efd34,333934938,0,0x0,8
tick,0x7ffc909efd34,333950594,0,0x0,8
tick,0x7ffc909efd34,333965832,0,0x0,8
tick,0x7ffc909efd34,333981481,0,0x0,8
tick,0x7ffc909efd34,333997142,0,0x0,8
tick,0x7ffc909efd34,334012111,0,0x0,8
tick,0x7ffc909efd34,334027457,0,0x0,8
tick,0x7ffc909efd34,334042769,0,0x0,8
tick,0x7ffc909efd34,334057925,0,0x0,8
tick,0x7ffc909efd34,334073604,0,0x0,8
tick,0x7ffc909efd34,334088919,0,0x0,8
tick,0x7ffc909efd34,334104361,0,0x0,8
tick,0x7ffc909efd34,334119487,0,0x0,8
tick,0x7ffc909efd34,334134963,0,0x0,8
tick,0x7ffc909efd34,334150255,0,0x0,8
tick,0x7ffc909efd34,334165777,0,0x0,8
tick,0x7ffc909efd34,334181650,0,0x0,8
tick,0x7ffc909efd34,334197040,0,0x0,8
tick,0x7ffc909efd34,334212226,0,0x0,8
tick,0x7ffc909efd34,334227832,0,0x0,8
tick,0x7ffc909efd34,334243289,0,0x0,8
tick,0x7ffc909efd34,334259337,0,0x0,8
tick,0x7ffc909efd34,334274783,0,0x0,8
tick,0x7ffc909efd34,334290373,0,0x0,8
tick,0x7ffc909efd34,334306589,0,0x0,8
tick,0x7ffc909efd34,334321989,0,0x0,8
tick,0x7ffc909efd34,334337573,0,0x0,8
tick,0x7ffc909efd34,334353376,0,0x0,8
tick,0x7ffc909efd34,334368686,0,0x0,8
tick,0x7ffc909efd34,334384340,0,0x0,8
tick,0x7ffc909efd34,334399964,0,0x0,8
tick,0x7ffc909efd34,334415420,0,0x0,8
tick,0x7ffc909efd34,334431198,0,0x0,8
tick,0x7ffc909efd34,334446968,0,0x0,8
tick,0x7ffc909efd34,334461887,0,0x0,8
tick,0x7ffc909efd34,334477518,0,0x0,8
tick,0x7ffc909efd34,334493182,0,0x0,8
tick,0x7ffc909efd34,334508525,0,0x0,8
tick,0x7ffc909efd34,334524438,0,0x0,8
tick,0x7ffc909efd34,334540524,0,0x0,8
tick,0x7ffc909efd34,334556499,0,0x0,8
tick,0x7ffc909efd34,334572388,0,0x0,8
tick,0x7ffc909efd34,334587563,0,0x0,8
tick,0x7ffc909efd34,334603585,0,0x0,8
tick,0x7ffc909efd34,334619396,0,0x0,8
tick,0x7ffc909efd34,334634526,0,0x0,8
tick,0x7ffc909efd34,334650488,0,0x0,8
tick,0x7ffc909efd34,334666222,0,0x0,8
tick,0x7ffc909efd34,334682549,0,0x0,8
tick,0x7ffc909efd34,334697946,0,0x0,8
tick,0x7ffc909efd34,334713605,0,0x0,8
tick,0x7ffc909efd34,334729662,0,0x0,8
tick,0x7ffc909efd34,334745597,0,0x0,8
tick,0x7ffc909efd34,334761583,0,0x0,8
tick,0x7ffc909efd34,334777729,0,0x0,8
tick,0x7ffc909efd34,334792656,0,0x0,8
tick,0x7ffc909efd34,334807859,0,0x0,8
tick,0x7ffc909efd34,334823932,0,0x0,8
tick,0x7ffc909efd34,334840156,0,0x0,8
tick,0x7ffc909efd34,334855656,0,0x0,8
tick,0x7ffc909efd34,334872087,0,0x0,8
tick,0x7ffc909efd34,334887992,0,0x0,8
tick,0x7ffc909efd34,334903932,0,0x0,8
tick,0x7ffc909efd34,334919604,0,0x0,8
tick,0x7ffc909efd34,334935269,0,0x0,8
tick,0x7ffc909efd34,334950402,0,0x0,8
tick,0x7ffc909efd34,334965791,0,0x0,8
tick,0x7ffc909efd34,334981263,0,0x0,8
tick,0x7ffc909efd34,334996517,0,0x0,8
tick,0x7ffc909efd34,335012159,0,0x0,8
tick,0x7ffc909efd34,335027725,0,0x0,8
tick,0x7ffc909efd34,335043274,0,0x0,8
tick,0x7ffc909efd34,335059066,0,0x0,8
tick,0x7ffc909efd34,335074161,0,0x0,8
tick,0x7ffc909efd34,335090200,0,0x0,8
tick,0x7ffc909efd34,335105533,0,0x0,8
tick,0x7ffc909efd34,335121101,0,0x0,8
tick,0x7ffc909efd34,335136815,0,0x0,8
tick,0x7ffc909efd34,335152279,0,0x0,8
tick,0x7ffc909efd34,335168070,0,0x0,8
tick,0x7ffc909efd34,335184101,0,0x0,8
tick,0x7ffc909efd34,335200236,0,0x0,8
tick,0x7ffc909efd34,335215302,0,0x0,8
tick,0x7ffc909efd34,335231182,0,0x0,8
tick,0x7ffc909efd34,335246669,0,0x0,8
tick,0x7ffc909efd34,335262199,0,0x0,8
tick,0x7ffc909efd34,335277782,0,0x0,8
tick,0x7ffc909efd34,335293805,0,0x0,8
tick,0x7ffc909efd34,335308779,0,0x0,8
tick,0x7ffc909efd34,335324175,0,0x0,8
tick,0x7ffc909efd34,335340172,0,0x0,8
tick,0x7ffc909efd34,335355778,0,0x0,8
tick,0x7ffc909efd34,335371472,0,0x0,8
tick,0x7ffc909efd34,335387184,0,0x0,8
tick,0x7ffc909efd34,335402264,0,0x0,8
tick,0x7ffc909efd34,335418317,0,0x0,8
tick,0x7ffc909efd34,335433760,0,0x0,8
tick,0x7ffc909efd34,335449455,0,0x0,8
tick,0x7ffc909efd34,335464607,0,0x0,8
tick,0x7ffc909efd34,335480012,0,0x0,8
tick,0x7ffc909efd34,335496102,0,0x0,8
tick,0x7ffc909efd34,335511533,0,0x0,8
tick,0x7ffc909efd34,335527264,0,0x0,8
tick,0x7ffc909efd34,335542464,0,0x0,8
tick,0x7ffc909efd34,335558322,0,0x0,8
tick,0x7ffc909efd34,335573803,0,0x0,8
tick,0x7ffc909efd34,335589333,0,0x0,8
tick,0x7ffc909efd34,335604794,0,0x0,8
tick,0x7ffc909efd34,335620482,0,0x0,8
tick,0x7ffc909efd34,335636051,0,0x0,8
tick,0x7ffc909efd34,335651527,0,0x0,8
tick,0x7ffc909efd34,335667586,0,0x0,8
tick,0x7ffc909efd34,335683204,0,0x0,8
tick,0x7ffc909efd34,335698675,0,0x0,8
tick,0x7ffc909efd34,335714798,0,0x0,8
tick,0x7ffc909efd34,335729992,0,0x0,8
tick,0x7ffc909efd34,335746131,0,0x0,8
tick,0x7ffc909efd34,335761921,0,0x0,8
tick,0x7ffc909efd34,335777366,0,0x0,8
tick,0x7ffc909efd34,335792683,0,0x0,8
tick,0x7ffc909efd34,335808341,0,0x0,8
tick,0x7ffc909efd34,335824269,0,0x0,8
tick,0x7ffc909efd34,335839790,0,0x0,8
tick,0x7ffc909efd34,335854952,0,0x0,8
tick,0x7ffc909efd34,335870868,0,0x0,8
tick,0x7ffc909efd34,335886074,0,0x0,8
tick,0x7ffc909efd34,335901643,0,0x0,8
tick,0x7ffc909efd34,335916807,0,0x0,8
tick,0x7ffc909efd34,335932897,0,0x0,8
tick,0x7ffc909efd34,335948473,0,0x0,8
tick,0x7ffc909efd34,335964349,0,0x0,8
tick,0x7ffc909efd34,335980028,0,0x0,8
tick,0x7ffc909efd34,335995450,0,0x0,8
tick,0x7ffc909efd34,336011619,0,0x0,8
tick,0x7ffc909efd34,336027137,0,0x0,8
tick,0x7ffc909efd34,336042342,0,0x0,8
tick,0x7ffc909efd34,336057842,0,0x0,8
tick,0x7ffc909efd34,336072731,0,0x0,8
tick,0x7ffc909efd34,336088210,0,0x0,8
tick,0x7ffc909efd34,336103525,0,0x0,8
tick,0x7ffc909efd34,336119932,0,0x0,8
tick,0x7ffc909efd34,336135473,0,0x0,8
tick,0x7ffc909efd34,336150901,0,0x0,8
tick,0x7ffc909efd34,336166098,0,0x0,8
tick,0x7ffc909efd34,336182277,0,0x0,8
tick,0x7ffc909efd34,336198712,0,0x0,8
tick,0x7ffc909efd34,336213808,0,0x0,8
tick,0x7ffc909efd34,336229368,0,0x0,8
tick,0x7ffc909efd34,336245358,0,0x0,8
tick,0x7ffc909efd34,336261184,0,0x0,8
tick,0x7ffc909efd34,336276973,0,0x0,8
tick,0x7ffc909efd34,336292376,0,0x0,8
tick,0x7ffc909efd34,336307763,0,0x0,8
tick,0x7ffc909efd34,336322689,0,0x0,8
tick,0x7ffc909efd34,336338524,0,0x0,8
tick,0x7ffc909efd34,336354267,0,0x0,8
tick,0x7ffc909efd34,336370283,0,0x0,8
tick,0x7ffc909efd34,336385234,0,0x0,8
tick,0x7ffc909efd34,336401346,0,0x0,8
tick,0x7ffc909efd34,336416431,0,0x0,8
tick,0x7ffc909efd34,336431900,0,0x0,8
tick,0x7ffc909efd34,336447488,0,0x0,8
tick,0x7ffc909efd34,336462746,0,0x0,8
tick,0x7ffc909efd34,336478705,0,0x0,8
tick,0x7ffc909efd34,336494295,0,0x0,8
tick,0x7ffc909efd34,336510370,0,0x0,8
tick,0x7ffc909efd34,336525564,0,0x0,8
tick,0x7ffc909efd34,336540707,0,0x0,8
tick,0x7ffc909efd34,336556298,0,0x0,8
tick,0x7ffc909efd34,336572292,0,0x0,8
tick,0x7ffc909efd34,336587287,0,0x0,8
tick,0x7ffc909efd34,336603102,0,0x0,8
tick,0x7ffc909efd34,336618323,0,0x0,8
tick,0x7ffc909efd34,336633990,0,0x0,8
tick,0x7ffc909efd34,336649313,0,0x0,8
tick,0x7ffc909efd34,336665400,0,0x0,8
tick,0x7ffc909efd34,336681170,0,0x0,8
tick,0x7ffc909efd34,336696918,0,0x0,8
tick,0x7ffc909efd34,336712757,0,0x0,8
tick,0x7ffc909efd34,336728622,0,0x0,8
tick,0x7ffc909efd34,336744702,0,0x0,8
tick,0x7ffc909efd34,336760245,0,0x0,8
tick,0x7ffc909efd34,336775542,0,0x0,8
tick,0x7ffc909efd34,336791044,0,0x0,8
tick,0x7ffc909efd34,336806538,0,0x0,8
tick,0x7ffc909efd34,336821485,0,0x0,8
tick,0x7ffc909efd34,336837603,0,0x0,8
tick,0x7ffc909efd34,336852992,0,0x0,8
tick,0x7ffc909efd34,336868310,0,0x0,8
tick,0x7ffc909efd34,336883991,0,0x0,8
tick,0x7ffc909efd34,336900010,0,0x0,8
tick,0x7ffc909efd34,336915225,0,0x0,8
tick,0x7ffc909efd34,336931065,0,0x0,8
tick,0x7ffc909efd34,336947024,0,0x0,8
tick,0x7ffc909efd34,336963026,0,0x0,8
tick,0x7ffc909efd34,336978135,0,0x0,8
tick,0x7ffc909efd34,336994576,0,0x0,8
tick,0x7ffc909efd34,337009301,0,0x0,8
tick,0x7ffc909efd34,337024126,0,0x0,8
tick,0x7ffc909efd34,337039547,0,0x0,8
tick,0x7ffc909efd34,337055287,0,0x0,8
tick,0x7ffc909efd34,337071056,0,0x0,8
tick,0x7ffc909efd34,337086675,0,0x0,8
tick,0x7ffc909efd34,337102790,0,0x0,8
tick,0x7ffc909efd34,337118782,0,0x0,8
tick,0x7ffc909efd34,337134976,0,0x0,8
tick,0x7ffc909efd34,337150374,0,0x0,8
tick,0x7ffc909efd34,337166060,0,0x0,8
tick,0x7ffc909efd34,337182236,0,0x0,8
tick,0x7ffc909efd34,337198500,0,0x0,8
tick,0x7ffc909efd34,337213398,0,0x0,8
tick,0x7ffc909efd34,337228942,0,0x0,8
tick,0x7ffc909efd34,337244185,0,0x0,8
tick,0x7ffc909efd34,337259455,0,0x0,8
tick,0x7ffc909efd34,337274783,0,0x0,8
tick,0x7ffc909efd34,337290594,0,0x0,8
tick,0x7ffc909efd34,337305928,0,0x0,8
tick,0x7ffc909efd34,337321816,0,0x0,8
tick,0x7ffc909efd34,337337283,0,0x0,8
tick,0x7ffc909efd34,337353063,0,0x0,8
tick,0x7ffc909efd34,337368874,0,0x0,8
tick,0x7ffc909efd34,337385057,0,0x0,8
tick,0x7ffc909efd34,337400703,0,0x0,8
tick,0x7ffc909efd34,337416496,0,0x0,8
tick,0x7ffc909efd34,337432013,0,0x0,8
tick,0x7ffc909efd34,337447787,0,0x0,8
tick,0x7ffc909efd34,337463114,0,0x0,8
tick,0x7ffc909efd34,337478809,0,0x0,8
tick,0x7ffc909efd34,337495024,0,0x0,8
tick,0x7ffc909efd34,337510507,0,0x0,8
tick,0x7ffc909efd34,337525786,0,0x0,8
tick,0x7ffc909efd34,337540557,0,0x0,8
tick,0x7ffc909efd34,337555929,0,0x0,8
tick,0x7ffc909efd34,337571291,0,0x0,8
tick,0x7ffc909efd34,337587064,0,0x0,8
tick,0x7ffc909efd34,337602893,0,0x0,8
tick,0x7ffc909efd34,337617913,0,0x0,8
tick,0x7ffc909efd34,337633385,0,0x0,8
tick,0x7ffc909efd34,337648456,0,0x0,8
tick,0x7ffc909efd34,337664152,0,0x0,8
tick,0x7ffc909efd34,337679751,0,0x0,8
tick,0x7ffc909efd34,337695707,0,0x0,8
tick,0x7ffc909efd34,337711304,0,0x0,8
tick,0x7ffc909efd34,337726956,0,0x0,8
tick,0x7ffc909efd34,337742470,0,0x0,8
tick,0x7ffc909efd34,337758103,0,0x0,8
tick,0x7ffc909efd34,337773952,0,0x0,8
tick,0x7ffc909efd34,337789093,0,0x0,8
tick,0x7ffc909efd34,337804360,0,0x0,8
tick,0x7ffc909efd34,337820196,0,0x0,8
tick,0x7ffc909efd34,337835514,0,0x0,8
tick,0x7ffc909efd34,337850853,0,0x0,8
tick,0x7ffc909efd34,337866041,0,0x0,8
tick,0x7ffc909efd34,337881888,0,0x0,8
tick,0x7ffc909efd34,337897088,0,0x0,8
tick,0x7ffc909efd34,337912567,0,0x0,8
tick,0x7ffc909efd34,337928563,0,0x0,8
tick,0x7ffc909efd34,337943967,0,0x0,8
tick,0x7ffc909efd34,337960048,0,0x0,8
tick,0x7ffc909efd34,337975002,0,0x0,8
tick,0x7ffc909efd34,337990915,0,0x0,8
tick,0x7ffc909efd34,338006890,0,0x0,8
tick,0x7ffc909efd34,338022059,0,0x0,8
tick,0x7ffc909efd34,338038355,0,0x0,8
tick,0x7ffc909efd34,338054000,0,0x0,8
tick,0x7ffc909efd34,338069990,0,0x0,8
tick,0x7ffc909efd34,338085677,0,0x0,8
tick,0x7ffc909efd34,338101016,0,0x0,8
tick,0x7ffc909efd34,338116489,0,0x0,8
tick,0x7ffc909efd34,338131711,0,0x0,8
tick,0x7ffc909efd34,338147920,0,0x0,8
tick,0x7ffc909efd34,338163842,0,0x0,8
tick,0x7ffc909efd34,338179587,0,0x0,8
tick,0x7ffc909efd34,338195189,0,0x0,8
tick,0x7ffc909efd34,338210363,0,0x0,8
tick,0x7ffc909efd34,338225787,0,0x0,8
tick,0x7ffc909efd34,338241395,0,0x0,8
tick,0x7ffc909efd34,338256428,0,0x0,8
tick,0x7ffc909efd34,338271841,0,0x0,8
tick,0x7ffc909efd34,338287053,0,0x0,8
tick,0x7ffc909efd34,338302715,0,0x0,8
tick,0x7ffc909efd34,338317898,0,0x0,8
tick,0x7ffc909efd34,338333629,0,0x0,8
tick,0x7ffc909efd34,338349929,0,0x0,8
tick,0x7ffc909efd34,338365151,0,0x0,8
tick,0x7ffc909efd34,338380653,0,0x0,8
tick,0x7ffc909efd34,338395972,0,0x0,8
tick,0x7ffc909efd34,338411531,0,0x0,8
tick,0x7ffc909efd34,338427086,0,0x0,8
tick,0x7ffc909efd34,338442173,0,0x0,8
tick,0x7ffc909efd34,338457735,0,0x0,8
tick,0x7ffc909efd34,338473790,0,0x0,8
tick,0x7ffc909efd34,338489341,0,0x0,8
tick,0x7ffc909efd34,338505089,0,0x0,8
tick,0x7ffc909efd34,338521828,0,0x0,8
tick,0x7ffc909efd34,338536828,0,0x0,8
tick,0x7ffc909efd34,338552637,0,0x0,8
tick,0x7ffc909efd34,338567997,0,0x0,8
tick,0x7ffc909efd34,338583433,0,0x0,8
tick,0x7ffc909efd34,338599702,0,0x0,8
tick,0x7ffc909efd34,338615264,0,0x0,8
tick,0x7ffc909efd34,338631017,0,0x0,8
tick,0x7ffc909efd34,338646944,0,0x0,8
tick,0x7ffc909efd34,338662957,0,0x0,8
tick,0x7ffc909efd34,338678225,0,0x0,8
tick,0x7ffc909efd34,338693811,0,0x0,8
tick,0x7ffc909efd34,338709787,0,0x0,8
tick,0x7ffc909efd34,338725162,0,0x0,8
tick,0x7ffc909efd34,338740558,0,0x0,8
tick,0x7ffc909efd34,338756638,0,0x0,8
tick,0x7ffc909efd34,338771880,0,0x0,8
tick,0x7ffc909efd34,338787497,0,0x0,8
tick,0x7ffc909efd34,338803295,0,0x0,8
tick,0x7ffc909efd34,338818574,0,0x0,8
tick,0x7ffc909efd34,338834108,0,0x0,8
tick,0x7ffc909efd34,338849257,0,0x0,8
tick,0x7ffc909efd34,338865295,0,0x0,8
tick,0x7ffc909efd34,338880978,0,0x0,8
tick,0x7ffc909efd34,338896440,0,0x0,8
tick,0x7ffc909efd34,338912418,0,0x0,8
tick,0x7ffc909efd34,338927930,0,0x0,8
tick,0x7ffc909efd34,338943569,0,0x0,8
tick,0x7ffc909efd34,338958768,0,0x0,8
tick,0x7ffc909efd34,338973970,0,0x0,8
tick,0x7ffc909efd34,338989402,0,0x0,8
tick,0x7ffc909efd34,339005027,0,0x0,8
tick,0x7ffc909efd34,339020676,0,0x0,8
tick,0x7ffc909efd34,339036191,0,0x0,8
tick,0x7ffc909efd34,339051368,0,0x0,8
tick,0x7ffc909efd34,339066497,0,0x0,8
tick,0x7ffc909efd34,339081982,0,0x0,8
tick,0x7ffc909efd34,339097361,0,0x0,8
tick,0x7ffc909efd34,339113388,0,0x0,8
tick,0x7ffc909efd34,339128780,0,0x0,8
tick,0x7ffc909efd34,339144713,0,0x0,8
tick,0x7ffc909efd34,339160427,0,0x0,8
tick,0x7ffc909efd34,339176459,0,0x0,8
tick,0x7ffc909efd34,339191708,0,0x0,8
tick,0x7ffc909efd34,339207163,0,0x0,8
tick,0x7ffc909efd34,339222709,0,0x0,8
tick,0x7ffc909efd34,339238475,0,0x0,8
tick,0x7ffc909efd34,339253592,0,0x0,8
tick,0x7ffc909efd34,339269813,0,0x0,8
tick,0x7ffc909efd34,339284999,0,0x0,8
tick,0x7ffc909efd34,339301194,0,0x0,8
tick,0x7ffc909efd34,339316917,0,0x0,8
tick,0x7ffc909efd34,339332461,0,0x0,8
tick,0x7ffc909efd34,339348057,0,0x0,8
tick,0x7ffc909efd34,339363823,0,0x0,8
tick,0x7ffc909efd34,339379288,0,0x0,8
tick,0x7ffc909efd34,339394562,0,0x0,8
tick,0x7ffc909efd34,339410227,0,0x0,8
tick,0x7ffc909efd34,339425425,0,0x0,8
tick,0x7ffc909efd34,339441065,0,0x0,8
tick,0x7ffc909efd34,339456527,0,0x0,8
tick,0x7ffc909efd34,339471836,0,0x0,8
tick,0x7ffc909efd34,339487023,0,0x0,8
tick,0x7ffc909efd34,339502560,0,0x0,8
tick,0x7ffc909efd34,339518393,0,0x0,8
tick,0x7ffc909efd34,339534056,0,0x0,8
tick,0x7ffc909efd34,339550118,0,0x0,8
tick,0x7ffc909efd34,339565770,0,0x0,8
tick,0x7ffc909efd34,339580999,0,0x0,8
tick,0x7ffc909efd34,339596986,0,0x0,8
tick,0x7ffc909efd34,339612641,0,0x0,8
tick,0x7ffc909efd34,339627993,0,0x0,8
tick,0x7ffc909efd34,339643184,0,0x0,8
tick,0x7ffc909efd34,339659416,0,0x0,8
tick,0x7ffc909efd34,339675000,0,0x0,8
tick,0x7ffc909efd34,339691187,0,0x0,8
tick,0x7ffc909efd34,339705761,0,0x0,8
tick,0x7ffc909efd34,339721213,0,0x0,8
tick,0x7ffc909efd34,339736767,0,0x0,8
tick,0x7ffc909efd34,339752345,0,0x0,8
tick,0x7ffc909efd34,339767780,0,0x0,8
tick,0x7ffc909efd34,339783469,0,0x0,8
tick,0x7ffc909efd34,339798623,0,0x0,8
tick,0x7ffc909efd34,339814047,0,0x0,8
tick,0x7ffc909efd34,339830250,0,0x0,8
tick,0x7ffc909efd34,339845890,0,0x0,8
tick,0x7ffc909efd34,339861181,0,0x0,8
tick,0x7ffc909efd34,339876846,0,0x0,8
tick,0x7ffc909efd34,339892504,0,0x0,8
tick,0x7ffc909efd34,339908648,0,0x0,8
tick,0x7ffc909efd34,339924652,0,0x0,8
tick,0x7ffc909efd34,339940185,0,0x0,8
tick,0x7ffc909efd34,339955701,0,0x0,8
tick,0x7ffc909efd34,339971532,0,0x0,8
tick,0x7ffc909efd34,339986831,0,0x0,8
tick,0x7ffc909efd34,340002389,0,0x0,8
tick,0x7ffc909efd34,340017747,0,0x0,8
tick,0x7ffc909efd34,340033506,0,0x0,8
tick,0x7ffc909efd34,340048420,0,0x0,8
tick,0x7ffc909efd34,340064050,0,0x0,8
tick,0x7ffc909efd34,340079691,0,0x0,8
tick,0x7ffc909efd34,340095764,0,0x0,8
tick,0x7ffc909efd34,340111236,0,0x0,8
tick,0x7ffc909efd34,340126698,0,0x0,8
tick,0x7ffc909efd34,340142909,0,0x0,8
tick,0x7ffc909efd34,340158191,0,0x0,8
tick,0x7ffc909efd34,340173607,0,0x0,8
tick,0x7ffc909efd34,340189414,0,0x0,8
tick,0x7ffc909efd34,340204891,0,0x0,8
tick,0x7ffc909efd34,340221153,0,0x0,8
tick,0x7ffc909efd34,340236468,0,0x0,8
tick,0x7ffc909efd34,340252508,0,0x0,8
tick,0x7ffc909efd34,340267763,0,0x0,8
tick,0x7ffc909efd34,340283375,0,0x0,8
tick,0x7ffc909efd34,340299483,0,0x0,8
tick,0x7ffc909efd34,340314686,0,0x0,8
tick,0x7ffc909efd34,340330758,0,0x0,8
tick,0x7ffc909efd34,340346996,0,0x0,8
tick,0x7ffc909efd34,340362553,0,0x0,8
tick,0x7ffc909efd34,340377597,0,0x0,8
tick,0x7ffc909efd34,340393306,0,0x0,8
tick,0x7ffc909efd34,340408383,0,0x0,8
tick,0x7ffc909efd34,340423928,0,0x0,8
tick,0x7ffc909efd34,340439309,0,0x0,8
tick,0x7ffc909efd34,340454827,0,0x0,8
tick,0x7ffc909efd34,340470747,0,0x0,8
tick,0x7ffc909efd34,340486142,0,0x0,8
tick,0x7ffc909efd34,340501377,0,0x0,8
tick,0x7ffc909efd34,340516796,0,0x0,8
tick,0x7ffc909efd34,340532045,0,0x0,8
tick,0x7ffc909efd34,340547313,0,0x0,8
tick,0x7ffc909efd34,340563437,0,0x0,8
tick,0x7ffc909efd34,340578644,0,0x0,8
tick,0x7ffc909efd34,340594736,0,0x0,8
tick,0x7ffc909efd34,340610355,0,0x0,8
tick,0x7ffc909efd34,340626193,0,0x0,8
tick,0x7ffc909efd34,340641741,0,0x0,8
tick,0x7ffc909efd34,340657298,0,0x0,8
tick,0x7ffc909efd34,340673593,0,0x0,8
tick,0x7ffc909efd34,340689344,0,0x0,8
tick,0x7ffc909efd34,340705251,0,0x0,8
tick,0x7ffc909efd34,340720985,0,0x0,8
tick,0x7ffc909efd34,340736677,0,0x0,8
tick,0x7ffc909efd34,340752207,0,0x0,8
tick,0x7ffc909efd34,340767527,0,0x0,8
tick,0x7ffc909efd34,340783156,0,0x0,8
tick,0x7ffc909efd34,340799552,0,0x0,8
tick,0x7ffc909efd34,340815008,0,0x0,8
tick,0x7ffc909efd34,340830383,0,0x0,8
tick,0x7ffc909efd34,340845980,0,0x0,8
tick,0x7ffc909efd34,340861916,0,0x0,8
tick,0x7ffc909efd34,340877120,0,0x0,8
tick,0x7ffc909efd34,340892587,0,0x0,8
tick,0x7ffc909efd34,340907842,0,0x0,8
tick,0x7ffc909efd34,340923776,0,0x0,8
tick,0x7ffc909efd34,340939474,0,0x0,8
tick,0x7ffc909efd34,340954644,0,0x0,8
tick,0x7ffc909efd34,340970426,0,0x0,8
tick,0x7ffc909efd34,340985819,0,0x0,8
tick,0x7ffc909efd34,341001557,0,0x0,8
tick,0x7ffc909efd34,341017641,0,0x0,8
tick,0x7ffc909efd34,341032836,0,0x0,8
tick,0x7ffc909efd34,341048722,0,0x0,8
tick,0x7ffc909efd34,341064315,0,0x0,8
tick,0x7ffc909efd34,341080319,0,0x0,8
tick,0x7ffc909efd34,341095998,0,0x0,8
tick,0x7ffc909efd34,341111583,0,0x0,8
tick,0x7ffc909efd34,341127425,0,0x0,8
tick,0x7ffc909efd34,341142692,0,0x0,8
tick,0x7ffc909efd34,341158597,0,0x0,8
tick,0x7ffc909efd34,341173990,0,0x0,8
tick,0x7ffc909efd34,341189473,0,0x0,8
tick,0x7ffc909efd34,341205186,0,0x0,8
tick,0x7ffc909efd34,341220524,0,0x0,8
tick,0x7ffc909efd34,341236118,0,0x0,8
tick,0x7ffc909efd34,341251292,0,0x0,8
tick,0x7ffc909efd34,341266617,0,0x0,8
tick,0x7ffc909efd34,341282191,0,0x0,8
tick,0x7ffc909efd34,341298373,0,0x0,8
tick,0x7ffc909efd34,341313631,0,0x0,8
tick,0x7ffc909efd34,341328954,0,0x0,8
tick,0x7ffc909efd34,341344473,0,0x0,8
tick,0x7ffc909efd34,341360580,0,0x0,8
tick,0x7ffc909efd34,341375802,0,0x0,8
tick,0x7ffc909efd34,341391536,0,0x0,8
tick,0x7ffc909efd34,341407125,0,0x0,8
tick,0x7ffc909efd34,341422900,0,0x0,8
tick,0x7ffc909efd34,341438501,0,0x0,8
tick,0x7ffc909efd34,341454194,0,0x0,8
tick,0x7ffc909efd34,341470057,0,0x0,8
tick,0x7ffc909efd34,341485614,0,0x0,8
tick,0x7ffc909efd34,341500860,0,0x0,8
tick,0x7ffc909efd34,341516692,0,0x0,8
tick,0x7ffc909efd34,341532276,0,0x0,8
tick,0x7ffc909efd34,341547641,0,0x0,8
tick,0x7ffc909efd34,341562738,0,0x0,8
tick,0x7ffc909efd34,341578372,0,0x0,8
tick,0x7ffc909efd34,341594236,0,0x0,8
tick,0x7ffc909efd34,341609302,0,0x0,8
tick,0x7ffc909efd34,341624821,0,0x0,8
tick,0x7ffc909efd34,341640897,0,0x0,8
tick,0x7ffc909efd34,341655691,0,0x0,8
tick,0x7ffc909efd34,341671102,0,0x0,8
tick,0x7ffc909efd34,341686436,0,0x0,8
tick,0x7ffc909efd34,341702044,0,0x0,8
tick,0x7ffc909efd34,341717650,0,0x0,8
tick,0x7ffc909efd34,341732841,0,0x0,8
tick,0x7ffc909efd34,341748847,0,0x0,8
tick,0x7ffc909efd34,341765168,0,0x0,8
tick,0x7ffc909efd34,341780968,0,0x0,8
tick,0x7ffc909efd34,341796707,0,0x0,8
tick,0x7ffc909efd34,341812397,0,0x0,8
tick,0x7ffc909efd34,341827895,0,0x0,8
tick,0x7ffc909efd34,341843631,0,0x0,8
tick,0x7ffc909efd34,341859411,0,0x0,8
tick,0x7ffc909efd34,341875258,0,0x0,8
tick,0x7ffc909efd34,341890475,0,0x0,8
tick,0x7ffc909efd34,341905710,0,0x0,8
tick,0x7ffc909efd34,341921349,0,0x0,8
tick,0x7ffc909efd34,341937051,0,0x0,8
tick,0x7ffc909efd34,341953098,0,0x0,8
tick,0x7ffc909efd34,341969063,0,0x0,8
tick,0x7ffc909efd34,341984652,0,0x0,8
tick,0x7ffc909efd34,342000618,0,0x0,8
tick,0x7ffc909efd34,342017014,0,0x0,8
tick,0x7ffc909efd34,342032086,0,0x0,8
tick,0x7ffc909efd34,342047465,0,0x0,8
tick,0x7ffc909efd34,342063347,0,0x0,8
tick,0x7ffc909efd34,342078868,0,0x0,8
tick,0x7ffc909efd34,342094475,0,0x0,8
tick,0x7ffc909efd34,342110120,0,0x0,8
tick,0x7ffc909efd34,342126266,0,0x0,8
tick,0x7ffc909efd34,342142515,0,0x0,8
tick,0x7ffc909efd34,342157914,0,0x0,8
tick,0x7ffc909efd34,342173469,0,0x0,8
tick,0x7ffc909efd34,342188837,0,0x0,8
tick,0x7ffc909efd34,342204517,0,0x0,8
tick,0x7ffc909efd34,342220454,0,0x0,8
tick,0x7ffc909efd34,342235993,0,0x0,8
tick,0x7ffc909efd34,342251363,0,0x0,8
tick,0x7ffc909efd34,342267565,0,0x0,8
tick,0x7ffc909efd34,342282924,0,0x0,8
tick,0x7ffc909efd34,342299053,0,0x0,8
tick,0x7ffc909efd34,342314361,0,0x0,8
tick,0x7ffc909efd34,342330307,0,0x0,8
tick,0x7ffc909efd34,342346394,0,0x0,8
tick,0x7ffc909efd34,342362229,0,0x0,8
tick,0x7ffc909efd34,342378101,0,0x0,8
tick,0x7ffc909efd34,342393953,0,0x0,8
tick,0x7ffc909efd34,342409859,0,0x0,8
tick,0x7ffc909efd34,342425919,0,0x0,8
tick,0x7ffc909efd34,342440612,0,0x0,8
tick,0x7ffc909efd34,342455958,0,0x0,8
tick,0x7ffc909efd34,342471086,0,0x0,8
tick,0x7ffc909efd34,342487178,0,0x0,8
tick,0x7ffc909efd34,342502729,0,0x0,8
tick,0x7ffc909efd34,342518416,0,0x0,8
tick,0x7ffc909efd34,342533814,0,0x0,8
tick,0x7ffc909efd34,342549091,0,0x0,8
tick,0x7ffc909efd34,342564586,0,0x0,8
tick,0x7ffc909efd34,342580272,0,0x0,8
tick,0x7ffc909efd34,342595769,0,0x0,8
tick,0x7ffc909efd34,342611476,0,0x0,8
tick,0x7ffc909efd34,342626940,0,0x0,8
tick,0x7ffc909efd34,342642281,0,0x0,8
tick,0x7ffc909efd34,342657334,0,0x0,8
tick,0x7ffc909efd34,342673243,0,0x0,8
tick,0x7ffc909efd34,342689148,0,0x0,8
tick,0x7ffc909efd34,342704581,0,0x0,8
tick,0x7ffc909efd34,342720570,0,0x0,8
tick,0x7ffc909efd34,342736243,0,0x0,8
tick,0x7ffc909efd34,342751525,0,0x0,8
tick,0x7ffc909efd34,342766767,0,0x0,8
tick,0x7ffc909efd34,342782109,0,0x0,8
tick,0x7ffc909efd34,342797422,0,0x0,8
tick,0x7ffc909efd34,342813463,0,0x0,8
tick,0x7ffc909efd34,342828818,0,0x0,8
tick,0x7ffc909efd34,342844834,0,0x0,8
tick,0x7ffc909efd34,342861180,0,0x0,8
tick,0x7ffc909efd34,342876404,0,0x0,8
tick,0x7ffc909efd34,342892320,0,0x0,8
tick,0x7ffc909efd34,342907266,0,0x0,8
tick,0x7ffc909efd34,342922821,0,0x0,8
tick,0x7ffc909efd34,342938947,0,0x0,8
tick,0x7ffc909efd34,342955110,0,0x0,8
tick,0x7ffc909efd34,342971255,0,0x0,8
tick,0x7ffc909efd34,342986528,0,0x0,8
tick,0x7ffc909efd34,343002061,0,0x0,8
tick,0x7ffc909efd34,343018018,0,0x0,8
tick,0x7ffc909efd34,343033623,0,0x0,8
tick,0x7ffc909efd34,343049862,0,0x0,8
tick,0x7ffc909efd34,343065305,0,0x0,8
tick,0x7ffc909efd34,343080707,0,0x0,8
tick,0x7ffc909efd34,343096343,0,0x0,8
tick,0x7ffc909efd34,343111566,0,0x0,8
tick,0x7ffc909efd34,343127039,0,0x0,8
tick,0x7ffc909efd34,343142975,0,0x0,8
tick,0x7ffc909efd34,343157820,0,0x0,8
tick,0x7ffc909efd34,343173166,0,0x0,8
tick,0x7ffc909efd34,343188238,0,0x0,8
tick,0x7ffc909efd34,343203984,0,0x0,8
tick,0x7ffc909efd34,343220145,0,0x0,8
tick,0x7ffc909efd34,343235423,0,0x0,8
tick,0x7ffc909efd34,343250596,0,0x0,8
tick,0x7ffc909efd34,343266428,0,0x0,8
tick,0x7ffc909efd34,343282158,0,0x0,8
tick,0x7ffc909efd34,343297510,0,0x0,8
tick,0x7ffc909efd34,343312766,0,0x0,8
tick,0x7ffc909efd34,343328136,0,0x0,8
tick,0x7ffc909efd34,343343505,0,0x0,8
tick,0x7ffc909efd34,343359538,0,0x0,8
tick,0x7ffc909efd34,343375462,0,0x0,8
tick,0x7ffc909efd34,343390914,0,0x0,8
tick,0x7ffc909efd34,343406762,0,0x0,8
tick,0x7ffc909efd34,343422052,0,0x0,8
tick,0x7ffc909efd34,343437953,0,0x0,8
tick,0x7ffc909efd34,343453310,0,0x0,8
tick,0x7ffc909efd34,343468806,0,0x0,8
tick,0x7ffc909efd34,343484330,0,0x0,8
tick,0x7ffc909efd34,343499766,0,0x0,8
tick,0x7ffc909efd34,343515464,0,0x0,8
tick,0x7ffc909efd34,343530901,0,0x0,8
tick,0x7ffc909efd34,343546601,0,0x0,8
tick,0x7ffc909efd34,343562465,0,0x0,8
tick,0x7ffc909efd34,343578182,0,0x0,8
tick,0x7ffc909efd34,343593212,0,0x0,8
tick,0x7ffc909efd34,343609608,0,0x0,8
tick,0x7ffc909efd34,343624437,0,0x0,8
tick,0x7ffc909efd34,343640559,0,0x0,8
tick,0x7ffc909efd34,343656064,0,0x0,8
tick,0x7ffc909efd34,343671410,0,0x0,8
tick,0x7ffc909efd34,343686908,0,0x0,8
tick,0x7ffc909efd34,343702422,0,0x0,8
tick,0x7ffc909efd34,343717801,0,0x0,8
tick,0x7ffc909efd34,343733309,0,0x0,8
tick,0x7ffc909efd34,343748708,0,0x0,8
tick,0x7ffc909efd34,343764579,0,0x0,8
tick,0x7ffc909efd34,343780840,0,0x0,8
tick,0x7ffc909efd34,343796322,0,0x0,8
tick,0x7ffc909efd34,343811798,0,0x0,8
tick,0x7ffc909efd34,343827600,0,0x0,8
tick,0x7ffc909efd34,343843199,0,0x0,8
tick,0x7ffc909efd34,343858087,0,0x0,8
tick,0x7ffc909efd34,343873078,0,0x0,8
tick,0x7ffc909efd34,343888053,0,0x0,8
tick,0x7ffc909efd34,343904061,0,0x0,8
tick,0x7ffc909efd34,343919803,0,0x0,8
tick,0x7ffc909efd34,343935897,0,0x0,8
tick,0x7ffc909efd34,343951898,0,0x0,8
tick,0x7ffc909efd34,343967396,0,0x0,8
tick,0x7ffc909efd34,343983185,0,0x0,8
tick,0x7ffc909efd34,343998473,0,0x0,8
tick,0x7ffc909efd34,344014341,0,0x0,8
tick,0x7ffc909efd34,344029881,0,0x0,8
tick,0x7ffc909efd34,344045584,0,0x0,8
tick,0x7ffc909efd34,344061077,0,0x0,8
tick,0x7ffc909efd34,344076355,0,0x0,8
tick,0x7ffc909efd34,344092153,0,0x0,8
tick,0x7ffc909efd34,344107318,0,0x0,8
tick,0x7ffc909efd34,344123045,0,0x0,8
tick,0x7ffc909efd34,344138651,0,0x0,8
tick,0x7ffc909efd34,344154039,0,0x0,8
tick,0x7ffc909efd34,344169582,0,0x0,8
tick,0x7ffc909efd34,344185189,0,0x0,8
tick,0x7ffc909efd34,344201266,0,0x0,8
tick,0x7ffc909efd34,344216737,0,0x0,8
tick,0x7ffc909efd34,344232245,0,0x0,8
tick,0x7ffc909efd34,344247747,0,0x0,8
tick,0x7ffc909efd34,344263340,0,0x0,8
tick,0x7ffc909efd34,344278856,0,0x0,8
tick,0x7ffc909efd34,344294637,0,0x0,8
tick,0x7ffc909efd34,344310750,0,0x0,8
tick,0x7ffc909efd34,344326576,0,0x0,8
tick,0x7ffc909efd34,344342046,0,0x0,8
tick,0x7ffc909efd34,344357702,0,0x0,8
tick,0x7ffc909efd34,344372980,0,0x0,8
tick,0x7ffc909efd34,344388813,0,0x0,8
tick,0x7ffc909efd34,344404484,0,0x0,8
tick,0x7ffc909efd34,344420860,0,0x0,8
tick,0x7ffc909efd34,344436331,0,0x0,8
tick,0x7ffc909efd34,344451496,0,0x0,8
tick,0x7ffc909efd34,344466989,0,0x0,8
tick,0x7ffc909efd34,344482370,0,0x0,8
tick,0x7ffc909efd34,344498072,0,0x0,8
tick,0x7ffc909efd34,344513125,0,0x0,8
tick,0x7ffc909efd34,344529446,0,0x0,8
tick,0x7ffc909efd34,344544457,0,0x0,8
tick,0x7ffc909efd34,344560842,0,0x0,8
tick,0x7ffc909efd34,344576538,0,0x0,8
tick,0x7ffc909efd34,344592050,0,0x0,8
tick,0x7ffc909efd34,344607112,0,0x0,8
tick,0x7ffc909efd34,344622811,0,0x0,8
tick,0x7ffc909efd34,344638238,0,0x0,8
tick,0x7ffc909efd34,344653526,0,0x0,8
tick,0x7ffc909efd34,344669790,0,0x0,8
tick,0x7ffc909efd34,344685357,0,0x0,8
tick,0x7ffc909efd34,344700743,0,0x0,8
tick,0x7ffc909efd34,344716782,0,0x0,8
tick,0x7ffc909efd34,344732426,0,0x0,8
tick,0x7ffc909efd34,344748261,0,0x0,8
tick,0x7ffc909efd34,344763505,0,0x0,8
tick,0x7ffc909efd34,344779237,0,0x0,8
tick,0x7ffc909efd34,344795483,0,0x0,8
tick,0x7ffc909efd34,344810638,0,0x0,8
tick,0x7ffc909efd34,344826732,0,0x0,8
tick,0x7ffc909efd34,344842816,0,0x0,8
tick,0x7ffc909efd34,344858983,0,0x0,8
tick,0x7ffc909efd34,344874183,0,0x0,8
tick,0x7ffc909efd34,344889618,0,0x0,8
tick,0x7ffc909efd34,344905846,0,0x0,8
tick,0x7ffc909efd34,344921215,0,0x0,8
tick,0x7ffc909efd34,344936620,0,0x0,8
tick,0x7ffc909efd34,344952369,0,0x0,8
tick,0x7ffc909efd34,344967965,0,0x0,8
tick,0x7ffc909efd34,344983521,0,0x0,8
tick,0x7ffc909efd34,344999463,0,0x0,8
tick,0x7ffc909efd34,345014631,0,0x0,8
tick,0x7ffc909efd34,345030082,0,0x0,8
tick,0x7ffc909efd34,345046096,0,0x0,8
tick,0x7ffc909efd34,345061705,0,0x0,8
tick,0x7ffc909efd34,345076984,0,0x0,8
tick,0x7ffc909efd34,345092889,0,0x0,8
tick,0x7ffc909efd34,345108833,0,0x0,8
tick,0x7ffc909efd34,345123905,0,0x0,8
tick,0x7ffc909efd34,345139844,0,0x0,8
tick,0x7ffc909efd34,345155543,0,0x0,8
tick,0x7ffc909efd34,345170880,0,0x0,8
tick,0x7ffc909efd34,345186526,0,0x0,8
tick,0x7ffc909efd34,345202510,0,0x0,8
tick,0x7ffc909efd34,345217886,0,0x0,8
tick,0x7ffc909efd34,345260226,0,0x0,8
tick,0x7ffc909efd34,345266586,0,0x0,8
tick,0x7ffc909efd34,345283307,0,0x0,8
tick,0x7ffc909efd34,345299038,0,0x0,8
tick,0x7ffc909efd34,345312664,0,0x0,8
tick,0x7ffc909efd34,345329078,0,0x0,8
tick,0x7ffc909efd34,345344706,0,0x0,8
tick,0x7ffc909efd34,345360731,0,0x0,8
tick,0x7ffc909efd34,345376841,0,0x0,8
tick,0x7ffc909efd34,345392263,0,0x0,8
tick,0x7ffc909efd34,345408339,0,0x0,8
tick,0x7ffc909efd34,345423282,0,0x0,8
tick,0x7ffc909efd34,345439176,0,0x0,8
tick,0x7ffc909efd34,345454943,0,0x0,8
tick,0x7ffc909efd34,345470480,0,0x0,8
tick,0x7ffc909efd34,345486060,0,0x0,8
tick,0x7ffc909efd34,345501557,0,0x0,8
tick,0x7ffc909efd34,345517290,0,0x0,8
tick,0x7ffc909efd34,345532514,0,0x0,8
tick,0x7ffc909efd34,345547813,0,0x0,8
tick,0x7ffc909efd34,345563832,0,0x0,8
tick,0x7ffc909efd34,345579161,0,0x0,8
tick,0x7ffc909efd34,345594986,0,0x0,8
tick,0x7ffc909efd34,345610881,0,0x0,8
tick,0x7ffc909efd34,345625903,0,0x0,8
tick,0x7ffc909efd34,345642016,0,0x0,8
tick,0x7ffc909efd34,345657019,0,0x0,8
tick,0x7ffc909efd34,345672484,0,0x0,8
tick,0x7ffc909efd34,345688237,0,0x0,8
tick,0x7ffc909efd34,345703927,0,0x0,8
tick,0x7ffc909efd34,345719392,0,0x0,8
tick,0x7ffc909efd34,345735197,0,0x0,8
tick,0x7ffc909efd34,345750835,0,0x0,8
tick,0x7ffc909efd34,345766288,0,0x0,8
tick,0x7ffc909efd34,345782343,0,0x0,8
tick,0x7ffc909efd34,345798023,0,0x0,8
tick,0x7ffc909efd34,345813494,0,0x0,8
tick,0x7ffc909efd34,345829325,0,0x0,8
tick,0x7ffc909efd34,345844716,0,0x0,8
tick,0x7ffc909efd34,345860916,0,0x0,8
tick,0x7ffc909efd34,345876297,0,0x0,8
tick,0x7ffc909efd34,345891897,0,0x0,8
tick,0x7ffc909efd34,345907819,0,0x0,8
tick,0x7ffc909efd34,345923190,0,0x0,8
tick,0x7ffc909efd34,345938442,0,0x0,8
tick,0x7ffc909efd34,345953363,0,0x0,8
tick,0x7ffc909efd34,345968698,0,0x0,8
tick,0x7ffc909efd34,345983936,0,0x0,8
tick,0x7ffc909efd34,345999279,0,0x0,8
tick,0x7ffc909efd34,346015092,0,0x0,8
tick,0x7ffc909efd34,346030245,0,0x0,8
tick,0x7ffc909efd34,346046360,0,0x0,8
tick,0x7ffc909efd34,346060840,0,0x0,8
tick,0x7ffc909efd34,346076760,0,0x0,8
tick,0x7ffc909efd34,346092622,0,0x0,8
tick,0x7ffc909efd34,346108510,0,0x0,8
tick,0x7ffc909efd34,346123422,0,0x0,8
tick,0x7ffc909efd34,346139140,0,0x0,8
tick,0x7ffc909efd34,346154204,0,0x0,8
tick,0x7ffc909efd34,346169527,0,0x0,8
tick,0x7ffc909efd34,346185769,0,0x0,8
tick,0x7ffc909efd34,346201153,0,0x0,8
tick,0x7ffc909efd34,346216592,0,0x0,8
tick,0x7ffc909efd34,346232619,0,0x0,8
tick,0x7ffc909efd34,346247622,0,0x0,8
tick,0x7ffc909efd34,346262638,0,0x0,8
tick,0x7ffc909efd34,346277861,0,0x0,8
tick,0x7ffc909efd34,346293992,0,0x0,8
tick,0x7ffc909efd34,346309547,0,0x0,8
tick,0x7ffc909efd34,346325140,0,0x0,8
tick,0x7ffc909efd34,346341013,0,0x0,8
tick,0x7ffc909efd34,346356898,0,0x0,8
tick,0x7ffc909efd34,346372743,0,0x0,8
tick,0x7ffc909efd34,346388037,0,0x0,8
tick,0x7ffc909efd34,346403887,0,0x0,8
tick,0x7ffc909efd34,346419770,0,0x0,8
tick,0x7ffc909efd34,346435416,0,0x0,8
tick,0x7ffc909efd34,346451454,0,0x0,8
tick,0x7ffc909efd34,346467090,0,0x0,8
tick,0x7ffc909efd34,346482447,0,0x0,8
tick,0x7ffc909efd34,346497894,0,0x0,8
tick,0x7ffc909efd34,346512952,0,0x0,8
tick,0x7ffc909efd34,346528233,0,0x0,8
tick,0x7ffc909efd34,346543607,0,0x0,8
tick,0x7ffc909efd34,346559114,0,0x0,8
tick,0x7ffc909efd34,346574319,0,0x0,8
tick,0x7ffc909efd34,346589793,0,0x0,8
tick,0x7ffc909efd34,346605185,0,0x0,8
tick,0x7ffc909efd34,346621464,0,0x0,8
tick,0x7ffc909efd34,346637235,0,0x0,8
tick,0x7ffc909efd34,346652476,0,0x0,8
tick,0x7ffc909efd34,346668488,0,0x0,8
tick,0x7ffc909efd34,346684576,0,0x0,8
tick,0x7ffc909efd34,346700123,0,0x0,8
tick,0x7ffc909efd34,346716060,0,0x0,8
tick,0x7ffc909efd34,346731855,0,0x0,8
tick,0x7ffc909efd34,346748027,0,0x0,8
tick,0x7ffc909efd34,346763370,0,0x0,8
tick,0x7ffc909efd34,346778677,0,0x0,8
tick,0x7ffc909efd34,346794492,0,0x0,8
tick,0x7ffc909efd34,346810813,0,0x0,8
tick,0x7ffc909efd34,346826453,0,0x0,8
tick,0x7ffc909efd34,346841691,0,0x0,8
tick,0x7ffc909efd34,346857590,0,0x0,8
tick,0x7ffc909efd34,346872855,0,0x0,8
tick,0x7ffc909efd34,346887981,0,0x0,8
tick,0x7ffc909efd34,346903415,0,0x0,8
tick,0x7ffc909efd34,346919687,0,0x0,8
tick,0x7ffc909efd34,346935511,0,0x0,8
tick,0x7ffc909efd34,346950813,0,0x0,8
tick,0x7ffc909efd34,346966345,0,0x0,8
tick,0x7ffc909efd34,346981895,0,0x0,8
tick,0x7ffc909efd34,346997919,0,0x0,8
tick,0x7ffc909efd34,347012981,0,0x0,8
tick,0x7ffc909efd34,347029294,0,0x0,8
tick,0x7ffc909efd34,347044506,0,0x0,8
tick,0x7ffc909efd34,347060269,0,0x0,8
tick,0x7ffc909efd34,347075623,0,0x0,8
tick,0x7ffc909efd34,347091445,0,0x0,8
tick,0x7ffc909efd34,347107477,0,0x0,8
tick,0x7ffc909efd34,347123266,0,0x0,8
tick,0x7ffc909efd34,347138439,0,0x0,8
tick,0x7ffc909efd34,347153961,0,0x0,8
tick,0x7ffc909efd34,347170371,0,0x0,8
tick,0x7ffc909efd34,347185551,0,0x0,8
tick,0x7ffc909efd34,347201721,0,0x0,8
tick,0x7ffc909efd34,347217371,0,0x0,8
tick,0x7ffc909efd34,347233067,0,0x0,8
tick,0x7ffc909efd34,347248611,0,0x0,8
tick,0x7ffc909efd34,347263808,0,0x0,8
tick,0x7ffc909efd34,347279494,0,0x0,8
tick,0x7ffc909efd34,347294856,0,0x0,8
tick,0x7ffc909efd34,347310278,0,0x0,8
tick,0x7ffc909efd34,347325855,0,0x0,8
tick,0x7ffc909efd34,347341462,0,0x0,8
tick,0x7ffc909efd34,347356523,0,0x0,8
tick,0x7ffc909efd34,347372221,0,0x0,8
tick,0x7ffc909efd34,347387549,0,0x0,8
tick,0x7ffc909efd34,347403166,0,0x0,8
tick,0x7ffc909efd34,347418423,0,0x0,8
tick,0x7ffc909efd34,347434339,0,0x0,8
tick,0x7ffc909efd34,347449797,0,0x0,8
tick,0x7ffc909efd34,347465522,0,0x0,8
tick,0x7ffc909efd34,347480890,0,0x0,8
tick,0x7ffc909efd34,347496390,0,0x0,8
tick,0x7ffc909efd34,347511645,0,0x0,8
tick,0x7ffc909efd34,347527946,0,0x0,8
tick,0x7ffc909efd34,347543353,0,0x0,8
tick,0x7ffc909efd34,347558919,0,0x0,8
tick,0x7ffc909efd34,347574224,0,0x0,8
tick,0x7ffc909efd34,347589819,0,0x0,8
tick,0x7ffc909efd34,347605185,0,0x0,8
tick,0x7ffc909efd34,347620711,0,0x0,8
tick,0x7ffc909efd34,347635703,0,0x0,8
tick,0x7ffc909efd34,347651744,0,0x0,8
tick,0x7ffc909efd34,347667388,0,0x0,8
tick,0x7ffc909efd34,347682687,0,0x0,8
tick,0x7ffc909efd34,347698399,0,0x0,8
tick,0x7ffc909efd34,347714072,0,0x0,8
tick,0x7ffc909efd34,347730419,0,0x0,8
tick,0x7ffc909efd34,347745803,0,0x0,8
tick,0x7ffc909efd34,347761085,0,0x0,8
tick,0x7ffc909efd34,347776622,0,0x0,8
tick,0x7ffc909efd34,347791978,0,0x0,8
tick,0x7ffc909efd34,347808022,0,0x0,8
tick,0x7ffc909efd34,347823326,0,0x0,8
tick,0x7ffc909efd34,347838445,0,0x0,8
tick,0x7ffc909efd34,347854013,0,0x0,8
tick,0x7ffc909efd34,347870085,0,0x0,8
tick,0x7ffc909efd34,347885353,0,0x0,8
tick,0x7ffc909efd34,347900546,0,0x0,8
tick,0x7ffc909efd34,347916310,0,0x0,8
tick,0x7ffc909efd34,347932283,0,0x0,8
tick,0x7ffc909efd34,347947400,0,0x0,8
tick,0x7ffc909efd34,347962636,0,0x0,8
tick,0x7ffc909efd34,347977804,0,0x0,8
tick,0x7ffc909efd34,347993313,0,0x0,8
tick,0x7ffc909efd34,348008390,0,0x0,8
tick,0x7ffc909efd34,348024307,0,0x0,8
tick,0x7ffc909efd34,348039538,0,0x0,8
tick,0x7ffc909efd34,348054909,0,0x0,8
tick,0x7ffc909efd34,348070848,0,0x0,8
tick,0x7ffc909efd34,348086271,0,0x0,8
tick,0x7ffc909efd34,348101623,0,0x0,8
tick,0x7ffc909efd34,348117227,0,0x0,8
tick,0x7ffc909efd34,348132836,0,0x0,8
tick,0x7ffc909efd34,348148270,0,0x0,8
tick,0x7ffc909efd34,348163513,0,0x0,8
tick,0x7ffc909efd34,348179427,0,0x0,8
tick,0x7ffc909efd34,348194831,0,0x0,8
tick,0x7ffc909efd34,348210063,0,0x0,8
tick,0x7ffc909efd34,348225640,0,0x0,8
tick,0x7ffc909efd34,348241392,0,0x0,8
tick,0x7ffc909efd34,348256352,0,0x0,8
tick,0x7ffc909efd34,348272152,0,0x0,8
tick,0x7ffc909efd34,348287525,0,0x0,8
tick,0x7ffc909efd34,348303062,0,0x0,8
tick,0x7ffc909efd34,348318245,0,0x0,8
tick,0x7ffc909efd34,348333977,0,0x0,8
tick,0x7ffc909efd34,348350152,0,0x0,8
tick,0x7ffc909efd34,348365507,0,0x0,8
tick,0x7ffc909efd34,348380889,0,0x0,8
tick,0x7ffc909efd34,348396500,0,0x0,8
tick,0x7ffc909efd34,348412097,0,0x0,8
tick,0x7ffc909efd34,348428003,0,0x0,8
tick,0x7ffc909efd34,348443249,0,0x0,8
tick,0x7ffc909efd34,348458704,0,0x0,8
tick,0x7ffc909efd34,348474285,0,0x0,8
tick,0x7ffc909efd34,348489561,0,0x0,8
tick,0x7ffc909efd34,348505029,0,0x0,8
tick,0x7ffc909efd34,348520734,0,0x0,8
tick,0x7ffc909efd34,348536415,0,0x0,8
tick,0x7ffc909efd34,348551401,0,0x0,8
tick,0x7ffc909efd34,348567230,0,0x0,8
tick,0x7ffc909efd34,348582441,0,0x0,8
tick,0x7ffc909efd34,348597743,0,0x0,8
tick,0x7ffc909efd34,348613785,0,0x0,8
tick,0x7ffc909efd34,348629708,0,0x0,8
tick,0x7ffc909efd34,348645031,0,0x0,8
tick,0x7ffc909efd34,348660385,0,0x0,8
tick,0x7ffc909efd34,348676227,0,0x0,8
tick,0x7ffc909efd34,348692389,0,0x0,8
tick,0x7ffc909efd34,348707773,0,0x0,8
tick,0x7ffc909efd34,348723663,0,0x0,8
tick,0x7ffc909efd34,348739446,0,0x0,8
tick,0x7ffc909efd34,348754916,0,0x0,8
tick,0x7ffc909efd34,348770921,0,0x0,8
tick,0x7ffc909efd34,348786512,0,0x0,8
tick,0x7ffc909efd34,348802304,0,0x0,8
tick,0x7ffc909efd34,348824344,0,0x0,8
tick,0x7ffc909efd34,348833819,0,0x0,8
tick,0x7ffc909efd34,348848994,0,0x0,8
tick,0x7ffc909efd34,348864341,0,0x0,8
tick,0x7ffc909efd34,348880311,0,0x0,8
tick,0x7ffc909efd34,348896189,0,0x0,8
tick,0x7ffc909efd34,348912018,0,0x0,8
tick,0x7ffc909efd34,348927526,0,0x0,8
tick,0x7ffc909efd34,348943782,0,0x0,8
tick,0x7ffc909efd34,348958669,0,0x0,8
tick,0x7ffc909efd34,348973473,0,0x0,8
tick,0x7ffc909efd34,348989473,0,0x0,8
tick,0x7ffc909efd34,349004399,0,0x0,8
tick,0x7ffc909efd34,349020714,0,0x0,8
tick,0x7ffc909efd34,349036478,0,0x0,8
tick,0x7ffc909efd34,349051303,0,0x0,8
tick,0x7ffc909efd34,349066970,0,0x0,8
tick,0x7ffc909efd34,349082294,0,0x0,8
tick,0x7ffc909efd34,349098076,0,0x0,8
tick,0x7ffc909efd34,349113268,0,0x0,8
tick,0x7ffc909efd34,349128974,0,0x0,8
tick,0x7ffc909efd34,349144399,0,0x0,8
tick,0x7ffc909efd34,349160869,0,0x0,8
tick,0x7ffc909efd34,349176569,0,0x0,8
tick,0x7ffc909efd34,349191860,0,0x0,8
tick,0x7ffc909efd34,349208126,0,0x0,8
tick,0x7ffc909efd34,349222697,0,0x0,8
tick,0x7ffc909efd34,349238256,0,0x0,8
tick,0x7ffc909efd34,349253737,0,0x0,8
tick,0x7ffc909efd34,349269391,0,0x0,8
tick,0x7ffc909efd34,349285297,0,0x0,8
tick,0x7ffc909efd34,349300767,0,0x0,8
tick,0x7ffc909efd34,349316149,0,0x0,8
tick,0x7ffc909efd34,349332284,0,0x0,8
tick,0x7ffc909efd34,349347583,0,0x0,8
tick,0x7ffc909efd34,349363490,0,0x0,8
tick,0x7ffc909efd34,349379409,0,0x0,8
tick,0x7ffc909efd34,349395817,0,0x0,8
tick,0x7ffc909efd34,349410989,0,0x0,8
tick,0x7ffc909efd34,349427147,0,0x0,8
tick,0x7ffc909efd34,349443370,0,0x0,8
tick,0x7ffc909efd34,349467714,0,0x0,8
tick,0x7ffc909efd34,349473404,0,0x0,8
tick,0x7ffc909efd34,349488743,0,0x0,8
tick,0x7ffc909efd34,349504743,0,0x0,8
tick,0x7ffc909efd34,349520829,0,0x0,8
tick,0x7ffc909efd34,349536697,0,0x0,8
tick,0x7ffc909efd34,349552740,0,0x0,8
tick,0x7ffc909efd34,349568747,0,0x0,8
tick,0x7ffc909efd34,349584749,0,0x0,8
tick,0x7ffc909efd34,349600853,0,0x0,8
tick,0x7ffc909efd34,349616811,0,0x0,8
tick,0x7ffc909efd34,349632763,0,0x0,8
tick,0x7ffc909efd34,349647890,0,0x0,8
tick,0x7ffc909efd34,349662739,0,0x0,8
tick,0x7ffc909efd34,349678806,0,0x0,8
tick,0x7ffc909efd34,349694728,0,0x0,8
tick,0x7ffc909efd34,349712919,0,0x0,8
tick,0x7ffc909efd34,349726869,0,0x0,8
tick,0x7ffc909efd34,349742775,0,0x0,8
tick,0x7ffc909efd34,349758733,0,0x0,8
tick,0x7ffc909efd34,349775071,0,0x0,8
tick,0x7ffc909efd34,349791061,0,0x0,8
tick,0x7ffc909efd34,349806077,0,0x0,8
tick,0x7ffc909efd34,349821726,0,0x0,8
tick,0x7ffc909efd34,349837259,0,0x0,8
tick,0x7ffc909efd34,349852702,0,0x0,8
tick,0x7ffc909efd34,349867759,0,0x0,8
tick,0x7ffc909efd34,349883491,0,0x0,8
tick,0x7ffc909efd34,349899386,0,0x0,8
tick,0x7ffc909efd34,349915030,0,0x0,8
tick,0x7ffc909efd34,349931652,0,0x0,8
tick,0x7ffc909efd34,349951392,0,0x0,8
tick,0x7ffc909efd34,349967780,0,0x0,8
tick,0x7ffc909efd34,349979894,0,0x0,8
tick,0x7ffc909efd34,349994907,0,0x0,8
tick,0x7ffc909efd34,350009856,0,0x0,8
tick,0x7ffc909efd34,350027333,0,0x0,8
tick,0x7ffc909efd34,350046589,0,0x0,8
tick,0x7ffc909efd34,350063069,0,0x0,8
tick,0x7ffc909efd34,350077864,0,0x0,8
tick,0x7ffc909efd34,350088216,0,0x0,8
tick,0x7ffc909efd34,350103110,0,0x0,8
tick,0x7ffc909efd34,350118990,0,0x0,8
tick,0x7ffc909efd34,350135093,0,0x0,8
tick,0x7ffc909efd34,350150928,0,0x0,8
tick,0x7ffc909efd34,350166354,0,0x0,8
tick,0x7ffc909efd34,350182590,0,0x0,8
tick,0x7ffc909efd34,350198477,0,0x0,8
tick,0x7ffc909efd34,350213854,0,0x0,8
tick,0x7ffc909efd34,350228868,0,0x0,8
tick,0x7ffc909efd34,350244480,0,0x0,8
tick,0x7ffc909efd34,350260252,0,0x0,8
tick,0x7ffc909efd34,350276330,0,0x0,8
tick,0x7ffc909efd34,350291305,0,0x0,8
tick,0x7ffc909efd34,350306373,0,0x0,8
tick,0x7ffc909efd34,350322084,0,0x0,8
tick,0x7ffc909efd34,350348558,0,0x0,8
tick,0x7ffc909efd34,350352302,0,0x0,8
tick,0x7ffc909efd34,350368361,0,0x0,8
tick,0x7ffc909efd34,350384315,0,0x0,8
tick,0x7ffc909efd34,350400456,0,0x0,8
tick,0x7ffc909efd34,350416294,0,0x0,8
tick,0x7ffc909efd34,350431746,0,0x0,8
tick,0x7ffc909efd34,350447573,0,0x0,8
tick,0x7ffc909efd34,350463907,0,0x0,8
tick,0x7ffc909efd34,350479587,0,0x0,8
tick,0x7ffc909efd34,350494702,0,0x0,8
tick,0x7ffc909efd34,350510116,0,0x0,8
tick,0x7ffc909efd34,350525791,0,0x0,8
tick,0x7ffc909efd34,350541119,0,0x0,8
tick,0x7ffc909efd34,350556868,0,0x0,8
tick,0x7ffc909efd34,350572843,0,0x0,8
tick,0x7ffc909efd34,350588626,0,0x0,8
tick,0x7ffc909efd34,350603580,0,0x0,8
tick,0x7ffc909efd34,350619557,0,0x0,8
tick,0x7ffc909efd34,350635303,0,0x0,8
tick,0x7ffc909efd34,350651188,0,0x0,8
tick,0x7ffc909efd34,350666520,0,0x0,8
tick,0x7ffc909efd34,350682485,0,0x0,8
tick,0x7ffc909efd34,350698096,0,0x0,8
tick,0x7ffc909efd34,350713731,0,0x0,8
tick,0x7ffc909efd34,350729263,0,0x0,8
tick,0x7ffc909efd34,350744997,0,0x0,8
tick,0x7ffc909efd34,350760776,0,0x0,8
tick,0x7ffc909efd34,350775966,0,0x0,8
tick,0x7ffc909efd34,350791521,0,0x0,8
tick,0x7ffc909efd34,350807900,0,0x0,8
tick,0x7ffc909efd34,350822789,0,0x0,8
tick,0x7ffc909efd34,350838494,0,0x0,8
tick,0x7ffc909efd34,350853992,0,0x0,8
tick,0x7ffc909efd34,350870239,0,0x0,8
tick,0x7ffc909efd34,350886290,0,0x0,8
tick,0x7ffc909efd34,350901464,0,0x0,8
tick,0x7ffc909efd34,350916469,0,0x0,8
tick,0x7ffc909efd34,350932547,0,0x0,8
tick,0x7ffc909efd34,350948297,0,0x0,8
tick,0x7ffc909efd34,350963577,0,0x0,8
tick,0x7ffc909efd34,350979143,0,0x0,8
tick,0x7ffc909efd34,350994686,0,0x0,8
tick,0x7ffc909efd34,351010047,0,0x0,8
tick,0x7ffc909efd34,351025880,0,0x0,8
tick,0x7ffc909efd34,351041824,0,0x0,8
tick,0x7ffc909efd34,351057506,0,0x0,8
tick,0x7ffc909efd34,351073017,0,0x0,8
tick,0x7ffc909efd34,351089263,0,0x0,8
tick,0x7ffc909efd34,351105292,0,0x0,8
tick,0x7ffc909efd34,351121347,0,0x0,8
tick,0x7ffc909efd34,351137270,0,0x0,8
tick,0x7ffc909efd34,351153255,0,0x0,8
tick,0x7ffc909efd34,351169133,0,0x0,8
tick,0x7ffc909efd34,351184659,0,0x0,8
tick,0x7ffc909efd34,351200196,0,0x0,8
tick,0x7ffc909efd34,351216126,0,0x0,8
tick,0x7ffc909efd34,351231482,0,0x0,8
tick,0x7ffc909efd34,351247476,0,0x0,8
tick,0x7ffc909efd34,351262536,0,0x0,8
tick,0x7ffc909efd34,351278297,0,0x0,8
tick,0x7ffc909efd34,351293728,0,0x0,8
tick,0x7ffc909efd34,351309233,0,0x0,8
tick,0x7ffc909efd34,351324797,0,0x0,8
tick,0x7ffc909efd34,351340928,0,0x0,8
tick,0x7ffc909efd34,351356550,0,0x0,8
tick,0x7ffc909efd34,351372198,0,0x0,8
tick,0x7ffc909efd34,351388206,0,0x0,8
tick,0x7ffc909efd34,351404095,0,0x0,8
tick,0x7ffc909efd34,351420166,0,0x0,8
tick,0x7ffc909efd34,351436261,0,0x0,8
tick,0x7ffc909efd34,351452232,0,0x0,8
tick,0x7ffc909efd34,351468266,0,0x0,8
tick,0x7ffc909efd34,351483772,0,0x0,8
tick,0x7ffc909efd34,351499183,0,0x0,8
tick,0x7ffc909efd34,351514526,0,0x0,8
tick,0x7ffc909efd34,351530561,0,0x0,8
tick,0x7ffc909efd34,351546267,0,0x0,8
tick,0x7ffc909efd34,351561883,0,0x0,8
tick,0x7ffc909efd34,351577317,0,0x0,8
tick,0x7ffc909efd34,351592259,0,0x0,8
tick,0x7ffc909efd34,351608540,0,0x0,8
tick,0x7ffc909efd34,351624062,0,0x0,8
tick,0x7ffc909efd34,351639617,0,0x0,8
tick,0x7ffc909efd34,351654841,0,0x0,8
tick,0x7ffc909efd34,351670495,0,0x0,8
tick,0x7ffc909efd34,351686243,0,0x0,8
tick,0x7ffc909efd34,351702161,0,0x0,8
tick,0x7ffc909efd34,351717886,0,0x0,8
tick,0x7ffc909efd34,351733656,0,0x0,8
tick,0x7ffc909efd34,351749105,0,0x0,8
tick,0x7ffc909efd34,351764590,0,0x0,8
tick,0x7ffc909efd34,351780162,0,0x0,8
tick,0x7ffc909efd34,351796107,0,0x0,8
tick,0x7ffc909efd34,351812289,0,0x0,8
tick,0x7ffc909efd34,351827651,0,0x0,8
tick,0x7ffc909efd34,351842872,0,0x0,8
tick,0x7ffc909efd34,351858848,0,0x0,8
tick,0x7ffc909efd34,351874660,0,0x0,8
tick,0x7ffc909efd34,351889952,0,0x0,8
tick,0x7ffc909efd34,351905394,0,0x0,8
tick,0x7ffc909efd34,351920880,0,0x0,8
tick,0x7ffc909efd34,351936764,0,0x0,8
tick,0x7ffc909efd34,351952212,0,0x0,8
tick,0x7ffc909efd34,351967911,0,0x0,8
tick,0x7ffc909efd34,351983017,0,0x0,8
tick,0x7ffc909efd34,351998557,0,0x0,8
tick,0x7ffc909efd34,352014161,0,0x0,8
tick,0x7ffc909efd34,352030064,0,0x0,8
tick,0x7ffc909efd34,352045666,0,0x0,8
tick,0x7ffc909efd34,352061154,0,0x0,8
tick,0x7ffc909efd34,352076950,0,0x0,8
tick,0x7ffc909efd34,352092269,0,0x0,8
tick,0x7ffc909efd34,352108284,0,0x0,8
tick,0x7ffc909efd34,352123189,0,0x0,8
tick,0x7ffc909efd34,352138171,0,0x0,8
tick,0x7ffc909efd34,352153834,0,0x0,8
tick,0x7ffc909efd34,352170169,0,0x0,8
tick,0x7ffc909efd34,352186093,0,0x0,8
tick,0x7ffc909efd34,352201215,0,0x0,8
tick,0x7ffc909efd34,352216908,0,0x0,8
tick,0x7ffc909efd34,352232874,0,0x0,8
tick,0x7ffc909efd34,352248529,0,0x0,8
tick,0x7ffc909efd34,352264223,0,0x0,8
tick,0x7ffc909efd34,352279914,0,0x0,8
tick,0x7ffc909efd34,352295350,0,0x0,8
tick,0x7ffc909efd34,352310649,0,0x0,8
tick,0x7ffc909efd34,352326344,0,0x0,8
tick,0x7ffc909efd34,352341632,0,0x0,8
tick,0x7ffc909efd34,352357374,0,0x0,8
tick,0x7ffc909efd34,352372718,0,0x0,8
tick,0x7ffc909efd34,352388541,0,0x0,8
tick,0x7ffc909efd34,352404039,0,0x0,8
tick,0x7ffc909efd34,352419619,0,0x0,8
tick,0x7ffc909efd34,352434770,0,0x0,8
tick,0x7ffc909efd34,352451038,0,0x0,8
tick,0x7ffc909efd34,352466407,0,0x0,8
tick,0x7ffc909efd34,352481972,0,0x0,8
tick,0x7ffc909efd34,352497255,0,0x0,8
tick,0x7ffc909efd34,352512629,0,0x0,8
tick,0x7ffc909efd34,352528142,0,0x0,8
tick,0x7ffc909efd34,352543958,0,0x0,8
tick,0x7ffc909efd34,352559491,0,0x0,8
tick,0x7ffc909efd34,352575034,0,0x0,8
tick,0x7ffc909efd34,352590601,0,0x0,8
tick,0x7ffc909efd34,352605373,0,0x0,8
tick,0x7ffc909efd34,352620212,0,0x0,8
tick,0x7ffc909efd34,352635206,0,0x0,8
tick,0x7ffc909efd34,352651625,0,0x0,8
tick,0x7ffc909efd34,352667365,0,0x0,8
tick,0x7ffc909efd34,352683493,0,0x0,8
tick,0x7ffc909efd34,352698842,0,0x0,8
tick,0x7ffc909efd34,352714492,0,0x0,8
tick,0x7ffc909efd34,352730090,0,0x0,8
tick,0x7ffc909efd34,352745630,0,0x0,8
tick,0x7ffc909efd34,352761106,0,0x0,8
tick,0x7ffc909efd34,352776770,0,0x0,8
tick,0x7ffc909efd34,352792656,0,0x0,8
tick,0x7ffc909efd34,352807950,0,0x0,8
tick,0x7ffc909efd34,352823904,0,0x0,8
tick,0x7ffc909efd34,352839214,0,0x0,8
tick,0x7ffc909efd34,352854821,0,0x0,8
tick,0x7ffc909efd34,352870218,0,0x0,8
tick,0x7ffc909efd34,352885369,0,0x0,8
tick,0x7ffc909efd34,352901228,0,0x0,8
tick,0x7ffc909efd34,352916780,0,0x0,8
tick,0x7ffc909efd34,352932889,0,0x0,8
tick,0x7ffc909efd34,352948670,0,0x0,8
tick,0x7ffc909efd34,352964212,0,0x0,8
tick,0x7ffc909efd34,352979480,0,0x0,8
tick,0x7ffc909efd34,352995604,0,0x0,8
tick,0x7ffc909efd34,353010854,0,0x0,8
tick,0x7ffc909efd34,353026048,0,0x0,8
tick,0x7ffc909efd34,353041775,0,0x0,8
tick,0x7ffc909efd34,353057792,0,0x0,8
tick,0x7ffc909efd34,353073535,0,0x0,8
tick,0x7ffc909efd34,353088690,0,0x0,8
tick,0x7ffc909efd34,353104137,0,0x0,8
tick,0x7ffc909efd34,353119900,0,0x0,8
tick,0x7ffc909efd34,353135652,0,0x0,8
tick,0x7ffc909efd34,353151339,0,0x0,8
tick,0x7ffc909efd34,353166999,0,0x0,8
tick,0x7ffc909efd34,353182655,0,0x0,8
tick,0x7ffc909efd34,353198324,0,0x0,8
tick,0x7ffc909efd34,353213787,0,0x0,8
tick,0x7ffc909efd34,353229518,0,0x0,8
tick,0x7ffc909efd34,353245480,0,0x0,8
tick,0x7ffc909efd34,353261118,0,0x0,8
tick,0x7ffc909efd34,353277078,0,0x0,8
tick,0x7ffc909efd34,353292667,0,0x0,8
tick,0x7ffc909efd34,353308953,0,0x0,8
tick,0x7ffc909efd34,353324183,0,0x0,8
tick,0x7ffc909efd34,353340516,0,0x0,8
tick,0x7ffc909efd34,353356123,0,0x0,8
tick,0x7ffc909efd34,353371137,0,0x0,8
tick,0x7ffc909efd34,353385796,0,0x0,8
tick,0x7ffc909efd34,353400872,0,0x0,8
tick,0x7ffc909efd34,353416048,0,0x0,8
tick,0x7ffc909efd34,353431668,0,0x0,8
tick,0x7ffc909efd34,353447366,0,0x0,8
tick,0x7ffc909efd34,353462906,0,0x0,8
tick,0x7ffc909efd34,353477671,0,0x0,8
tick,0x7ffc909efd34,353493038,0,0x0,8
tick,0x7ffc909efd34,353508964,0,0x0,8
tick,0x7ffc909efd34,353524496,0,0x0,8
tick,0x7ffc909efd34,353540106,0,0x0,8
tick,0x7ffc909efd34,353554934,0,0x0,8
tick,0x7ffc909efd34,353571148,0,0x0,8
tick,0x7ffc909efd34,353587340,0,0x0,8
tick,0x7ffc909efd34,353603479,0,0x0,8
tick,0x7ffc909efd34,353619720,0,0x0,8
tick,0x7ffc909efd34,353635492,0,0x0,8
tick,0x7ffc909efd34,353651297,0,0x0,8
tick,0x7ffc909efd34,353665689,0,0x0,8
tick,0x7ffc909efd34,353681102,0,0x0,8
tick,0x7ffc909efd34,353696326,0,0x0,8
tick,0x7ffc909efd34,353711440,0,0x0,8
tick,0x7ffc909efd34,353727176,0,0x0,8
tick,0x7ffc909efd34,353742637,0,0x0,8
tick,0x7ffc909efd34,353758605,0,0x0,8
tick,0x7ffc909efd34,353773801,0,0x0,8
tick,0x7ffc909efd34,353789085,0,0x0,8
tick,0x7ffc909efd34,353804628,0,0x0,8
tick,0x7ffc909efd34,353820204,0,0x0,8
tick,0x7ffc909efd34,353836060,0,0x0,8
tick,0x7ffc909efd34,353850859,0,0x0,8
tick,0x7ffc909efd34,353866447,0,0x0,8
tick,0x7ffc909efd34,353882197,0,0x0,8
tick,0x7ffc909efd34,353897741,0,0x0,8
tick,0x7ffc909efd34,353913088,0,0x0,8
tick,0x7ffc909efd34,353928324,0,0x0,8
tick,0x7ffc909efd34,353943457,0,0x0,8
tick,0x7ffc909efd34,353959134,0,0x0,8
tick,0x7ffc909efd34,353975610,0,0x0,8
tick,0x7ffc909efd34,353990492,0,0x0,8
tick,0x7ffc909efd34,354005684,0,0x0,8
tick,0x7ffc909efd34,354020902,0,0x0,8
tick,0x7ffc909efd34,354036409,0,0x0,8
tick,0x7ffc909efd34,354052518,0,0x0,8
tick,0x7ffc909efd34,354067498,0,0x0,8
tick,0x7ffc909efd34,354083211,0,0x0,8
tick,0x7ffc909efd34,354098651,0,0x0,8
tick,0x7ffc909efd34,354113956,0,0x0,8
tick,0x7ffc909efd34,354129388,0,0x0,8
tick,0x7ffc909efd34,354144769,0,0x0,8
tick,0x7ffc909efd34,354160136,0,0x0,8
tick,0x7ffc909efd34,354175955,0,0x0,8
tick,0x7ffc909efd34,354191090,0,0x0,8
tick,0x7ffc909efd34,354207048,0,0x0,8
tick,0x7ffc909efd34,354222182,0,0x0,8
tick,0x7ffc909efd34,354237509,0,0x0,8
tick,0x7ffc909efd34,354252950,0,0x0,8
tick,0x7ffc909efd34,354268670,0,0x0,8
tick,0x7ffc909efd34,354283762,0,0x0,8
tick,0x7ffc909efd34,354299318,0,0x0,8
tick,0x7ffc909efd34,354314870,0,0x0,8
tick,0x7ffc909efd34,354330642,0,0x0,8
tick,0x7ffc909efd34,354346684,0,0x0,8
tick,0x7ffc909efd34,354362135,0,0x0,8
tick,0x7ffc909efd34,354377540,0,0x0,8
tick,0x7ffc909efd34,354392777,0,0x0,8
tick,0x7ffc909efd34,354408299,0,0x0,8
tick,0x7ffc909efd34,354424453,0,0x0,8
tick,0x7ffc909efd34,354439525,0,0x0,8
tick,0x7ffc909efd34,354454902,0,0x0,8
tick,0x7ffc909efd34,354470551,0,0x0,8
tick,0x7ffc909efd34,354486385,0,0x0,8
tick,0x7ffc909efd34,354501811,0,0x0,8
tick,0x7ffc909efd34,354516967,0,0x0,8
tick,0x7ffc909efd34,354532661,0,0x0,8
tick,0x7ffc909efd34,354548600,0,0x0,8
tick,0x7ffc909efd34,354563950,0,0x0,8
tick,0x7ffc909efd34,354579555,0,0x0,8
tick,0x7ffc909efd34,354595063,0,0x0,8
tick,0x7ffc909efd34,354611121,0,0x0,8
tick,0x7ffc909efd34,354627044,0,0x0,8
tick,0x7ffc909efd34,354642704,0,0x0,8
tick,0x7ffc909efd34,354658238,0,0x0,8
tick,0x7ffc909efd34,354673830,0,0x0,8
tick,0x7ffc909efd34,354689160,0,0x0,8
tick,0x7ffc909efd34,354704583,0,0x0,8
tick,0x7ffc909efd34,354720221,0,0x0,8
tick,0x7ffc909efd34,354736223,0,0x0,8
tick,0x7ffc909efd34,354751327,0,0x0,8
tick,0x7ffc909efd34,354767100,0,0x0,8
tick,0x7ffc909efd34,354782438,0,0x0,8
tick,0x7ffc909efd34,354798612,0,0x0,8
tick,0x7ffc909efd34,354814051,0,0x0,8
tick,0x7ffc909efd34,354830238,0,0x0,8
tick,0x7ffc909efd34,354845512,0,0x0,8
tick,0x7ffc909efd34,354860794,0,0x0,8
tick,0x7ffc909efd34,354876612,0,0x0,8
tick,0x7ffc909efd34,354892326,0,0x0,8
tick,0x7ffc909efd34,354908302,0,0x0,8
tick,0x7ffc909efd34,354923738,0,0x0,8
tick,0x7ffc909efd34,354939344,0,0x0,8
tick,0x7ffc909efd34,354954846,0,0x0,8
tick,0x7ffc909efd34,354970036,0,0x0,8
tick,0x7ffc909efd34,354985583,0,0x0,8
tick,0x7ffc909efd34,355001295,0,0x0,8
tick,0x7ffc909efd34,355016903,0,0x0,8
tick,0x7ffc909efd34,355031956,0,0x0,8
tick,0x7ffc909efd34,355047139,0,0x0,8
tick,0x7ffc909efd34,355063001,0,0x0,8
tick,0x7ffc909efd34,355078568,0,0x0,8
tick,0x7ffc909efd34,355093776,0,0x0,8
tick,0x7ffc909efd34,355110687,0,0x0,8
tick,0x7ffc909efd34,355125915,0,0x0,8
tick,0x7ffc909efd34,355141351,0,0x0,8
tick,0x7ffc909efd34,355157150,0,0x0,8
tick,0x7ffc909efd34,355172596,0,0x0,8
tick,0x7ffc909efd34,355188482,0,0x0,8
tick,0x7ffc909efd34,355204395,0,0x0,8
tick,0x7ffc909efd34,355220319,0,0x0,8
tick,0x7ffc909efd34,355236129,0,0x0,8
tick,0x7ffc909efd34,355251042,0,0x0,8
tick,0x7ffc909efd34,355266189,0,0x0,8
tick,0x7ffc909efd34,355281738,0,0x0,8
tick,0x7ffc909efd34,355297302,0,0x0,8
tick,0x7ffc909efd34,355312057,0,0x0,8
tick,0x7ffc909efd34,355327443,0,0x0,8
tick,0x7ffc909efd34,355342933,0,0x0,8
tick,0x7ffc909efd34,355359040,0,0x0,8
tick,0x7ffc909efd34,355375514,0,0x0,8
tick,0x7ffc909efd34,355390792,0,0x0,8
tick,0x7ffc909efd34,355406641,0,0x0,8
tick,0x7ffc909efd34,355421951,0,0x0,8
tick,0x7ffc909efd34,355437280,0,0x0,8
tick,0x7ffc909efd34,355452869,0,0x0,8
tick,0x7ffc909efd34,355468482,0,0x0,8
tick,0x7ffc909efd34,355484215,0,0x0,8
tick,0x7ffc909efd34,355499458,0,0x0,8
tick,0x7ffc909efd34,355515160,0,0x0,8
tick,0x7ffc909efd34,355530718,0,0x0,8
tick,0x7ffc909efd34,355546343,0,0x0,8
tick,0x7ffc909efd34,355561825,0,0x0,8
tick,0x7ffc909efd34,355577331,0,0x0,8
tick,0x7ffc909efd34,355592813,0,0x0,8
tick,0x7ffc909efd34,355608318,0,0x0,8
tick,0x7ffc909efd34,355624499,0,0x0,8
tick,0x7ffc909efd34,355639999,0,0x0,8
tick,0x7ffc909efd34,355655110,0,0x0,8
tick,0x7ffc909efd34,355670532,0,0x0,8
tick,0x7ffc909efd34,355686003,0,0x0,8
tick,0x7ffc909efd34,355701608,0,0x0,8
tick,0x7ffc909efd34,355717138,0,0x0,8
tick,0x7ffc909efd34,355732794,0,0x0,8
tick,0x7ffc909efd34,355748691,0,0x0,8
tick,0x7ffc909efd34,355764145,0,0x0,8
tick,0x7ffc909efd34,355780270,0,0x0,8
tick,0x7ffc909efd34,355795629,0,0x0,8
tick,0x7ffc909efd34,355811237,0,0x0,8
tick,0x7ffc909efd34,355827468,0,0x0,8
tick,0x7ffc909efd34,355842685,0,0x0,8
tick,0x7ffc909efd34,355858690,0,0x0,8
tick,0x7ffc909efd34,355874240,0,0x0,8
tick,0x7ffc909efd34,355889904,0,0x0,8
tick,0x7ffc909efd34,355905108,0,0x0,8
tick,0x7ffc909efd34,355920504,0,0x0,8
tick,0x7ffc909efd34,355936683,0,0x0,8
tick,0x7ffc909efd34,355951880,0,0x0,8
tick,0x7ffc909efd34,355967606,0,0x0,8
tick,0x7ffc909efd34,355983090,0,0x0,8
tick,0x7ffc909efd34,355998211,0,0x0,8
tick,0x7ffc909efd34,356013983,0,0x0,8
tick,0x7ffc909efd34,356029415,0,0x0,8
tick,0x7ffc909efd34,356044800,0,0x0,8
tick,0x7ffc909efd34,356061470,0,0x0,8
tick,0x7ffc909efd34,356075884,0,0x0,8
tick,0x7ffc909efd34,356091650,0,0x0,8
tick,0x7ffc909efd34,356107172,0,0x0,8
tick,0x7ffc909efd34,356123126,0,0x0,8
tick,0x7ffc909efd34,356138474,0,0x0,8
tick,0x7ffc909efd34,356153833,0,0x0,8
tick,0x7ffc909efd34,356169535,0,0x0,8
tick,0x7ffc909efd34,356185328,0,0x0,8
tick,0x7ffc909efd34,356200717,0,0x0,8
tick,0x7ffc909efd34,356216534,0,0x0,8
tick,0x7ffc909efd34,356232096,0,0x0,8
tick,0x7ffc909efd34,356248034,0,0x0,8
tick,0x7ffc909efd34,356263730,0,0x0,8
tick,0x7ffc909efd34,356279115,0,0x0,8
tick,0x7ffc909efd34,356294354,0,0x0,8
tick,0x7ffc909efd34,356309736,0,0x0,8
tick,0x7ffc909efd34,356325272,0,0x0,8
tick,0x7ffc909efd34,356341226,0,0x0,8
tick,0x7ffc909efd34,356357246,0,0x0,8
tick,0x7ffc909efd34,356372205,0,0x0,8
tick,0x7ffc909efd34,356387840,0,0x0,8
tick,0x7ffc909efd34,356403353,0,0x0,8
tick,0x7ffc909efd34,356419008,0,0x0,8
tick,0x7ffc909efd34,356435284,0,0x0,8
tick,0x7ffc909efd34,356451458,0,0x0,8
tick,0x7ffc909efd34,356467720,0,0x0,8
tick,0x7ffc909efd34,356483477,0,0x0,8
tick,0x7ffc909efd34,356498933,0,0x0,8
tick,0x7ffc909efd34,356514328,0,0x0,8
tick,0x7ffc909efd34,356529429,0,0x0,8
tick,0x7ffc909efd34,356545090,0,0x0,8
tick,0x7ffc909efd34,356560315,0,0x0,8
tick,0x7ffc909efd34,356576199,0,0x0,8
tick,0x7ffc909efd34,356592222,0,0x0,8
tick,0x7ffc909efd34,356608484,0,0x0,8
tick,0x7ffc909efd34,356623901,0,0x0,8
tick,0x7ffc909efd34,356639819,0,0x0,8
tick,0x7ffc909efd34,356654811,0,0x0,8
tick,0x7ffc909efd34,356670833,0,0x0,8
tick,0x7ffc909efd34,356686855,0,0x0,8
tick,0x7ffc909efd34,356702154,0,0x0,8
tick,0x7ffc909efd34,356718205,0,0x0,8
tick,0x7ffc909efd34,356734291,0,0x0,8
tick,0x7ffc909efd34,356749643,0,0x0,8
tick,0x7ffc909efd34,356765305,0,0x0,8
tick,0x7ffc909efd34,356781380,0,0x0,8
tick,0x7ffc909efd34,356796564,0,0x0,8
tick,0x7ffc909efd34,356812154,0,0x0,8
tick,0x7ffc909efd34,356827439,0,0x0,8
tick,0x7ffc909efd34,356842543,0,0x0,8
tick,0x7ffc909efd34,356858216,0,0x0,8
tick,0x7ffc909efd34,356874011,0,0x0,8
tick,0x7ffc909efd34,356889891,0,0x0,8
tick,0x7ffc909efd34,356905232,0,0x0,8
tick,0x7ffc909efd34,356920120,0,0x0,8
tick,0x7ffc909efd34,356935060,0,0x0,8
tick,0x7ffc909efd34,356950044,0,0x0,8
tick,0x7ffc909efd34,356964713,0,0x0,8
tick,0x7ffc909efd34,356980433,0,0x0,8
tick,0x7ffc909efd34,356996142,0,0x0,8
tick,0x7ffc909efd34,357011627,0,0x0,8
tick,0x7ffc909efd34,357027185,0,0x0,8
tick,0x7ffc909efd34,357042531,0,0x0,8
tick,0x7ffc909efd34,357057834,0,0x0,8
tick,0x7ffc909efd34,357073326,0,0x0,8
tick,0x7ffc909efd34,357088173,0,0x0,8
tick,0x7ffc909efd34,357103348,0,0x0,8
tick,0x7ffc909efd34,357118795,0,0x0,8
tick,0x7ffc909efd34,357134201,0,0x0,8
tick,0x7ffc909efd34,357149726,0,0x0,8
tick,0x7ffc909efd34,357165422,0,0x0,8
tick,0x7ffc909efd34,357181426,0,0x0,8
tick,0x7ffc909efd34,357196589,0,0x0,8
tick,0x7ffc909efd34,357212156,0,0x0,8
tick,0x7ffc909efd34,357228182,0,0x0,8
tick,0x7ffc909efd34,357244152,0,0x0,8
tick,0x7ffc909efd34,357259785,0,0x0,8
tick,0x7ffc909efd34,357275918,0,0x0,8
tick,0x7ffc909efd34,357291532,0,0x0,8
tick,0x7ffc909efd34,357308775,0,0x0,8
tick,0x7ffc909efd34,357325916,0,0x0,8
tick,0x7ffc909efd34,357344843,0,0x0,8
tick,0x7ffc909efd34,357361289,0,0x0,8
tick,0x7ffc909efd34,357371064,0,0x0,8
tick,0x7ffc909efd34,357386952,0,0x0,8
tick,0x7ffc909efd34,357401870,0,0x0,8
tick,0x7ffc909efd34,357417988,0,0x0,8
tick,0x7ffc909efd34,357434013,0,0x0,8
tick,0x7ffc909efd34,357449473,0,0x0,8
tick,0x7ffc909efd34,357465452,0,0x0,8
tick,0x7ffc909efd34,357480910,0,0x0,8
tick,0x7ffc909efd34,357496316,0,0x0,8
tick,0x7ffc909efd34,357511718,0,0x0,8
tick,0x7ffc909efd34,357527194,0,0x0,8
tick,0x7ffc909efd34,357543306,0,0x0,8
tick,0x7ffc909efd34,357558160,0,0x0,8
tick,0x7ffc909efd34,357574009,0,0x0,8
tick,0x7ffc909efd34,357589849,0,0x0,8
tick,0x7ffc909efd34,357605200,0,0x0,8
tick,0x7ffc909efd34,357620642,0,0x0,8
tick,0x7ffc909efd34,357636786,0,0x0,8
tick,0x7ffc909efd34,357652095,0,0x0,8
tick,0x7ffc909efd34,357668194,0,0x0,8
tick,0x7ffc909efd34,357683372,0,0x0,8
tick,0x7ffc909efd34,357699474,0,0x0,8
tick,0x7ffc909efd34,357715874,0,0x0,8
tick,0x7ffc909efd34,357731566,0,0x0,8
tick,0x7ffc909efd34,357747220,0,0x0,8
tick,0x7ffc909efd34,357763026,0,0x0,8
tick,0x7ffc909efd34,357779018,0,0x0,8
tick,0x7ffc909efd34,357795046,0,0x0,8
tick,0x7ffc909efd34,357811058,0,0x0,8
tick,0x7ffc909efd34,357826057,0,0x0,8
tick,0x7ffc909efd34,357842058,0,0x0,8
tick,0x7ffc909efd34,357858153,0,0x0,8
tick,0x7ffc909efd34,357875259,0,0x0,8
tick,0x7ffc909efd34,357892298,0,0x0,8
tick,0x7ffc909efd34,357905201,0,0x0,8
tick,0x7ffc909efd34,357920297,0,0x0,8
tick,0x7ffc909efd34,357938667,0,0x0,8
tick,0x7ffc909efd34,357950064,0,0x0,8
tick,0x7ffc909efd34,357965836,0,0x0,8
tick,0x7ffc909efd34,357981181,0,0x0,8
tick,0x7ffc909efd34,357997014,0,0x0,8
tick,0x7ffc909efd34,358013008,0,0x0,8
tick,0x7ffc909efd34,358029142,0,0x0,8
tick,0x7ffc909efd34,358045168,0,0x0,8
tick,0x7ffc909efd34,358061004,0,0x0,8
tick,0x7ffc909efd34,358077024,0,0x0,8
tick,0x7ffc909efd34,358092985,0,0x0,8
tick,0x7ffc909efd34,358109039,0,0x0,8
tick,0x7ffc909efd34,358125767,0,0x0,8
tick,0x7ffc909efd34,358140126,0,0x0,8
tick,0x7ffc909efd34,358155059,0,0x0,8
tick,0x7ffc909efd34,358170039,0,0x0,8
tick,0x7ffc909efd34,358185160,0,0x0,8
tick,0x7ffc909efd34,358201181,0,0x0,8
tick,0x7ffc909efd34,358217083,0,0x0,8
tick,0x7ffc909efd34,358233486,0,0x0,8
tick,0x7ffc909efd34,358249015,0,0x0,8
tick,0x7ffc909efd34,358265187,0,0x0,8
tick,0x7ffc909efd34,358281123,0,0x0,8
tick,0x7ffc909efd34,358296015,0,0x0,8
tick,0x7ffc909efd34,358311001,0,0x0,8
tick,0x7ffc909efd34,358327050,0,0x0,8
tick,0x7ffc909efd34,358343116,0,0x0,8
tick,0x7ffc909efd34,358359174,0,0x0,8
tick,0x7ffc909efd34,358375131,0,0x0,8
tick,0x7ffc909efd34,358391041,0,0x0,8
tick,0x7ffc909efd34,358407297,0,0x0,8
tick,0x7ffc909efd34,358423022,0,0x0,8
tick,0x7ffc909efd34,358439362,0,0x0,8
tick,0x7ffc909efd34,358454268,0,0x0,8
tick,0x7ffc909efd34,358469760,0,0x0,8
tick,0x7ffc909efd34,358485027,0,0x0,8
tick,0x7ffc909efd34,358500193,0,0x0,8
tick,0x7ffc909efd34,358516169,0,0x0,8
tick,0x7ffc909efd34,358531327,0,0x0,8
tick,0x7ffc909efd34,358547062,0,0x0,8
tick,0x7ffc909efd34,358563284,0,0x0,8
tick,0x7ffc909efd34,358579310,0,0x0,8
tick,0x7ffc909efd34,358594925,0,0x0,8
tick,0x7ffc909efd34,358610654,0,0x0,8
tick,0x7ffc909efd34,358626020,0,0x0,8
tick,0x7ffc909efd34,358641801,0,0x0,8
tick,0x7ffc909efd34,358657049,0,0x0,8
tick,0x7ffc909efd34,358672663,0,0x0,8
tick,0x7ffc909efd34,358688118,0,0x0,8
tick,0x7ffc909efd34,358703650,0,0x0,8
tick,0x7ffc909efd34,358718892,0,0x0,8
tick,0x7ffc909efd34,358734512,0,0x0,8
tick,0x7ffc909efd34,358750197,0,0x0,8
tick,0x7ffc909efd34,358765979,0,0x0,8
tick,0x7ffc909efd34,358781473,0,0x0,8
tick,0x7ffc909efd34,358797497,0,0x0,8
tick,0x7ffc909efd34,358813503,0,0x0,8
tick,0x7ffc909efd34,358829604,0,0x0,8
tick,0x7ffc909efd34,358845177,0,0x0,8
tick,0x7ffc909efd34,358860754,0,0x0,8
tick,0x7ffc909efd34,358876330,0,0x0,8
tick,0x7ffc909efd34,358892215,0,0x0,8
tick,0x7ffc909efd34,358907733,0,0x0,8
tick,0x7ffc909efd34,358923286,0,0x0,8
tick,0x7ffc909efd34,358938569,0,0x0,8
tick,0x7ffc909efd34,358953932,0,0x0,8
tick,0x7ffc909efd34,358969604,0,0x0,8
tick,0x7ffc909efd34,358985177,0,0x0,8
tick,0x7ffc909efd34,359000477,0,0x0,8
tick,0x7ffc909efd34,359016058,0,0x0,8
tick,0x7ffc909efd34,359032086,0,0x0,8
tick,0x7ffc909efd34,359047718,0,0x0,8
tick,0x7ffc909efd34,359063696,0,0x0,8
tick,0x7ffc909efd34,359079912,0,0x0,8
tick,0x7ffc909efd34,359095698,0,0x0,8
tick,0x7ffc909efd34,359111518,0,0x0,8
tick,0x7ffc909efd34,359126985,0,0x0,8
tick,0x7ffc909efd34,359142522,0,0x0,8
tick,0x7ffc909efd34,359158241,0,0x0,8
tick,0x7ffc909efd34,359174524,0,0x0,8
tick,0x7ffc909efd34,359189893,0,0x0,8
tick,0x7ffc909efd34,359206215,0,0x0,8
tick,0x7ffc909efd34,359221777,0,0x0,8
tick,0x7ffc909efd34,359237060,0,0x0,8
tick,0x7ffc909efd34,359252082,0,0x0,8
tick,0x7ffc909efd34,359267160,0,0x0,8
tick,0x7ffc909efd34,359283237,0,0x0,8
tick,0x7ffc909efd34,359298522,0,0x0,8
tick,0x7ffc909efd34,359314110,0,0x0,8
tick,0x7ffc909efd34,359330066,0,0x0,8
tick,0x7ffc909efd34,359345542,0,0x0,8
tick,0x7ffc909efd34,359360634,0,0x0,8
tick,0x7ffc909efd34,359376263,0,0x0,8
tick,0x7ffc909efd34,359391711,0,0x0,8
tick,0x7ffc909efd34,359407559,0,0x0,8
tick,0x7ffc909efd34,359423474,0,0x0,8
tick,0x7ffc909efd34,359439700,0,0x0,8
tick,0x7ffc909efd34,359454988,0,0x0,8
tick,0x7ffc909efd34,359470002,0,0x0,8
tick,0x7ffc909efd34,359485794,0,0x0,8
tick,0x7ffc909efd34,359501695,0,0x0,8
tick,0x7ffc909efd34,359517306,0,0x0,8
tick,0x7ffc909efd34,359532447,0,0x0,8
tick,0x7ffc909efd34,359548491,0,0x0,8
tick,0x7ffc909efd34,359564189,0,0x0,8
tick,0x7ffc909efd34,359580357,0,0x0,8
tick,0x7ffc909efd34,359595378,0,0x0,8
tick,0x7ffc909efd34,359611445,0,0x0,8
tick,0x7ffc909efd34,359626894,0,0x0,8
tick,0x7ffc909efd34,359642759,0,0x0,8
tick,0x7ffc909efd34,359658623,0,0x0,8
tick,0x7ffc909efd34,359674176,0,0x0,8
tick,0x7ffc909efd34,359690278,0,0x0,8
tick,0x7ffc909efd34,359706043,0,0x0,8
tick,0x7ffc909efd34,359721042,0,0x0,8
tick,0x7ffc909efd34,359736718,0,0x0,8
tick,0x7ffc909efd34,359751994,0,0x0,8
tick,0x7ffc909efd34,359767704,0,0x0,8
tick,0x7ffc909efd34,359783481,0,0x0,8
tick,0x7ffc909efd34,359798924,0,0x0,8
tick,0x7ffc909efd34,359814660,0,0x0,8
tick,0x7ffc909efd34,359829848,0,0x0,8
tick,0x7ffc909efd34,359845253,0,0x0,8
tick,0x7ffc909efd34,359860925,0,0x0,8
tick,0x7ffc909efd34,359876247,0,0x0,8
tick,0x7ffc909efd34,359891066,0,0x0,8
tick,0x7ffc909efd34,359906339,0,0x0,8
tick,0x7ffc909efd34,359922758,0,0x0,8
tick,0x7ffc909efd34,359937657,0,0x0,8
tick,0x7ffc909efd34,359953053,0,0x0,8
tick,0x7ffc909efd34,359969160,0,0x0,8
tick,0x7ffc909efd34,359984604,0,0x0,8
tick,0x7ffc909efd34,360000094,0,0x0,8
tick,0x7ffc909efd34,360016060,0,0x0,8
tick,0x7ffc909efd34,360031447,0,0x0,8
tick,0x7ffc909efd34,360047144,0,0x0,8
tick,0x7ffc909efd34,360062648,0,0x0,8
tick,0x7ffc909efd34,360078297,0,0x0,8
tick,0x7ffc909efd34,360093502,0,0x0,8
tick,0x7ffc909efd34,360108883,0,0x0,8
tick,0x7ffc909efd34,360124138,0,0x0,8
tick,0x7ffc909efd34,360140309,0,0x0,8
tick,0x7ffc909efd34,360155978,0,0x0,8
tick,0x7ffc909efd34,360171565,0,0x0,8
tick,0x7ffc909efd34,360186148,0,0x0,8
tick,0x7ffc909efd34,360201559,0,0x0,8
tick,0x7ffc909efd34,360217140,0,0x0,8
tick,0x7ffc909efd34,360232691,0,0x0,8
tick,0x7ffc909efd34,360248209,0,0x0,8
tick,0x7ffc909efd34,360263957,0,0x0,8
tick,0x7ffc909efd34,360279371,0,0x0,8
tick,0x7ffc909efd34,360295102,0,0x0,8
tick,0x7ffc909efd34,360310994,0,0x0,8
tick,0x7ffc909efd34,360327146,0,0x0,8
tick,0x7ffc909efd34,360343115,0,0x0,8
tick,0x7ffc909efd34,360359108,0,0x0,8
tick,0x7ffc909efd34,360374946,0,0x0,8
tick,0x7ffc909efd34,360391503,0,0x0,8
tick,0x7ffc909efd34,360408299,0,0x0,8
tick,0x7ffc909efd34,360421032,0,0x0,8
tick,0x7ffc909efd34,360437028,0,0x0,8
tick,0x7ffc909efd34,360453116,0,0x0,8
tick,0x7ffc909efd34,360469088,0,0x0,8
tick,0x7ffc909efd34,360484492,0,0x0,8
tick,0x7ffc909efd34,360500555,0,0x0,8
tick,0x7ffc909efd34,360516255,0,0x0,8
tick,0x7ffc909efd34,360531553,0,0x0,8
tick,0x7ffc909efd34,360546867,0,0x0,8
tick,0x7ffc909efd34,360562467,0,0x0,8
tick,0x7ffc909efd34,360577600,0,0x0,8
tick,0x7ffc909efd34,360592381,0,0x0,8
tick,0x7ffc909efd34,360607354,0,0x0,8
tick,0x7ffc909efd34,360622694,0,0x0,8
tick,0x7ffc909efd34,360638378,0,0x0,8
tick,0x7ffc909efd34,360653781,0,0x0,8
tick,0x7ffc909efd34,360669320,0,0x0,8
tick,0x7ffc909efd34,360684988,0,0x0,8
tick,0x7ffc909efd34,360700921,0,0x0,8
tick,0x7ffc909efd34,360716664,0,0x0,8
tick,0x7ffc909efd34,360732079,0,0x0,8
tick,0x7ffc909efd34,360747863,0,0x0,8
tick,0x7ffc909efd34,360763534,0,0x0,8
tick,0x7ffc909efd34,360779298,0,0x0,8
tick,0x7ffc909efd34,360795106,0,0x0,8
tick,0x7ffc909efd34,360810697,0,0x0,8
tick,0x7ffc909efd34,360826220,0,0x0,8
tick,0x7ffc909efd34,360841896,0,0x0,8
tick,0x7ffc909efd34,360857305,0,0x0,8
tick,0x7ffc909efd34,360873235,0,0x0,8
tick,0x7ffc909efd34,360888656,0,0x0,8
tick,0x7ffc909efd34,360903979,0,0x0,8
tick,0x7ffc909efd34,360919216,0,0x0,8
tick,0x7ffc909efd34,360934697,0,0x0,8
tick,0x7ffc909efd34,360951109,0,0x0,8
tick,0x7ffc909efd34,360966169,0,0x0,8
tick,0x7ffc909efd34,360982579,0,0x0,8
tick,0x7ffc909efd34,360998805,0,0x0,8
tick,0x7ffc909efd34,361014711,0,0x0,8
tick,0x7ffc909efd34,361030073,0,0x0,8
tick,0x7ffc909efd34,361046097,0,0x0,8
tick,0x7ffc909efd34,361061649,0,0x0,8
tick,0x7ffc909efd34,361077502,0,0x0,8
tick,0x7ffc909efd34,361092847,0,0x0,8
tick,0x7ffc909efd34,361108251,0,0x0,8
tick,0x7ffc909efd34,361123624,0,0x0,8
tick,0x7ffc909efd34,361139244,0,0x0,8
tick,0x7ffc909efd34,361154992,0,0x0,8
tick,0x7ffc909efd34,361170535,0,0x0,8
tick,0x7ffc909efd34,361185894,0,0x0,8
tick,0x7ffc909efd34,361201902,0,0x0,8
tick,0x7ffc909efd34,361217172,0,0x0,8
tick,0x7ffc909efd34,361233196,0,0x0,8
tick,0x7ffc909efd34,361248762,0,0x0,8
tick,0x7ffc909efd34,361264141,0,0x0,8
tick,0x7ffc909efd34,361279504,0,0x0,8
tick,0x7ffc909efd34,361294552,0,0x0,8
tick,0x7ffc909efd34,361310824,0,0x0,8
tick,0x7ffc909efd34,361326204,0,0x0,8
tick,0x7ffc909efd34,361341627,0,0x0,8
tick,0x7ffc909efd34,361357480,0,0x0,8
tick,0x7ffc909efd34,361373001,0,0x0,8
tick,0x7ffc909efd34,361388934,0,0x0,8
tick,0x7ffc909efd34,361404021,0,0x0,8
tick,0x7ffc909efd34,361419486,0,0x0,8
tick,0x7ffc909efd34,361434653,0,0x0,8
tick,0x7ffc909efd34,361450163,0,0x0,8
tick,0x7ffc909efd34,361464393,0,0x0,8
tick,0x7ffc909efd34,361479549,0,0x0,8
tick,0x7ffc909efd34,361495324,0,0x0,8
tick,0x7ffc909efd34,361511538,0,0x0,8
tick,0x7ffc909efd34,361527369,0,0x0,8
tick,0x7ffc909efd34,361542451,0,0x0,8
tick,0x7ffc909efd34,361558478,0,0x0,8
tick,0x7ffc909efd34,361573777,0,0x0,8
tick,0x7ffc909efd34,361589562,0,0x0,8
tick,0x7ffc909efd34,361604882,0,0x0,8
tick,0x7ffc909efd34,361620150,0,0x0,8
tick,0x7ffc909efd34,361636145,0,0x0,8
tick,0x7ffc909efd34,361653235,0,0x0,8
tick,0x7ffc909efd34,361678222,0,0x0,8
tick,0x7ffc909efd34,361688023,0,0x0,8
tick,0x7ffc909efd34,361696980,0,0x0,8
tick,0x7ffc909efd34,361712983,0,0x0,8
tick,0x7ffc909efd34,361729158,0,0x0,8
tick,0x7ffc909efd34,361744468,0,0x0,8
tick,0x7ffc909efd34,361759319,0,0x0,8
tick,0x7ffc909efd34,361774714,0,0x0,8
tick,0x7ffc909efd34,361790485,0,0x0,8
tick,0x7ffc909efd34,361804705,0,0x0,8
tick,0x7ffc909efd34,361820478,0,0x0,8
tick,0x7ffc909efd34,361836273,0,0x0,8
tick,0x7ffc909efd34,361852203,0,0x0,8
tick,0x7ffc909efd34,361867257,0,0x0,8
tick,0x7ffc909efd34,361882616,0,0x0,8
tick,0x7ffc909efd34,361897330,0,0x0,8
tick,0x7ffc909efd34,361912503,0,0x0,8
tick,0x7ffc909efd34,361928161,0,0x0,8
tick,0x7ffc909efd34,361943370,0,0x0,8
tick,0x7ffc909efd34,361958915,0,0x0,8
tick,0x7ffc909efd34,361974699,0,0x0,8
tick,0x7ffc909efd34,361990092,0,0x0,8
tick,0x7ffc909efd34,362006148,0,0x0,8
tick,0x7ffc909efd34,362020631,0,0x0,8
tick,0x7ffc909efd34,362036222,0,0x0,8
tick,0x7ffc909efd34,362051816,0,0x0,8
tick,0x7ffc909efd34,362067810,0,0x0,8
tick,0x7ffc909efd34,362083344,0,0x0,8
tick,0x7ffc909efd34,362098571,0,0x0,8
tick,0x7ffc909efd34,362114473,0,0x0,8
tick,0x7ffc909efd34,362130075,0,0x0,8
tick,0x7ffc909efd34,362145532,0,0x0,8
tick,0x7ffc909efd34,362160740,0,0x0,8
tick,0x7ffc909efd34,362176040,0,0x0,8
tick,0x7ffc909efd34,362192056,0,0x0,8
tick,0x7ffc909efd34,362207146,0,0x0,8
tick,0x7ffc909efd34,362223372,0,0x0,8
tick,0x7ffc909efd34,362238988,0,0x0,8
tick,0x7ffc909efd34,362253980,0,0x0,8
tick,0x7ffc909efd34,362269096,0,0x0,8
tick,0x7ffc909efd34,362285300,0,0x0,8
tick,0x7ffc909efd34,362301117,0,0x0,8
tick,0x7ffc909efd34,362316949,0,0x0,8
tick,0x7ffc909efd34,362332648,0,0x0,8
tick,0x7ffc909efd34,362348043,0,0x0,8
tick,0x7ffc909efd34,362363025,0,0x0,8
tick,0x7ffc909efd34,362378086,0,0x0,8
tick,0x7ffc909efd34,362393096,0,0x0,8
tick,0x7ffc909efd34,362408381,0,0x0,8
tick,0x7ffc909efd34,362424093,0,0x0,8
tick,0x7ffc909efd34,362439235,0,0x0,8
tick,0x7ffc909efd34,362455827,0,0x0,8
tick,0x7ffc909efd34,362470837,0,0x0,8
tick,0x7ffc909efd34,362486827,0,0x0,8
tick,0x7ffc909efd34,362501757,0,0x0,8
tick,0x7ffc909efd34,362517212,0,0x0,8
tick,0x7ffc909efd34,362532739,0,0x0,8
tick,0x7ffc909efd34,362547806,0,0x0,8
tick,0x7ffc909efd34,362563154,0,0x0,8
tick,0x7ffc909efd34,362579131,0,0x0,8
tick,0x7ffc909efd34,362594428,0,0x0,8
tick,0x7ffc909efd34,362609869,0,0x0,8
tick,0x7ffc909efd34,362626020,0,0x0,8
tick,0x7ffc909efd34,362642101,0,0x0,8
tick,0x7ffc909efd34,362657443,0,0x0,8
tick,0x7ffc909efd34,362672658,0,0x0,8
tick,0x7ffc909efd34,362688489,0,0x0,8
tick,0x7ffc909efd34,362703974,0,0x0,8
tick,0x7ffc909efd34,362719628,0,0x0,8
tick,0x7ffc909efd34,362735540,0,0x0,8
tick,0x7ffc909efd34,362751514,0,0x0,8
tick,0x7ffc909efd34,362766987,0,0x0,8
tick,0x7ffc909efd34,362782448,0,0x0,8
tick,0x7ffc909efd34,362798278,0,0x0,8
tick,0x7ffc909efd34,362813988,0,0x0,8
tick,0x7ffc909efd34,362829031,0,0x0,8
tick,0x7ffc909efd34,362844435,0,0x0,8
tick,0x7ffc909efd34,362859487,0,0x0,8
tick,0x7ffc909efd34,362874549,0,0x0,8
tick,0x7ffc909efd34,362890546,0,0x0,8
tick,0x7ffc909efd34,362905254,0,0x0,8
tick,0x7ffc909efd34,362920608,0,0x0,8
tick,0x7ffc909efd34,362936446,0,0x0,8
tick,0x7ffc909efd34,362952135,0,0x0,8
tick,0x7ffc909efd34,362968011,0,0x0,8
tick,0x7ffc909efd34,362984046,0,0x0,8
tick,0x7ffc909efd34,362999446,0,0x0,8
tick,0x7ffc909efd34,363014445,0,0x0,8
tick,0x7ffc909efd34,363030163,0,0x0,8
tick,0x7ffc909efd34,363046125,0,0x0,8
tick,0x7ffc909efd34,363062148,0,0x0,8
tick,0x7ffc909efd34,363077317,0,0x0,8
tick,0x7ffc909efd34,363093022,0,0x0,8
tick,0x7ffc909efd34,363108004,0,0x0,8
tick,0x7ffc909efd34,363123389,0,0x0,8
tick,0x7ffc909efd34,363139111,0,0x0,8
tick,0x7ffc909efd34,363156041,0,0x0,8
tick,0x7ffc909efd34,363170937,0,0x0,8
tick,0x7ffc909efd34,363186537,0,0x0,8
tick,0x7ffc909efd34,363202351,0,0x0,8
tick,0x7ffc909efd34,363217698,0,0x0,8
tick,0x7ffc909efd34,363232896,0,0x0,8
tick,0x7ffc909efd34,363247986,0,0x0,8
tick,0x7ffc909efd34,363263343,0,0x0,8
tick,0x7ffc909efd34,363278657,0,0x0,8
tick,0x7ffc909efd34,363293189,0,0x0,8
tick,0x7ffc909efd34,363308988,0,0x0,8
tick,0x7ffc909efd34,363324229,0,0x0,8
tick,0x7ffc909efd34,363339424,0,0x0,8
tick,0x7ffc909efd34,363354657,0,0x0,8
tick,0x7ffc909efd34,363370688,0,0x0,8
tick,0x7ffc909efd34,363386288,0,0x0,8
tick,0x7ffc909efd34,363401441,0,0x0,8
tick,0x7ffc909efd34,363417723,0,0x0,8
tick,0x7ffc909efd34,363433001,0,0x0,8
tick,0x7ffc909efd34,363447751,0,0x0,8
tick,0x7ffc909efd34,363462721,0,0x0,8
tick,0x7ffc909efd34,363477179,0,0x0,8
tick,0x7ffc909efd34,363492562,0,0x0,8
tick,0x7ffc909efd34,363508020,0,0x0,8
tick,0x7ffc909efd34,363522864,0,0x0,8
tick,0x7ffc909efd34,363538534,0,0x0,8
tick,0x7ffc909efd34,363554215,0,0x0,8
tick,0x7ffc909efd34,363569217,0,0x0,8
tick,0x7ffc909efd34,363584341,0,0x0,8
tick,0x7ffc909efd34,363599924,0,0x0,8
tick,0x7ffc909efd34,363615002,0,0x0,8
tick,0x7ffc909efd34,363630781,0,0x0,8
tick,0x7ffc909efd34,363646959,0,0x0,8
tick,0x7ffc909efd34,363662397,0,0x0,8
tick,0x7ffc909efd34,363677870,0,0x0,8
tick,0x7ffc909efd34,363694038,0,0x0,8
tick,0x7ffc909efd34,363709224,0,0x0,8
tick,0x7ffc909efd34,363725029,0,0x0,8
tick,0x7ffc909efd34,363740985,0,0x0,8
tick,0x7ffc909efd34,363756272,0,0x0,8
tick,0x7ffc909efd34,363771272,0,0x0,8
tick,0x7ffc909efd34,363785931,0,0x0,8
tick,0x7ffc909efd34,363801920,0,0x0,8
tick,0x7ffc909efd34,363817420,0,0x0,8
tick,0x7ffc909efd34,363832066,0,0x0,8
tick,0x7ffc909efd34,363847641,0,0x0,8
tick,0x7ffc909efd34,363863405,0,0x0,8
tick,0x7ffc909efd34,363878183,0,0x0,8
tick,0x7ffc909efd34,363894163,0,0x0,8
tick,0x7ffc909efd34,363909378,0,0x0,8
tick,0x7ffc909efd34,363924194,0,0x0,8
tick,0x7ffc909efd34,363939860,0,0x0,8
tick,0x7ffc909efd34,363955656,0,0x0,8
tick,0x7ffc909efd34,363970351,0,0x0,8
tick,0x7ffc909efd34,363986147,0,0x0,8
tick,0x7ffc909efd34,364001476,0,0x0,8
tick,0x7ffc909efd34,364017245,0,0x0,8
tick,0x7ffc909efd34,364033194,0,0x0,8
tick,0x7ffc909efd34,364049200,0,0x0,8
tick,0x7ffc909efd34,364064789,0,0x0,8
tick,0x7ffc909efd34,364080647,0,0x0,8
tick,0x7ffc909efd34,364095953,0,0x0,8
tick,0x7ffc909efd34,364112055,0,0x0,8
tick,0x7ffc909efd34,364127767,0,0x0,8
tick,0x7ffc909efd34,364143767,0,0x0,8
tick,0x7ffc909efd34,364158975,0,0x0,8
tick,0x7ffc909efd34,364173910,0,0x0,8
tick,0x7ffc909efd34,364189470,0,0x0,8
tick,0x7ffc909efd34,364205095,0,0x0,8
tick,0x7ffc909efd34,364220575,0,0x0,8
tick,0x7ffc909efd34,364235860,0,0x0,8
tick,0x7ffc909efd34,364252212,0,0x0,8
tick,0x7ffc909efd34,364268546,0,0x0,8
tick,0x7ffc909efd34,364283692,0,0x0,8
tick,0x7ffc909efd34,364299475,0,0x0,8
tick,0x7ffc909efd34,364315257,0,0x0,8
tick,0x7ffc909efd34,364331553,0,0x0,8
tick,0x7ffc909efd34,364347019,0,0x0,8
tick,0x7ffc909efd34,364362244,0,0x0,8
tick,0x7ffc909efd34,364377268,0,0x0,8
tick,0x7ffc909efd34,364392067,0,0x0,8
tick,0x7ffc909efd34,364407555,0,0x0,8
tick,0x7ffc909efd34,364423063,0,0x0,8
tick,0x7ffc909efd34,364439403,0,0x0,8
tick,0x7ffc909efd34,364455446,0,0x0,8
tick,0x7ffc909efd34,364470423,0,0x0,8
tick,0x7ffc909efd34,364486023,0,0x0,8
tick,0x7ffc909efd34,364501263,0,0x0,8
tick,0x7ffc909efd34,364517138,0,0x0,8
tick,0x7ffc909efd34,364532424,0,0x0,8
tick,0x7ffc909efd34,364547544,0,0x0,8
tick,0x7ffc909efd34,364562983,0,0x0,8
tick,0x7ffc909efd34,364579339,0,0x0,8
tick,0x7ffc909efd34,364594667,0,0x0,8
tick,0x7ffc909efd34,364610712,0,0x0,8
tick,0x7ffc909efd34,364626367,0,0x0,8
tick,0x7ffc909efd34,364641848,0,0x0,8
tick,0x7ffc909efd34,364657260,0,0x0,8
tick,0x7ffc909efd34,364673441,0,0x0,8
tick,0x7ffc909efd34,364689069,0,0x0,8
tick,0x7ffc909efd34,364704670,0,0x0,8
tick,0x7ffc909efd34,364719300,0,0x0,8
tick,0x7ffc909efd34,364734044,0,0x0,8
tick,0x7ffc909efd34,364749345,0,0x0,8
tick,0x7ffc909efd34,364765125,0,0x0,8
tick,0x7ffc909efd34,364781089,0,0x0,8
tick,0x7ffc909efd34,364796581,0,0x0,8
tick,0x7ffc909efd34,364812678,0,0x0,8
tick,0x7ffc909efd34,364828142,0,0x0,8
tick,0x7ffc909efd34,364844069,0,0x0,8
tick,0x7ffc909efd34,364859283,0,0x0,8
tick,0x7ffc909efd34,364875286,0,0x0,8
tick,0x7ffc909efd34,364890982,0,0x0,8
tick,0x7ffc909efd34,364906629,0,0x0,8
tick,0x7ffc909efd34,364921900,0,0x0,8
tick,0x7ffc909efd34,364938180,0,0x0,8
tick,0x7ffc909efd34,364953126,0,0x0,8
tick,0x7ffc909efd34,364968644,0,0x0,8
tick,0x7ffc909efd34,364984207,0,0x0,8
tick,0x7ffc909efd34,364999481,0,0x0,8
tick,0x7ffc909efd34,365015246,0,0x0,8
tick,0x7ffc909efd34,365030701,0,0x0,8
tick,0x7ffc909efd34,365046121,0,0x0,8
tick,0x7ffc909efd34,365062078,0,0x0,8
tick,0x7ffc909efd34,365077546,0,0x0,8
tick,0x7ffc909efd34,365092312,0,0x0,8
tick,0x7ffc909efd34,365107450,0,0x0,8
tick,0x7ffc909efd34,365122831,0,0x0,8
tick,0x7ffc909efd34,365138726,0,0x0,8
tick,0x7ffc909efd34,365153894,0,0x0,8
tick,0x7ffc909efd34,365169313,0,0x0,8
tick,0x7ffc909efd34,365185123,0,0x0,8
tick,0x7ffc909efd34,365200602,0,0x0,8
tick,0x7ffc909efd34,365216153,0,0x0,8
tick,0x7ffc909efd34,365232134,0,0x0,8
tick,0x7ffc909efd34,365247750,0,0x0,8
tick,0x7ffc909efd34,365262912,0,0x0,8
tick,0x7ffc909efd34,365278853,0,0x0,8
tick,0x7ffc909efd34,365294448,0,0x0,8
tick,0x7ffc909efd34,365309779,0,0x0,8
tick,0x7ffc909efd34,365325532,0,0x0,8
tick,0x7ffc909efd34,365341345,0,0x0,8
tick,0x7ffc909efd34,365357270,0,0x0,8
tick,0x7ffc909efd34,365372522,0,0x0,8
tick,0x7ffc909efd34,365388383,0,0x0,8
tick,0x7ffc909efd34,365403115,0,0x0,8
tick,0x7ffc909efd34,365418597,0,0x0,8
tick,0x7ffc909efd34,365433729,0,0x0,8
tick,0x7ffc909efd34,365449654,0,0x0,8
tick,0x7ffc909efd34,365466094,0,0x0,8
tick,0x7ffc909efd34,365481206,0,0x0,8
tick,0x7ffc909efd34,365496359,0,0x0,8
tick,0x7ffc909efd34,365511885,0,0x0,8
tick,0x7ffc909efd34,365527930,0,0x0,8
tick,0x7ffc909efd34,365543343,0,0x0,8
tick,0x7ffc909efd34,365559528,0,0x0,8
tick,0x7ffc909efd34,365575264,0,0x0,8
tick,0x7ffc909efd34,365590743,0,0x0,8
tick,0x7ffc909efd34,365606672,0,0x0,8
tick,0x7ffc909efd34,365622928,0,0x0,8
tick,0x7ffc909efd34,365638910,0,0x0,8
tick,0x7ffc909efd34,365654023,0,0x0,8
tick,0x7ffc909efd34,365669940,0,0x0,8
tick,0x7ffc909efd34,365685401,0,0x0,8
tick,0x7ffc909efd34,365700644,0,0x0,8
tick,0x7ffc909efd34,365716204,0,0x0,8
tick,0x7ffc909efd34,365732118,0,0x0,8
tick,0x7ffc909efd34,365747171,0,0x0,8
tick,0x7ffc909efd34,365763001,0,0x0,8
tick,0x7ffc909efd34,365778199,0,0x0,8
tick,0x7ffc909efd34,365793351,0,0x0,8
tick,0x7ffc909efd34,365808976,0,0x0,8
tick,0x7ffc909efd34,365824158,0,0x0,8
tick,0x7ffc909efd34,365839216,0,0x0,8
tick,0x7ffc909efd34,365855826,0,0x0,8
tick,0x7ffc909efd34,365870513,0,0x0,8
tick,0x7ffc909efd34,365885457,0,0x0,8
tick,0x7ffc909efd34,365900419,0,0x0,8
tick,0x7ffc909efd34,365916371,0,0x0,8
tick,0x7ffc909efd34,365932003,0,0x0,8
tick,0x7ffc909efd34,365947725,0,0x0,8
tick,0x7ffc909efd34,365962470,0,0x0,8
tick,0x7ffc909efd34,365978230,0,0x0,8
tick,0x7ffc909efd34,365992540,0,0x0,8
tick,0x7ffc909efd34,366007397,0,0x0,8
tick,0x7ffc909efd34,366024038,0,0x0,8
tick,0x7ffc909efd34,366038551,0,0x0,8
tick,0x7ffc909efd34,366055498,0,0x0,8
tick,0x7ffc909efd34,366070513,0,0x0,8
tick,0x7ffc909efd34,366086251,0,0x0,8
tick,0x7ffc909efd34,366102171,0,0x0,8
tick,0x7ffc909efd34,366117521,0,0x0,8
tick,0x7ffc909efd34,366133467,0,0x0,8
tick,0x7ffc909efd34,366148245,0,0x0,8
tick,0x7ffc909efd34,366163607,0,0x0,8
tick,0x7ffc909efd34,366179105,0,0x0,8
tick,0x7ffc909efd34,366194267,0,0x0,8
tick,0x7ffc909efd34,366210353,0,0x0,8
tick,0x7ffc909efd34,366225818,0,0x0,8
tick,0x7ffc909efd34,366241899,0,0x0,8
tick,0x7ffc909efd34,366257356,0,0x0,8
tick,0x7ffc909efd34,366272629,0,0x0,8
tick,0x7ffc909efd34,366288243,0,0x0,8
tick,0x7ffc909efd34,366303142,0,0x0,8
tick,0x7ffc909efd34,366319009,0,0x0,8
tick,0x7ffc909efd34,366334947,0,0x0,8
tick,0x7ffc909efd34,366351097,0,0x0,8
tick,0x7ffc909efd34,366367026,0,0x0,8
tick,0x7ffc909efd34,366383332,0,0x0,8
tick,0x7ffc909efd34,366399057,0,0x0,8
tick,0x7ffc909efd34,366414542,0,0x0,8
tick,0x7ffc909efd34,366430525,0,0x0,8
tick,0x7ffc909efd34,366445440,0,0x0,8
tick,0x7ffc909efd34,366460672,0,0x0,8
tick,0x7ffc909efd34,366475758,0,0x0,8
tick,0x7ffc909efd34,366492010,0,0x0,8
tick,0x7ffc909efd34,366506947,0,0x0,8
tick,0x7ffc909efd34,366522386,0,0x0,8
tick,0x7ffc909efd34,366537801,0,0x0,8
tick,0x7ffc909efd34,366552445,0,0x0,8
tick,0x7ffc909efd34,366567906,0,0x0,8
tick,0x7ffc909efd34,366583059,0,0x0,8
tick,0x7ffc909efd34,366598009,0,0x0,8
tick,0x7ffc909efd34,366612917,0,0x0,8
tick,0x7ffc909efd34,366628802,0,0x0,8
tick,0x7ffc909efd34,366643757,0,0x0,8
tick,0x7ffc909efd34,366659392,0,0x0,8
tick,0x7ffc909efd34,366674665,0,0x0,8
tick,0x7ffc909efd34,366689759,0,0x0,8
tick,0x7ffc909efd34,366704470,0,0x0,8
tick,0x7ffc909efd34,366719240,0,0x0,8
tick,0x7ffc909efd34,366734547,0,0x0,8
tick,0x7ffc909efd34,366750492,0,0x0,8
tick,0x7ffc909efd34,366766350,0,0x0,8
tick,0x7ffc909efd34,366782163,0,0x0,8
tick,0x7ffc909efd34,366797172,0,0x0,8
tick,0x7ffc909efd34,366812525,0,0x0,8
tick,0x7ffc909efd34,366828609,0,0x0,8
tick,0x7ffc909efd34,366843753,0,0x0,8
tick,0x7ffc909efd34,366858841,0,0x0,8
tick,0x7ffc909efd34,366874538,0,0x0,8
tick,0x7ffc909efd34,366890220,0,0x0,8
tick,0x7ffc909efd34,366905636,0,0x0,8
tick,0x7ffc909efd34,366921567,0,0x0,8
tick,0x7ffc909efd34,366937227,0,0x0,8
tick,0x7ffc909efd34,366952095,0,0x0,8
tick,0x7ffc909efd34,366966989,0,0x0,8
tick,0x7ffc909efd34,366982075,0,0x0,8
tick,0x7ffc909efd34,366997393,0,0x0,8
tick,0x7ffc909efd34,367012925,0,0x0,8
tick,0x7ffc909efd34,367028533,0,0x0,8
tick,0x7ffc909efd34,367044703,0,0x0,8
tick,0x7ffc909efd34,367059787,0,0x0,8
tick,0x7ffc909efd34,367075299,0,0x0,8
tick,0x7ffc909efd34,367091335,0,0x0,8
tick,0x7ffc909efd34,367107430,0,0x0,8
tick,0x7ffc909efd34,367123321,0,0x0,8
tick,0x7ffc909efd34,367138777,0,0x0,8
tick,0x7ffc909efd34,367153333,0,0x0,8
tick,0x7ffc909efd34,367168564,0,0x0,8
tick,0x7ffc909efd34,367183339,0,0x0,8
tick,0x7ffc909efd34,367198301,0,0x0,8
tick,0x7ffc909efd34,367215058,0,0x0,8
tick,0x7ffc909efd34,367229685,0,0x0,8
tick,0x7ffc909efd34,367244791,0,0x0,8
tick,0x7ffc909efd34,367260818,0,0x0,8
tick,0x7ffc909efd34,367276298,0,0x0,8
tick,0x7ffc909efd34,367291118,0,0x0,8
tick,0x7ffc909efd34,367306132,0,0x0,8
tick,0x7ffc909efd34,367322101,0,0x0,8
tick,0x7ffc909efd34,367337922,0,0x0,8
tick,0x7ffc909efd34,367353473,0,0x0,8
tick,0x7ffc909efd34,367368551,0,0x0,8
tick,0x7ffc909efd34,367384167,0,0x0,8
tick,0x7ffc909efd34,367399767,0,0x0,8
tick,0x7ffc909efd34,367415068,0,0x0,8
tick,0x7ffc909efd34,367430711,0,0x0,8
tick,0x7ffc909efd34,367446721,0,0x0,8
tick,0x7ffc909efd34,367461711,0,0x0,8
tick,0x7ffc909efd34,367477419,0,0x0,8
tick,0x7ffc909efd34,367493058,0,0x0,8
tick,0x7ffc909efd34,367507768,0,0x0,8
tick,0x7ffc909efd34,367522514,0,0x0,8
tick,0x7ffc909efd34,367537768,0,0x0,8
tick,0x7ffc909efd34,367552154,0,0x0,8
tick,0x7ffc909efd34,367567844,0,0x0,8
tick,0x7ffc909efd34,367583198,0,0x0,8
tick,0x7ffc909efd34,367599375,0,0x0,8
tick,0x7ffc909efd34,367614524,0,0x0,8
tick,0x7ffc909efd34,367629775,0,0x0,8
tick,0x7ffc909efd34,367645089,0,0x0,8
tick,0x7ffc909efd34,367660491,0,0x0,8
tick,0x7ffc909efd34,367675888,0,0x0,8
tick,0x7ffc909efd34,367691085,0,0x0,8
tick,0x7ffc909efd34,367707331,0,0x0,8
tick,0x7ffc909efd34,367722540,0,0x0,8
tick,0x7ffc909efd34,367737871,0,0x0,8
tick,0x7ffc909efd34,367752500,0,0x0,8
tick,0x7ffc909efd34,367767325,0,0x0,8
tick,0x7ffc909efd34,367782572,0,0x0,8
tick,0x7ffc909efd34,367798713,0,0x0,8
tick,0x7ffc909efd34,367814056,0,0x0,8
tick,0x7ffc909efd34,367830266,0,0x0,8
tick,0x7ffc909efd34,367845762,0,0x0,8
tick,0x7ffc909efd34,367860922,0,0x0,8
tick,0x7ffc909efd34,367876781,0,0x0,8
tick,0x7ffc909efd34,367891635,0,0x0,8
tick,0x7ffc909efd34,367907047,0,0x0,8
tick,0x7ffc909efd34,367922818,0,0x0,8
tick,0x7ffc909efd34,367938890,0,0x0,8
tick,0x7ffc909efd34,367954899,0,0x0,8
tick,0x7ffc909efd34,367970120,0,0x0,8
tick,0x7ffc909efd34,367985410,0,0x0,8
tick,0x7ffc909efd34,368001037,0,0x0,8
tick,0x7ffc909efd34,368016985,0,0x0,8
tick,0x7ffc909efd34,368032242,0,0x0,8
tick,0x7ffc909efd34,368048215,0,0x0,8
tick,0x7ffc909efd34,368063749,0,0x0,8
tick,0x7ffc909efd34,368084268,0,0x0,8
tick,0x7ffc909efd34,368094561,0,0x0,8
tick,0x7ffc909efd34,368110109,0,0x0,8
tick,0x7ffc909efd34,368125869,0,0x0,8
tick,0x7ffc909efd34,368141251,0,0x0,8
tick,0x7ffc909efd34,368157023,0,0x0,8
tick,0x7ffc909efd34,368172240,0,0x0,8
tick,0x7ffc909efd34,368189198,0,0x0,8
tick,0x7ffc909efd34,368202537,0,0x0,8
tick,0x7ffc909efd34,368218060,0,0x0,8
tick,0x7ffc909efd34,368232934,0,0x0,8
tick,0x7ffc909efd34,368247846,0,0x0,8
tick,0x7ffc909efd34,368262466,0,0x0,8
tick,0x7ffc909efd34,368277810,0,0x0,8
tick,0x7ffc909efd34,368292967,0,0x0,8
tick,0x7ffc909efd34,368307703,0,0x0,8
tick,0x7ffc909efd34,368322622,0,0x0,8
tick,0x7ffc909efd34,368338745,0,0x0,8
tick,0x7ffc909efd34,368355104,0,0x0,8
tick,0x7ffc909efd34,368369241,0,0x0,8
tick,0x7ffc909efd34,368385079,0,0x0,8
tick,0x7ffc909efd34,368400190,0,0x0,8
tick,0x7ffc909efd34,368415980,0,0x0,8
tick,0x7ffc909efd34,368431906,0,0x0,8
tick,0x7ffc909efd34,368447128,0,0x0,8
tick,0x7ffc909efd34,368462141,0,0x0,8
tick,0x7ffc909efd34,368478035,0,0x0,8
tick,0x7ffc909efd34,368493107,0,0x0,8
tick,0x7ffc909efd34,368509102,0,0x0,8
tick,0x7ffc909efd34,368524265,0,0x0,8
tick,0x7ffc909efd34,368539467,0,0x0,8
tick,0x7ffc909efd34,368555429,0,0x0,8
tick,0x7ffc909efd34,368571644,0,0x0,8
tick,0x7ffc909efd34,368586477,0,0x0,8
tick,0x7ffc909efd34,368602023,0,0x0,8
tick,0x7ffc909efd34,368617267,0,0x0,8
tick,0x7ffc909efd34,368632401,0,0x0,8
tick,0x7ffc909efd34,368647716,0,0x0,8
tick,0x7ffc909efd34,368663080,0,0x0,8
tick,0x7ffc909efd34,368678460,0,0x0,8
tick,0x7ffc909efd34,368693827,0,0x0,8
tick,0x7ffc909efd34,368709352,0,0x0,8
tick,0x7ffc909efd34,368724978,0,0x0,8
tick,0x7ffc909efd34,368740313,0,0x0,8
tick,0x7ffc909efd34,368755478,0,0x0,8
tick,0x7ffc909efd34,368770701,0,0x0,8
tick,0x7ffc909efd34,368785698,0,0x0,8
tick,0x7ffc909efd34,368801315,0,0x0,8
tick,0x7ffc909efd34,368816905,0,0x0,8
tick,0x7ffc909efd34,368832164,0,0x0,8
tick,0x7ffc909efd34,368846872,0,0x0,8
tick,0x7ffc909efd34,368861690,0,0x0,8
tick,0x7ffc909efd34,368877185,0,0x0,8
tick,0x7ffc909efd34,368893071,0,0x0,8
tick,0x7ffc909efd34,368908455,0,0x0,8
tick,0x7ffc909efd34,368923356,0,0x0,8
tick,0x7ffc909efd34,368939368,0,0x0,8
tick,0x7ffc909efd34,368954903,0,0x0,8
tick,0x7ffc909efd34,368969283,0,0x0,8
tick,0x7ffc909efd34,368984456,0,0x0,8
tick,0x7ffc909efd34,369000472,0,0x0,8
tick,0x7ffc909efd34,369015311,0,0x0,8
tick,0x7ffc909efd34,369030556,0,0x0,8
tick,0x7ffc909efd34,369046302,0,0x0,8
tick,0x7ffc909efd34,369062271,0,0x0,8
tick,0x7ffc909efd34,369078080,0,0x0,8
tick,0x7ffc909efd34,369093379,0,0x0,8
tick,0x7ffc909efd34,369109342,0,0x0,8
tick,0x7ffc909efd34,369124580,0,0x0,8
tick,0x7ffc909efd34,369139792,0,0x0,8
tick,0x7ffc909efd34,369155454,0,0x0,8
tick,0x7ffc909efd34,369170738,0,0x0,8
tick,0x7ffc909efd34,369186544,0,0x0,8
tick,0x7ffc909efd34,369201962,0,0x0,8
tick,0x7ffc909efd34,369217495,0,0x0,8
tick,0x7ffc909efd34,369232806,0,0x0,8
tick,0x7ffc909efd34,369248422,0,0x0,8
tick,0x7ffc909efd34,369264082,0,0x0,8
tick,0x7ffc909efd34,369280197,0,0x0,8
tick,0x7ffc909efd34,369295352,0,0x0,8
tick,0x7ffc909efd34,369310889,0,0x0,8
tick,0x7ffc909efd34,369326260,0,0x0,8
tick,0x7ffc909efd34,369341464,0,0x0,8
tick,0x7ffc909efd34,369356770,0,0x0,8
tick,0x7ffc909efd34,369372831,0,0x0,8
tick,0x7ffc909efd34,369388172,0,0x0,8
tick,0x7ffc909efd34,369404098,0,0x0,8
tick,0x7ffc909efd34,369419519,0,0x0,8
tick,0x7ffc909efd34,369435640,0,0x0,8
tick,0x7ffc909efd34,369451606,0,0x0,8
tick,0x7ffc909efd34,369466792,0,0x0,8
tick,0x7ffc909efd34,369482622,0,0x0,8
tick,0x7ffc909efd34,369498909,0,0x0,8
tick,0x7ffc909efd34,369514086,0,0x0,8
tick,0x7ffc909efd34,369530360,0,0x0,8
tick,0x7ffc909efd34,369545252,0,0x0,8
tick,0x7ffc909efd34,369560726,0,0x0,8
tick,0x7ffc909efd34,369576057,0,0x0,8
tick,0x7ffc909efd34,369591227,0,0x0,8
tick,0x7ffc909efd34,369607247,0,0x0,8
tick,0x7ffc909efd34,369622685,0,0x0,8
tick,0x7ffc909efd34,369638067,0,0x0,8
tick,0x7ffc909efd34,369654025,0,0x0,8
tick,0x7ffc909efd34,369669559,0,0x0,8
tick,0x7ffc909efd34,369684762,0,0x0,8
tick,0x7ffc909efd34,369700021,0,0x0,8
tick,0x7ffc909efd34,369716059,0,0x0,8
tick,0x7ffc909efd34,369732136,0,0x0,8
tick,0x7ffc909efd34,369748245,0,0x0,8
tick,0x7ffc909efd34,369763569,0,0x0,8
tick,0x7ffc909efd34,369779203,0,0x0,8
tick,0x7ffc909efd34,369794540,0,0x0,8
tick,0x7ffc909efd34,369809838,0,0x0,8
tick,0x7ffc909efd34,369825177,0,0x0,8
tick,0x7ffc909efd34,369840688,0,0x0,8
tick,0x7ffc909efd34,369856037,0,0x0,8
tick,0x7ffc909efd34,369871383,0,0x0,8
tick,0x7ffc909efd34,369887066,0,0x0,8
tick,0x7ffc909efd34,369902143,0,0x0,8
tick,0x7ffc909efd34,369918251,0,0x0,8
tick,0x7ffc909efd34,369933533,0,0x0,8
tick,0x7ffc909efd34,369949709,0,0x0,8
tick,0x7ffc909efd34,369965282,0,0x0,8
tick,0x7ffc909efd34,369980522,0,0x0,8
tick,0x7ffc909efd34,369996121,0,0x0,8
tick,0x7ffc909efd34,370011203,0,0x0,8
tick,0x7ffc909efd34,370026978,0,0x0,8
tick,0x7ffc909efd34,370042598,0,0x0,8
tick,0x7ffc909efd34,370058263,0,0x0,8
tick,0x7ffc909efd34,370073311,0,0x0,8
tick,0x7ffc909efd34,370088336,0,0x0,8
tick,0x7ffc909efd34,370104080,0,0x0,8
tick,0x7ffc909efd34,370118988,0,0x0,8
tick,0x7ffc909efd34,370134218,0,0x0,8
tick,0x7ffc909efd34,370150306,0,0x0,8
tick,0x7ffc909efd34,370165370,0,0x0,8
tick,0x7ffc909efd34,370181319,0,0x0,8
tick,0x7ffc909efd34,370196845,0,0x0,8
tick,0x7ffc909efd34,370212806,0,0x0,8
tick,0x7ffc909efd34,370228890,0,0x0,8
tick,0x7ffc909efd34,370244254,0,0x0,8
tick,0x7ffc909efd34,370259675,0,0x0,8
tick,0x7ffc909efd34,370275042,0,0x0,8
tick,0x7ffc909efd34,370290141,0,0x0,8
tick,0x7ffc909efd34,370305765,0,0x0,8
tick,0x7ffc909efd34,370320677,0,0x0,8
tick,0x7ffc909efd34,370336351,0,0x0,8
tick,0x7ffc909efd34,370351570,0,0x0,8
tick,0x7ffc909efd34,370366845,0,0x0,8
tick,0x7ffc909efd34,370381950,0,0x0,8
tick,0x7ffc909efd34,370398013,0,0x0,8
tick,0x7ffc909efd34,370413455,0,0x0,8
tick,0x7ffc909efd34,370429491,0,0x0,8
tick,0x7ffc909efd34,370445053,0,0x0,8
tick,0x7ffc909efd34,370460537,0,0x0,8
tick,0x7ffc909efd34,370475940,0,0x0,8
tick,0x7ffc909efd34,370492142,0,0x0,8
tick,0x7ffc909efd34,370507289,0,0x0,8
tick,0x7ffc909efd34,370522416,0,0x0,8
tick,0x7ffc909efd34,370537701,0,0x0,8
tick,0x7ffc909efd34,370553583,0,0x0,8
tick,0x7ffc909efd34,370568573,0,0x0,8
tick,0x7ffc909efd34,370583988,0,0x0,8
tick,0x7ffc909efd34,370599438,0,0x0,8
tick,0x7ffc909efd34,370614951,0,0x0,8
tick,0x7ffc909efd34,370630199,0,0x0,8
tick,0x7ffc909efd34,370645787,0,0x0,8
tick,0x7ffc909efd34,370660880,0,0x0,8
tick,0x7ffc909efd34,370676580,0,0x0,8
tick,0x7ffc909efd34,370692566,0,0x0,8
tick,0x7ffc909efd34,370708799,0,0x0,8
tick,0x7ffc909efd34,370724773,0,0x0,8
tick,0x7ffc909efd34,370740220,0,0x0,8
tick,0x7ffc909efd34,370756090,0,0x0,8
tick,0x7ffc909efd34,370772090,0,0x0,8
tick,0x7ffc909efd34,370787439,0,0x0,8
tick,0x7ffc909efd34,370802594,0,0x0,8
tick,0x7ffc909efd34,370818550,0,0x0,8
tick,0x7ffc909efd34,370834508,0,0x0,8
tick,0x7ffc909efd34,370850095,0,0x0,8
tick,0x7ffc909efd34,370865716,0,0x0,8
tick,0x7ffc909efd34,370881108,0,0x0,8
tick,0x7ffc909efd34,370897115,0,0x0,8
tick,0x7ffc909efd34,370912825,0,0x0,8
tick,0x7ffc909efd34,370928104,0,0x0,8
tick,0x7ffc909efd34,370943975,0,0x0,8
tick,0x7ffc909efd34,370959489,0,0x0,8
tick,0x7ffc909efd34,370974894,0,0x0,8
tick,0x7ffc909efd34,370990356,0,0x0,8
tick,0x7ffc909efd34,371005810,0,0x0,8
tick,0x7ffc909efd34,371021290,0,0x0,8
tick,0x7ffc909efd34,371036933,0,0x0,8
tick,0x7ffc909efd34,371051837,0,0x0,8
tick,0x7ffc909efd34,371067218,0,0x0,8
tick,0x7ffc909efd34,371082405,0,0x0,8
tick,0x7ffc909efd34,371098292,0,0x0,8
tick,0x7ffc909efd34,371113738,0,0x0,8
tick,0x7ffc909efd34,371128798,0,0x0,8
tick,0x7ffc909efd34,371144200,0,0x0,8
tick,0x7ffc909efd34,371159450,0,0x0,8
tick,0x7ffc909efd34,371175251,0,0x0,8
tick,0x7ffc909efd34,371191415,0,0x0,8
tick,0x7ffc909efd34,371207054,0,0x0,8
tick,0x7ffc909efd34,371222529,0,0x0,8
tick,0x7ffc909efd34,371238697,0,0x0,8
tick,0x7ffc909efd34,371254193,0,0x0,8
tick,0x7ffc909efd34,371269537,0,0x0,8
tick,0x7ffc909efd34,371285218,0,0x0,8
tick,0x7ffc909efd34,371301355,0,0x0,8
tick,0x7ffc909efd34,371316731,0,0x0,8
tick,0x7ffc909efd34,371331896,0,0x0,8
tick,0x7ffc909efd34,371347152,0,0x0,8
tick,0x7ffc909efd34,371362802,0,0x0,8
tick,0x7ffc909efd34,371378080,0,0x0,8
tick,0x7ffc909efd34,371394225,0,0x0,8
tick,0x7ffc909efd34,371410108,0,0x0,8
tick,0x7ffc909efd34,371425486,0,0x0,8
tick,0x7ffc909efd34,371441217,0,0x0,8
tick,0x7ffc909efd34,371457107,0,0x0,8
tick,0x7ffc909efd34,371472839,0,0x0,8
tick,0x7ffc909efd34,371487984,0,0x0,8
tick,0x7ffc909efd34,371503351,0,0x0,8
tick,0x7ffc909efd34,371518713,0,0x0,8
tick,0x7ffc909efd34,371533838,0,0x0,8
tick,0x7ffc909efd34,371549023,0,0x0,8
tick,0x7ffc909efd34,371564472,0,0x0,8
tick,0x7ffc909efd34,371580488,0,0x0,8
tick,0x7ffc909efd34,371595877,0,0x0,8
tick,0x7ffc909efd34,371611024,0,0x0,8
tick,0x7ffc909efd34,371627127,0,0x0,8
tick,0x7ffc909efd34,371642474,0,0x0,8
tick,0x7ffc909efd34,371657890,0,0x0,8
tick,0x7ffc909efd34,371673957,0,0x0,8
tick,0x7ffc909efd34,371689667,0,0x0,8
tick,0x7ffc909efd34,371705124,0,0x0,8
tick,0x7ffc909efd34,371720329,0,0x0,8
tick,0x7ffc909efd34,371735656,0,0x0,8
tick,0x7ffc909efd34,371750777,0,0x0,8
tick,0x7ffc909efd34,371766287,0,0x0,8
tick,0x7ffc909efd34,371782129,0,0x0,8
tick,0x7ffc909efd34,371798084,0,0x0,8
tick,0x7ffc909efd34,371813832,0,0x0,8
tick,0x7ffc909efd34,371829218,0,0x0,8
tick,0x7ffc909efd34,371845231,0,0x0,8
tick,0x7ffc909efd34,371861412,0,0x0,8
tick,0x7ffc909efd34,371876921,0,0x0,8
tick,0x7ffc909efd34,371892533,0,0x0,8
tick,0x7ffc909efd34,371908783,0,0x0,8
tick,0x7ffc909efd34,371923970,0,0x0,8
tick,0x7ffc909efd34,371939668,0,0x0,8
tick,0x7ffc909efd34,371955173,0,0x0,8
tick,0x7ffc909efd34,371971324,0,0x0,8
tick,0x7ffc909efd34,371986984,0,0x0,8
tick,0x7ffc909efd34,372003056,0,0x0,8
tick,0x7ffc909efd34,372018160,0,0x0,8
tick,0x7ffc909efd34,372033245,0,0x0,8
tick,0x7ffc909efd34,372048764,0,0x0,8
tick,0x7ffc909efd34,372064263,0,0x0,8
tick,0x7ffc909efd34,372080300,0,0x0,8
tick,0x7ffc909efd34,372095629,0,0x0,8
tick,0x7ffc909efd34,372110832,0,0x0,8
tick,0x7ffc909efd34,372126799,0,0x0,8
tick,0x7ffc909efd34,372142440,0,0x0,8
tick,0x7ffc909efd34,372158103,0,0x0,8
tick,0x7ffc909efd34,372173538,0,0x0,8
tick,0x7ffc909efd34,372189610,0,0x0,8
tick,0x7ffc909efd34,372204918,0,0x0,8
tick,0x7ffc909efd34,372220920,0,0x0,8
tick,0x7ffc909efd34,372236128,0,0x0,8
tick,0x7ffc909efd34,372251267,0,0x0,8
tick,0x7ffc909efd34,372267290,0,0x0,8
tick,0x7ffc909efd34,372282939,0,0x0,8
tick,0x7ffc909efd34,372298088,0,0x0,8
tick,0x7ffc909efd34,372313763,0,0x0,8
tick,0x7ffc909efd34,372329671,0,0x0,8
tick,0x7ffc909efd34,372345046,0,0x0,8
tick,0x7ffc909efd34,372360892,0,0x0,8
tick,0x7ffc909efd34,372376193,0,0x0,8
tick,0x7ffc909efd34,372391918,0,0x0,8
tick,0x7ffc909efd34,372407258,0,0x0,8
tick,0x7ffc909efd34,372422504,0,0x0,8
tick,0x7ffc909efd34,372438001,0,0x0,8
tick,0x7ffc909efd34,372454095,0,0x0,8
tick,0x7ffc909efd34,372469889,0,0x0,8
tick,0x7ffc909efd34,372485179,0,0x0,8
tick,0x7ffc909efd34,372500082,0,0x0,8
tick,0x7ffc909efd34,372515418,0,0x0,8
tick,0x7ffc909efd34,372530554,0,0x0,8
tick,0x7ffc909efd34,372546106,0,0x0,8
tick,0x7ffc909efd34,372561311,0,0x0,8
tick,0x7ffc909efd34,372576481,0,0x0,8
tick,0x7ffc909efd34,372591788,0,0x0,8
tick,0x7ffc909efd34,372607341,0,0x0,8
tick,0x7ffc909efd34,372623361,0,0x0,8
tick,0x7ffc909efd34,372639594,0,0x0,8
tick,0x7ffc909efd34,372653895,0,0x0,8
tick,0x7ffc909efd34,372669090,0,0x0,8
tick,0x7ffc909efd34,372685140,0,0x0,8
tick,0x7ffc909efd34,372700548,0,0x0,8
tick,0x7ffc909efd34,372716420,0,0x0,8
tick,0x7ffc909efd34,372731794,0,0x0,8
tick,0x7ffc909efd34,372747090,0,0x0,8
tick,0x7ffc909efd34,372762683,0,0x0,8
tick,0x7ffc909efd34,372778759,0,0x0,8
tick,0x7ffc909efd34,372794412,0,0x0,8
tick,0x7ffc909efd34,372810520,0,0x0,8
tick,0x7ffc909efd34,372825683,0,0x0,8
tick,0x7ffc909efd34,372840835,0,0x0,8
tick,0x7ffc909efd34,372856583,0,0x0,8
tick,0x7ffc909efd34,372872591,0,0x0,8
tick,0x7ffc909efd34,372888007,0,0x0,8
tick,0x7ffc909efd34,372903992,0,0x0,8
tick,0x7ffc909efd34,372919779,0,0x0,8
tick,0x7ffc909efd34,372935118,0,0x0,8
tick,0x7ffc909efd34,372950484,0,0x0,8
tick,0x7ffc909efd34,372965601,0,0x0,8
tick,0x7ffc909efd34,372981375,0,0x0,8
tick,0x7ffc909efd34,372996946,0,0x0,8
tick,0x7ffc909efd34,373012989,0,0x0,8
tick,0x7ffc909efd34,373028316,0,0x0,8
tick,0x7ffc909efd34,373043772,0,0x0,8
tick,0x7ffc909efd34,373059737,0,0x0,8
tick,0x7ffc909efd34,373075542,0,0x0,8
tick,0x7ffc909efd34,373090264,0,0x0,8
tick,0x7ffc909efd34,373105484,0,0x0,8
tick,0x7ffc909efd34,373121004,0,0x0,8
tick,0x7ffc909efd34,373136611,0,0x0,8
tick,0x7ffc909efd34,373152265,0,0x0,8
tick,0x7ffc909efd34,373167435,0,0x0,8
tick,0x7ffc909efd34,373183274,0,0x0,8
tick,0x7ffc909efd34,373198408,0,0x0,8
tick,0x7ffc909efd34,373214414,0,0x0,8
tick,0x7ffc909efd34,373229908,0,0x0,8
tick,0x7ffc909efd34,373245271,0,0x0,8
tick,0x7ffc909efd34,373260560,0,0x0,8
tick,0x7ffc909efd34,373276604,0,0x0,8
tick,0x7ffc909efd34,373292088,0,0x0,8
tick,0x7ffc909efd34,373308088,0,0x0,8
tick,0x7ffc909efd34,373323895,0,0x0,8
tick,0x7ffc909efd34,373339328,0,0x0,8
tick,0x7ffc909efd34,373355367,0,0x0,8
tick,0x7ffc909efd34,373371002,0,0x0,8
tick,0x7ffc909efd34,373386465,0,0x0,8
tick,0x7ffc909efd34,373401709,0,0x0,8
tick,0x7ffc909efd34,373417127,0,0x0,8
tick,0x7ffc909efd34,373432328,0,0x0,8
tick,0x7ffc909efd34,373447612,0,0x0,8
tick,0x7ffc909efd34,373463444,0,0x0,8
tick,0x7ffc909efd34,373478968,0,0x0,8
tick,0x7ffc909efd34,373494476,0,0x0,8
tick,0x7ffc909efd34,373509634,0,0x0,8
tick,0x7ffc909efd34,373525489,0,0x0,8
tick,0x7ffc909efd34,373541014,0,0x0,8
tick,0x7ffc909efd34,373556137,0,0x0,8
tick,0x7ffc909efd34,373571316,0,0x0,8
tick,0x7ffc909efd34,373587366,0,0x0,8
tick,0x7ffc909efd34,373602872,0,0x0,8
tick,0x7ffc909efd34,373617950,0,0x0,8
tick,0x7ffc909efd34,373633230,0,0x0,8
tick,0x7ffc909efd34,373648315,0,0x0,8
tick,0x7ffc909efd34,373663820,0,0x0,8
tick,0x7ffc909efd34,373679948,0,0x0,8
tick,0x7ffc909efd34,373695576,0,0x0,8
tick,0x7ffc909efd34,373711271,0,0x0,8
tick,0x7ffc909efd34,373727157,0,0x0,8
tick,0x7ffc909efd34,373742533,0,0x0,8
tick,0x7ffc909efd34,373758651,0,0x0,8
tick,0x7ffc909efd34,373774062,0,0x0,8
tick,0x7ffc909efd34,373789349,0,0x0,8
tick,0x7ffc909efd34,373804757,0,0x0,8
tick,0x7ffc909efd34,373820889,0,0x0,8
tick,0x7ffc909efd34,373836282,0,0x0,8
tick,0x7ffc909efd34,373851308,0,0x0,8
tick,0x7ffc909efd34,373866958,0,0x0,8
tick,0x7ffc909efd34,373882253,0,0x0,8
tick,0x7ffc909efd34,373898046,0,0x0,8
tick,0x7ffc909efd34,373913289,0,0x0,8
tick,0x7ffc909efd34,373929273,0,0x0,8
tick,0x7ffc909efd34,373945362,0,0x0,8
tick,0x7ffc909efd34,373960039,0,0x0,8
tick,0x7ffc909efd34,373975304,0,0x0,8
tick,0x7ffc909efd34,373990486,0,0x0,8
tick,0x7ffc909efd34,374005623,0,0x0,8
tick,0x7ffc909efd34,374021334,0,0x0,8
tick,0x7ffc909efd34,374036596,0,0x0,8
tick,0x7ffc909efd34,374051990,0,0x0,8
tick,0x7ffc909efd34,374067572,0,0x0,8
tick,0x7ffc909efd34,374083658,0,0x0,8
tick,0x7ffc909efd34,374099890,0,0x0,8
tick,0x7ffc909efd34,374115298,0,0x0,8
tick,0x7ffc909efd34,374131057,0,0x0,8
tick,0x7ffc909efd34,374146627,0,0x0,8
tick,0x7ffc909efd34,374161796,0,0x0,8
tick,0x7ffc909efd34,374177389,0,0x0,8
tick,0x7ffc909efd34,374192811,0,0x0,8
tick,0x7ffc909efd34,374208250,0,0x0,8
tick,0x7ffc909efd34,374223765,0,0x0,8
tick,0x7ffc909efd34,374239311,0,0x0,8
tick,0x7ffc909efd34,374254829,0,0x0,8
tick,0x7ffc909efd34,374270889,0,0x0,8
tick,0x7ffc909efd34,374286811,0,0x0,8
tick,0x7ffc909efd34,374302022,0,0x0,8
tick,0x7ffc909efd34,374317849,0,0x0,8
tick,0x7ffc909efd34,374333445,0,0x0,8
tick,0x7ffc909efd34,374349062,0,0x0,8
tick,0x7ffc909efd34,374365062,0,0x0,8
tick,0x7ffc909efd34,374380315,0,0x0,8
tick,0x7ffc909efd34,374396378,0,0x0,8
tick,0x7ffc909efd34,374412173,0,0x0,8
tick,0x7ffc909efd34,374428275,0,0x0,8
tick,0x7ffc909efd34,374443838,0,0x0,8
tick,0x7ffc909efd34,374459324,0,0x0,8
tick,0x7ffc909efd34,374474745,0,0x0,8
tick,0x7ffc909efd34,374490792,0,0x0,8
tick,0x7ffc909efd34,374506117,0,0x0,8
tick,0x7ffc909efd34,374521252,0,0x0,8
tick,0x7ffc909efd34,374536496,0,0x0,8
tick,0x7ffc909efd34,374552029,0,0x0,8
tick,0x7ffc909efd34,374567235,0,0x0,8
tick,0x7ffc909efd34,374582664,0,0x0,8
tick,0x7ffc909efd34,374598419,0,0x0,8
tick,0x7ffc909efd34,374613878,0,0x0,8
tick,0x7ffc909efd34,374629418,0,0x0,8
tick,0x7ffc909efd34,374645239,0,0x0,8
tick,0x7ffc909efd34,374660588,0,0x0,8
tick,0x7ffc909efd34,374675954,0,0x0,8
tick,0x7ffc909efd34,374692113,0,0x0,8
tick,0x7ffc909efd34,374708101,0,0x0,8
tick,0x7ffc909efd34,374723661,0,0x0,8
tick,0x7ffc909efd34,374739135,0,0x0,8
tick,0x7ffc909efd34,374754345,0,0x0,8
tick,0x7ffc909efd34,374770025,0,0x0,8
tick,0x7ffc909efd34,374785600,0,0x0,8
tick,0x7ffc909efd34,374800840,0,0x0,8
tick,0x7ffc909efd34,374816174,0,0x0,8
tick,0x7ffc909efd34,374831284,0,0x0,8
tick,0x7ffc909efd34,374846471,0,0x0,8
tick,0x7ffc909efd34,374861934,0,0x0,8
tick,0x7ffc909efd34,374877191,0,0x0,8
tick,0x7ffc909efd34,374892779,0,0x0,8
tick,0x7ffc909efd34,374908561,0,0x0,8
tick,0x7ffc909efd34,374923704,0,0x0,8
tick,0x7ffc909efd34,374939061,0,0x0,8
tick,0x7ffc909efd34,374954325,0,0x0,8
tick,0x7ffc909efd34,374969644,0,0x0,8
tick,0x7ffc909efd34,374985193,0,0x0,8
tick,0x7ffc909efd34,375000403,0,0x0,8
tick,0x7ffc909efd34,375016241,0,0x0,8
tick,0x7ffc909efd34,375031111,0,0x0,8
tick,0x7ffc909efd34,375045953,0,0x0,8
tick,0x7ffc909efd34,375061898,0,0x0,8
tick,0x7ffc909efd34,375077107,0,0x0,8
tick,0x7ffc909efd34,375092365,0,0x0,8
tick,0x7ffc909efd34,375108382,0,0x0,8
tick,0x7ffc909efd34,375123731,0,0x0,8
tick,0x7ffc909efd34,375138936,0,0x0,8
tick,0x7ffc909efd34,375154231,0,0x0,8
tick,0x7ffc909efd34,375170217,0,0x0,8
tick,0x7ffc909efd34,375185981,0,0x0,8
tick,0x7ffc909efd34,375201112,0,0x0,8
tick,0x7ffc909efd34,375216312,0,0x0,8
tick,0x7ffc909efd34,375231609,0,0x0,8
tick,0x7ffc909efd34,375247586,0,0x0,8
tick,0x7ffc909efd34,375263111,0,0x0,8
tick,0x7ffc909efd34,375278449,0,0x0,8
tick,0x7ffc909efd34,375294476,0,0x0,8
tick,0x7ffc909efd34,375310263,0,0x0,8
tick,0x7ffc909efd34,375325543,0,0x0,8
tick,0x7ffc909efd34,375340833,0,0x0,8
tick,0x7ffc909efd34,375355979,0,0x0,8
tick,0x7ffc909efd34,375371513,0,0x0,8
tick,0x7ffc909efd34,375387593,0,0x0,8
tick,0x7ffc909efd34,375402722,0,0x0,8
tick,0x7ffc909efd34,375418071,0,0x0,8
tick,0x7ffc909efd34,375433360,0,0x0,8
tick,0x7ffc909efd34,375449431,0,0x0,8
tick,0x7ffc909efd34,375465269,0,0x0,8
tick,0x7ffc909efd34,375480631,0,0x0,8
tick,0x7ffc909efd34,375496621,0,0x0,8
tick,0x7ffc909efd34,375512538,0,0x0,8
tick,0x7ffc909efd34,375528606,0,0x0,8
tick,0x7ffc909efd34,375544465,0,0x0,8
tick,0x7ffc909efd34,375559452,0,0x0,8
tick,0x7ffc909efd34,375575458,0,0x0,8
tick,0x7ffc909efd34,375591523,0,0x0,8
tick,0x7ffc909efd34,375606506,0,0x0,8
tick,0x7ffc909efd34,375622465,0,0x0,8
tick,0x7ffc909efd34,375638428,0,0x0,8
tick,0x7ffc909efd34,375654431,0,0x0,8
tick,0x7ffc909efd34,375670463,0,0x0,8
tick,0x7ffc909efd34,375686607,0,0x0,8
tick,0x7ffc909efd34,375702648,0,0x0,8
tick,0x7ffc909efd34,375718501,0,0x0,8
tick,0x7ffc909efd34,375734500,0,0x0,8
tick,0x7ffc909efd34,375750469,0,0x0,8
tick,0x7ffc909efd34,375766457,0,0x0,8
tick,0x7ffc909efd34,375782425,0,0x0,8
tick,0x7ffc909efd34,375797453,0,0x0,8
tick,0x7ffc909efd34,375813451,0,0x0,8
tick,0x7ffc909efd34,375829551,0,0x0,8
tick,0x7ffc909efd34,375845549,0,0x0,8
tick,0x7ffc909efd34,375861549,0,0x0,8
tick,0x7ffc909efd34,375876659,0,0x0,8
tick,0x7ffc909efd34,375892723,0,0x0,8
tick,0x7ffc909efd34,375908308,0,0x0,8
tick,0x7ffc909efd34,375923209,0,0x0,8
tick,0x7ffc909efd34,375938601,0,0x0,8
tick,0x7ffc909efd34,375954504,0,0x0,8
tick,0x7ffc909efd34,375970368,0,0x0,8
tick,0x7ffc909efd34,375986103,0,0x0,8
tick,0x7ffc909efd34,376001045,0,0x0,8
tick,0x7ffc909efd34,376016778,0,0x0,8
tick,0x7ffc909efd34,376032059,0,0x0,8
tick,0x7ffc909efd34,376048392,0,0x0,8
tick,0x7ffc909efd34,376064355,0,0x0,8
tick,0x7ffc909efd34,376079392,0,0x0,8
tick,0x7ffc909efd34,376095670,0,0x0,8
tick,0x7ffc909efd34,376110687,0,0x0,8
tick,0x7ffc909efd34,376125546,0,0x0,8
tick,0x7ffc909efd34,376140830,0,0x0,8
tick,0x7ffc909efd34,376156204,0,0x0,8
tick,0x7ffc909efd34,376171417,0,0x0,8
tick,0x7ffc909efd34,376187329,0,0x0,8
tick,0x7ffc909efd34,376202680,0,0x0,8
tick,0x7ffc909efd34,376217132,0,0x0,8
tick,0x7ffc909efd34,376232845,0,0x0,8
tick,0x7ffc909efd34,376248862,0,0x0,8
tick,0x7ffc909efd34,376264588,0,0x0,8
tick,0x7ffc909efd34,376280732,0,0x0,8
tick,0x7ffc909efd34,376296182,0,0x0,8
tick,0x7ffc909efd34,376311552,0,0x0,8
tick,0x7ffc909efd34,376327141,0,0x0,8
tick,0x7ffc909efd34,376342278,0,0x0,8
tick,0x7ffc909efd34,376358043,0,0x0,8
tick,0x7ffc909efd34,376374108,0,0x0,8
tick,0x7ffc909efd34,376389633,0,0x0,8
tick,0x7ffc909efd34,376405180,0,0x0,8
tick,0x7ffc909efd34,376421381,0,0x0,8
tick,0x7ffc909efd34,376436913,0,0x0,8
tick,0x7ffc909efd34,376452350,0,0x0,8
tick,0x7ffc909efd34,376467861,0,0x0,8
tick,0x7ffc909efd34,376483151,0,0x0,8
tick,0x7ffc909efd34,376498563,0,0x0,8
tick,0x7ffc909efd34,376514351,0,0x0,8
tick,0x7ffc909efd34,376530029,0,0x0,8
tick,0x7ffc909efd34,376545715,0,0x0,8
tick,0x7ffc909efd34,376561242,0,0x0,8
tick,0x7ffc909efd34,376576600,0,0x0,8
tick,0x7ffc909efd34,376591759,0,0x0,8
tick,0x7ffc909efd34,376607808,0,0x0,8
tick,0x7ffc909efd34,376622672,0,0x0,8
tick,0x7ffc909efd34,376638591,0,0x0,8
tick,0x7ffc909efd34,376654061,0,0x0,8
tick,0x7ffc909efd34,376669094,0,0x0,8
tick,0x7ffc909efd34,376684305,0,0x0,8
tick,0x7ffc909efd34,376699672,0,0x0,8
tick,0x7ffc909efd34,376714791,0,0x0,8
tick,0x7ffc909efd34,376730188,0,0x0,8
tick,0x7ffc909efd34,376745759,0,0x0,8
tick,0x7ffc909efd34,376761141,0,0x0,8
tick,0x7ffc909efd34,376776978,0,0x0,8
tick,0x7ffc909efd34,376792511,0,0x0,8
tick,0x7ffc909efd34,376816104,0,0x0,8
tick,0x7ffc909efd34,376824274,0,0x0,8
tick,0x7ffc909efd34,376839341,0,0x0,8
tick,0x7ffc909efd34,376855328,0,0x0,8
tick,0x7ffc909efd34,376871319,0,0x0,8
tick,0x7ffc909efd34,376887053,0,0x0,8
tick,0x7ffc909efd34,376902584,0,0x0,8
tick,0x7ffc909efd34,376918882,0,0x0,8
tick,0x7ffc909efd34,376934157,0,0x0,8
tick,0x7ffc909efd34,376949713,0,0x0,8
tick,0x7ffc909efd34,376965155,0,0x0,8
tick,0x7ffc909efd34,376980491,0,0x0,8
tick,0x7ffc909efd34,376996176,0,0x0,8
tick,0x7ffc909efd34,377011356,0,0x0,8
tick,0x7ffc909efd34,377027210,0,0x0,8
tick,0x7ffc909efd34,377042973,0,0x0,8
tick,0x7ffc909efd34,377058510,0,0x0,8
tick,0x7ffc909efd34,377074000,0,0x0,8
tick,0x7ffc909efd34,377089480,0,0x0,8
tick,0x7ffc909efd34,377105433,0,0x0,8
tick,0x7ffc909efd34,377121631,0,0x0,8
tick,0x7ffc909efd34,377137237,0,0x0,8
tick,0x7ffc909efd34,377153314,0,0x0,8
tick,0x7ffc909efd34,377169235,0,0x0,8
tick,0x7ffc909efd34,377184876,0,0x0,8
tick,0x7ffc909efd34,377200111,0,0x0,8
tick,0x7ffc909efd34,377216194,0,0x0,8
tick,0x7ffc909efd34,377232467,0,0x0,8
tick,0x7ffc909efd34,377248231,0,0x0,8
tick,0x7ffc909efd34,377263670,0,0x0,8
tick,0x7ffc909efd34,377279173,0,0x0,8
tick,0x7ffc909efd34,377295228,0,0x0,8
tick,0x7ffc909efd34,377310362,0,0x0,8
tick,0x7ffc909efd34,377326181,0,0x0,8
tick,0x7ffc909efd34,377341889,0,0x0,8
tick,0x7ffc909efd34,377357192,0,0x0,8
tick,0x7ffc909efd34,377372529,0,0x0,8
tick,0x7ffc909efd34,377388071,0,0x0,8
tick,0x7ffc909efd34,377404077,0,0x0,8
tick,0x7ffc909efd34,377420088,0,0x0,8
tick,0x7ffc909efd34,377435771,0,0x0,8
tick,0x7ffc909efd34,377451135,0,0x0,8
tick,0x7ffc909efd34,377466401,0,0x0,8
tick,0x7ffc909efd34,377482469,0,0x0,8
tick,0x7ffc909efd34,377498240,0,0x0,8
tick,0x7ffc909efd34,377513680,0,0x0,8
tick,0x7ffc909efd34,377529545,0,0x0,8
tick,0x7ffc909efd34,377545246,0,0x0,8
tick,0x7ffc909efd34,377560581,0,0x0,8
tick,0x7ffc909efd34,377576419,0,0x0,8
tick,0x7ffc909efd34,377591808,0,0x0,8
tick,0x7ffc909efd34,377607784,0,0x0,8
tick,0x7ffc909efd34,377623707,0,0x0,8
tick,0x7ffc909efd34,377639408,0,0x0,8
tick,0x7ffc909efd34,377654860,0,0x0,8
tick,0x7ffc909efd34,377671113,0,0x0,8
tick,0x7ffc909efd34,377686519,0,0x0,8
tick,0x7ffc909efd34,377702310,0,0x0,8
tick,0x7ffc909efd34,377717686,0,0x0,8
tick,0x7ffc909efd34,377733234,0,0x0,8
tick,0x7ffc909efd34,377748623,0,0x0,8
tick,0x7ffc909efd34,377764556,0,0x0,8
tick,0x7ffc909efd34,377780869,0,0x0,8
tick,0x7ffc909efd34,377796143,0,0x0,8
tick,0x7ffc909efd34,377812461,0,0x0,8
tick,0x7ffc909efd34,377828127,0,0x0,8
tick,0x7ffc909efd34,377843756,0,0x0,8
tick,0x7ffc909efd34,377859447,0,0x0,8
tick,0x7ffc909efd34,377874780,0,0x0,8
tick,0x7ffc909efd34,377890503,0,0x0,8
tick,0x7ffc909efd34,377905822,0,0x0,8
tick,0x7ffc909efd34,377921830,0,0x0,8
tick,0x7ffc909efd34,377937343,0,0x0,8
tick,0x7ffc909efd34,377953221,0,0x0,8
tick,0x7ffc909efd34,377968918,0,0x0,8
tick,0x7ffc909efd34,377984014,0,0x0,8
tick,0x7ffc909efd34,377999821,0,0x0,8
tick,0x7ffc909efd34,378015566,0,0x0,8
tick,0x7ffc909efd34,378030971,0,0x0,8
tick,0x7ffc909efd34,378046560,0,0x0,8
tick,0x7ffc909efd34,378062091,0,0x0,8
tick,0x7ffc909efd34,378077568,0,0x0,8
tick,0x7ffc909efd34,378093566,0,0x0,8
tick,0x7ffc909efd34,378108992,0,0x0,8
tick,0x7ffc909efd34,378124661,0,0x0,8
tick,0x7ffc909efd34,378140453,0,0x0,8
tick,0x7ffc909efd34,378156245,0,0x0,8
tick,0x7ffc909efd34,378171454,0,0x0,8
tick,0x7ffc909efd34,378187285,0,0x0,8
tick,0x7ffc909efd34,378202514,0,0x0,8
tick,0x7ffc909efd34,378217959,0,0x0,8
tick,0x7ffc909efd34,378233469,0,0x0,8
tick,0x7ffc909efd34,378249707,0,0x0,8
tick,0x7ffc909efd34,378265298,0,0x0,8
tick,0x7ffc909efd34,378280826,0,0x0,8
tick,0x7ffc909efd34,378296105,0,0x0,8
tick,0x7ffc909efd34,378311466,0,0x0,8
tick,0x7ffc909efd34,378327073,0,0x0,8
tick,0x7ffc909efd34,378343012,0,0x0,8
tick,0x7ffc909efd34,378358594,0,0x0,8
tick,0x7ffc909efd34,378374634,0,0x0,8
tick,0x7ffc909efd34,378389953,0,0x0,8
tick,0x7ffc909efd34,378405614,0,0x0,8
tick,0x7ffc909efd34,378421131,0,0x0,8
tick,0x7ffc909efd34,378436327,0,0x0,8
tick,0x7ffc909efd34,378452058,0,0x0,8
tick,0x7ffc909efd34,378467517,0,0x0,8
tick,0x7ffc909efd34,378482955,0,0x0,8
tick,0x7ffc909efd34,378498275,0,0x0,8
tick,0x7ffc909efd34,378514084,0,0x0,8
tick,0x7ffc909efd34,378529637,0,0x0,8
tick,0x7ffc909efd34,378545709,0,0x0,8
tick,0x7ffc909efd34,378561519,0,0x0,8
tick,0x7ffc909efd34,378576993,0,0x0,8
tick,0x7ffc909efd34,378592075,0,0x0,8
tick,0x7ffc909efd34,378607739,0,0x0,8
tick,0x7ffc909efd34,378623756,0,0x0,8
tick,0x7ffc909efd34,378639308,0,0x0,8
tick,0x7ffc909efd34,378655323,0,0x0,8
tick,0x7ffc909efd34,378670982,0,0x0,8
tick,0x7ffc909efd34,378686369,0,0x0,8
tick,0x7ffc909efd34,378702162,0,0x0,8
tick,0x7ffc909efd34,378717159,0,0x0,8
tick,0x7ffc909efd34,378732495,0,0x0,8
tick,0x7ffc909efd34,378748093,0,0x0,8
tick,0x7ffc909efd34,378763807,0,0x0,8
tick,0x7ffc909efd34,378779584,0,0x0,8
tick,0x7ffc909efd34,378795196,0,0x0,8
tick,0x7ffc909efd34,378810489,0,0x0,8
tick,0x7ffc909efd34,378826027,0,0x0,8
tick,0x7ffc909efd34,378841417,0,0x0,8
tick,0x7ffc909efd34,378857042,0,0x0,8
tick,0x7ffc909efd34,378873027,0,0x0,8
tick,0x7ffc909efd34,378888589,0,0x0,8
tick,0x7ffc909efd34,378904582,0,0x0,8
tick,0x7ffc909efd34,378920472,0,0x0,8
tick,0x7ffc909efd34,378935776,0,0x0,8
tick,0x7ffc909efd34,378951453,0,0x0,8
tick,0x7ffc909efd34,378967165,0,0x0,8
tick,0x7ffc909efd34,378982356,0,0x0,8
tick,0x7ffc909efd34,378998032,0,0x0,8
tick,0x7ffc909efd34,379013730,0,0x0,8
tick,0x7ffc909efd34,379029959,0,0x0,8
tick,0x7ffc909efd34,379045461,0,0x0,8
tick,0x7ffc909efd34,379060489,0,0x0,8
tick,0x7ffc909efd34,379076557,0,0x0,8
tick,0x7ffc909efd34,379092141,0,0x0,8
tick,0x7ffc909efd34,379108056,0,0x0,8
tick,0x7ffc909efd34,379123184,0,0x0,8
tick,0x7ffc909efd34,379138676,0,0x0,8
tick,0x7ffc909efd34,379154271,0,0x0,8
tick,0x7ffc909efd34,379169649,0,0x0,8
tick,0x7ffc909efd34,379185429,0,0x0,8
tick,0x7ffc909efd34,379200724,0,0x0,8
tick,0x7ffc909efd34,379216249,0,0x0,8
tick,0x7ffc909efd34,379231797,0,0x0,8
tick,0x7ffc909efd34,379247177,0,0x0,8
tick,0x7ffc909efd34,379263204,0,0x0,8
tick,0x7ffc909efd34,379279167,0,0x0,8
tick,0x7ffc909efd34,379294769,0,0x0,8
tick,0x7ffc909efd34,379310193,0,0x0,8
tick,0x7ffc909efd34,379325788,0,0x0,8
tick,0x7ffc909efd34,379341464,0,0x0,8
tick,0x7ffc909efd34,379357377,0,0x0,8
tick,0x7ffc909efd34,379373272,0,0x0,8
tick,0x7ffc909efd34,379389290,0,0x0,8
tick,0x7ffc909efd34,379405222,0,0x0,8
tick,0x7ffc909efd34,379420784,0,0x0,8
tick,0x7ffc909efd34,379436181,0,0x0,8
tick,0x7ffc909efd34,379451402,0,0x0,8
tick,0x7ffc909efd34,379467215,0,0x0,8
tick,0x7ffc909efd34,379482160,0,0x0,8
tick,0x7ffc909efd34,379498161,0,0x0,8
tick,0x7ffc909efd34,379513940,0,0x0,8
tick,0x7ffc909efd34,379529688,0,0x0,8
tick,0x7ffc909efd34,379545547,0,0x0,8
tick,0x7ffc909efd34,379560757,0,0x0,8
tick,0x7ffc909efd34,379576494,0,0x0,8
tick,0x7ffc909efd34,379591947,0,0x0,8
tick,0x7ffc909efd34,379607529,0,0x0,8
tick,0x7ffc909efd34,379623449,0,0x0,8
tick,0x7ffc909efd34,379638597,0,0x0,8
tick,0x7ffc909efd34,379653982,0,0x0,8
tick,0x7ffc909efd34,379669693,0,0x0,8
tick,0x7ffc909efd34,379685542,0,0x0,8
tick,0x7ffc909efd34,379700273,0,0x0,8
tick,0x7ffc909efd34,379715670,0,0x0,8
tick,0x7ffc909efd34,379730581,0,0x0,8
tick,0x7ffc909efd34,379746260,0,0x0,8
tick,0x7ffc909efd34,379761810,0,0x0,8
tick,0x7ffc909efd34,379777020,0,0x0,8
tick,0x7ffc909efd34,379792454,0,0x0,8
tick,0x7ffc909efd34,379807862,0,0x0,8
tick,0x7ffc909efd34,379823429,0,0x0,8
tick,0x7ffc909efd34,379839065,0,0x0,8
tick,0x7ffc909efd34,379854984,0,0x0,8
tick,0x7ffc909efd34,379870739,0,0x0,8
tick,0x7ffc909efd34,379885938,0,0x0,8
tick,0x7ffc909efd34,379901694,0,0x0,8
tick,0x7ffc909efd34,379917456,0,0x0,8
tick,0x7ffc909efd34,379932617,0,0x0,8
tick,0x7ffc909efd34,379947822,0,0x0,8
tick,0x7ffc909efd34,379963582,0,0x0,8
tick,0x7ffc909efd34,379979641,0,0x0,8
tick,0x7ffc909efd34,379994986,0,0x0,8
tick,0x7ffc909efd34,380010311,0,0x0,8
tick,0x7ffc909efd34,380025542,0,0x0,8
tick,0x7ffc909efd34,380040846,0,0x0,8
tick,0x7ffc909efd34,380056601,0,0x0,8
tick,0x7ffc909efd34,380072329,0,0x0,8
tick,0x7ffc909efd34,380088127,0,0x0,8
tick,0x7ffc909efd34,380103319,0,0x0,8
tick,0x7ffc909efd34,380119195,0,0x0,8
tick,0x7ffc909efd34,380134587,0,0x0,8
tick,0x7ffc909efd34,380150447,0,0x0,8
tick,0x7ffc909efd34,380166083,0,0x0,8
tick,0x7ffc909efd34,380181836,0,0x0,8
tick,0x7ffc909efd34,380197231,0,0x0,8
tick,0x7ffc909efd34,380212999,0,0x0,8
tick,0x7ffc909efd34,380229072,0,0x0,8
tick,0x7ffc909efd34,380244235,0,0x0,8
tick,0x7ffc909efd34,380259524,0,0x0,8
tick,0x7ffc909efd34,380274642,0,0x0,8
tick,0x7ffc909efd34,380290424,0,0x0,8
tick,0x7ffc909efd34,380305659,0,0x0,8
tick,0x7ffc909efd34,380320785,0,0x0,8
tick,0x7ffc909efd34,380336090,0,0x0,8
tick,0x7ffc909efd34,380351915,0,0x0,8
tick,0x7ffc909efd34,380367492,0,0x0,8
tick,0x7ffc909efd34,380382610,0,0x0,8
tick,0x7ffc909efd34,380398157,0,0x0,8
tick,0x7ffc909efd34,380413850,0,0x0,8
tick,0x7ffc909efd34,380429401,0,0x0,8
tick,0x7ffc909efd34,380445476,0,0x0,8
tick,0x7ffc909efd34,380460794,0,0x0,8
tick,0x7ffc909efd34,380476701,0,0x0,8
tick,0x7ffc909efd34,380491959,0,0x0,8
tick,0x7ffc909efd34,380507370,0,0x0,8
tick,0x7ffc909efd34,380522497,0,0x0,8
tick,0x7ffc909efd34,380538090,0,0x0,8
tick,0x7ffc909efd34,380553309,0,0x0,8
tick,0x7ffc909efd34,380568451,0,0x0,8
tick,0x7ffc909efd34,380583662,0,0x0,8
tick,0x7ffc909efd34,380598750,0,0x0,8
tick,0x7ffc909efd34,380614637,0,0x0,8
tick,0x7ffc909efd34,380630865,0,0x0,8
tick,0x7ffc909efd34,380646197,0,0x0,8
tick,0x7ffc909efd34,380662252,0,0x0,8
tick,0x7ffc909efd34,380678271,0,0x0,8
tick,0x7ffc909efd34,380694221,0,0x0,8
tick,0x7ffc909efd34,380709561,0,0x0,8
tick,0x7ffc909efd34,380724942,0,0x0,8
tick,0x7ffc909efd34,380740582,0,0x0,8
tick,0x7ffc909efd34,380756358,0,0x0,8
tick,0x7ffc909efd34,380772533,0,0x0,8
tick,0x7ffc909efd34,380788301,0,0x0,8
tick,0x7ffc909efd34,380803557,0,0x0,8
tick,0x7ffc909efd34,380819180,0,0x0,8
tick,0x7ffc909efd34,380834909,0,0x0,8
tick,0x7ffc909efd34,380849997,0,0x0,8
tick,0x7ffc909efd34,380865574,0,0x0,8
tick,0x7ffc909efd34,380880815,0,0x0,8
tick,0x7ffc909efd34,380896384,0,0x0,8
tick,0x7ffc909efd34,380912701,0,0x0,8
tick,0x7ffc909efd34,380928234,0,0x0,8
tick,0x7ffc909efd34,380943942,0,0x0,8
tick,0x7ffc909efd34,380959130,0,0x0,8
tick,0x7ffc909efd34,380974899,0,0x0,8
tick,0x7ffc909efd34,380991031,0,0x0,8
tick,0x7ffc909efd34,381006118,0,0x0,8
tick,0x7ffc909efd34,381021384,0,0x0,8
tick,0x7ffc909efd34,381036882,0,0x0,8
tick,0x7ffc909efd34,381052354,0,0x0,8
tick,0x7ffc909efd34,381067101,0,0x0,8
tick,0x7ffc909efd34,381082165,0,0x0,8
tick,0x7ffc909efd34,381098127,0,0x0,8
tick,0x7ffc909efd34,381114177,0,0x0,8
tick,0x7ffc909efd34,381129380,0,0x0,8
tick,0x7ffc909efd34,381144375,0,0x0,8
tick,0x7ffc909efd34,381159413,0,0x0,8
tick,0x7ffc909efd34,381174425,0,0x0,8
tick,0x7ffc909efd34,381189392,0,0x0,8
tick,0x7ffc909efd34,381204516,0,0x0,8
tick,0x7ffc909efd34,381220619,0,0x0,8
tick,0x7ffc909efd34,381235521,0,0x0,8
tick,0x7ffc909efd34,381251507,0,0x0,8
tick,0x7ffc909efd34,381266839,0,0x0,8
tick,0x7ffc909efd34,381282731,0,0x0,8
tick,0x7ffc909efd34,381297768,0,0x0,8
tick,0x7ffc909efd34,381312692,0,0x0,8
tick,0x7ffc909efd34,381327708,0,0x0,8
tick,0x7ffc909efd34,381342765,0,0x0,8
tick,0x7ffc909efd34,381357540,0,0x0,8
tick,0x7ffc909efd34,381372520,0,0x0,8
tick,0x7ffc909efd34,381388537,0,0x0,8
tick,0x7ffc909efd34,381404685,0,0x0,8
tick,0x7ffc909efd34,381419647,0,0x0,8
tick,0x7ffc909efd34,381435406,0,0x0,8
tick,0x7ffc909efd34,381449375,0,0x0,8
tick,0x7ffc909efd34,381466571,0,0x0,8
tick,0x7ffc909efd34,381480591,0,0x0,8
tick,0x7ffc909efd34,381495784,0,0x0,8
tick,0x7ffc909efd34,381510545,0,0x0,8
tick,0x7ffc909efd34,381525933,0,0x0,8
tick,0x7ffc909efd34,381541017,0,0x0,8
tick,0x7ffc909efd34,381556249,0,0x0,8
tick,0x7ffc909efd34,381572116,0,0x0,8
tick,0x7ffc909efd34,381588066,0,0x0,8
tick,0x7ffc909efd34,381603757,0,0x0,8
tick,0x7ffc909efd34,381619973,0,0x0,8
tick,0x7ffc909efd34,381635876,0,0x0,8
tick,0x7ffc909efd34,381651674,0,0x0,8
tick,0x7ffc909efd34,381667288,0,0x0,8
tick,0x7ffc909efd34,381683220,0,0x0,8
tick,0x7ffc909efd34,381698871,0,0x0,8
tick,0x7ffc909efd34,381714629,0,0x0,8
tick,0x7ffc909efd34,381730108,0,0x0,8
tick,0x7ffc909efd34,381746042,0,0x0,8
tick,0x7ffc909efd34,381762348,0,0x0,8
tick,0x7ffc909efd34,381777800,0,0x0,8
tick,0x7ffc909efd34,381793163,0,0x0,8
tick,0x7ffc909efd34,381808603,0,0x0,8
tick,0x7ffc909efd34,381823910,0,0x0,8
tick,0x7ffc909efd34,381839571,0,0x0,8
tick,0x7ffc909efd34,381855478,0,0x0,8
tick,0x7ffc909efd34,381870905,0,0x0,8
tick,0x7ffc909efd34,381886867,0,0x0,8
tick,0x7ffc909efd34,381902516,0,0x0,8
tick,0x7ffc909efd34,381918344,0,0x0,8
tick,0x7ffc909efd34,381934164,0,0x0,8
tick,0x7ffc909efd34,381949455,0,0x0,8
tick,0x7ffc909efd34,381964757,0,0x0,8
tick,0x7ffc909efd34,381980024,0,0x0,8
tick,0x7ffc909efd34,381995644,0,0x0,8
tick,0x7ffc909efd34,382011131,0,0x0,8
tick,0x7ffc909efd34,382026846,0,0x0,8
tick,0x7ffc909efd34,382042204,0,0x0,8
tick,0x7ffc909efd34,382057962,0,0x0,8
tick,0x7ffc909efd34,382073036,0,0x0,8
tick,0x7ffc909efd34,382089176,0,0x0,8
tick,0x7ffc909efd34,382105286,0,0x0,8
tick,0x7ffc909efd34,382120280,0,0x0,8
tick,0x7ffc909efd34,382136409,0,0x0,8
tick,0x7ffc909efd34,382151852,0,0x0,8
tick,0x7ffc909efd34,382168208,0,0x0,8
tick,0x7ffc909efd34,382183872,0,0x0,8
tick,0x7ffc909efd34,382199550,0,0x0,8
tick,0x7ffc909efd34,382214735,0,0x0,8
tick,0x7ffc909efd34,382229728,0,0x0,8
tick,0x7ffc909efd34,382245300,0,0x0,8
tick,0x7ffc909efd34,382261078,0,0x0,8
tick,0x7ffc909efd34,382276344,0,0x0,8
tick,0x7ffc909efd34,382292363,0,0x0,8
tick,0x7ffc909efd34,382308050,0,0x0,8
tick,0x7ffc909efd34,382323877,0,0x0,8
tick,0x7ffc909efd34,382338963,0,0x0,8
tick,0x7ffc909efd34,382354474,0,0x0,8
tick,0x7ffc909efd34,382370612,0,0x0,8
tick,0x7ffc909efd34,382386082,0,0x0,8
tick,0x7ffc909efd34,382402597,0,0x0,8
tick,0x7ffc909efd34,382417109,0,0x0,8
tick,0x7ffc909efd34,382433028,0,0x0,8
tick,0x7ffc909efd34,382449000,0,0x0,8
tick,0x7ffc909efd34,382464967,0,0x0,8
tick,0x7ffc909efd34,382480134,0,0x0,8
tick,0x7ffc909efd34,382496222,0,0x0,8
tick,0x7ffc909efd34,382511367,0,0x0,8
tick,0x7ffc909efd34,382527352,0,0x0,8
tick,0x7ffc909efd34,382543084,0,0x0,8
tick,0x7ffc909efd34,382558848,0,0x0,8
tick,0x7ffc909efd34,382575172,0,0x0,8
tick,0x7ffc909efd34,382591275,0,0x0,8
tick,0x7ffc909efd34,382606699,0,0x0,8
tick,0x7ffc909efd34,382621936,0,0x0,8
tick,0x7ffc909efd34,382638052,0,0x0,8
tick,0x7ffc909efd34,382653619,0,0x0,8
tick,0x7ffc909efd34,382669210,0,0x0,8
tick,0x7ffc909efd34,382684937,0,0x0,8
tick,0x7ffc909efd34,382699822,0,0x0,8
tick,0x7ffc909efd34,382715721,0,0x0,8
tick,0x7ffc909efd34,382731431,0,0x0,8
tick,0x7ffc909efd34,382746398,0,0x0,8
tick,0x7ffc909efd34,382761893,0,0x0,8
tick,0x7ffc909efd34,382777366,0,0x0,8
tick,0x7ffc909efd34,382793243,0,0x0,8
tick,0x7ffc909efd34,382808710,0,0x0,8
tick,0x7ffc909efd34,382824098,0,0x0,8
tick,0x7ffc909efd34,382839189,0,0x0,8
tick,0x7ffc909efd34,382854499,0,0x0,8
tick,0x7ffc909efd34,382870127,0,0x0,8
tick,0x7ffc909efd34,382885482,0,0x0,8
tick,0x7ffc909efd34,382900531,0,0x0,8
tick,0x7ffc909efd34,382915779,0,0x0,8
tick,0x7ffc909efd34,382931064,0,0x0,8
tick,0x7ffc909efd34,382946283,0,0x0,8
tick,0x7ffc909efd34,382961661,0,0x0,8
tick,0x7ffc909efd34,382977283,0,0x0,8
tick,0x7ffc909efd34,382992496,0,0x0,8
tick,0x7ffc909efd34,383007734,0,0x0,8
tick,0x7ffc909efd34,383023125,0,0x0,8
tick,0x7ffc909efd34,383038366,0,0x0,8
tick,0x7ffc909efd34,383053925,0,0x0,8
tick,0x7ffc909efd34,383069887,0,0x0,8
tick,0x7ffc909efd34,383085215,0,0x0,8
tick,0x7ffc909efd34,383100745,0,0x0,8
tick,0x7ffc909efd34,383116468,0,0x0,8
tick,0x7ffc909efd34,383131981,0,0x0,8
tick,0x7ffc909efd34,383147275,0,0x0,8
tick,0x7ffc909efd34,383162435,0,0x0,8
tick,0x7ffc909efd34,383177562,0,0x0,8
tick,0x7ffc909efd34,383193149,0,0x0,8
tick,0x7ffc909efd34,383208242,0,0x0,8
tick,0x7ffc909efd34,383223443,0,0x0,8
tick,0x7ffc909efd34,383239595,0,0x0,8
tick,0x7ffc909efd34,383255197,0,0x0,8
tick,0x7ffc909efd34,383270949,0,0x0,8
tick,0x7ffc909efd34,383286752,0,0x0,8
tick,0x7ffc909efd34,383302716,0,0x0,8
tick,0x7ffc909efd34,383318843,0,0x0,8
tick,0x7ffc909efd34,383335663,0,0x0,8
tick,0x7ffc909efd34,383350281,0,0x0,8
tick,0x7ffc909efd34,383365671,0,0x0,8
tick,0x7ffc909efd34,383381284,0,0x0,8
tick,0x7ffc909efd34,383396625,0,0x0,8
tick,0x7ffc909efd34,383411846,0,0x0,8
tick,0x7ffc909efd34,383427231,0,0x0,8
tick,0x7ffc909efd34,383442880,0,0x0,8
tick,0x7ffc909efd34,383458754,0,0x0,8
tick,0x7ffc909efd34,383474744,0,0x0,8
tick,0x7ffc909efd34,383489934,0,0x0,8
tick,0x7ffc909efd34,383504571,0,0x0,8
tick,0x7ffc909efd34,383520489,0,0x0,8
tick,0x7ffc909efd34,383536085,0,0x0,8
tick,0x7ffc909efd34,383551430,0,0x0,8
tick,0x7ffc909efd34,383567430,0,0x0,8
tick,0x7ffc909efd34,383582771,0,0x0,8
tick,0x7ffc909efd34,383598667,0,0x0,8
tick,0x7ffc909efd34,383614122,0,0x0,8
tick,0x7ffc909efd34,383629150,0,0x0,8
tick,0x7ffc909efd34,383643964,0,0x0,8
tick,0x7ffc909efd34,383659161,0,0x0,8
tick,0x7ffc909efd34,383674770,0,0x0,8
tick,0x7ffc909efd34,383689896,0,0x0,8
tick,0x7ffc909efd34,383705494,0,0x0,8
tick,0x7ffc909efd34,383721700,0,0x0,8
tick,0x7ffc909efd34,383736604,0,0x0,8
tick,0x7ffc909efd34,383751757,0,0x0,8
tick,0x7ffc909efd34,383767814,0,0x0,8
tick,0x7ffc909efd34,383783534,0,0x0,8
tick,0x7ffc909efd34,383799420,0,0x0,8
tick,0x7ffc909efd34,383815124,0,0x0,8
tick,0x7ffc909efd34,383831624,0,0x0,8
tick,0x7ffc909efd34,383846870,0,0x0,8
tick,0x7ffc909efd34,383861900,0,0x0,8
tick,0x7ffc909efd34,383878113,0,0x0,8
tick,0x7ffc909efd34,383894030,0,0x0,8
tick,0x7ffc909efd34,383910036,0,0x0,8
tick,0x7ffc909efd34,383925964,0,0x0,8
tick,0x7ffc909efd34,383941360,0,0x0,8
tick,0x7ffc909efd34,383957324,0,0x0,8
tick,0x7ffc909efd34,383972910,0,0x0,8
tick,0x7ffc909efd34,383988813,0,0x0,8
tick,0x7ffc909efd34,384004792,0,0x0,8
tick,0x7ffc909efd34,384020009,0,0x0,8
tick,0x7ffc909efd34,384034815,0,0x0,8
tick,0x7ffc909efd34,384051040,0,0x0,8
tick,0x7ffc909efd34,384066980,0,0x0,8
tick,0x7ffc909efd34,384081874,0,0x0,8
tick,0x7ffc909efd34,384097001,0,0x0,8
tick,0x7ffc909efd34,384111898,0,0x0,8
tick,0x7ffc909efd34,384127845,0,0x0,8
tick,0x7ffc909efd34,384149697,0,0x0,8
tick,0x7ffc909efd34,384159944,0,0x0,8
tick,0x7ffc909efd34,384178245,0,0x0,8
tick,0x7ffc909efd34,384191037,0,0x0,8
tick,0x7ffc909efd34,384209337,0,0x0,8
tick,0x7ffc909efd34,384222847,0,0x0,8
tick,0x7ffc909efd34,384238933,0,0x0,8
tick,0x7ffc909efd34,384254965,0,0x0,8
tick,0x7ffc909efd34,384271070,0,0x0,8
tick,0x7ffc909efd34,384286880,0,0x0,8
tick,0x7ffc909efd34,384302983,0,0x0,8
tick,0x7ffc909efd34,384318632,0,0x0,8
tick,0x7ffc909efd34,384335337,0,0x0,8
tick,0x7ffc909efd34,384349387,0,0x0,8
tick,0x7ffc909efd34,384364541,0,0x0,8
tick,0x7ffc909efd34,384380071,0,0x0,8
tick,0x7ffc909efd34,384394993,0,0x0,8
tick,0x7ffc909efd34,384410636,0,0x0,8
tick,0x7ffc909efd34,384425626,0,0x0,8
tick,0x7ffc909efd34,384441693,0,0x0,8
tick,0x7ffc909efd34,384455993,0,0x0,8
tick,0x7ffc909efd34,384471130,0,0x0,8
tick,0x7ffc909efd34,384487555,0,0x0,8
tick,0x7ffc909efd34,384502722,0,0x0,8
tick,0x7ffc909efd34,384518740,0,0x0,8
tick,0x7ffc909efd34,384535800,0,0x0,8
tick,0x7ffc909efd34,384550585,0,0x0,8
tick,0x7ffc909efd34,384566699,0,0x0,8
tick,0x7ffc909efd34,384581680,0,0x0,8
tick,0x7ffc909efd34,384596823,0,0x0,8
tick,0x7ffc909efd34,384612396,0,0x0,8
tick,0x7ffc909efd34,384627242,0,0x0,8
tick,0x7ffc909efd34,384642768,0,0x0,8
tick,0x7ffc909efd34,384658318,0,0x0,8
tick,0x7ffc909efd34,384674200,0,0x0,8
tick,0x7ffc909efd34,384689339,0,0x0,8
tick,0x7ffc909efd34,384705650,0,0x0,8
tick,0x7ffc909efd34,384720387,0,0x0,8
tick,0x7ffc909efd34,384736239,0,0x0,8
tick,0x7ffc909efd34,384752000,0,0x0,8
tick,0x7ffc909efd34,384768017,0,0x0,8
tick,0x7ffc909efd34,384782852,0,0x0,8
tick,0x7ffc909efd34,384798195,0,0x0,8
tick,0x7ffc909efd34,384813350,0,0x0,8
tick,0x7ffc909efd34,384829144,0,0x0,8
tick,0x7ffc909efd34,384845051,0,0x0,8
tick,0x7ffc909efd34,384860589,0,0x0,8
tick,0x7ffc909efd34,384875874,0,0x0,8
tick,0x7ffc909efd34,384891276,0,0x0,8
tick,0x7ffc909efd34,384907486,0,0x0,8
tick,0x7ffc909efd34,384923222,0,0x0,8
tick,0x7ffc909efd34,384939279,0,0x0,8
tick,0x7ffc909efd34,384955122,0,0x0,8
tick,0x7ffc909efd34,384970323,0,0x0,8
tick,0x7ffc909efd34,384985518,0,0x0,8
tick,0x7ffc909efd34,385001440,0,0x0,8
tick,0x7ffc909efd34,385016394,0,0x0,8
tick,0x7ffc909efd34,385031343,0,0x0,8
tick,0x7ffc909efd34,385046569,0,0x0,8
tick,0x7ffc909efd34,385062439,0,0x0,8
tick,0x7ffc909efd34,385078257,0,0x0,8
tick,0x7ffc909efd34,385093732,0,0x0,8
tick,0x7ffc909efd34,385109090,0,0x0,8
tick,0x7ffc909efd34,385125424,0,0x0,8
tick,0x7ffc909efd34,385140664,0,0x0,8
tick,0x7ffc909efd34,385156108,0,0x0,8
tick,0x7ffc909efd34,385171232,0,0x0,8
tick,0x7ffc909efd34,385187253,0,0x0,8
tick,0x7ffc909efd34,385203668,0,0x0,8
tick,0x7ffc909efd34,385219548,0,0x0,8
tick,0x7ffc909efd34,385234900,0,0x0,8
tick,0x7ffc909efd34,385250284,0,0x0,8
tick,0x7ffc909efd34,385265721,0,0x0,8
tick,0x7ffc909efd34,385281069,0,0x0,8
tick,0x7ffc909efd34,385297047,0,0x0,8
tick,0x7ffc909efd34,385313053,0,0x0,8
tick,0x7ffc909efd34,385328422,0,0x0,8
tick,0x7ffc909efd34,385344912,0,0x0,8
tick,0x7ffc909efd34,385360275,0,0x0,8
tick,0x7ffc909efd34,385376313,0,0x0,8
tick,0x7ffc909efd34,385392028,0,0x0,8
tick,0x7ffc909efd34,385407869,0,0x0,8
tick,0x7ffc909efd34,385423864,0,0x0,8
tick,0x7ffc909efd34,385440016,0,0x0,8
tick,0x7ffc909efd34,385455921,0,0x0,8
tick,0x7ffc909efd34,385471846,0,0x0,8
tick,0x7ffc909efd34,385487094,0,0x0,8
tick,0x7ffc909efd34,385502083,0,0x0,8
tick,0x7ffc909efd34,385516923,0,0x0,8
tick,0x7ffc909efd34,385533241,0,0x0,8
tick,0x7ffc909efd34,385548473,0,0x0,8
tick,0x7ffc909efd34,385563874,0,0x0,8
tick,0x7ffc909efd34,385579274,0,0x0,8
tick,0x7ffc909efd34,385595094,0,0x0,8
tick,0x7ffc909efd34,385611532,0,0x0,8
tick,0x7ffc909efd34,385626869,0,0x0,8
tick,0x7ffc909efd34,385642090,0,0x0,8
tick,0x7ffc909efd34,385657173,0,0x0,8
tick,0x7ffc909efd34,385672600,0,0x0,8
tick,0x7ffc909efd34,385688328,0,0x0,8
tick,0x7ffc909efd34,385703843,0,0x0,8
tick,0x7ffc909efd34,385719215,0,0x0,8
tick,0x7ffc909efd34,385734534,0,0x0,8
tick,0x7ffc909efd34,385749916,0,0x0,8
tick,0x7ffc909efd34,385765607,0,0x0,8
tick,0x7ffc909efd34,385780638,0,0x0,8
tick,0x7ffc909efd34,385796058,0,0x0,8
tick,0x7ffc909efd34,385811378,0,0x0,8
tick,0x7ffc909efd34,385826760,0,0x0,8
tick,0x7ffc909efd34,385842406,0,0x0,8
tick,0x7ffc909efd34,385858790,0,0x0,8
tick,0x7ffc909efd34,385873347,0,0x0,8
tick,0x7ffc909efd34,385889196,0,0x0,8
tick,0x7ffc909efd34,385905772,0,0x0,8
tick,0x7ffc909efd34,385920048,0,0x0,8
tick,0x7ffc909efd34,385935403,0,0x0,8
tick,0x7ffc909efd34,385951454,0,0x0,8
tick,0x7ffc909efd34,385967792,0,0x0,8
tick,0x7ffc909efd34,385982314,0,0x0,8
tick,0x7ffc909efd34,385998320,0,0x0,8
tick,0x7ffc909efd34,386013500,0,0x0,8
tick,0x7ffc909efd34,386029224,0,0x0,8
tick,0x7ffc909efd34,386045628,0,0x0,8
tick,0x7ffc909efd34,386061157,0,0x0,8
tick,0x7ffc909efd34,386076923,0,0x0,8
tick,0x7ffc909efd34,386091755,0,0x0,8
tick,0x7ffc909efd34,386106897,0,0x0,8
tick,0x7ffc909efd34,386122144,0,0x0,8
tick,0x7ffc909efd34,386138873,0,0x0,8
tick,0x7ffc909efd34,386154326,0,0x0,8
tick,0x7ffc909efd34,386169809,0,0x0,8
tick,0x7ffc909efd34,386186637,0,0x0,8
tick,0x7ffc909efd34,386199581,0,0x0,8
tick,0x7ffc909efd34,386215258,0,0x0,8
tick,0x7ffc909efd34,386229968,0,0x0,8
tick,0x7ffc909efd34,386245178,0,0x0,8
tick,0x7ffc909efd34,386260218,0,0x0,8
tick,0x7ffc909efd34,386276387,0,0x0,8
tick,0x7ffc909efd34,386291850,0,0x0,8
tick,0x7ffc909efd34,386306953,0,0x0,8
tick,0x7ffc909efd34,386322220,0,0x0,8
tick,0x7ffc909efd34,386337973,0,0x0,8
tick,0x7ffc909efd34,386353901,0,0x0,8
tick,0x7ffc909efd34,386369786,0,0x0,8
tick,0x7ffc909efd34,386386124,0,0x0,8
tick,0x7ffc909efd34,386402274,0,0x0,8
tick,0x7ffc909efd34,386415733,0,0x0,8
tick,0x7ffc909efd34,386430818,0,0x0,8
tick,0x7ffc909efd34,386447054,0,0x0,8
tick,0x7ffc909efd34,386462999,0,0x0,8
tick,0x7ffc909efd34,386478851,0,0x0,8
tick,0x7ffc909efd34,386494260,0,0x0,8
tick,0x7ffc909efd34,386509859,0,0x0,8
tick,0x7ffc909efd34,386525871,0,0x0,8
tick,0x7ffc909efd34,386541171,0,0x0,8
tick,0x7ffc909efd34,386556791,0,0x0,8
tick,0x7ffc909efd34,386572765,0,0x0,8
tick,0x7ffc909efd34,386587917,0,0x0,8
tick,0x7ffc909efd34,386603919,0,0x0,8
tick,0x7ffc909efd34,386619558,0,0x0,8
tick,0x7ffc909efd34,386635338,0,0x0,8
tick,0x7ffc909efd34,386651199,0,0x0,8
tick,0x7ffc909efd34,386665899,0,0x0,8
tick,0x7ffc909efd34,386681301,0,0x0,8
tick,0x7ffc909efd34,386696386,0,0x0,8
tick,0x7ffc909efd34,386711762,0,0x0,8
tick,0x7ffc909efd34,386726993,0,0x0,8
tick,0x7ffc909efd34,386742445,0,0x0,8
tick,0x7ffc909efd34,386757555,0,0x0,8
tick,0x7ffc909efd34,386772896,0,0x0,8
tick,0x7ffc909efd34,386788232,0,0x0,8
tick,0x7ffc909efd34,386803860,0,0x0,8
tick,0x7ffc909efd34,386819009,0,0x0,8
tick,0x7ffc909efd34,386835111,0,0x0,8
tick,0x7ffc909efd34,386851576,0,0x0,8
tick,0x7ffc909efd34,386865976,0,0x0,8
tick,0x7ffc909efd34,386881594,0,0x0,8
tick,0x7ffc909efd34,386897146,0,0x0,8
tick,0x7ffc909efd34,386912498,0,0x0,8
tick,0x7ffc909efd34,386928794,0,0x0,8
tick,0x7ffc909efd34,386944420,0,0x0,8
tick,0x7ffc909efd34,386960752,0,0x0,8
tick,0x7ffc909efd34,386976162,0,0x0,8
tick,0x7ffc909efd34,386991461,0,0x0,8
tick,0x7ffc909efd34,387007039,0,0x0,8
tick,0x7ffc909efd34,387022572,0,0x0,8
tick,0x7ffc909efd34,387038297,0,0x0,8
tick,0x7ffc909efd34,387054358,0,0x0,8
tick,0x7ffc909efd34,387069378,0,0x0,8
tick,0x7ffc909efd34,387084895,0,0x0,8
tick,0x7ffc909efd34,387101353,0,0x0,8
tick,0x7ffc909efd34,387115771,0,0x0,8
tick,0x7ffc909efd34,387131495,0,0x0,8
tick,0x7ffc909efd34,387147327,0,0x0,8
tick,0x7ffc909efd34,387162782,0,0x0,8
tick,0x7ffc909efd34,387178012,0,0x0,8
tick,0x7ffc909efd34,387193792,0,0x0,8
tick,0x7ffc909efd34,387210171,0,0x0,8
tick,0x7ffc909efd34,387225255,0,0x0,8
tick,0x7ffc909efd34,387239833,0,0x0,8
tick,0x7ffc909efd34,387256102,0,0x0,8
tick,0x7ffc909efd34,387272269,0,0x0,8
tick,0x7ffc909efd34,387287958,0,0x0,8
tick,0x7ffc909efd34,387303324,0,0x0,8
tick,0x7ffc909efd34,387318450,0,0x0,8
tick,0x7ffc909efd34,387334469,0,0x0,8
tick,0x7ffc909efd34,387349858,0,0x0,8
tick,0x7ffc909efd34,387365792,0,0x0,8
tick,0x7ffc909efd34,387381072,0,0x0,8
tick,0x7ffc909efd34,387396805,0,0x0,8
tick,0x7ffc909efd34,387411932,0,0x0,8
tick,0x7ffc909efd34,387427518,0,0x0,8
tick,0x7ffc909efd34,387443221,0,0x0,8
tick,0x7ffc909efd34,387458984,0,0x0,8
tick,0x7ffc909efd34,387475011,0,0x0,8
tick,0x7ffc909efd34,387491045,0,0x0,8
tick,0x7ffc909efd34,387507067,0,0x0,8
tick,0x7ffc909efd34,387523008,0,0x0,8
tick,0x7ffc909efd34,387538973,0,0x0,8
tick,0x7ffc909efd34,387555028,0,0x0,8
tick,0x7ffc909efd34,387571072,0,0x0,8
tick,0x7ffc909efd34,387587060,0,0x0,8
tick,0x7ffc909efd34,387605046,0,0x0,8
tick,0x7ffc909efd34,387619253,0,0x0,8
tick,0x7ffc909efd34,387635019,0,0x0,8
tick,0x7ffc909efd34,387650925,0,0x0,8
tick,0x7ffc909efd34,387665865,0,0x0,8
tick,0x7ffc909efd34,387680920,0,0x0,8
tick,0x7ffc909efd34,387696810,0,0x0,8
tick,0x7ffc909efd34,387712600,0,0x0,8
tick,0x7ffc909efd34,387728412,0,0x0,8
tick,0x7ffc909efd34,387744488,0,0x0,8
tick,0x7ffc909efd34,387760449,0,0x0,8
tick,0x7ffc909efd34,387776550,0,0x0,8
tick,0x7ffc909efd34,387792458,0,0x0,8
tick,0x7ffc909efd34,387808508,0,0x0,8
tick,0x7ffc909efd34,387824531,0,0x0,8
tick,0x7ffc909efd34,387840545,0,0x0,8
tick,0x7ffc909efd34,387856519,0,0x0,8
tick,0x7ffc909efd34,387872512,0,0x0,8
tick,0x7ffc909efd34,387887439,0,0x0,8
tick,0x7ffc909efd34,387903805,0,0x0,8
tick,0x7ffc909efd34,387919499,0,0x0,8
tick,0x7ffc909efd34,387935564,0,0x0,8
tick,0x7ffc909efd34,387951528,0,0x0,8
tick,0x7ffc909efd34,387967781,0,0x0,8
tick,0x7ffc909efd34,387983988,0,0x0,8
tick,0x7ffc909efd34,387999613,0,0x0,8
tick,0x7ffc909efd34,388014543,0,0x0,8
tick,0x7ffc909efd34,388030543,0,0x0,8
tick,0x7ffc909efd34,388046053,0,0x0,8
tick,0x7ffc909efd34,388061427,0,0x0,8
tick,0x7ffc909efd34,388077487,0,0x0,8
tick,0x7ffc909efd34,388092506,0,0x0,8
tick,0x7ffc909efd34,388108569,0,0x0,8
tick,0x7ffc909efd34,388124583,0,0x0,8
tick,0x7ffc909efd34,388140704,0,0x0,8
tick,0x7ffc909efd34,388155996,0,0x0,8
tick,0x7ffc909efd34,388171837,0,0x0,8
tick,0x7ffc909efd34,388187951,0,0x0,8
tick,0x7ffc909efd34,388204027,0,0x0,8
tick,0x7ffc909efd34,388219902,0,0x0,8
tick,0x7ffc909efd34,388235705,0,0x0,8
tick,0x7ffc909efd34,388251630,0,0x0,8
tick,0x7ffc909efd34,388267729,0,0x0,8
tick,0x7ffc909efd34,388283861,0,0x0,8
tick,0x7ffc909efd34,388299547,0,0x0,8
tick,0x7ffc909efd34,388314608,0,0x0,8
tick,0x7ffc909efd34,388330661,0,0x0,8
tick,0x7ffc909efd34,388346610,0,0x0,8
tick,0x7ffc909efd34,388362520,0,0x0,8
tick,0x7ffc909efd34,388378475,0,0x0,8
tick,0x7ffc909efd34,388394495,0,0x0,8
tick,0x7ffc909efd34,388410724,0,0x0,8
tick,0x7ffc909efd34,388426466,0,0x0,8
tick,0x7ffc909efd34,388442505,0,0x0,8
tick,0x7ffc909efd34,388458575,0,0x0,8
tick,0x7ffc909efd34,388474536,0,0x0,8
tick,0x7ffc909efd34,388490040,0,0x0,8
tick,0x7ffc909efd34,388504552,0,0x0,8
tick,0x7ffc909efd34,388519507,0,0x0,8
tick,0x7ffc909efd34,388535521,0,0x0,8
tick,0x7ffc909efd34,388550681,0,0x0,8
tick,0x7ffc909efd34,388567107,0,0x0,8
tick,0x7ffc909efd34,388582725,0,0x0,8
tick,0x7ffc909efd34,388597627,0,0x0,8
tick,0x7ffc909efd34,388613922,0,0x0,8
tick,0x7ffc909efd34,388628528,0,0x0,8
tick,0x7ffc909efd34,388644491,0,0x0,8
tick,0x7ffc909efd34,388660556,0,0x0,8
tick,0x7ffc909efd34,388676438,0,0x0,8
tick,0x7ffc909efd34,388692506,0,0x0,8
tick,0x7ffc909efd34,388708435,0,0x0,8
tick,0x7ffc909efd34,388723539,0,0x0,8
tick,0x7ffc909efd34,388739552,0,0x0,8
tick,0x7ffc909efd34,388755477,0,0x0,8
tick,0x7ffc909efd34,388771440,0,0x0,8
tick,0x7ffc909efd34,388787502,0,0x0,8
tick,0x7ffc909efd34,388803430,0,0x0,8
tick,0x7ffc909efd34,388819455,0,0x0,8
tick,0x7ffc909efd34,388835519,0,0x0,8
tick,0x7ffc909efd34,388851874,0,0x0,8
tick,0x7ffc909efd34,388867995,0,0x0,8
tick,0x7ffc909efd34,388881653,0,0x0,8
tick,0x7ffc909efd34,388897529,0,0x0,8
tick,0x7ffc909efd34,388913465,0,0x0,8
tick,0x7ffc909efd34,388928457,0,0x0,8
tick,0x7ffc909efd34,388943487,0,0x0,8
tick,0x7ffc909efd34,388959417,0,0x0,8
tick,0x7ffc909efd34,388975547,0,0x0,8
tick,0x7ffc909efd34,388991465,0,0x0,8
tick,0x7ffc909efd34,389007421,0,0x0,8
tick,0x7ffc909efd34,389023704,0,0x0,8
tick,0x7ffc909efd34,389038525,0,0x0,8
tick,0x7ffc909efd34,389053646,0,0x0,8
tick,0x7ffc909efd34,389069487,0,0x0,8
tick,0x7ffc909efd34,389085537,0,0x0,8
tick,0x7ffc909efd34,389101379,0,0x0,8
tick,0x7ffc909efd34,389117327,0,0x0,8
tick,0x7ffc909efd34,389132484,0,0x0,8
tick,0x7ffc909efd34,389147459,0,0x0,8
tick,0x7ffc909efd34,389162491,0,0x0,8
tick,0x7ffc909efd34,389178464,0,0x0,8
tick,0x7ffc909efd34,389194428,0,0x0,8
tick,0x7ffc909efd34,389210540,0,0x0,8
tick,0x7ffc909efd34,389226768,0,0x0,8
tick,0x7ffc909efd34,389242551,0,0x0,8
tick,0x7ffc909efd34,389258917,0,0x0,8
tick,0x7ffc909efd34,389274576,0,0x0,8
tick,0x7ffc909efd34,389291227,0,0x0,8
tick,0x7ffc909efd34,389306513,0,0x0,8
tick,0x7ffc909efd34,389322537,0,0x0,8
tick,0x7ffc909efd34,389338611,0,0x0,8
tick,0x7ffc909efd34,389354685,0,0x0,8
tick,0x7ffc909efd34,389370671,0,0x0,8
tick,0x7ffc909efd34,389386798,0,0x0,8
tick,0x7ffc909efd34,389402867,0,0x0,8
tick,0x7ffc909efd34,389418052,0,0x0,8
tick,0x7ffc909efd34,389434305,0,0x0,8
tick,0x7ffc909efd34,389450502,0,0x0,8
tick,0x7ffc909efd34,389465568,0,0x0,8
tick,0x7ffc909efd34,389481607,0,0x0,8
tick,0x7ffc909efd34,389497591,0,0x0,8
tick,0x7ffc909efd34,389513543,0,0x0,8
tick,0x7ffc909efd34,389529756,0,0x0,8
tick,0x7ffc909efd34,389545753,0,0x0,8
tick,0x7ffc909efd34,389561575,0,0x0,8
tick,0x7ffc909efd34,389577865,0,0x0,8
tick,0x7ffc909efd34,389593048,0,0x0,8
tick,0x7ffc909efd34,389608347,0,0x0,8
tick,0x7ffc909efd34,389623763,0,0x0,8
tick,0x7ffc909efd34,389639866,0,0x0,8
tick,0x7ffc909efd34,389654862,0,0x0,8
tick,0x7ffc909efd34,389671150,0,0x0,8
tick,0x7ffc909efd34,389687345,0,0x0,8
tick,0x7ffc909efd34,389702851,0,0x0,8
tick,0x7ffc909efd34,389718788,0,0x0,8
tick,0x7ffc909efd34,389734591,0,0x0,8
tick,0x7ffc909efd34,389749837,0,0x0,8
tick,0x7ffc909efd34,389765419,0,0x0,8
tick,0x7ffc909efd34,389781515,0,0x0,8
tick,0x7ffc909efd34,389797062,0,0x0,8
tick,0x7ffc909efd34,389813000,0,0x0,8
tick,0x7ffc909efd34,389828484,0,0x0,8
tick,0x7ffc909efd34,389844450,0,0x0,8
tick,0x7ffc909efd34,389859850,0,0x0,8
tick,0x7ffc909efd34,389875358,0,0x0,8
tick,0x7ffc909efd34,389890612,0,0x0,8
tick,0x7ffc909efd34,389906319,0,0x0,8
tick,0x7ffc909efd34,389922641,0,0x0,8
tick,0x7ffc909efd34,389938004,0,0x0,8
tick,0x7ffc909efd34,389953924,0,0x0,8
tick,0x7ffc909efd34,389969391,0,0x0,8
tick,0x7ffc909efd34,389985079,0,0x0,8
tick,0x7ffc909efd34,390001360,0,0x0,8
tick,0x7ffc909efd34,390017452,0,0x0,8
tick,0x7ffc909efd34,390032075,0,0x0,8
tick,0x7ffc909efd34,390047470,0,0x0,8
tick,0x7ffc909efd34,390062556,0,0x0,8
tick,0x7ffc909efd34,390077605,0,0x0,8
tick,0x7ffc909efd34,390093102,0,0x0,8
tick,0x7ffc909efd34,390108499,0,0x0,8
tick,0x7ffc909efd34,390124013,0,0x0,8
tick,0x7ffc909efd34,390139483,0,0x0,8
tick,0x7ffc909efd34,390154818,0,0x0,8
tick,0x7ffc909efd34,390170629,0,0x0,8
tick,0x7ffc909efd34,390186481,0,0x0,8
tick,0x7ffc909efd34,390201736,0,0x0,8
tick,0x7ffc909efd34,390217142,0,0x0,8
tick,0x7ffc909efd34,390232735,0,0x0,8
tick,0x7ffc909efd34,390249107,0,0x0,8
tick,0x7ffc909efd34,390264831,0,0x0,8
tick,0x7ffc909efd34,390280518,0,0x0,8
tick,0x7ffc909efd34,390296702,0,0x0,8
tick,0x7ffc909efd34,390312358,0,0x0,8
tick,0x7ffc909efd34,390328001,0,0x0,8
tick,0x7ffc909efd34,390343616,0,0x0,8
tick,0x7ffc909efd34,390358941,0,0x0,8
tick,0x7ffc909efd34,390374862,0,0x0,8
tick,0x7ffc909efd34,390389696,0,0x0,8
tick,0x7ffc909efd34,390404519,0,0x0,8
tick,0x7ffc909efd34,390419558,0,0x0,8
tick,0x7ffc909efd34,390435479,0,0x0,8
tick,0x7ffc909efd34,390451158,0,0x0,8
tick,0x7ffc909efd34,390467204,0,0x0,8
tick,0x7ffc909efd34,390484103,0,0x0,8
tick,0x7ffc909efd34,390498117,0,0x0,8
tick,0x7ffc909efd34,390513601,0,0x0,8
tick,0x7ffc909efd34,390529395,0,0x0,8
tick,0x7ffc909efd34,390544680,0,0x0,8
tick,0x7ffc909efd34,390560246,0,0x0,8
tick,0x7ffc909efd34,390575866,0,0x0,8
tick,0x7ffc909efd34,390591987,0,0x0,8
tick,0x7ffc909efd34,390608037,0,0x0,8
tick,0x7ffc909efd34,390623732,0,0x0,8
tick,0x7ffc909efd34,390639222,0,0x0,8
tick,0x7ffc909efd34,390655225,0,0x0,8
tick,0x7ffc909efd34,390670700,0,0x0,8
tick,0x7ffc909efd34,390685963,0,0x0,8
tick,0x7ffc909efd34,390701943,0,0x0,8
tick,0x7ffc909efd34,390717355,0,0x0,8
tick,0x7ffc909efd34,390734142,0,0x0,8
tick,0x7ffc909efd34,390749026,0,0x0,8
tick,0x7ffc909efd34,390764180,0,0x0,8
tick,0x7ffc909efd34,390779469,0,0x0,8
tick,0x7ffc909efd34,390795390,0,0x0,8
tick,0x7ffc909efd34,390810830,0,0x0,8
tick,0x7ffc909efd34,390826256,0,0x0,8
tick,0x7ffc909efd34,390841664,0,0x0,8
tick,0x7ffc909efd34,390856942,0,0x0,8
tick,0x7ffc909efd34,390872270,0,0x0,8
tick,0x7ffc909efd34,390888160,0,0x0,8
tick,0x7ffc909efd34,390903479,0,0x0,8
tick,0x7ffc909efd34,390918738,0,0x0,8
tick,0x7ffc909efd34,390934613,0,0x0,8
tick,0x7ffc909efd34,390950704,0,0x0,8
tick,0x7ffc909efd34,390964806,0,0x0,8
tick,0x7ffc909efd34,390980310,0,0x0,8
tick,0x7ffc909efd34,390996186,0,0x0,8
tick,0x7ffc909efd34,391011541,0,0x0,8
tick,0x7ffc909efd34,391027267,0,0x0,8
tick,0x7ffc909efd34,391042494,0,0x0,8
tick,0x7ffc909efd34,391058212,0,0x0,8
tick,0x7ffc909efd34,391073399,0,0x0,8
tick,0x7ffc909efd34,391088866,0,0x0,8
tick,0x7ffc909efd34,391104431,0,0x0,8
tick,0x7ffc909efd34,391120523,0,0x0,8
tick,0x7ffc909efd34,391136268,0,0x0,8
tick,0x7ffc909efd34,391151905,0,0x0,8
tick,0x7ffc909efd34,391168066,0,0x0,8
tick,0x7ffc909efd34,391184293,0,0x0,8
tick,0x7ffc909efd34,391198662,0,0x0,8
tick,0x7ffc909efd34,391213943,0,0x0,8
tick,0x7ffc909efd34,391229351,0,0x0,8
tick,0x7ffc909efd34,391244988,0,0x0,8
tick,0x7ffc909efd34,391260317,0,0x0,8
tick,0x7ffc909efd34,391275851,0,0x0,8
tick,0x7ffc909efd34,391291695,0,0x0,8
tick,0x7ffc909efd34,391307286,0,0x0,8
tick,0x7ffc909efd34,391323021,0,0x0,8
tick,0x7ffc909efd34,391338627,0,0x0,8
tick,0x7ffc909efd34,391354510,0,0x0,8
tick,0x7ffc909efd34,391370037,0,0x0,8
tick,0x7ffc909efd34,391385766,0,0x0,8
tick,0x7ffc909efd34,391401302,0,0x0,8
tick,0x7ffc909efd34,391417828,0,0x0,8
tick,0x7ffc909efd34,391432036,0,0x0,8
tick,0x7ffc909efd34,391447471,0,0x0,8
tick,0x7ffc909efd34,391462877,0,0x0,8
tick,0x7ffc909efd34,391478525,0,0x0,8
tick,0x7ffc909efd34,391493708,0,0x0,8
tick,0x7ffc909efd34,391509493,0,0x0,8
tick,0x7ffc909efd34,391524984,0,0x0,8
tick,0x7ffc909efd34,391540756,0,0x0,8
tick,0x7ffc909efd34,391556247,0,0x0,8
tick,0x7ffc909efd34,391571855,0,0x0,8
tick,0x7ffc909efd34,391586946,0,0x0,8
tick,0x7ffc909efd34,391602215,0,0x0,8
tick,0x7ffc909efd34,391618223,0,0x0,8
tick,0x7ffc909efd34,391634226,0,0x0,8
tick,0x7ffc909efd34,391650536,0,0x0,8
tick,0x7ffc909efd34,391664844,0,0x0,8
tick,0x7ffc909efd34,391680319,0,0x0,8
tick,0x7ffc909efd34,391696256,0,0x0,8
tick,0x7ffc909efd34,391711441,0,0x0,8
tick,0x7ffc909efd34,391726962,0,0x0,8
tick,0x7ffc909efd34,391742457,0,0x0,8
tick,0x7ffc909efd34,391758105,0,0x0,8
tick,0x7ffc909efd34,391773629,0,0x0,8
tick,0x7ffc909efd34,391789369,0,0x0,8
tick,0x7ffc909efd34,391804715,0,0x0,8
tick,0x7ffc909efd34,391820383,0,0x0,8
tick,0x7ffc909efd34,391835699,0,0x0,8
tick,0x7ffc909efd34,391850854,0,0x0,8
tick,0x7ffc909efd34,391866906,0,0x0,8
tick,0x7ffc909efd34,391882104,0,0x0,8
tick,0x7ffc909efd34,391898216,0,0x0,8
tick,0x7ffc909efd34,391913491,0,0x0,8
tick,0x7ffc909efd34,391928883,0,0x0,8
tick,0x7ffc909efd34,391944558,0,0x0,8
tick,0x7ffc909efd34,391961000,0,0x0,8
tick,0x7ffc909efd34,391976533,0,0x0,8
tick,0x7ffc909efd34,391992256,0,0x0,8
tick,0x7ffc909efd34,392008348,0,0x0,8
tick,0x7ffc909efd34,392024254,0,0x0,8
tick,0x7ffc909efd34,392040101,0,0x0,8
tick,0x7ffc909efd34,392055788,0,0x0,8
tick,0x7ffc909efd34,392072053,0,0x0,8
tick,0x7ffc909efd34,392087939,0,0x0,8
tick,0x7ffc909efd34,392103617,0,0x0,8
tick,0x7ffc909efd34,392118900,0,0x0,8
tick,0x7ffc909efd34,392134431,0,0x0,8
tick,0x7ffc909efd34,392149695,0,0x0,8
tick,0x7ffc909efd34,392165393,0,0x0,8
tick,0x7ffc909efd34,392180652,0,0x0,8
tick,0x7ffc909efd34,392196014,0,0x0,8
tick,0x7ffc909efd34,392211887,0,0x0,8
tick,0x7ffc909efd34,392227384,0,0x0,8
tick,0x7ffc909efd34,392243182,0,0x0,8
tick,0x7ffc909efd34,392258631,0,0x0,8
tick,0x7ffc909efd34,392274080,0,0x0,8
tick,0x7ffc909efd34,392290132,0,0x0,8
tick,0x7ffc909efd34,392305343,0,0x0,8
tick,0x7ffc909efd34,392321579,0,0x0,8
tick,0x7ffc909efd34,392337290,0,0x0,8
tick,0x7ffc909efd34,392352958,0,0x0,8
tick,0x7ffc909efd34,392368903,0,0x0,8
tick,0x7ffc909efd34,392384896,0,0x0,8
tick,0x7ffc909efd34,392400979,0,0x0,8
tick,0x7ffc909efd34,392417048,0,0x0,8
tick,0x7ffc909efd34,392432787,0,0x0,8
tick,0x7ffc909efd34,392447365,0,0x0,8
tick,0x7ffc909efd34,392462597,0,0x0,8
tick,0x7ffc909efd34,392478092,0,0x0,8
tick,0x7ffc909efd34,392493568,0,0x0,8
tick,0x7ffc909efd34,392509279,0,0x0,8
tick,0x7ffc909efd34,392525303,0,0x0,8
tick,0x7ffc909efd34,392540898,0,0x0,8
tick,0x7ffc909efd34,392556681,0,0x0,8
tick,0x7ffc909efd34,392572745,0,0x0,8
tick,0x7ffc909efd34,392588210,0,0x0,8
tick,0x7ffc909efd34,392604495,0,0x0,8
tick,0x7ffc909efd34,392620507,0,0x0,8
tick,0x7ffc909efd34,392635667,0,0x0,8
tick,0x7ffc909efd34,392651058,0,0x0,8
tick,0x7ffc909efd34,392666352,0,0x0,8
tick,0x7ffc909efd34,392682137,0,0x0,8
tick,0x7ffc909efd34,392698003,0,0x0,8
tick,0x7ffc909efd34,392713429,0,0x0,8
tick,0x7ffc909efd34,392729444,0,0x0,8
tick,0x7ffc909efd34,392745416,0,0x0,8
tick,0x7ffc909efd34,392760750,0,0x0,8
tick,0x7ffc909efd34,392776018,0,0x0,8
tick,0x7ffc909efd34,392791242,0,0x0,8
tick,0x7ffc909efd34,392807015,0,0x0,8
tick,0x7ffc909efd34,392822541,0,0x0,8
tick,0x7ffc909efd34,392837949,0,0x0,8
tick,0x7ffc909efd34,392853332,0,0x0,8
tick,0x7ffc909efd34,392869343,0,0x0,8
tick,0x7ffc909efd34,392885005,0,0x0,8
tick,0x7ffc909efd34,392900228,0,0x0,8
tick,0x7ffc909efd34,392916149,0,0x0,8
tick,0x7ffc909efd34,392931197,0,0x0,8
tick,0x7ffc909efd34,392946555,0,0x0,8
tick,0x7ffc909efd34,392961880,0,0x0,8
tick,0x7ffc909efd34,392977346,0,0x0,8
tick,0x7ffc909efd34,392993240,0,0x0,8
tick,0x7ffc909efd34,393008502,0,0x0,8
tick,0x7ffc909efd34,393024055,0,0x0,8
tick,0x7ffc909efd34,393039229,0,0x0,8
tick,0x7ffc909efd34,393054730,0,0x0,8
tick,0x7ffc909efd34,393070439,0,0x0,8
tick,0x7ffc909efd34,393085986,0,0x0,8
tick,0x7ffc909efd34,393101358,0,0x0,8
tick,0x7ffc909efd34,393116912,0,0x0,8
tick,0x7ffc909efd34,393132631,0,0x0,8
tick,0x7ffc909efd34,393148432,0,0x0,8
tick,0x7ffc909efd34,393163737,0,0x0,8
tick,0x7ffc909efd34,393179438,0,0x0,8
tick,0x7ffc909efd34,393195053,0,0x0,8
tick,0x7ffc909efd34,393210680,0,0x0,8
tick,0x7ffc909efd34,393226331,0,0x0,8
tick,0x7ffc909efd34,393241861,0,0x0,8
tick,0x7ffc909efd34,393257065,0,0x0,8
tick,0x7ffc909efd34,393272578,0,0x0,8
tick,0x7ffc909efd34,393288117,0,0x0,8
tick,0x7ffc909efd34,393304057,0,0x0,8
tick,0x7ffc909efd34,393319433,0,0x0,8
tick,0x7ffc909efd34,393335804,0,0x0,8
tick,0x7ffc909efd34,393351442,0,0x0,8
tick,0x7ffc909efd34,393366944,0,0x0,8
tick,0x7ffc909efd34,393382121,0,0x0,8
tick,0x7ffc909efd34,393397734,0,0x0,8
tick,0x7ffc909efd34,393413774,0,0x0,8
tick,0x7ffc909efd34,393429526,0,0x0,8
tick,0x7ffc909efd34,393445497,0,0x0,8
tick,0x7ffc909efd34,393460988,0,0x0,8
tick,0x7ffc909efd34,393476805,0,0x0,8
tick,0x7ffc909efd34,393492609,0,0x0,8
tick,0x7ffc909efd34,393507979,0,0x0,8
tick,0x7ffc909efd34,393523498,0,0x0,8
tick,0x7ffc909efd34,393538880,0,0x0,8
tick,0x7ffc909efd34,393554095,0,0x0,8
tick,0x7ffc909efd34,393569525,0,0x0,8
tick,0x7ffc909efd34,393584657,0,0x0,8
tick,0x7ffc909efd34,393600012,0,0x0,8
tick,0x7ffc909efd34,393615921,0,0x0,8
tick,0x7ffc909efd34,393631383,0,0x0,8
tick,0x7ffc909efd34,393647129,0,0x0,8
tick,0x7ffc909efd34,393662485,0,0x0,8
tick,0x7ffc909efd34,393677766,0,0x0,8
tick,0x7ffc909efd34,393693129,0,0x0,8
tick,0x7ffc909efd34,393709232,0,0x0,8
tick,0x7ffc909efd34,393724467,0,0x0,8
tick,0x7ffc909efd34,393740560,0,0x0,8
tick,0x7ffc909efd34,393756058,0,0x0,8
tick,0x7ffc909efd34,393771201,0,0x0,8
tick,0x7ffc909efd34,393787273,0,0x0,8
tick,0x7ffc909efd34,393803166,0,0x0,8
tick,0x7ffc909efd34,393818830,0,0x0,8
tick,0x7ffc909efd34,393834239,0,0x0,8
tick,0x7ffc909efd34,393850335,0,0x0,8
tick,0x7ffc909efd34,393866109,0,0x0,8
tick,0x7ffc909efd34,393882317,0,0x0,8
tick,0x7ffc909efd34,393897395,0,0x0,8
tick,0x7ffc909efd34,393913300,0,0x0,8
tick,0x7ffc909efd34,393929364,0,0x0,8
tick,0x7ffc909efd34,393944308,0,0x0,8
tick,0x7ffc909efd34,393959225,0,0x0,8
tick,0x7ffc909efd34,393975527,0,0x0,8
tick,0x7ffc909efd34,393990897,0,0x0,8
tick,0x7ffc909efd34,394007181,0,0x0,8
tick,0x7ffc909efd34,394022448,0,0x0,8
tick,0x7ffc909efd34,394038067,0,0x0,8
tick,0x7ffc909efd34,394054094,0,0x0,8
tick,0x7ffc909efd34,394070019,0,0x0,8
tick,0x7ffc909efd34,394084480,0,0x0,8
tick,0x7ffc909efd34,394099562,0,0x0,8
tick,0x7ffc909efd34,394114823,0,0x0,8
tick,0x7ffc909efd34,394130529,0,0x0,8
tick,0x7ffc909efd34,394145938,0,0x0,8
tick,0x7ffc909efd34,394161664,0,0x0,8
tick,0x7ffc909efd34,394177218,0,0x0,8
tick,0x7ffc909efd34,394192525,0,0x0,8
tick,0x7ffc909efd34,394208042,0,0x0,8
tick,0x7ffc909efd34,394223410,0,0x0,8
tick,0x7ffc909efd34,394239541,0,0x0,8
tick,0x7ffc909efd34,394254837,0,0x0,8
tick,0x7ffc909efd34,394270548,0,0x0,8
tick,0x7ffc909efd34,394285851,0,0x0,8
tick,0x7ffc909efd34,394301079,0,0x0,8
tick,0x7ffc909efd34,394316297,0,0x0,8
tick,0x7ffc909efd34,394331751,0,0x0,8
tick,0x7ffc909efd34,394346459,0,0x0,8
tick,0x7ffc909efd34,394362023,0,0x0,8
tick,0x7ffc909efd34,394378377,0,0x0,8
tick,0x7ffc909efd34,394394002,0,0x0,8
tick,0x7ffc909efd34,394409262,0,0x0,8
tick,0x7ffc909efd34,394424830,0,0x0,8
tick,0x7ffc909efd34,394440264,0,0x0,8
tick,0x7ffc909efd34,394455488,0,0x0,8
tick,0x7ffc909efd34,394470800,0,0x0,8
tick,0x7ffc909efd34,394486322,0,0x0,8
tick,0x7ffc909efd34,394502254,0,0x0,8
tick,0x7ffc909efd34,394517832,0,0x0,8
tick,0x7ffc909efd34,394533127,0,0x0,8
tick,0x7ffc909efd34,394548934,0,0x0,8
tick,0x7ffc909efd34,394564469,0,0x0,8
tick,0x7ffc909efd34,394580610,0,0x0,8
tick,0x7ffc909efd34,394596157,0,0x0,8
tick,0x7ffc909efd34,394612445,0,0x0,8
tick,0x7ffc909efd34,394627695,0,0x0,8
tick,0x7ffc909efd34,394643235,0,0x0,8
tick,0x7ffc909efd34,394658609,0,0x0,8
tick,0x7ffc909efd34,394674142,0,0x0,8
tick,0x7ffc909efd34,394690239,0,0x0,8
tick,0x7ffc909efd34,394705717,0,0x0,8
tick,0x7ffc909efd34,394721124,0,0x0,8
tick,0x7ffc909efd34,394737186,0,0x0,8
tick,0x7ffc909efd34,394753245,0,0x0,8
tick,0x7ffc909efd34,394768703,0,0x0,8
tick,0x7ffc909efd34,394784792,0,0x0,8
tick,0x7ffc909efd34,394800300,0,0x0,8
tick,0x7ffc909efd34,394815991,0,0x0,8
tick,0x7ffc909efd34,394831529,0,0x0,8
tick,0x7ffc909efd34,394847027,0,0x0,8
tick,0x7ffc909efd34,394862424,0,0x0,8
tick,0x7ffc909efd34,394878402,0,0x0,8
tick,0x7ffc909efd34,394893809,0,0x0,8
tick,0x7ffc909efd34,394909211,0,0x0,8
tick,0x7ffc909efd34,394925307,0,0x0,8
tick,0x7ffc909efd34,394940564,0,0x0,8
tick,0x7ffc909efd34,394956165,0,0x0,8
tick,0x7ffc909efd34,394971596,0,0x0,8
tick,0x7ffc909efd34,394986912,0,0x0,8
tick,0x7ffc909efd34,395002057,0,0x0,8
tick,0x7ffc909efd34,395018154,0,0x0,8
tick,0x7ffc909efd34,395033392,0,0x0,8
tick,0x7ffc909efd34,395049575,0,0x0,8
tick,0x7ffc909efd34,395065545,0,0x0,8
tick,0x7ffc909efd34,395080595,0,0x0,8
tick,0x7ffc909efd34,395095946,0,0x0,8
tick,0x7ffc909efd34,395112029,0,0x0,8
tick,0x7ffc909efd34,395127444,0,0x0,8
tick,0x7ffc909efd34,395143430,0,0x0,8
tick,0x7ffc909efd34,395158301,0,0x0,8
tick,0x7ffc909efd34,395174056,0,0x0,8
tick,0x7ffc909efd34,395189120,0,0x0,8
tick,0x7ffc909efd34,395204567,0,0x0,8
tick,0x7ffc909efd34,395220145,0,0x0,8
tick,0x7ffc909efd34,395235497,0,0x0,8
tick,0x7ffc909efd34,395250841,0,0x0,8
tick,0x7ffc909efd34,395266479,0,0x0,8
tick,0x7ffc909efd34,395281305,0,0x0,8
tick,0x7ffc909efd34,395296788,0,0x0,8
tick,0x7ffc909efd34,395312801,0,0x0,8
tick,0x7ffc909efd34,395328439,0,0x0,8
tick,0x7ffc909efd34,395343403,0,0x0,8
tick,0x7ffc909efd34,395358142,0,0x0,8
tick,0x7ffc909efd34,395373645,0,0x0,8
tick,0x7ffc909efd34,395389141,0,0x0,8
tick,0x7ffc909efd34,395404592,0,0x0,8
tick,0x7ffc909efd34,395420580,0,0x0,8
tick,0x7ffc909efd34,395436130,0,0x0,8
tick,0x7ffc909efd34,395452005,0,0x0,8
tick,0x7ffc909efd34,395468019,0,0x0,8
tick,0x7ffc909efd34,395483507,0,0x0,8
tick,0x7ffc909efd34,395500125,0,0x0,8
tick,0x7ffc909efd34,395516410,0,0x0,8
tick,0x7ffc909efd34,395531555,0,0x0,8
tick,0x7ffc909efd34,395546995,0,0x0,8
tick,0x7ffc909efd34,395562826,0,0x0,8
tick,0x7ffc909efd34,395578095,0,0x0,8
tick,0x7ffc909efd34,395594256,0,0x0,8
tick,0x7ffc909efd34,395609960,0,0x0,8
tick,0x7ffc909efd34,395625163,0,0x0,8
tick,0x7ffc909efd34,395640651,0,0x0,8
tick,0x7ffc909efd34,395656644,0,0x0,8
tick,0x7ffc909efd34,395672498,0,0x0,8
tick,0x7ffc909efd34,395687904,0,0x0,8
tick,0x7ffc909efd34,395703843,0,0x0,8
tick,0x7ffc909efd34,395719163,0,0x0,8
tick,0x7ffc909efd34,395734896,0,0x0,8
tick,0x7ffc909efd34,395750856,0,0x0,8
tick,0x7ffc909efd34,395766650,0,0x0,8
tick,0x7ffc909efd34,395783127,0,0x0,8
tick,0x7ffc909efd34,395797195,0,0x0,8
tick,0x7ffc909efd34,395812925,0,0x0,8
tick,0x7ffc909efd34,395828292,0,0x0,8
tick,0x7ffc909efd34,395843382,0,0x0,8
tick,0x7ffc909efd34,395859259,0,0x0,8
tick,0x7ffc909efd34,395875015,0,0x0,8
tick,0x7ffc909efd34,395891134,0,0x0,8
tick,0x7ffc909efd34,395906972,0,0x0,8
tick,0x7ffc909efd34,395923014,0,0x0,8
tick,0x7ffc909efd34,395939034,0,0x0,8
tick,0x7ffc909efd34,395955052,0,0x0,8
tick,0x7ffc909efd34,395970757,0,0x0,8
tick,0x7ffc909efd34,395985857,0,0x0,8
tick,0x7ffc909efd34,396000929,0,0x0,8
tick,0x7ffc909efd34,396016396,0,0x0,8
tick,0x7ffc909efd34,396032392,0,0x0,8
tick,0x7ffc909efd34,396047017,0,0x0,8
tick,0x7ffc909efd34,396062433,0,0x0,8
tick,0x7ffc909efd34,396077630,0,0x0,8
tick,0x7ffc909efd34,396093412,0,0x0,8
tick,0x7ffc909efd34,396108571,0,0x0,8
tick,0x7ffc909efd34,396123960,0,0x0,8
tick,0x7ffc909efd34,396139289,0,0x0,8
tick,0x7ffc909efd34,396154444,0,0x0,8
tick,0x7ffc909efd34,396170015,0,0x0,8
tick,0x7ffc909efd34,396185406,0,0x0,8
tick,0x7ffc909efd34,396200686,0,0x0,8
tick,0x7ffc909efd34,396216792,0,0x0,8
tick,0x7ffc909efd34,396232510,0,0x0,8
tick,0x7ffc909efd34,396249379,0,0x0,8
tick,0x7ffc909efd34,396264454,0,0x0,8
tick,0x7ffc909efd34,396279846,0,0x0,8
tick,0x7ffc909efd34,396295330,0,0x0,8
tick,0x7ffc909efd34,396311159,0,0x0,8
tick,0x7ffc909efd34,396326192,0,0x0,8
tick,0x7ffc909efd34,396342019,0,0x0,8
tick,0x7ffc909efd34,396357251,0,0x0,8
tick,0x7ffc909efd34,396372624,0,0x0,8
tick,0x7ffc909efd34,396387838,0,0x0,8
tick,0x7ffc909efd34,396403921,0,0x0,8
tick,0x7ffc909efd34,396419250,0,0x0,8
tick,0x7ffc909efd34,396434817,0,0x0,8
tick,0x7ffc909efd34,396449910,0,0x0,8
tick,0x7ffc909efd34,396466051,0,0x0,8
tick,0x7ffc909efd34,396480786,0,0x0,8
tick,0x7ffc909efd34,396496234,0,0x0,8
tick,0x7ffc909efd34,396511471,0,0x0,8
tick,0x7ffc909efd34,396527166,0,0x0,8
tick,0x7ffc909efd34,396543045,0,0x0,8
tick,0x7ffc909efd34,396558441,0,0x0,8
tick,0x7ffc909efd34,396573584,0,0x0,8
tick,0x7ffc909efd34,396589500,0,0x0,8
tick,0x7ffc909efd34,396605071,0,0x0,8
tick,0x7ffc909efd34,396620713,0,0x0,8
tick,0x7ffc909efd34,396635981,0,0x0,8
tick,0x7ffc909efd34,396651907,0,0x0,8
tick,0x7ffc909efd34,396667384,0,0x0,8
tick,0x7ffc909efd34,396682715,0,0x0,8
tick,0x7ffc909efd34,396698982,0,0x0,8
tick,0x7ffc909efd34,396713660,0,0x0,8
tick,0x7ffc909efd34,396729133,0,0x0,8
tick,0x7ffc909efd34,396744758,0,0x0,8
tick,0x7ffc909efd34,396760377,0,0x0,8
tick,0x7ffc909efd34,396775641,0,0x0,8
tick,0x7ffc909efd34,396790858,0,0x0,8
tick,0x7ffc909efd34,396806754,0,0x0,8
tick,0x7ffc909efd34,396822234,0,0x0,8
tick,0x7ffc909efd34,396837827,0,0x0,8
tick,0x7ffc909efd34,396853328,0,0x0,8
tick,0x7ffc909efd34,396869293,0,0x0,8
tick,0x7ffc909efd34,396884226,0,0x0,8
tick,0x7ffc909efd34,396899625,0,0x0,8
tick,0x7ffc909efd34,396915278,0,0x0,8
tick,0x7ffc909efd34,396931374,0,0x0,8
tick,0x7ffc909efd34,396946697,0,0x0,8
tick,0x7ffc909efd34,396962172,0,0x0,8
tick,0x7ffc909efd34,396978204,0,0x0,8
tick,0x7ffc909efd34,396993803,0,0x0,8
tick,0x7ffc909efd34,397009350,0,0x0,8
tick,0x7ffc909efd34,397025677,0,0x0,8
tick,0x7ffc909efd34,397041000,0,0x0,8
tick,0x7ffc909efd34,397056724,0,0x0,8
tick,0x7ffc909efd34,397071432,0,0x0,8
tick,0x7ffc909efd34,397087096,0,0x0,8
tick,0x7ffc909efd34,397102066,0,0x0,8
tick,0x7ffc909efd34,397117629,0,0x0,8
tick,0x7ffc909efd34,397133618,0,0x0,8
tick,0x7ffc909efd34,397149218,0,0x0,8
tick,0x7ffc909efd34,397165327,0,0x0,8
tick,0x7ffc909efd34,397181203,0,0x0,8
tick,0x7ffc909efd34,397196611,0,0x0,8
tick,0x7ffc909efd34,397212056,0,0x0,8
tick,0x7ffc909efd34,397227529,0,0x0,8
tick,0x7ffc909efd34,397243296,0,0x0,8
tick,0x7ffc909efd34,397259601,0,0x0,8
tick,0x7ffc909efd34,397275131,0,0x0,8
tick,0x7ffc909efd34,397290665,0,0x0,8
tick,0x7ffc909efd34,397306184,0,0x0,8
tick,0x7ffc909efd34,397321658,0,0x0,8
tick,0x7ffc909efd34,397337216,0,0x0,8
tick,0x7ffc909efd34,397352806,0,0x0,8
tick,0x7ffc909efd34,397368897,0,0x0,8
tick,0x7ffc909efd34,397384066,0,0x0,8
tick,0x7ffc909efd34,397400322,0,0x0,8
tick,0x7ffc909efd34,397416017,0,0x0,8
tick,0x7ffc909efd34,397431143,0,0x0,8
tick,0x7ffc909efd34,397446370,0,0x0,8
tick,0x7ffc909efd34,397462426,0,0x0,8
tick,0x7ffc909efd34,397478059,0,0x0,8
tick,0x7ffc909efd34,397493535,0,0x0,8
tick,0x7ffc909efd34,397508860,0,0x0,8
tick,0x7ffc909efd34,397524059,0,0x0,8
tick,0x7ffc909efd34,397539500,0,0x0,8
tick,0x7ffc909efd34,397555359,0,0x0,8
tick,0x7ffc909efd34,397570934,0,0x0,8
tick,0x7ffc909efd34,397587273,0,0x0,8
tick,0x7ffc909efd34,397603260,0,0x0,8
tick,0x7ffc909efd34,397619342,0,0x0,8
tick,0x7ffc909efd34,397635392,0,0x0,8
tick,0x7ffc909efd34,397650778,0,0x0,8
tick,0x7ffc909efd34,397666786,0,0x0,8
tick,0x7ffc909efd34,397682650,0,0x0,8
tick,0x7ffc909efd34,397698967,0,0x0,8
tick,0x7ffc909efd34,397713553,0,0x0,8
tick,0x7ffc909efd34,397728990,0,0x0,8
tick,0x7ffc909efd34,397744452,0,0x0,8
tick,0x7ffc909efd34,397759699,0,0x0,8
tick,0x7ffc909efd34,397774923,0,0x0,8
tick,0x7ffc909efd34,397790443,0,0x0,8
tick,0x7ffc909efd34,397805701,0,0x0,8
tick,0x7ffc909efd34,397821772,0,0x0,8
tick,0x7ffc909efd34,397837262,0,0x0,8
tick,0x7ffc909efd34,397852987,0,0x0,8
tick,0x7ffc909efd34,397867894,0,0x0,8
tick,0x7ffc909efd34,397883042,0,0x0,8
tick,0x7ffc909efd34,397898654,0,0x0,8
tick,0x7ffc909efd34,397913609,0,0x0,8
tick,0x7ffc909efd34,397929477,0,0x0,8
tick,0x7ffc909efd34,397945452,0,0x0,8
tick,0x7ffc909efd34,397960686,0,0x0,8
tick,0x7ffc909efd34,397976238,0,0x0,8
tick,0x7ffc909efd34,397991552,0,0x0,8
tick,0x7ffc909efd34,398006818,0,0x0,8
tick,0x7ffc909efd34,398022266,0,0x0,8
tick,0x7ffc909efd34,398037469,0,0x0,8
tick,0x7ffc909efd34,398053702,0,0x0,8
tick,0x7ffc909efd34,398069837,0,0x0,8
tick,0x7ffc909efd34,398085085,0,0x0,8
tick,0x7ffc909efd34,398101015,0,0x0,8
tick,0x7ffc909efd34,398116671,0,0x0,8
tick,0x7ffc909efd34,398133335,0,0x0,8
tick,0x7ffc909efd34,398149694,0,0x0,8
tick,0x7ffc909efd34,398163970,0,0x0,8
tick,0x7ffc909efd34,398179173,0,0x0,8
tick,0x7ffc909efd34,398194183,0,0x0,8
tick,0x7ffc909efd34,398209156,0,0x0,8
tick,0x7ffc909efd34,398224364,0,0x0,8
tick,0x7ffc909efd34,398239969,0,0x0,8
tick,0x7ffc909efd34,398254795,0,0x0,8
tick,0x7ffc909efd34,398269948,0,0x0,8
tick,0x7ffc909efd34,398285630,0,0x0,8
tick,0x7ffc909efd34,398301030,0,0x0,8
tick,0x7ffc909efd34,398316381,0,0x0,8
tick,0x7ffc909efd34,398334428,0,0x0,8
tick,0x7ffc909efd34,398347891,0,0x0,8
tick,0x7ffc909efd34,398364371,0,0x0,8
tick,0x7ffc909efd34,398379789,0,0x0,8
tick,0x7ffc909efd34,398396690,0,0x0,8
tick,0x7ffc909efd34,398411175,0,0x0,8
tick,0x7ffc909efd34,398428449,0,0x0,8
tick,0x7ffc909efd34,398443094,0,0x0,8
tick,0x7ffc909efd34,398458192,0,0x0,8
tick,0x7ffc909efd34,398473193,0,0x0,8
tick,0x7ffc909efd34,398488366,0,0x0,8
tick,0x7ffc909efd34,398504194,0,0x0,8
tick,0x7ffc909efd34,398519401,0,0x0,8
tick,0x7ffc909efd34,398535036,0,0x0,8
tick,0x7ffc909efd34,398550832,0,0x0,8
tick,0x7ffc909efd34,398565913,0,0x0,8
tick,0x7ffc909efd34,398582659,0,0x0,8
tick,0x7ffc909efd34,398597451,0,0x0,8
tick,0x7ffc909efd34,398613040,0,0x0,8
tick,0x7ffc909efd34,398628392,0,0x0,8
tick,0x7ffc909efd34,398644491,0,0x0,8
tick,0x7ffc909efd34,398659764,0,0x0,8
tick,0x7ffc909efd34,398675315,0,0x0,8
tick,0x7ffc909efd34,398691116,0,0x0,8
tick,0x7ffc909efd34,398707217,0,0x0,8
tick,0x7ffc909efd34,398722416,0,0x0,8
tick,0x7ffc909efd34,398737689,0,0x0,8
tick,0x7ffc909efd34,398752842,0,0x0,8
tick,0x7ffc909efd34,398768533,0,0x0,8
tick,0x7ffc909efd34,398784329,0,0x0,8
tick,0x7ffc909efd34,398800208,0,0x0,8
tick,0x7ffc909efd34,398815913,0,0x0,8
tick,0x7ffc909efd34,398829922,0,0x0,8
tick,0x7ffc909efd34,398845446,0,0x0,8
tick,0x7ffc909efd34,398860167,0,0x0,8
tick,0x7ffc909efd34,398875107,0,0x0,8
tick,0x7ffc909efd34,398890281,0,0x0,8
tick,0x7ffc909efd34,398905484,0,0x0,8
tick,0x7ffc909efd34,398921480,0,0x0,8
tick,0x7ffc909efd34,398936808,0,0x0,8
tick,0x7ffc909efd34,398952640,0,0x0,8
tick,0x7ffc909efd34,398967540,0,0x0,8
tick,0x7ffc909efd34,398982963,0,0x0,8
tick,0x7ffc909efd34,398998313,0,0x0,8
tick,0x7ffc909efd34,399013461,0,0x0,8
tick,0x7ffc909efd34,399028584,0,0x0,8
tick,0x7ffc909efd34,399044665,0,0x0,8
tick,0x7ffc909efd34,399060812,0,0x0,8
tick,0x7ffc909efd34,399076789,0,0x0,8
tick,0x7ffc909efd34,399092104,0,0x0,8
tick,0x7ffc909efd34,399107371,0,0x0,8
tick,0x7ffc909efd34,399123264,0,0x0,8
tick,0x7ffc909efd34,399138401,0,0x0,8
tick,0x7ffc909efd34,399153768,0,0x0,8
tick,0x7ffc909efd34,399169819,0,0x0,8
tick,0x7ffc909efd34,399185339,0,0x0,8
tick,0x7ffc909efd34,399200776,0,0x0,8
tick,0x7ffc909efd34,399217063,0,0x0,8
tick,0x7ffc909efd34,399231825,0,0x0,8
tick,0x7ffc909efd34,399246772,0,0x0,8
tick,0x7ffc909efd34,399261836,0,0x0,8
tick,0x7ffc909efd34,399277240,0,0x0,8
tick,0x7ffc909efd34,399291914,0,0x0,8
tick,0x7ffc909efd34,399307544,0,0x0,8
tick,0x7ffc909efd34,399322261,0,0x0,8
tick,0x7ffc909efd34,399337281,0,0x0,8
tick,0x7ffc909efd34,399353326,0,0x0,8
tick,0x7ffc909efd34,399368791,0,0x0,8
tick,0x7ffc909efd34,399383636,0,0x0,8
tick,0x7ffc909efd34,399398999,0,0x0,8
tick,0x7ffc909efd34,399414890,0,0x0,8
tick,0x7ffc909efd34,399430155,0,0x0,8
tick,0x7ffc909efd34,399445605,0,0x0,8
tick,0x7ffc909efd34,399461007,0,0x0,8
tick,0x7ffc909efd34,399475587,0,0x0,8
tick,0x7ffc909efd34,399491265,0,0x0,8
tick,0x7ffc909efd34,399507136,0,0x0,8
tick,0x7ffc909efd34,399523223,0,0x0,8
tick,0x7ffc909efd34,399538737,0,0x0,8
tick,0x7ffc909efd34,399553793,0,0x0,8
tick,0x7ffc909efd34,399569336,0,0x0,8
tick,0x7ffc909efd34,399584508,0,0x0,8
tick,0x7ffc909efd34,399600497,0,0x0,8
tick,0x7ffc909efd34,399615646,0,0x0,8
tick,0x7ffc909efd34,399631380,0,0x0,8
tick,0x7ffc909efd34,399646461,0,0x0,8
tick,0x7ffc909efd34,399661884,0,0x0,8
tick,0x7ffc909efd34,399677277,0,0x0,8
tick,0x7ffc909efd34,399692454,0,0x0,8
tick,0x7ffc909efd34,399708411,0,0x0,8
tick,0x7ffc909efd34,399723808,0,0x0,8
tick,0x7ffc909efd34,399739209,0,0x0,8
tick,0x7ffc909efd34,399755624,0,0x0,8
tick,0x7ffc909efd34,399771314,0,0x0,8
tick,0x7ffc909efd34,399787239,0,0x0,8
tick,0x7ffc909efd34,399803129,0,0x0,8
tick,0x7ffc909efd34,399818469,0,0x0,8
tick,0x7ffc909efd34,399834161,0,0x0,8
tick,0x7ffc909efd34,399849488,0,0x0,8
tick,0x7ffc909efd34,399864971,0,0x0,8
tick,0x7ffc909efd34,399880272,0,0x0,8
tick,0x7ffc909efd34,399896228,0,0x0,8
tick,0x7ffc909efd34,399912444,0,0x0,8
tick,0x7ffc909efd34,399928009,0,0x0,8
tick,0x7ffc909efd34,399943181,0,0x0,8
tick,0x7ffc909efd34,399958492,0,0x0,8
tick,0x7ffc909efd34,399973967,0,0x0,8
tick,0x7ffc909efd34,399989968,0,0x0,8
tick,0x7ffc909efd34,400006007,0,0x0,8
tick,0x7ffc909efd34,400021271,0,0x0,8
tick,0x7ffc909efd34,400036700,0,0x0,8
tick,0x7ffc909efd34,400052573,0,0x0,8
tick,0x7ffc909efd34,400067868,0,0x0,8
tick,0x7ffc909efd34,400083146,0,0x0,8
tick,0x7ffc909efd34,400098690,0,0x0,8
tick,0x7ffc909efd34,400113657,0,0x0,8
tick,0x7ffc909efd34,400129281,0,0x0,8
tick,0x7ffc909efd34,400144887,0,0x0,8
tick,0x7ffc909efd34,400160104,0,0x0,8
tick,0x7ffc909efd34,400176112,0,0x0,8
tick,0x7ffc909efd34,400191544,0,0x0,8
tick,0x7ffc909efd34,400207088,0,0x0,8
tick,0x7ffc909efd34,400222709,0,0x0,8
tick,0x7ffc909efd34,400238391,0,0x0,8
tick,0x7ffc909efd34,400253749,0,0x0,8
tick,0x7ffc909efd34,400269003,0,0x0,8
tick,0x7ffc909efd34,400284978,0,0x0,8
tick,0x7ffc909efd34,400300345,0,0x0,8
tick,0x7ffc909efd34,400315536,0,0x0,8
tick,0x7ffc909efd34,400331260,0,0x0,8
tick,0x7ffc909efd34,400346410,0,0x0,8
tick,0x7ffc909efd34,400362536,0,0x0,8
tick,0x7ffc909efd34,400377628,0,0x0,8
tick,0x7ffc909efd34,400393097,0,0x0,8
tick,0x7ffc909efd34,400408061,0,0x0,8
tick,0x7ffc909efd34,400423389,0,0x0,8
tick,0x7ffc909efd34,400438618,0,0x0,8
tick,0x7ffc909efd34,400454642,0,0x0,8
tick,0x7ffc909efd34,400470155,0,0x0,8
tick,0x7ffc909efd34,400486441,0,0x0,8
tick,0x7ffc909efd34,400501427,0,0x0,8
tick,0x7ffc909efd34,400517471,0,0x0,8
tick,0x7ffc909efd34,400533621,0,0x0,8
tick,0x7ffc909efd34,400549426,0,0x0,8
tick,0x7ffc909efd34,400564846,0,0x0,8
tick,0x7ffc909efd34,400580004,0,0x0,8
tick,0x7ffc909efd34,400595329,0,0x0,8
tick,0x7ffc909efd34,400610648,0,0x0,8
tick,0x7ffc909efd34,400626417,0,0x0,8
tick,0x7ffc909efd34,400641983,0,0x0,8
tick,0x7ffc909efd34,400657492,0,0x0,8
tick,0x7ffc909efd34,400673151,0,0x0,8
tick,0x7ffc909efd34,400689283,0,0x0,8
tick,0x7ffc909efd34,400704629,0,0x0,8
tick,0x7ffc909efd34,400720072,0,0x0,8
tick,0x7ffc909efd34,400735843,0,0x0,8
tick,0x7ffc909efd34,400751103,0,0x0,8
tick,0x7ffc909efd34,400766689,0,0x0,8
tick,0x7ffc909efd34,400782381,0,0x0,8
tick,0x7ffc909efd34,400798034,0,0x0,8
tick,0x7ffc909efd34,400813308,0,0x0,8
tick,0x7ffc909efd34,400828765,0,0x0,8
tick,0x7ffc909efd34,400844255,0,0x0,8
tick,0x7ffc909efd34,400859846,0,0x0,8
tick,0x7ffc909efd34,400875454,0,0x0,8
tick,0x7ffc909efd34,400890655,0,0x0,8
tick,0x7ffc909efd34,400905859,0,0x0,8
tick,0x7ffc909efd34,400921190,0,0x0,8
tick,0x7ffc909efd34,400936946,0,0x0,8
tick,0x7ffc909efd34,400952404,0,0x0,8
tick,0x7ffc909efd34,400968485,0,0x0,8
tick,0x7ffc909efd34,400984247,0,0x0,8
tick,0x7ffc909efd34,401000283,0,0x0,8
tick,0x7ffc909efd34,401015646,0,0x0,8
tick,0x7ffc909efd34,401031573,0,0x0,8
tick,0x7ffc909efd34,401046819,0,0x0,8
tick,0x7ffc909efd34,401062026,0,0x0,8
tick,0x7ffc909efd34,401077236,0,0x0,8
tick,0x7ffc909efd34,401092140,0,0x0,8
tick,0x7ffc909efd34,401107148,0,0x0,8
tick,0x7ffc909efd34,401123043,0,0x0,8
tick,0x7ffc909efd34,401138354,0,0x0,8
tick,0x7ffc909efd34,401153521,0,0x0,8
tick,0x7ffc909efd34,401168423,0,0x0,8
tick,0x7ffc909efd34,401183366,0,0x0,8
tick,0x7ffc909efd34,401198678,0,0x0,8
tick,0x7ffc909efd34,401214459,0,0x0,8
tick,0x7ffc909efd34,401229447,0,0x0,8
tick,0x7ffc909efd34,401244543,0,0x0,8
tick,0x7ffc909efd34,401259876,0,0x0,8
tick,0x7ffc909efd34,401275067,0,0x0,8
tick,0x7ffc909efd34,401291450,0,0x0,8
tick,0x7ffc909efd34,401307142,0,0x0,8
tick,0x7ffc909efd34,401322606,0,0x0,8
tick,0x7ffc909efd34,401338302,0,0x0,8
tick,0x7ffc909efd34,401354257,0,0x0,8
tick,0x7ffc909efd34,401369683,0,0x0,8
tick,0x7ffc909efd34,401385189,0,0x0,8
tick,0x7ffc909efd34,401400579,0,0x0,8
tick,0x7ffc909efd34,401416796,0,0x0,8
tick,0x7ffc909efd34,401433134,0,0x0,8
tick,0x7ffc909efd34,401448346,0,0x0,8
tick,0x7ffc909efd34,401464378,0,0x0,8
tick,0x7ffc909efd34,401479378,0,0x0,8
tick,0x7ffc909efd34,401495279,0,0x0,8
tick,0x7ffc909efd34,401510616,0,0x0,8
tick,0x7ffc909efd34,401526564,0,0x0,8
tick,0x7ffc909efd34,401542555,0,0x0,8
tick,0x7ffc909efd34,401558084,0,0x0,8
tick,0x7ffc909efd34,401573548,0,0x0,8
tick,0x7ffc909efd34,401589369,0,0x0,8
tick,0x7ffc909efd34,401604795,0,0x0,8
tick,0x7ffc909efd34,401620415,0,0x0,8
tick,0x7ffc909efd34,401635663,0,0x0,8
tick,0x7ffc909efd34,401650877,0,0x0,8
tick,0x7ffc909efd34,401666439,0,0x0,8
tick,0x7ffc909efd34,401681752,0,0x0,8
tick,0x7ffc909efd34,401697255,0,0x0,8
tick,0x7ffc909efd34,401712632,0,0x0,8
tick,0x7ffc909efd34,401728398,0,0x0,8
tick,0x7ffc909efd34,401743588,0,0x0,8
tick,0x7ffc909efd34,401759113,0,0x0,8
tick,0x7ffc909efd34,401774439,0,0x0,8
tick,0x7ffc909efd34,401790106,0,0x0,8
tick,0x7ffc909efd34,401805600,0,0x0,8
tick,0x7ffc909efd34,401820860,0,0x0,8
tick,0x7ffc909efd34,401836613,0,0x0,8
tick,0x7ffc909efd34,401851958,0,0x0,8
tick,0x7ffc909efd34,401867102,0,0x0,8
tick,0x7ffc909efd34,401882593,0,0x0,8
tick,0x7ffc909efd34,401898727,0,0x0,8
tick,0x7ffc909efd34,401914771,0,0x0,8
tick,0x7ffc909efd34,401930193,0,0x0,8
tick,0x7ffc909efd34,401945350,0,0x0,8
tick,0x7ffc909efd34,401960888,0,0x0,8
tick,0x7ffc909efd34,401976203,0,0x0,8
tick,0x7ffc909efd34,401992557,0,0x0,8
tick,0x7ffc909efd34,402008482,0,0x0,8
tick,0x7ffc909efd34,402024212,0,0x0,8
tick,0x7ffc909efd34,402039632,0,0x0,8
tick,0x7ffc909efd34,402054905,0,0x0,8
tick,0x7ffc909efd34,402071088,0,0x0,8
tick,0x7ffc909efd34,402085653,0,0x0,8
tick,0x7ffc909efd34,402100882,0,0x0,8
tick,0x7ffc909efd34,402116427,0,0x0,8
tick,0x7ffc909efd34,402131583,0,0x0,8
tick,0x7ffc909efd34,402147611,0,0x0,8
tick,0x7ffc909efd34,402162644,0,0x0,8
tick,0x7ffc909efd34,402178690,0,0x0,8
tick,0x7ffc909efd34,402194135,0,0x0,8
tick,0x7ffc909efd34,402209913,0,0x0,8
tick,0x7ffc909efd34,402225412,0,0x0,8
tick,0x7ffc909efd34,402241249,0,0x0,8
tick,0x7ffc909efd34,402257080,0,0x0,8
tick,0x7ffc909efd34,402272981,0,0x0,8
tick,0x7ffc909efd34,402288354,0,0x0,8
tick,0x7ffc909efd34,402304320,0,0x0,8
tick,0x7ffc909efd34,402319824,0,0x0,8
tick,0x7ffc909efd34,402335397,0,0x0,8
tick,0x7ffc909efd34,402351285,0,0x0,8
tick,0x7ffc909efd34,402366171,0,0x0,8
tick,0x7ffc909efd34,402381471,0,0x0,8
tick,0x7ffc909efd34,402397004,0,0x0,8
tick,0x7ffc909efd34,402412890,0,0x0,8
tick,0x7ffc909efd34,402427590,0,0x0,8
tick,0x7ffc909efd34,402443143,0,0x0,8
tick,0x7ffc909efd34,402459109,0,0x0,8
tick,0x7ffc909efd34,402474663,0,0x0,8
tick,0x7ffc909efd34,402490321,0,0x0,8
tick,0x7ffc909efd34,402505611,0,0x0,8
tick,0x7ffc909efd34,402521352,0,0x0,8
tick,0x7ffc909efd34,402536596,0,0x0,8
tick,0x7ffc909efd34,402551987,0,0x0,8
tick,0x7ffc909efd34,402568188,0,0x0,8
tick,0x7ffc909efd34,402583530,0,0x0,8
tick,0x7ffc909efd34,402598928,0,0x0,8
tick,0x7ffc909efd34,402614830,0,0x0,8
tick,0x7ffc909efd34,402630239,0,0x0,8
tick,0x7ffc909efd34,402646208,0,0x0,8
tick,0x7ffc909efd34,402662502,0,0x0,8
tick,0x7ffc909efd34,402678043,0,0x0,8
tick,0x7ffc909efd34,402693850,0,0x0,8
tick,0x7ffc909efd34,402708721,0,0x0,8
tick,0x7ffc909efd34,402723958,0,0x0,8
tick,0x7ffc909efd34,402739687,0,0x0,8
tick,0x7ffc909efd34,402754999,0,0x0,8
tick,0x7ffc909efd34,402771003,0,0x0,8
tick,0x7ffc909efd34,402786706,0,0x0,8
tick,0x7ffc909efd34,402801901,0,0x0,8
tick,0x7ffc909efd34,402817083,0,0x0,8
tick,0x7ffc909efd34,402832845,0,0x0,8
tick,0x7ffc909efd34,402849032,0,0x0,8
tick,0x7ffc909efd34,402864900,0,0x0,8
tick,0x7ffc909efd34,402880794,0,0x0,8
tick,0x7ffc909efd34,402896543,0,0x0,8
tick,0x7ffc909efd34,402912261,0,0x0,8
tick,0x7ffc909efd34,402927381,0,0x0,8
tick,0x7ffc909efd34,402942591,0,0x0,8
tick,0x7ffc909efd34,402958381,0,0x0,8
tick,0x7ffc909efd34,402974254,0,0x0,8
tick,0x7ffc909efd34,402989761,0,0x0,8
tick,0x7ffc909efd34,403005397,0,0x0,8
tick,0x7ffc909efd34,403021141,0,0x0,8
tick,0x7ffc909efd34,403036664,0,0x0,8
tick,0x7ffc909efd34,403052042,0,0x0,8
tick,0x7ffc909efd34,403067251,0,0x0,8
tick,0x7ffc909efd34,403082849,0,0x0,8
tick,0x7ffc909efd34,403097866,0,0x0,8
tick,0x7ffc909efd34,403112961,0,0x0,8
tick,0x7ffc909efd34,403128321,0,0x0,8
tick,0x7ffc909efd34,403144115,0,0x0,8
tick,0x7ffc909efd34,403159276,0,0x0,8
tick,0x7ffc909efd34,403174415,0,0x0,8
tick,0x7ffc909efd34,403190378,0,0x0,8
tick,0x7ffc909efd34,403206004,0,0x0,8
tick,0x7ffc909efd34,403221409,0,0x0,8
tick,0x7ffc909efd34,403237286,0,0x0,8
tick,0x7ffc909efd34,403253147,0,0x0,8
tick,0x7ffc909efd34,403268956,0,0x0,8
tick,0x7ffc909efd34,403284699,0,0x0,8
tick,0x7ffc909efd34,403300686,0,0x0,8
tick,0x7ffc909efd34,403316634,0,0x0,8
tick,0x7ffc909efd34,403331949,0,0x0,8
tick,0x7ffc909efd34,403347735,0,0x0,8
tick,0x7ffc909efd34,403364425,0,0x0,8
tick,0x7ffc909efd34,403379351,0,0x0,8
tick,0x7ffc909efd34,403395821,0,0x0,8
tick,0x7ffc909efd34,403410682,0,0x0,8
tick,0x7ffc909efd34,403426207,0,0x0,8
tick,0x7ffc909efd34,403441696,0,0x0,8
tick,0x7ffc909efd34,403457471,0,0x0,8
tick,0x7ffc909efd34,403473048,0,0x0,8
tick,0x7ffc909efd34,403489214,0,0x0,8
tick,0x7ffc909efd34,403504742,0,0x0,8
tick,0x7ffc909efd34,403520081,0,0x0,8
tick,0x7ffc909efd34,403535709,0,0x0,8
tick,0x7ffc909efd34,403551125,0,0x0,8
tick,0x7ffc909efd34,403566897,0,0x0,8
tick,0x7ffc909efd34,403582935,0,0x0,8
tick,0x7ffc909efd34,403598309,0,0x0,8
tick,0x7ffc909efd34,403613466,0,0x0,8
tick,0x7ffc909efd34,403629141,0,0x0,8
tick,0x7ffc909efd34,403644518,0,0x0,8
tick,0x7ffc909efd34,403660854,0,0x0,8
tick,0x7ffc909efd34,403675721,0,0x0,8
tick,0x7ffc909efd34,403691529,0,0x0,8
tick,0x7ffc909efd34,403707344,0,0x0,8
tick,0x7ffc909efd34,403722963,0,0x0,8
tick,0x7ffc909efd34,403737918,0,0x0,8
tick,0x7ffc909efd34,403753288,0,0x0,8
tick,0x7ffc909efd34,403769172,0,0x0,8
tick,0x7ffc909efd34,403784052,0,0x0,8
tick,0x7ffc909efd34,403799597,0,0x0,8
tick,0x7ffc909efd34,403814999,0,0x0,8
tick,0x7ffc909efd34,403830644,0,0x0,8
tick,0x7ffc909efd34,403845643,0,0x0,8
tick,0x7ffc909efd34,403861112,0,0x0,8
tick,0x7ffc909efd34,403876758,0,0x0,8
tick,0x7ffc909efd34,403892135,0,0x0,8
tick,0x7ffc909efd34,403907259,0,0x0,8
tick,0x7ffc909efd34,403923106,0,0x0,8
tick,0x7ffc909efd34,403939121,0,0x0,8
tick,0x7ffc909efd34,403954547,0,0x0,8
tick,0x7ffc909efd34,403970229,0,0x0,8
tick,0x7ffc909efd34,403985617,0,0x0,8
tick,0x7ffc909efd34,404001243,0,0x0,8
tick,0x7ffc909efd34,404017089,0,0x0,8
tick,0x7ffc909efd34,404033326,0,0x0,8
tick,0x7ffc909efd34,404048754,0,0x0,8
tick,0x7ffc909efd34,404064772,0,0x0,8
tick,0x7ffc909efd34,404080710,0,0x0,8
tick,0x7ffc909efd34,404096256,0,0x0,8
tick,0x7ffc909efd34,404111428,0,0x0,8
tick,0x7ffc909efd34,404127085,0,0x0,8
tick,0x7ffc909efd34,404142625,0,0x0,8
tick,0x7ffc909efd34,404158591,0,0x0,8
tick,0x7ffc909efd34,404174332,0,0x0,8
tick,0x7ffc909efd34,404189988,0,0x0,8
tick,0x7ffc909efd34,404205232,0,0x0,8
tick,0x7ffc909efd34,404220960,0,0x0,8
tick,0x7ffc909efd34,404236247,0,0x0,8
tick,0x7ffc909efd34,404251600,0,0x0,8
tick,0x7ffc909efd34,404267176,0,0x0,8
tick,0x7ffc909efd34,404282105,0,0x0,8
tick,0x7ffc909efd34,404297474,0,0x0,8
tick,0x7ffc909efd34,404312996,0,0x0,8
tick,0x7ffc909efd34,404328409,0,0x0,8
tick,0x7ffc909efd34,404343914,0,0x0,8
tick,0x7ffc909efd34,404359260,0,0x0,8
tick,0x7ffc909efd34,404374861,0,0x0,8
tick,0x7ffc909efd34,404390994,0,0x0,8
tick,0x7ffc909efd34,404406416,0,0x0,8
tick,0x7ffc909efd34,404421995,0,0x0,8
tick,0x7ffc909efd34,404437539,0,0x0,8
tick,0x7ffc909efd34,404452973,0,0x0,8
tick,0x7ffc909efd34,404468766,0,0x0,8
tick,0x7ffc909efd34,404484343,0,0x0,8
tick,0x7ffc909efd34,404499805,0,0x0,8
tick,0x7ffc909efd34,404515005,0,0x0,8
tick,0x7ffc909efd34,404530777,0,0x0,8
tick,0x7ffc909efd34,404546221,0,0x0,8
tick,0x7ffc909efd34,404561674,0,0x0,8
tick,0x7ffc909efd34,404577285,0,0x0,8
tick,0x7ffc909efd34,404592811,0,0x0,8
tick,0x7ffc909efd34,404608938,0,0x0,8
tick,0x7ffc909efd34,404624911,0,0x0,8
tick,0x7ffc909efd34,404640289,0,0x0,8
tick,0x7ffc909efd34,404655857,0,0x0,8
tick,0x7ffc909efd34,404671310,0,0x0,8
tick,0x7ffc909efd34,404687118,0,0x0,8
tick,0x7ffc909efd34,404702851,0,0x0,8
tick,0x7ffc909efd34,404718840,0,0x0,8
tick,0x7ffc909efd34,404733988,0,0x0,8
tick,0x7ffc909efd34,404749645,0,0x0,8
tick,0x7ffc909efd34,404764868,0,0x0,8
tick,0x7ffc909efd34,404780906,0,0x0,8
tick,0x7ffc909efd34,404796396,0,0x0,8
tick,0x7ffc909efd34,404812481,0,0x0,8
tick,0x7ffc909efd34,404827995,0,0x0,8
tick,0x7ffc909efd34,404843294,0,0x0,8
tick,0x7ffc909efd34,404859253,0,0x0,8
tick,0x7ffc909efd34,404874889,0,0x0,8
tick,0x7ffc909efd34,404890158,0,0x0,8
tick,0x7ffc909efd34,404905513,0,0x0,8
tick,0x7ffc909efd34,404920943,0,0x0,8
tick,0x7ffc909efd34,404936434,0,0x0,8
tick,0x7ffc909efd34,404952542,0,0x0,8
tick,0x7ffc909efd34,404968313,0,0x0,8
tick,0x7ffc909efd34,404983301,0,0x0,8
tick,0x7ffc909efd34,404998941,0,0x0,8
tick,0x7ffc909efd34,405014095,0,0x0,8
tick,0x7ffc909efd34,405029341,0,0x0,8
tick,0x7ffc909efd34,405044879,0,0x0,8
tick,0x7ffc909efd34,405060350,0,0x0,8
tick,0x7ffc909efd34,405075852,0,0x0,8
tick,0x7ffc909efd34,405091158,0,0x0,8
tick,0x7ffc909efd34,405107209,0,0x0,8
tick,0x7ffc909efd34,405123104,0,0x0,8
tick,0x7ffc909efd34,405138316,0,0x0,8
tick,0x7ffc909efd34,405153652,0,0x0,8
tick,0x7ffc909efd34,405169502,0,0x0,8
tick,0x7ffc909efd34,405185395,0,0x0,8
tick,0x7ffc909efd34,405200752,0,0x0,8
tick,0x7ffc909efd34,405216490,0,0x0,8
tick,0x7ffc909efd34,405232604,0,0x0,8
tick,0x7ffc909efd34,405248428,0,0x0,8
tick,0x7ffc909efd34,405264531,0,0x0,8
tick,0x7ffc909efd34,405279739,0,0x0,8
tick,0x7ffc909efd34,405295021,0,0x0,8
tick,0x7ffc909efd34,405310323,0,0x0,8
tick,0x7ffc909efd34,405325685,0,0x0,8
tick,0x7ffc909efd34,405340969,0,0x0,8
tick,0x7ffc909efd34,405356634,0,0x0,8
tick,0x7ffc909efd34,405372317,0,0x0,8
tick,0x7ffc909efd34,405387714,0,0x0,8
tick,0x7ffc909efd34,405402940,0,0x0,8
tick,0x7ffc909efd34,405418965,0,0x0,8
tick,0x7ffc909efd34,405434852,0,0x0,8
tick,0x7ffc909efd34,405450822,0,0x0,8
tick,0x7ffc909efd34,405466834,0,0x0,8
tick,0x7ffc909efd34,405482357,0,0x0,8
tick,0x7ffc909efd34,405498006,0,0x0,8
tick,0x7ffc909efd34,405513901,0,0x0,8
tick,0x7ffc909efd34,405529226,0,0x0,8
tick,0x7ffc909efd34,405544443,0,0x0,8
tick,0x7ffc909efd34,405559843,0,0x0,8
tick,0x7ffc909efd34,405575546,0,0x0,8
tick,0x7ffc909efd34,405590903,0,0x0,8
tick,0x7ffc909efd34,405606198,0,0x0,8
tick,0x7ffc909efd34,405621446,0,0x0,8
tick,0x7ffc909efd34,405637042,0,0x0,8
tick,0x7ffc909efd34,405653035,0,0x0,8
tick,0x7ffc909efd34,405668983,0,0x0,8
tick,0x7ffc909efd34,405684829,0,0x0,8
tick,0x7ffc909efd34,405699910,0,0x0,8
tick,0x7ffc909efd34,405715227,0,0x0,8
tick,0x7ffc909efd34,405731182,0,0x0,8
tick,0x7ffc909efd34,405747352,0,0x0,8
tick,0x7ffc909efd34,405763512,0,0x0,8
tick,0x7ffc909efd34,405778392,0,0x0,8
tick,0x7ffc909efd34,405794231,0,0x0,8
tick,0x7ffc909efd34,405810181,0,0x0,8
tick,0x7ffc909efd34,405825724,0,0x0,8
tick,0x7ffc909efd34,405841505,0,0x0,8
tick,0x7ffc909efd34,405857200,0,0x0,8
tick,0x7ffc909efd34,405872391,0,0x0,8
tick,0x7ffc909efd34,405887625,0,0x0,8
tick,0x7ffc909efd34,405902909,0,0x0,8
tick,0x7ffc909efd34,405918304,0,0x0,8
tick,0x7ffc909efd34,405933535,0,0x0,8
tick,0x7ffc909efd34,405948780,0,0x0,8
tick,0x7ffc909efd34,405964508,0,0x0,8
tick,0x7ffc909efd34,405980528,0,0x0,8
tick,0x7ffc909efd34,405996240,0,0x0,8
tick,0x7ffc909efd34,406012258,0,0x0,8
tick,0x7ffc909efd34,406027518,0,0x0,8
tick,0x7ffc909efd34,406042685,0,0x0,8
tick,0x7ffc909efd34,406057711,0,0x0,8
tick,0x7ffc909efd34,406073369,0,0x0,8
tick,0x7ffc909efd34,406089288,0,0x0,8
tick,0x7ffc909efd34,406105021,0,0x0,8
tick,0x7ffc909efd34,406120739,0,0x0,8
tick,0x7ffc909efd34,406136269,0,0x0,8
tick,0x7ffc909efd34,406151657,0,0x0,8
tick,0x7ffc909efd34,406166970,0,0x0,8
tick,0x7ffc909efd34,406182476,0,0x0,8
tick,0x7ffc909efd34,406198170,0,0x0,8
tick,0x7ffc909efd34,406214063,0,0x0,8
tick,0x7ffc909efd34,406229630,0,0x0,8
tick,0x7ffc909efd34,406245540,0,0x0,8
tick,0x7ffc909efd34,406260758,0,0x0,8
tick,0x7ffc909efd34,406275960,0,0x0,8
tick,0x7ffc909efd34,406291118,0,0x0,8
tick,0x7ffc909efd34,406306414,0,0x0,8
tick,0x7ffc909efd34,406321843,0,0x0,8
tick,0x7ffc909efd34,406337240,0,0x0,8
tick,0x7ffc909efd34,406352545,0,0x0,8
tick,0x7ffc909efd34,406368354,0,0x0,8
tick,0x7ffc909efd34,406382921,0,0x0,8
tick,0x7ffc909efd34,406398916,0,0x0,8
tick,0x7ffc909efd34,406414799,0,0x0,8
tick,0x7ffc909efd34,406430637,0,0x0,8
tick,0x7ffc909efd34,406445343,0,0x0,8
tick,0x7ffc909efd34,406460514,0,0x0,8
tick,0x7ffc909efd34,406476106,0,0x0,8
tick,0x7ffc909efd34,406491723,0,0x0,8
tick,0x7ffc909efd34,406520361,0,0x0,8
tick,0x7ffc909efd34,406524336,0,0x0,8
tick,0x7ffc909efd34,406539462,0,0x0,8
tick,0x7ffc909efd34,406555500,0,0x0,8
tick,0x7ffc909efd34,406575012,0,0x0,8
tick,0x7ffc909efd34,406586651,0,0x0,8
tick,0x7ffc909efd34,406602657,0,0x0,8
tick,0x7ffc909efd34,406618630,0,0x0,8
tick,0x7ffc909efd34,406634471,0,0x0,8
tick,0x7ffc909efd34,406649465,0,0x0,8
tick,0x7ffc909efd34,406665290,0,0x0,8
tick,0x7ffc909efd34,406680468,0,0x0,8
tick,0x7ffc909efd34,406695700,0,0x0,8
tick,0x7ffc909efd34,406710942,0,0x0,8
tick,0x7ffc909efd34,406726474,0,0x0,8
tick,0x7ffc909efd34,406741723,0,0x0,8
tick,0x7ffc909efd34,406757254,0,0x0,8
tick,0x7ffc909efd34,406772544,0,0x0,8
tick,0x7ffc909efd34,406788005,0,0x0,8
tick,0x7ffc909efd34,406803911,0,0x0,8
tick,0x7ffc909efd34,406819668,0,0x0,8
tick,0x7ffc909efd34,406834997,0,0x0,8
tick,0x7ffc909efd34,406851095,0,0x0,8
tick,0x7ffc909efd34,406866249,0,0x0,8
tick,0x7ffc909efd34,406882001,0,0x0,8
tick,0x7ffc909efd34,406897868,0,0x0,8
tick,0x7ffc909efd34,406912697,0,0x0,8
tick,0x7ffc909efd34,406927494,0,0x0,8
tick,0x7ffc909efd34,406942921,0,0x0,8
tick,0x7ffc909efd34,406958292,0,0x0,8
tick,0x7ffc909efd34,406974096,0,0x0,8
tick,0x7ffc909efd34,406989933,0,0x0,8
tick,0x7ffc909efd34,407005484,0,0x0,8
tick,0x7ffc909efd34,407020946,0,0x0,8
tick,0x7ffc909efd34,407037056,0,0x0,8
tick,0x7ffc909efd34,407052188,0,0x0,8
tick,0x7ffc909efd34,407068175,0,0x0,8
tick,0x7ffc909efd34,407083752,0,0x0,8
tick,0x7ffc909efd34,407098976,0,0x0,8
tick,0x7ffc909efd34,407114152,0,0x0,8
tick,0x7ffc909efd34,407130160,0,0x0,8
tick,0x7ffc909efd34,407145179,0,0x0,8
tick,0x7ffc909efd34,407161239,0,0x0,8
tick,0x7ffc909efd34,407176318,0,0x0,8
tick,0x7ffc909efd34,407192649,0,0x0,8
tick,0x7ffc909efd34,407208795,0,0x0,8
tick,0x7ffc909efd34,407224851,0,0x0,8
tick,0x7ffc909efd34,407240474,0,0x0,8
tick,0x7ffc909efd34,407256249,0,0x0,8
tick,0x7ffc909efd34,407271805,0,0x0,8
tick,0x7ffc909efd34,407287778,0,0x0,8
tick,0x7ffc909efd34,407303558,0,0x0,8
tick,0x7ffc909efd34,407319541,0,0x0,8
tick,0x7ffc909efd34,407334827,0,0x0,8
tick,0x7ffc909efd34,407350442,0,0x0,8
tick,0x7ffc909efd34,407366363,0,0x0,8
tick,0x7ffc909efd34,407382498,0,0x0,8
tick,0x7ffc909efd34,407398258,0,0x0,8
tick,0x7ffc909efd34,407414167,0,0x0,8
tick,0x7ffc909efd34,407430191,0,0x0,8
tick,0x7ffc909efd34,407445281,0,0x0,8
tick,0x7ffc909efd34,407460087,0,0x0,8
tick,0x7ffc909efd34,407476015,0,0x0,8
tick,0x7ffc909efd34,407491917,0,0x0,8
tick,0x7ffc909efd34,407507165,0,0x0,8
tick,0x7ffc909efd34,407522515,0,0x0,8
tick,0x7ffc909efd34,407538759,0,0x0,8
tick,0x7ffc909efd34,407555119,0,0x0,8
tick,0x7ffc909efd34,407571403,0,0x0,8
tick,0x7ffc909efd34,407587418,0,0x0,8
tick,0x7ffc909efd34,407602187,0,0x0,8
tick,0x7ffc909efd34,407617067,0,0x0,8
tick,0x7ffc909efd34,407632428,0,0x0,8
tick,0x7ffc909efd34,407648603,0,0x0,8
tick,0x7ffc909efd34,407664062,0,0x0,8
tick,0x7ffc909efd34,407680518,0,0x0,8
tick,0x7ffc909efd34,407695768,0,0x0,8
tick,0x7ffc909efd34,407711034,0,0x0,8
tick,0x7ffc909efd34,407726624,0,0x0,8
tick,0x7ffc909efd34,407742331,0,0x0,8
tick,0x7ffc909efd34,407757695,0,0x0,8
tick,0x7ffc909efd34,407773376,0,0x0,8
tick,0x7ffc909efd34,407788796,0,0x0,8
tick,0x7ffc909efd34,407804843,0,0x0,8
tick,0x7ffc909efd34,407820530,0,0x0,8
tick,0x7ffc909efd34,407836341,0,0x0,8
tick,0x7ffc909efd34,407851603,0,0x0,8
tick,0x7ffc909efd34,407866802,0,0x0,8
tick,0x7ffc909efd34,407882408,0,0x0,8
tick,0x7ffc909efd34,407898620,0,0x0,8
tick,0x7ffc909efd34,407914311,0,0x0,8
tick,0x7ffc909efd34,407930191,0,0x0,8
tick,0x7ffc909efd34,407945279,0,0x0,8
tick,0x7ffc909efd34,407960747,0,0x0,8
tick,0x7ffc909efd34,407976348,0,0x0,8
tick,0x7ffc909efd34,407991464,0,0x0,8
tick,0x7ffc909efd34,408007374,0,0x0,8
tick,0x7ffc909efd34,408022834,0,0x0,8
tick,0x7ffc909efd34,408038146,0,0x0,8
tick,0x7ffc909efd34,408053895,0,0x0,8
tick,0x7ffc909efd34,408069660,0,0x0,8
tick,0x7ffc909efd34,408084948,0,0x0,8
tick,0x7ffc909efd34,408100940,0,0x0,8
tick,0x7ffc909efd34,408116457,0,0x0,8
tick,0x7ffc909efd34,408131902,0,0x0,8
tick,0x7ffc909efd34,408147099,0,0x0,8
tick,0x7ffc909efd34,408162458,0,0x0,8
tick,0x7ffc909efd34,408178480,0,0x0,8
tick,0x7ffc909efd34,408194033,0,0x0,8
tick,0x7ffc909efd34,408209233,0,0x0,8
tick,0x7ffc909efd34,408224968,0,0x0,8
tick,0x7ffc909efd34,408240218,0,0x0,8
tick,0x7ffc909efd34,408256017,0,0x0,8
tick,0x7ffc909efd34,408271148,0,0x0,8
tick,0x7ffc909efd34,408286356,0,0x0,8
tick,0x7ffc909efd34,408301917,0,0x0,8
tick,0x7ffc909efd34,408317848,0,0x0,8
tick,0x7ffc909efd34,408333105,0,0x0,8
tick,0x7ffc909efd34,408349281,0,0x0,8
tick,0x7ffc909efd34,408364972,0,0x0,8
tick,0x7ffc909efd34,408380456,0,0x0,8
tick,0x7ffc909efd34,408397067,0,0x0,8
tick,0x7ffc909efd34,408411555,0,0x0,8
tick,0x7ffc909efd34,408426701,0,0x0,8
tick,0x7ffc909efd34,408442132,0,0x0,8
tick,0x7ffc909efd34,408457594,0,0x0,8
tick,0x7ffc909efd34,408473561,0,0x0,8
tick,0x7ffc909efd34,408489142,0,0x0,8
tick,0x7ffc909efd34,408504279,0,0x0,8
tick,0x7ffc909efd34,408520558,0,0x0,8
tick,0x7ffc909efd34,408536254,0,0x0,8
tick,0x7ffc909efd34,408552243,0,0x0,8
tick,0x7ffc909efd34,408568055,0,0x0,8
tick,0x7ffc909efd34,408583691,0,0x0,8
tick,0x7ffc909efd34,408599337,0,0x0,8
tick,0x7ffc909efd34,408614874,0,0x0,8
tick,0x7ffc909efd34,408630831,0,0x0,8
tick,0x7ffc909efd34,408647017,0,0x0,8
tick,0x7ffc909efd34,408661403,0,0x0,8
tick,0x7ffc909efd34,408677106,0,0x0,8
tick,0x7ffc909efd34,408692667,0,0x0,8
tick,0x7ffc909efd34,408708630,0,0x0,8
tick,0x7ffc909efd34,408724677,0,0x0,8
tick,0x7ffc909efd34,408740584,0,0x0,8
tick,0x7ffc909efd34,408756208,0,0x0,8
tick,0x7ffc909efd34,408771417,0,0x0,8
tick,0x7ffc909efd34,408786450,0,0x0,8
tick,0x7ffc909efd34,408802442,0,0x0,8
tick,0x7ffc909efd34,408818135,0,0x0,8
tick,0x7ffc909efd34,408833614,0,0x0,8
tick,0x7ffc909efd34,408849118,0,0x0,8
tick,0x7ffc909efd34,408865070,0,0x0,8
tick,0x7ffc909efd34,408880269,0,0x0,8
tick,0x7ffc909efd34,408895773,0,0x0,8
tick,0x7ffc909efd34,408911208,0,0x0,8
tick,0x7ffc909efd34,408926457,0,0x0,8
tick,0x7ffc909efd34,408941700,0,0x0,8
tick,0x7ffc909efd34,408957509,0,0x0,8
tick,0x7ffc909efd34,408972807,0,0x0,8
tick,0x7ffc909efd34,408988120,0,0x0,8
tick,0x7ffc909efd34,409003370,0,0x0,8
tick,0x7ffc909efd34,409019230,0,0x0,8
tick,0x7ffc909efd34,409035295,0,0x0,8
tick,0x7ffc909efd34,409051354,0,0x0,8
tick,0x7ffc909efd34,409066939,0,0x0,8
tick,0x7ffc909efd34,409082966,0,0x0,8
tick,0x7ffc909efd34,409099013,0,0x0,8
tick,0x7ffc909efd34,409114596,0,0x0,8
tick,0x7ffc909efd34,409130587,0,0x0,8
tick,0x7ffc909efd34,409146231,0,0x0,8
tick,0x7ffc909efd34,409162168,0,0x0,8
tick,0x7ffc909efd34,409177329,0,0x0,8
tick,0x7ffc909efd34,409193234,0,0x0,8
tick,0x7ffc909efd34,409209155,0,0x0,8
tick,0x7ffc909efd34,409224826,0,0x0,8
tick,0x7ffc909efd34,409240192,0,0x0,8
tick,0x7ffc909efd34,409255677,0,0x0,8
tick,0x7ffc909efd34,409270986,0,0x0,8
tick,0x7ffc909efd34,409286557,0,0x0,8
tick,0x7ffc909efd34,409302184,0,0x0,8
tick,0x7ffc909efd34,409317258,0,0x0,8
tick,0x7ffc909efd34,409332576,0,0x0,8
tick,0x7ffc909efd34,409348166,0,0x0,8
tick,0x7ffc909efd34,409364297,0,0x0,8
tick,0x7ffc909efd34,409379666,0,0x0,8
tick,0x7ffc909efd34,409394373,0,0x0,8
tick,0x7ffc909efd34,409409631,0,0x0,8
tick,0x7ffc909efd34,409425557,0,0x0,8
tick,0x7ffc909efd34,409441577,0,0x0,8
tick,0x7ffc909efd34,409457196,0,0x0,8
tick,0x7ffc909efd34,409472234,0,0x0,8
tick,0x7ffc909efd34,409487420,0,0x0,8
tick,0x7ffc909efd34,409502767,0,0x0,8
tick,0x7ffc909efd34,409518709,0,0x0,8
tick,0x7ffc909efd34,409534781,0,0x0,8
tick,0x7ffc909efd34,409550980,0,0x0,8
tick,0x7ffc909efd34,409566882,0,0x0,8
tick,0x7ffc909efd34,409582136,0,0x0,8
tick,0x7ffc909efd34,409598387,0,0x0,8
tick,0x7ffc909efd34,409613608,0,0x0,8
tick,0x7ffc909efd34,409628941,0,0x0,8
tick,0x7ffc909efd34,409643428,0,0x0,8
tick,0x7ffc909efd34,409658615,0,0x0,8
tick,0x7ffc909efd34,409674085,0,0x0,8
tick,0x7ffc909efd34,409689829,0,0x0,8
tick,0x7ffc909efd34,409705006,0,0x0,8
tick,0x7ffc909efd34,409720161,0,0x0,8
tick,0x7ffc909efd34,409736154,0,0x0,8
tick,0x7ffc909efd34,409751612,0,0x0,8
tick,0x7ffc909efd34,409769036,0,0x0,8
tick,0x7ffc909efd34,409783330,0,0x0,8
tick,0x7ffc909efd34,409799424,0,0x0,8
tick,0x7ffc909efd34,409814812,0,0x0,8
tick,0x7ffc909efd34,409830509,0,0x0,8
tick,0x7ffc909efd34,409845974,0,0x0,8
tick,0x7ffc909efd34,409861067,0,0x0,8
tick,0x7ffc909efd34,409876533,0,0x0,8
tick,0x7ffc909efd34,409892021,0,0x0,8
tick,0x7ffc909efd34,409907414,0,0x0,8
tick,0x7ffc909efd34,409922131,0,0x0,8
tick,0x7ffc909efd34,409937108,0,0x0,8
tick,0x7ffc909efd34,409952608,0,0x0,8
tick,0x7ffc909efd34,409968216,0,0x0,8
tick,0x7ffc909efd34,409984005,0,0x0,8
tick,0x7ffc909efd34,409999186,0,0x0,8
tick,0x7ffc909efd34,410014940,0,0x0,8
tick,0x7ffc909efd34,410030848,0,0x0,8
tick,0x7ffc909efd34,410047050,0,0x0,8
tick,0x7ffc909efd34,410061643,0,0x0,8
tick,0x7ffc909efd34,410076822,0,0x0,8
tick,0x7ffc909efd34,410092115,0,0x0,8
tick,0x7ffc909efd34,410107308,0,0x0,8
tick,0x7ffc909efd34,410122584,0,0x0,8
tick,0x7ffc909efd34,410138357,0,0x0,8
tick,0x7ffc909efd34,410154693,0,0x0,8
tick,0x7ffc909efd34,410170445,0,0x0,8
tick,0x7ffc909efd34,410186228,0,0x0,8
tick,0x7ffc909efd34,410200895,0,0x0,8
tick,0x7ffc909efd34,410216895,0,0x0,8
tick,0x7ffc909efd34,410232037,0,0x0,8
tick,0x7ffc909efd34,410247307,0,0x0,8
tick,0x7ffc909efd34,410263424,0,0x0,8
tick,0x7ffc909efd34,410278003,0,0x0,8
tick,0x7ffc909efd34,410293451,0,0x0,8
tick,0x7ffc909efd34,410309290,0,0x0,8
tick,0x7ffc909efd34,410324364,0,0x0,8
tick,0x7ffc909efd34,410340012,0,0x0,8
tick,0x7ffc909efd34,410355692,0,0x0,8
tick,0x7ffc909efd34,410371352,0,0x0,8
tick,0x7ffc909efd34,410386964,0,0x0,8
tick,0x7ffc909efd34,410403053,0,0x0,8
tick,0x7ffc909efd34,410418945,0,0x0,8
tick,0x7ffc909efd34,410434111,0,0x0,8
tick,0x7ffc909efd34,410449974,0,0x0,8
tick,0x7ffc909efd34,410465561,0,0x0,8
tick,0x7ffc909efd34,410481856,0,0x0,8
tick,0x7ffc909efd34,410497063,0,0x0,8
tick,0x7ffc909efd34,410512855,0,0x0,8
tick,0x7ffc909efd34,410528405,0,0x0,8
tick,0x7ffc909efd34,410544087,0,0x0,8
tick,0x7ffc909efd34,410559556,0,0x0,8
tick,0x7ffc909efd34,410575151,0,0x0,8
tick,0x7ffc909efd34,410590316,0,0x0,8
tick,0x7ffc909efd34,410606420,0,0x0,8
tick,0x7ffc909efd34,410622008,0,0x0,8
tick,0x7ffc909efd34,410637828,0,0x0,8
tick,0x7ffc909efd34,410653250,0,0x0,8
tick,0x7ffc909efd34,410668667,0,0x0,8
tick,0x7ffc909efd34,410684597,0,0x0,8
tick,0x7ffc909efd34,410699761,0,0x0,8
tick,0x7ffc909efd34,410715237,0,0x0,8
tick,0x7ffc909efd34,410730581,0,0x0,8
tick,0x7ffc909efd34,410746862,0,0x0,8
tick,0x7ffc909efd34,410761267,0,0x0,8
tick,0x7ffc909efd34,410776940,0,0x0,8
tick,0x7ffc909efd34,410792186,0,0x0,8
tick,0x7ffc909efd34,410807546,0,0x0,8
tick,0x7ffc909efd34,410822680,0,0x0,8
tick,0x7ffc909efd34,410838494,0,0x0,8
tick,0x7ffc909efd34,410853737,0,0x0,8
tick,0x7ffc909efd34,410869230,0,0x0,8
tick,0x7ffc909efd34,410884502,0,0x0,8
tick,0x7ffc909efd34,410900287,0,0x0,8
tick,0x7ffc909efd34,410916002,0,0x0,8
tick,0x7ffc909efd34,410931845,0,0x0,8
tick,0x7ffc909efd34,410947250,0,0x0,8
tick,0x7ffc909efd34,410962784,0,0x0,8
tick,0x7ffc909efd34,410977959,0,0x0,8
tick,0x7ffc909efd34,410993356,0,0x0,8
tick,0x7ffc909efd34,411008529,0,0x0,8
tick,0x7ffc909efd34,411024197,0,0x0,8
tick,0x7ffc909efd34,411040283,0,0x0,8
tick,0x7ffc909efd34,411055862,0,0x0,8
tick,0x7ffc909efd34,411071417,0,0x0,8
tick,0x7ffc909efd34,411086794,0,0x0,8
tick,0x7ffc909efd34,411101906,0,0x0,8
tick,0x7ffc909efd34,411117511,0,0x0,8
tick,0x7ffc909efd34,411132913,0,0x0,8
tick,0x7ffc909efd34,411148271,0,0x0,8
tick,0x7ffc909efd34,411164061,0,0x0,8
tick,0x7ffc909efd34,411180209,0,0x0,8
tick,0x7ffc909efd34,411195928,0,0x0,8
tick,0x7ffc909efd34,411211297,0,0x0,8
tick,0x7ffc909efd34,411227574,0,0x0,8
tick,0x7ffc909efd34,411242641,0,0x0,8
tick,0x7ffc909efd34,411258175,0,0x0,8
tick,0x7ffc909efd34,411273992,0,0x0,8
tick,0x7ffc909efd34,411289032,0,0x0,8
tick,0x7ffc909efd34,411304787,0,0x0,8
tick,0x7ffc909efd34,411320604,0,0x0,8
tick,0x7ffc909efd34,411335971,0,0x0,8
tick,0x7ffc909efd34,411351650,0,0x0,8
tick,0x7ffc909efd34,411367343,0,0x0,8
tick,0x7ffc909efd34,411382723,0,0x0,8
tick,0x7ffc909efd34,411397977,0,0x0,8
tick,0x7ffc909efd34,411414170,0,0x0,8
tick,0x7ffc909efd34,411430129,0,0x0,8
tick,0x7ffc909efd34,411446252,0,0x0,8
tick,0x7ffc909efd34,411461843,0,0x0,8
tick,0x7ffc909efd34,411478064,0,0x0,8
tick,0x7ffc909efd34,411493243,0,0x0,8
tick,0x7ffc909efd34,411508524,0,0x0,8
tick,0x7ffc909efd34,411524664,0,0x0,8
tick,0x7ffc909efd34,411540020,0,0x0,8
tick,0x7ffc909efd34,411555437,0,0x0,8
tick,0x7ffc909efd34,411570951,0,0x0,8
tick,0x7ffc909efd34,411586267,0,0x0,8
tick,0x7ffc909efd34,411601930,0,0x0,8
tick,0x7ffc909efd34,411617382,0,0x0,8
tick,0x7ffc909efd34,411632658,0,0x0,8
tick,0x7ffc909efd34,411648115,0,0x0,8
tick,0x7ffc909efd34,411664048,0,0x0,8
tick,0x7ffc909efd34,411679532,0,0x0,8
tick,0x7ffc909efd34,411695162,0,0x0,8
tick,0x7ffc909efd34,411710627,0,0x0,8
tick,0x7ffc909efd34,411725918,0,0x0,8
tick,0x7ffc909efd34,411741349,0,0x0,8
tick,0x7ffc909efd34,411757338,0,0x0,8
tick,0x7ffc909efd34,411772605,0,0x0,8
tick,0x7ffc909efd34,411788560,0,0x0,8
tick,0x7ffc909efd34,411804302,0,0x0,8
tick,0x7ffc909efd34,411819737,0,0x0,8
tick,0x7ffc909efd34,411835232,0,0x0,8
tick,0x7ffc909efd34,411850693,0,0x0,8
tick,0x7ffc909efd34,411866010,0,0x0,8
tick,0x7ffc909efd34,411881880,0,0x0,8
tick,0x7ffc909efd34,411896928,0,0x0,8
tick,0x7ffc909efd34,411913219,0,0x0,8
tick,0x7ffc909efd34,411928415,0,0x0,8
tick,0x7ffc909efd34,411943920,0,0x0,8
tick,0x7ffc909efd34,411959728,0,0x0,8
tick,0x7ffc909efd34,411975732,0,0x0,8
tick,0x7ffc909efd34,411990868,0,0x0,8
tick,0x7ffc909efd34,412006529,0,0x0,8
tick,0x7ffc909efd34,412022137,0,0x0,8
tick,0x7ffc909efd34,412038217,0,0x0,8
tick,0x7ffc909efd34,412054247,0,0x0,8
tick,0x7ffc909efd34,412070651,0,0x0,8
tick,0x7ffc909efd34,412086186,0,0x0,8
tick,0x7ffc909efd34,412101139,0,0x0,8
tick,0x7ffc909efd34,412117296,0,0x0,8
tick,0x7ffc909efd34,412133387,0,0x0,8
tick,0x7ffc909efd34,412149411,0,0x0,8
tick,0x7ffc909efd34,412165463,0,0x0,8
tick,0x7ffc909efd34,412181658,0,0x0,8
tick,0x7ffc909efd34,412197273,0,0x0,8
tick,0x7ffc909efd34,412213279,0,0x0,8
tick,0x7ffc909efd34,412228357,0,0x0,8
tick,0x7ffc909efd34,412243458,0,0x0,8
tick,0x7ffc909efd34,412259819,0,0x0,8
tick,0x7ffc909efd34,412275587,0,0x0,8
tick,0x7ffc909efd34,412290342,0,0x0,8
tick,0x7ffc909efd34,412305030,0,0x0,8
tick,0x7ffc909efd34,412320184,0,0x0,8
tick,0x7ffc909efd34,412335713,0,0x0,8
tick,0x7ffc909efd34,412351037,0,0x0,8
tick,0x7ffc909efd34,412366487,0,0x0,8
tick,0x7ffc909efd34,412381830,0,0x0,8
tick,0x7ffc909efd34,412397058,0,0x0,8
tick,0x7ffc909efd34,412413965,0,0x0,8
tick,0x7ffc909efd34,412427709,0,0x0,8
tick,0x7ffc909efd34,412443275,0,0x0,8
tick,0x7ffc909efd34,412459348,0,0x0,8
tick,0x7ffc909efd34,412475088,0,0x0,8
tick,0x7ffc909efd34,412491259,0,0x0,8
tick,0x7ffc909efd34,412506462,0,0x0,8
tick,0x7ffc909efd34,412522010,0,0x0,8
tick,0x7ffc909efd34,412537487,0,0x0,8
tick,0x7ffc909efd34,412552904,0,0x0,8
tick,0x7ffc909efd34,412568386,0,0x0,8
tick,0x7ffc909efd34,412584212,0,0x0,8
tick,0x7ffc909efd34,412599988,0,0x0,8
tick,0x7ffc909efd34,412616159,0,0x0,8
tick,0x7ffc909efd34,412631821,0,0x0,8
tick,0x7ffc909efd34,412647340,0,0x0,8
tick,0x7ffc909efd34,412663035,0,0x0,8
tick,0x7ffc909efd34,412678446,0,0x0,8
tick,0x7ffc909efd34,412693833,0,0x0,8
tick,0x7ffc909efd34,412709276,0,0x0,8
tick,0x7ffc909efd34,412724492,0,0x0,8
tick,0x7ffc909efd34,412740131,0,0x0,8
tick,0x7ffc909efd34,412755418,0,0x0,8
tick,0x7ffc909efd34,412771288,0,0x0,8
tick,0x7ffc909efd34,412787032,0,0x0,8
tick,0x7ffc909efd34,412801908,0,0x0,8
tick,0x7ffc909efd34,412817229,0,0x0,8
tick,0x7ffc909efd34,412833322,0,0x0,8
tick,0x7ffc909efd34,412849173,0,0x0,8
tick,0x7ffc909efd34,412865173,0,0x0,8
tick,0x7ffc909efd34,412881043,0,0x0,8
tick,0x7ffc909efd34,412896517,0,0x0,8
tick,0x7ffc909efd34,412911481,0,0x0,8
tick,0x7ffc909efd34,412927146,0,0x0,8
tick,0x7ffc909efd34,412942656,0,0x0,8
tick,0x7ffc909efd34,412958469,0,0x0,8
tick,0x7ffc909efd34,412973158,0,0x0,8
tick,0x7ffc909efd34,412988141,0,0x0,8
tick,0x7ffc909efd34,413003751,0,0x0,8
tick,0x7ffc909efd34,413019102,0,0x0,8
tick,0x7ffc909efd34,413035223,0,0x0,8
tick,0x7ffc909efd34,413050365,0,0x0,8
tick,0x7ffc909efd34,413066199,0,0x0,8
tick,0x7ffc909efd34,413081487,0,0x0,8
tick,0x7ffc909efd34,413097150,0,0x0,8
tick,0x7ffc909efd34,413113444,0,0x0,8
tick,0x7ffc909efd34,413130240,0,0x0,8
tick,0x7ffc909efd34,413144815,0,0x0,8
tick,0x7ffc909efd34,413160050,0,0x0,8
tick,0x7ffc909efd34,413175647,0,0x0,8
tick,0x7ffc909efd34,413190893,0,0x0,8
tick,0x7ffc909efd34,413207037,0,0x0,8
tick,0x7ffc909efd34,413222115,0,0x0,8
tick,0x7ffc909efd34,413238290,0,0x0,8
tick,0x7ffc909efd34,413253975,0,0x0,8
tick,0x7ffc909efd34,413269910,0,0x0,8
tick,0x7ffc909efd34,413285531,0,0x0,8
tick,0x7ffc909efd34,413301089,0,0x0,8
tick,0x7ffc909efd34,413315739,0,0x0,8
tick,0x7ffc909efd34,413330706,0,0x0,8
tick,0x7ffc909efd34,413346572,0,0x0,8
tick,0x7ffc909efd34,413361565,0,0x0,8
tick,0x7ffc909efd34,413377337,0,0x0,8
tick,0x7ffc909efd34,413393196,0,0x0,8
tick,0x7ffc909efd34,413409550,0,0x0,8
tick,0x7ffc909efd34,413424155,0,0x0,8
tick,0x7ffc909efd34,413439772,0,0x0,8
tick,0x7ffc909efd34,413455439,0,0x0,8
tick,0x7ffc909efd34,413470784,0,0x0,8
tick,0x7ffc909efd34,413486105,0,0x0,8
tick,0x7ffc909efd34,413501677,0,0x0,8
tick,0x7ffc909efd34,413517023,0,0x0,8
tick,0x7ffc909efd34,413532389,0,0x0,8
tick,0x7ffc909efd34,413548067,0,0x0,8
tick,0x7ffc909efd34,413564156,0,0x0,8
tick,0x7ffc909efd34,413579928,0,0x0,8
tick,0x7ffc909efd34,413596462,0,0x0,8
tick,0x7ffc909efd34,413611119,0,0x0,8
tick,0x7ffc909efd34,413627028,0,0x0,8
tick,0x7ffc909efd34,413641854,0,0x0,8
tick,0x7ffc909efd34,413657506,0,0x0,8
tick,0x7ffc909efd34,413672629,0,0x0,8
tick,0x7ffc909efd34,413688284,0,0x0,8
tick,0x7ffc909efd34,413703644,0,0x0,8
tick,0x7ffc909efd34,413719596,0,0x0,8
tick,0x7ffc909efd34,413735122,0,0x0,8
tick,0x7ffc909efd34,413750818,0,0x0,8
tick,0x7ffc909efd34,413766135,0,0x0,8
tick,0x7ffc909efd34,413781291,0,0x0,8
tick,0x7ffc909efd34,413797053,0,0x0,8
tick,0x7ffc909efd34,413812891,0,0x0,8
tick,0x7ffc909efd34,413829481,0,0x0,8
tick,0x7ffc909efd34,413844694,0,0x0,8
tick,0x7ffc909efd34,413860439,0,0x0,8
tick,0x7ffc909efd34,413876341,0,0x0,8
tick,0x7ffc909efd34,413892469,0,0x0,8
tick,0x7ffc909efd34,413907969,0,0x0,8
tick,0x7ffc909efd34,413923285,0,0x0,8
tick,0x7ffc909efd34,413938456,0,0x0,8
tick,0x7ffc909efd34,413954186,0,0x0,8
tick,0x7ffc909efd34,413970398,0,0x0,8
tick,0x7ffc909efd34,413985605,0,0x0,8
tick,0x7ffc909efd34,414000767,0,0x0,8
tick,0x7ffc909efd34,414015776,0,0x0,8
tick,0x7ffc909efd34,414031188,0,0x0,8
tick,0x7ffc909efd34,414046861,0,0x0,8
tick,0x7ffc909efd34,414062543,0,0x0,8
tick,0x7ffc909efd34,414077538,0,0x0,8
tick,0x7ffc909efd34,414092495,0,0x0,8
tick,0x7ffc909efd34,414108074,0,0x0,8
tick,0x7ffc909efd34,414123139,0,0x0,8
tick,0x7ffc909efd34,414138620,0,0x0,8
tick,0x7ffc909efd34,414154366,0,0x0,8
tick,0x7ffc909efd34,414170398,0,0x0,8
tick,0x7ffc909efd34,414185625,0,0x0,8
tick,0x7ffc909efd34,414201189,0,0x0,8
tick,0x7ffc909efd34,414216348,0,0x0,8
tick,0x7ffc909efd34,414232103,0,0x0,8
tick,0x7ffc909efd34,414248214,0,0x0,8
tick,0x7ffc909efd34,414264519,0,0x0,8
tick,0x7ffc909efd34,414280306,0,0x0,8
tick,0x7ffc909efd34,414295787,0,0x0,8
tick,0x7ffc909efd34,414311547,0,0x0,8
tick,0x7ffc909efd34,414327202,0,0x0,8
tick,0x7ffc909efd34,414342490,0,0x0,8
tick,0x7ffc909efd34,414358445,0,0x0,8
tick,0x7ffc909efd34,414374035,0,0x0,8
tick,0x7ffc909efd34,414389478,0,0x0,8
tick,0x7ffc909efd34,414405141,0,0x0,8
tick,0x7ffc909efd34,414420309,0,0x0,8
tick,0x7ffc909efd34,414436180,0,0x0,8
tick,0x7ffc909efd34,414451289,0,0x0,8
tick,0x7ffc909efd34,414467367,0,0x0,8
tick,0x7ffc909efd34,414483384,0,0x0,8
tick,0x7ffc909efd34,414499071,0,0x0,8
tick,0x7ffc909efd34,414515056,0,0x0,8
tick,0x7ffc909efd34,414530271,0,0x0,8
tick,0x7ffc909efd34,414546534,0,0x0,8
tick,0x7ffc909efd34,414561840,0,0x0,8
tick,0x7ffc909efd34,414577717,0,0x0,8
tick,0x7ffc909efd34,414593368,0,0x0,8
tick,0x7ffc909efd34,414608735,0,0x0,8
tick,0x7ffc909efd34,414623885,0,0x0,8
tick,0x7ffc909efd34,414639226,0,0x0,8
tick,0x7ffc909efd34,414654951,0,0x0,8
tick,0x7ffc909efd34,414670765,0,0x0,8
tick,0x7ffc909efd34,414685711,0,0x0,8
tick,0x7ffc909efd34,414700965,0,0x0,8
tick,0x7ffc909efd34,414716941,0,0x0,8
tick,0x7ffc909efd34,414732266,0,0x0,8
tick,0x7ffc909efd34,414747841,0,0x0,8
tick,0x7ffc909efd34,414763365,0,0x0,8
tick,0x7ffc909efd34,414779108,0,0x0,8
tick,0x7ffc909efd34,414794706,0,0x0,8
tick,0x7ffc909efd34,414810132,0,0x0,8
tick,0x7ffc909efd34,414825575,0,0x0,8
tick,0x7ffc909efd34,414840948,0,0x0,8
tick,0x7ffc909efd34,414856151,0,0x0,8
tick,0x7ffc909efd34,414871426,0,0x0,8
tick,0x7ffc909efd34,414886827,0,0x0,8
tick,0x7ffc909efd34,414902383,0,0x0,8
tick,0x7ffc909efd34,414918460,0,0x0,8
tick,0x7ffc909efd34,414934420,0,0x0,8
tick,0x7ffc909efd34,414950924,0,0x0,8
tick,0x7ffc909efd34,414966174,0,0x0,8
tick,0x7ffc909efd34,414982167,0,0x0,8
tick,0x7ffc909efd34,414997820,0,0x0,8
tick,0x7ffc909efd34,415014168,0,0x0,8
tick,0x7ffc909efd34,415029605,0,0x0,8
tick,0x7ffc909efd34,415045262,0,0x0,8
tick,0x7ffc909efd34,415060513,0,0x0,8
tick,0x7ffc909efd34,415076499,0,0x0,8
tick,0x7ffc909efd34,415091700,0,0x0,8
tick,0x7ffc909efd34,415107446,0,0x0,8
tick,0x7ffc909efd34,415123140,0,0x0,8
tick,0x7ffc909efd34,415139032,0,0x0,8
tick,0x7ffc909efd34,415154735,0,0x0,8
tick,0x7ffc909efd34,415169848,0,0x0,8
tick,0x7ffc909efd34,415186127,0,0x0,8
tick,0x7ffc909efd34,415201432,0,0x0,8
tick,0x7ffc909efd34,415217474,0,0x0,8
tick,0x7ffc909efd34,415232774,0,0x0,8
tick,0x7ffc909efd34,415248736,0,0x0,8
tick,0x7ffc909efd34,415264581,0,0x0,8
tick,0x7ffc909efd34,415280367,0,0x0,8
tick,0x7ffc909efd34,415296323,0,0x0,8
tick,0x7ffc909efd34,415312079,0,0x0,8
tick,0x7ffc909efd34,415327640,0,0x0,8
tick,0x7ffc909efd34,415343456,0,0x0,8
tick,0x7ffc909efd34,415359688,0,0x0,8
tick,0x7ffc909efd34,415375166,0,0x0,8
tick,0x7ffc909efd34,415391059,0,0x0,8
tick,0x7ffc909efd34,415406712,0,0x0,8
tick,0x7ffc909efd34,415422575,0,0x0,8
tick,0x7ffc909efd34,415438042,0,0x0,8
tick,0x7ffc909efd34,415453890,0,0x0,8
tick,0x7ffc909efd34,415469746,0,0x0,8
tick,0x7ffc909efd34,415484660,0,0x0,8
tick,0x7ffc909efd34,415501038,0,0x0,8
tick,0x7ffc909efd34,415516289,0,0x0,8
tick,0x7ffc909efd34,415531705,0,0x0,8
tick,0x7ffc909efd34,415548660,0,0x0,8
tick,0x7ffc909efd34,415562625,0,0x0,8
tick,0x7ffc909efd34,415579073,0,0x0,8
tick,0x7ffc909efd34,415593683,0,0x0,8
tick,0x7ffc909efd34,415609224,0,0x0,8
tick,0x7ffc909efd34,415624897,0,0x0,8
tick,0x7ffc909efd34,415640803,0,0x0,8
tick,0x7ffc909efd34,415656292,0,0x0,8
tick,0x7ffc909efd34,415671604,0,0x0,8
tick,0x7ffc909efd34,415687568,0,0x0,8
tick,0x7ffc909efd34,415703181,0,0x0,8
tick,0x7ffc909efd34,415719051,0,0x0,8
tick,0x7ffc909efd34,415734804,0,0x0,8
tick,0x7ffc909efd34,415750386,0,0x0,8
tick,0x7ffc909efd34,415765784,0,0x0,8
tick,0x7ffc909efd34,415781137,0,0x0,8
tick,0x7ffc909efd34,415797209,0,0x0,8
tick,0x7ffc909efd34,415813380,0,0x0,8
tick,0x7ffc909efd34,415829077,0,0x0,8
tick,0x7ffc909efd34,415843981,0,0x0,8
tick,0x7ffc909efd34,415859688,0,0x0,8
tick,0x7ffc909efd34,415875240,0,0x0,8
tick,0x7ffc909efd34,415890510,0,0x0,8
tick,0x7ffc909efd34,415906276,0,0x0,8
tick,0x7ffc909efd34,415921440,0,0x0,8
tick,0x7ffc909efd34,415936236,0,0x0,8
tick,0x7ffc909efd34,415951951,0,0x0,8
tick,0x7ffc909efd34,415967433,0,0x0,8
tick,0x7ffc909efd34,415983254,0,0x0,8
tick,0x7ffc909efd34,415998536,0,0x0,8
tick,0x7ffc909efd34,416014321,0,0x0,8
tick,0x7ffc909efd34,416029570,0,0x0,8
tick,0x7ffc909efd34,416045506,0,0x0,8
tick,0x7ffc909efd34,416061818,0,0x0,8
tick,0x7ffc909efd34,416077130,0,0x0,8
tick,0x7ffc909efd34,416092226,0,0x0,8
tick,0x7ffc909efd34,416107638,0,0x0,8
tick,0x7ffc909efd34,416122479,0,0x0,8
tick,0x7ffc909efd34,416138414,0,0x0,8
tick,0x7ffc909efd34,416153520,0,0x0,8
tick,0x7ffc909efd34,416169831,0,0x0,8
tick,0x7ffc909efd34,416184681,0,0x0,8
tick,0x7ffc909efd34,416200091,0,0x0,8
tick,0x7ffc909efd34,416215197,0,0x0,8
code-creation,LazyCompile,10,416229289,0x30a77d1cbce,130,exit node:internal/process/per_thread:182:16,0x19bc9c58eb8,~
code-source-info,0x30a77d1cbce,30,4990,5474,C0O5004C5O5012C17O5024C20O5012C26O5051C31O5068C36O5082C43O5099C47O5114C52O5127C58O5146C64O5163C68O5178C73O5186C86O5207C94O5186C100O5427C105O5435C115O5454C123O5435C129O5473,,
code-creation,LazyCompile,10,416229932,0x30a77d1cda6,307,removeListener node:events:675:28,0x12028f6f928,~
code-source-info,0x30a77d1cda6,23,20306,21625,C0O20332C3O20332C7O20386C12O20402C14O20437C16O20449C17O20472C19O20478C23O20493C25O20526C27O20538C28O20548C30O20557C35O20578C42O20587C47O20612C54O20623C59O20636C64O20654C66O20669C71O20669C75O20667C81O20716C83O20730C85O20759C91O20793C99O20827C114O20793C121O20875C127O20933C130O20966C134O20973C138O20980C139O20980C144O21004C146O21012C152O21016C159O21036C163O21040C170O21049C175O21078C180O21105C182O20987C187O20948C190O21147C191O21160C196O21176C198O21188C199O21200C200O21213C205O21236C210O21236C216O21272C222O21314C228O21326C233O21350C240O21324C246O21373C251O21373C256O21431C263O21438C268O21456C269O21475C272O21469C276O21502C282O21548C299O21548C304O21606C306O21618,,
tick,0x7ffc909ed044,416231986,0,0x0,3,0x7ff78f0a54e0,0x30a77d1cbe2,0x7f483e2492
